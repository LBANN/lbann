<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1lbann__callback__checknan" kind="class" language="C++" prot="public">
    <compoundname>lbann::lbann_callback_checknan</compoundname>
    <basecompoundref refid="classlbann_1_1lbann__callback" prot="public" virt="non-virtual">lbann::lbann_callback</basecompoundref>
    <includes refid="callback__checknan_8hpp" local="no">callback_checknan.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1lbann__callback__checknan_1a62c093e4f67a4b387dee11fe41b5ec2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_callback_checknan::lbann_callback_checknan</definition>
        <argsstring>()</argsstring>
        <name>lbann_callback_checknan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" line="45" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__checknan_1a72103639c77ba3612ae174d36b279fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_callback_checknan::lbann_callback_checknan</definition>
        <argsstring>(const lbann_callback_checknan &amp;)=default</argsstring>
        <name>lbann_callback_checknan</name>
        <param>
          <type>const <ref refid="classlbann_1_1lbann__callback__checknan" kindref="compound">lbann_callback_checknan</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__checknan_1a93b6c22d9fa21a77b91572b6e1c7c3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1lbann__callback__checknan" kindref="compound">lbann_callback_checknan</ref> &amp;</type>
        <definition>lbann_callback_checknan&amp; lbann::lbann_callback_checknan::operator=</definition>
        <argsstring>(const lbann_callback_checknan &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1lbann__callback__checknan" kindref="compound">lbann_callback_checknan</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__checknan_1ad7156df3cd81c493584ebd4a0c9d96b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1lbann__callback__checknan" kindref="compound">lbann_callback_checknan</ref> *</type>
        <definition>lbann_callback_checknan* lbann::lbann_callback_checknan::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a9f545d1269a8c7af335625d049691f26">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" line="49" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__checknan_1a09388ae76566a6a93c957ab76cd54dcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_checknan::on_forward_prop_end</definition>
        <argsstring>(model *m, Layer *l) override</argsstring>
        <name>on_forward_prop_end</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a5eff0a59fbce98a981d9cdd0547a3ad5">on_forward_prop_end</reimplements>
        <param>
          <type>model *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>Layer *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check that activations are good. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__checknan_1a40d9a9fcc5849746570b99321e1c5488" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_checknan::on_backward_prop_end</definition>
        <argsstring>(model *m) override</argsstring>
        <name>on_backward_prop_end</name>
        <reimplements refid="classlbann_1_1lbann__callback_1af183624e63ba65e0003fa988f53dee0c">on_backward_prop_end</reimplements>
        <param>
          <type>model *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check that gradients are good. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__checknan_1a1d1b3b082aa49016e7b80e0f267575da" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_checknan::on_batch_end</definition>
        <argsstring>(model *m) override</argsstring>
        <name>on_batch_end</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a895ca577e358601fcae5c04749f60535">on_batch_end</reimplements>
        <param>
          <type>model *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check that weights are good. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__checknan_1ab42c997a06058c3535792408fdd5fed8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::lbann_callback_checknan::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a7522c7a14f1d6a1ea762cc2d7248eb3a">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return this callback&apos;s name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" line="58" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlbann_1_1lbann__callback__checknan_1ac74f7f665823d0500875b9740aaccabc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::lbann_callback_checknan::is_good</definition>
        <argsstring>(const AbsDistMat &amp;m)</argsstring>
        <name>is_good</name>
        <param>
          <type>const AbsDistMat &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if there are no problems with m. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__checknan_1a335713a3df9194f657f98cccd2f695f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_checknan::dump_network</definition>
        <argsstring>(model *m)</argsstring>
        <name>dump_network</name>
        <param>
          <type>model *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump the (local) network matrices for debugging. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" line="63" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Check matrices for whether they include any NaNs or infs to help debugging. This will kill the rank if such values are discovered. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="57">
        <label>lbann::lbann_callback_checknan</label>
        <link refid="classlbann_1_1lbann__callback__checknan"/>
        <childnode refid="58" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>lbann::lbann_callback</label>
        <link refid="classlbann_1_1lbann__callback"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="59">
        <label>lbann::lbann_callback_checknan</label>
        <link refid="classlbann_1_1lbann__callback__checknan"/>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>lbann::lbann_callback</label>
        <link refid="classlbann_1_1lbann__callback"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" line="40" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_checknan.hpp" bodystart="40" bodyend="64"/>
    <listofallmembers>
      <member refid="classlbann_1_1lbann__callback__checknan_1ad7156df3cd81c493584ebd4a0c9d96b4" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>copy</name></member>
      <member refid="classlbann_1_1lbann__callback__checknan_1a335713a3df9194f657f98cccd2f695f5" prot="private" virt="non-virtual"><scope>lbann::lbann_callback_checknan</scope><name>dump_network</name></member>
      <member refid="classlbann_1_1lbann__callback_1acec888932129f93ba2a0077192467c9e" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_checknan</scope><name>get_batch_interval</name></member>
      <member refid="classlbann_1_1lbann__callback__checknan_1ac74f7f665823d0500875b9740aaccabc" prot="private" virt="non-virtual"><scope>lbann::lbann_callback_checknan</scope><name>is_good</name></member>
      <member refid="classlbann_1_1lbann__callback_1a679057298a41ddd47f08c157f756c584" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_checknan</scope><name>lbann_callback</name></member>
      <member refid="classlbann_1_1lbann__callback_1a91d994616b8bf98685ac32939228f96a" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_checknan</scope><name>lbann_callback</name></member>
      <member refid="classlbann_1_1lbann__callback__checknan_1a62c093e4f67a4b387dee11fe41b5ec2f" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_checknan</scope><name>lbann_callback_checknan</name></member>
      <member refid="classlbann_1_1lbann__callback__checknan_1a72103639c77ba3612ae174d36b279fe5" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_checknan</scope><name>lbann_callback_checknan</name></member>
      <member refid="classlbann_1_1lbann__callback_1a6126e310e9924398c18ccf76bb91c705" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_checknan</scope><name>m_batch_interval</name></member>
      <member refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_checknan</scope><name>m_summarizer</name></member>
      <member refid="classlbann_1_1lbann__callback__checknan_1ab42c997a06058c3535792408fdd5fed8" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>name</name></member>
      <member refid="classlbann_1_1lbann__callback_1a2c0709a26179d115ff85b7561786ee27" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_backward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1abeb1e486e259fd358332abf1e952f630" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_backward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback__checknan_1a40d9a9fcc5849746570b99321e1c5488" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_backward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1aba03b59c056ace8094095c08e39b9ac4" prot="public" virt="virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_checknan</scope><name>on_backward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a9ecf4e44cd4021cdd687de14c850cc83" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_batch_begin</name></member>
      <member refid="classlbann_1_1lbann__callback__checknan_1a1d1b3b082aa49016e7b80e0f267575da" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_batch_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a3462e54126adbd0082c22c98d8de5468" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_batch_evaluate_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1ad10891b8ab3de74ee1a70e6255e7d58a" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_batch_evaluate_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4ed9498763412a55953fff71ee3a9456" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_epoch_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a1fc71110e7f754bf73c9e0f344a448a5" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_epoch_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4a2cff48a688bb56ed14b8b53344f945" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_evaluate_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a044174864e4981a1dac093d58e8c4d6c" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_evaluate_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a0794f3fb88db6fef53f0e2f235f94424" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_evaluate_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1ae23c5a61b81dbdfbd79736ac2b6035aa" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_evaluate_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a22ed977371173105b4aad3a20b9c59dc" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1ab96adb1d77180e00fdd668cd381323fd" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback__checknan_1a09388ae76566a6a93c957ab76cd54dcd" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a79a0bb407852d7b330b74373647ffe46" prot="public" virt="virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_checknan</scope><name>on_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a1a9248b305f06419889c1b3b0f0893d8" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_optimize_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a497e750da160e0071ce8864ccc3a1344" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_optimize_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a235195d5fa4461835b861a03a5c0278f" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_optimize_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4653e2903bfd3903709a81eaf7eabc1a" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_optimize_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1ace7452239c9ad7aa6247e9496adbcffe" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_phase_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a716bff45bdc5a88eed09c2231f5bc93a" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_test_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1accbad4dd004c1ced33642db6398b2efe" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_test_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a7c8f0d211967ccc5219144e92571ab26" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_train_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1af28078b0ddaef45124465bef01eefedf" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_train_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a2bde303671110519388d9962bc3e5583" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_validation_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1adc16e42e5064dc2dc8d84dfbfc1325eb" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>on_validation_end</name></member>
      <member refid="classlbann_1_1lbann__callback__checknan_1a93b6c22d9fa21a77b91572b6e1c7c3d1" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_checknan</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__callback_1a66b0a8c00a273669fa782ece59e8898b" prot="public" virt="non-virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_checknan</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__callback_1a02d924df2f8ca851578dc76d9015e48d" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_checknan</scope><name>set_summarizer</name></member>
      <member refid="classlbann_1_1lbann__callback_1aab5086e27d9bb0a7c7ee8ffc1bc58671" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>setup</name></member>
      <member refid="classlbann_1_1lbann__callback_1ac91abaec389f8d2547512c45ae587304" prot="public" virt="virtual"><scope>lbann::lbann_callback_checknan</scope><name>~lbann_callback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
