<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="getting_started" kind="page">
    <compoundname>getting_started</compoundname>
    <title>Getting Started</title>
    <detaileddescription>
<sect1 id="getting_started_1getting_started_download">
<title>Download</title>
<para>LBANN can be cloned from the <ulink url="https://github.com/LLNL/lbann">GitHub repository</ulink>:</para><para><programlisting><codeline><highlight class="normal">$<sp/>git<sp/>clone<sp/>https://github.com/LLNL/lbann.git</highlight></codeline>
</programlisting></para></sect1>
<sect1 id="getting_started_1getting_started_building">
<title>Building LBANN</title>
<para>The build process for LBANN differs on a machine to machine basis. This section describes the build process for <ref refid="getting_started_1lc" kindref="member">Livermore Computing Build</ref>, <ref refid="getting_started_1spack" kindref="member">Spack Build</ref>, and <ref refid="getting_started_1osx" kindref="member">OSX Build</ref>. For users attempting to build on systems not listed above, refer to the LBANN <ref refid="getting_started_1dependencies" kindref="member">Dependency List</ref>.</para><sect2 id="getting_started_1lc">
<title>Livermore Computing Build</title>
<para>Building on LC systems is supported via a build script. To run this script navigate to the LBANN directory and run<programlisting><codeline><highlight class="normal">$<sp/>build_lbann_lc.sh<sp/></highlight></codeline>
</programlisting> located in scripts/. This will create a per system build located in the build directory in the main LBANN directory.</para></sect2>
<sect2 id="getting_started_1spack">
<title>Spack Build</title>
</sect2>
<sect2 id="getting_started_1osx">
<title>OSX Build</title>
</sect2>
<sect2 id="getting_started_1dependencies">
<title>Dependency List</title>
<para>LBANN requires the following to build and operate.<itemizedlist>
<listitem><para>CMake</para></listitem><listitem><para>MPI</para></listitem><listitem><para>Elemental</para></listitem><listitem><para>OpenCV</para></listitem><listitem><para>CuDA (optional)</para></listitem><listitem><para>cuDNN (optional)</para></listitem><listitem><para>Protocol Buffers (optional)</para></listitem><listitem><para>Doxygen (optional)</para></listitem></itemizedlist>
</para></sect2>
</sect1>
<sect1 id="getting_started_1getting_started_basicusage">
<title>Basic Usage</title>
<para>LBANN is run via the lbann executable with command line arguments consisting of prototext files. The lbann executable is located within the specific machine build directory&apos;s model_zoo directory. The prototext files are located within the main lbann directory&apos;s model_zoo directory. Lbann requires three prototext files as input: model, data reader, and optimizer. The model and reader must be paired based on the data required by the model (i.e MNIST model and MNIST reader). Therefore an example execution from the main lbann directory on Catalyst would be: <programlisting><codeline><highlight class="normal">$<sp/>build/catalyst.llnl.gov/model_zoo/lbann<sp/>\</highlight></codeline>
<codeline><highlight class="normal">--model=model_zoo/prototext/model_mnist_multi.prototext<sp/>\</highlight></codeline>
<codeline><highlight class="normal">--reader=model_zoo/prototext/data_reader_mnist.prototext<sp/>\</highlight></codeline>
<codeline><highlight class="normal">--optimizer=model_zoo/prototext/opt_adagrad.prototext</highlight></codeline>
</programlisting></para><sect2 id="getting_started_1verification">
<title>Verification</title>
<para>To verify functionality of LBANN users can run a test MNIST experiment. Using the command found in the <ref refid="getting_started_1getting_started_basicusage" kindref="member">Basic Usage</ref> section and 2 MPI ranks (srun -n2) should produce the following results on Catalyst: <programlisting><codeline><highlight class="normal">--------------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">[20]<sp/>Epoch<sp/>:<sp/>stats<sp/>formated<sp/>[tr/v/te]<sp/>iter/epoch<sp/>=<sp/>[2700/600/1000]</highlight></codeline>
<codeline><highlight class="normal">global<sp/>MB<sp/>=<sp/>[<sp/><sp/>20/<sp/><sp/>10/<sp/><sp/>10]<sp/>global<sp/>last<sp/>MB<sp/>=<sp/>[<sp/><sp/>20/<sp/><sp/>10/<sp/><sp/>10]</highlight></codeline>
<codeline><highlight class="normal">local<sp/>MB<sp/>=<sp/>[<sp/><sp/>10/<sp/><sp/>10/<sp/><sp/>10]<sp/><sp/>local<sp/>last<sp/>MB<sp/>=<sp/>[<sp/><sp/>10/<sp/><sp/>10/<sp/><sp/>10]</highlight></codeline>
<codeline><highlight class="normal">--------------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">Model<sp/>0<sp/>@54000<sp/>steps<sp/>Training<sp/>categorical<sp/>accuracy:<sp/>99.9741%<sp/>@12000<sp/>validation<sp/>steps<sp/>Validation<sp/>categorical<sp/>accuracy:<sp/>97.95%</highlight></codeline>
<codeline><highlight class="normal">Model<sp/>1<sp/>@54000<sp/>steps<sp/>Training<sp/>categorical<sp/>accuracy:<sp/>99.9926%<sp/>@12000<sp/>validation<sp/>steps<sp/>Validation<sp/>categorical<sp/>accuracy:<sp/>97.9833%</highlight></codeline>
<codeline><highlight class="normal">Model<sp/>0<sp/>average<sp/>categorical<sp/>cross<sp/>entropy:<sp/>0.00176223</highlight></codeline>
<codeline><highlight class="normal">Model<sp/>1<sp/>average<sp/>categorical<sp/>cross<sp/>entropy:<sp/>0.00126326</highlight></codeline>
<codeline><highlight class="normal">Model<sp/>0<sp/>Epoch<sp/>time:<sp/>62.8982s;<sp/>Mean<sp/>minibatch<sp/>time:<sp/>0.0218984s;<sp/>Min:<sp/>0.0214709s;<sp/>Max:<sp/>0.0306295s;<sp/>Stdev:<sp/>0.000214515s</highlight></codeline>
<codeline><highlight class="normal">Model<sp/>1<sp/>Epoch<sp/>time:<sp/>62.9628s;<sp/>Mean<sp/>minibatch<sp/>time:<sp/>0.0219376s;<sp/>Min:<sp/>0.0216846s;<sp/>Max:<sp/>0.127405s;<sp/>Stdev:<sp/>0.00204183s</highlight></codeline>
<codeline><highlight class="normal">Model<sp/>0<sp/>@20000<sp/>testing<sp/>steps<sp/>external<sp/>validation<sp/>categorical<sp/>accuracy:<sp/>98.32%</highlight></codeline>
<codeline><highlight class="normal">Model<sp/>1<sp/>@20000<sp/>testing<sp/>steps<sp/>external<sp/>validation<sp/>categorical<sp/>accuracy:<sp/>98.27%</highlight></codeline>
</programlisting> LBANN performance will vary on a machine to machine basis. Results will also vary, but should not do so significantly. </para></sect2>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
