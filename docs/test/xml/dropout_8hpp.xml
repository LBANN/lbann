<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="dropout_8hpp" kind="file" language="C++">
    <compoundname>dropout.hpp</compoundname>
    <includes refid="regularizer_8hpp" local="yes">lbann/layers/regularizers/regularizer.hpp</includes>
    <includedby refid="lbann_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</includedby>
    <incdepgraph>
      <node id="8662">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="8663" relation="include">
        </childnode>
        <childnode refid="8659" relation="include">
        </childnode>
        <childnode refid="8649" relation="include">
        </childnode>
        <childnode refid="8658" relation="include">
        </childnode>
      </node>
      <node id="8674">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="8649" relation="include">
        </childnode>
        <childnode refid="8650" relation="include">
        </childnode>
      </node>
      <node id="8650">
        <label>El.hpp</label>
      </node>
      <node id="8649">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="8650" relation="include">
        </childnode>
        <childnode refid="8651" relation="include">
        </childnode>
        <childnode refid="8652" relation="include">
        </childnode>
        <childnode refid="8657" relation="include">
        </childnode>
      </node>
      <node id="8646">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp</label>
        <link refid="dropout_8hpp"/>
        <childnode refid="8647" relation="include">
        </childnode>
      </node>
      <node id="8663">
        <label>string</label>
      </node>
      <node id="8647">
        <label>lbann/layers/regularizers/regularizer.hpp</label>
        <link refid="regularizer_8hpp"/>
        <childnode refid="8648" relation="include">
        </childnode>
      </node>
      <node id="8671">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="8659" relation="include">
        </childnode>
        <childnode refid="8649" relation="include">
        </childnode>
        <childnode refid="8658" relation="include">
        </childnode>
        <childnode refid="8666" relation="include">
        </childnode>
      </node>
      <node id="8677">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="8678" relation="include">
        </childnode>
      </node>
      <node id="8660">
        <label>map</label>
      </node>
      <node id="8676">
        <label>unordered_set</label>
      </node>
      <node id="8670">
        <label>exception</label>
      </node>
      <node id="8673">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="8649" relation="include">
        </childnode>
        <childnode refid="8658" relation="include">
        </childnode>
        <childnode refid="8666" relation="include">
        </childnode>
        <childnode refid="8671" relation="include">
        </childnode>
      </node>
      <node id="8654">
        <label>cstdio</label>
      </node>
      <node id="8667">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="8668" relation="include">
        </childnode>
        <childnode refid="8663" relation="include">
        </childnode>
      </node>
      <node id="8656">
        <label>cxxabi.h</label>
      </node>
      <node id="8666">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="8649" relation="include">
        </childnode>
        <childnode refid="8658" relation="include">
        </childnode>
        <childnode refid="8667" relation="include">
        </childnode>
        <childnode refid="8669" relation="include">
        </childnode>
        <childnode refid="8670" relation="include">
        </childnode>
      </node>
      <node id="8659">
        <label>vector</label>
      </node>
      <node id="8658">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="8659" relation="include">
        </childnode>
        <childnode refid="8660" relation="include">
        </childnode>
        <childnode refid="8661" relation="include">
        </childnode>
        <childnode refid="8649" relation="include">
        </childnode>
      </node>
      <node id="8675">
        <label>lbann.pb.h</label>
      </node>
      <node id="8653">
        <label>cstdlib</label>
      </node>
      <node id="8669">
        <label>iostream</label>
      </node>
      <node id="8664">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="8665" relation="include">
        </childnode>
        <childnode refid="8649" relation="include">
        </childnode>
        <childnode refid="8658" relation="include">
        </childnode>
        <childnode refid="8666" relation="include">
        </childnode>
        <childnode refid="8671" relation="include">
        </childnode>
        <childnode refid="8672" relation="include">
        </childnode>
        <childnode refid="8663" relation="include">
        </childnode>
        <childnode refid="8676" relation="include">
        </childnode>
      </node>
      <node id="8648">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="8649" relation="include">
        </childnode>
        <childnode refid="8658" relation="include">
        </childnode>
        <childnode refid="8662" relation="include">
        </childnode>
        <childnode refid="8664" relation="include">
        </childnode>
        <childnode refid="8666" relation="include">
        </childnode>
        <childnode refid="8671" relation="include">
        </childnode>
        <childnode refid="8677" relation="include">
        </childnode>
        <childnode refid="8674" relation="include">
        </childnode>
        <childnode refid="8675" relation="include">
        </childnode>
        <childnode refid="8663" relation="include">
        </childnode>
        <childnode refid="8659" relation="include">
        </childnode>
      </node>
      <node id="8678">
        <label>chrono</label>
      </node>
      <node id="8668">
        <label>csignal</label>
      </node>
      <node id="8672">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="8663" relation="include">
        </childnode>
        <childnode refid="8649" relation="include">
        </childnode>
        <childnode refid="8658" relation="include">
        </childnode>
        <childnode refid="8666" relation="include">
        </childnode>
        <childnode refid="8671" relation="include">
        </childnode>
        <childnode refid="8673" relation="include">
        </childnode>
        <childnode refid="8674" relation="include">
        </childnode>
        <childnode refid="8675" relation="include">
        </childnode>
      </node>
      <node id="8657">
        <label>lbann_config.hpp</label>
      </node>
      <node id="8665">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="8652">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="8653" relation="include">
        </childnode>
        <childnode refid="8654" relation="include">
        </childnode>
        <childnode refid="8655" relation="include">
        </childnode>
        <childnode refid="8656" relation="include">
        </childnode>
      </node>
      <node id="8651">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="8650" relation="include">
        </childnode>
      </node>
      <node id="8661">
        <label>typeindex</label>
      </node>
      <node id="8655">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8686">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="8687" relation="include">
        </childnode>
        <childnode refid="8688" relation="include">
        </childnode>
        <childnode refid="8689" relation="include">
        </childnode>
        <childnode refid="8690" relation="include">
        </childnode>
        <childnode refid="8691" relation="include">
        </childnode>
        <childnode refid="8692" relation="include">
        </childnode>
        <childnode refid="8693" relation="include">
        </childnode>
        <childnode refid="8694" relation="include">
        </childnode>
        <childnode refid="8684" relation="include">
        </childnode>
      </node>
      <node id="8691">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/model_factory.cpp</label>
        <link refid="model__factory_8cpp"/>
      </node>
      <node id="8683">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="8684">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="8681" relation="include">
        </childnode>
        <childnode refid="8685" relation="include">
        </childnode>
        <childnode refid="8686" relation="include">
        </childnode>
        <childnode refid="8695" relation="include">
        </childnode>
      </node>
      <node id="8679">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp</label>
        <link refid="dropout_8hpp"/>
        <childnode refid="8680" relation="include">
        </childnode>
      </node>
      <node id="8682">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="8683" relation="include">
        </childnode>
        <childnode refid="8680" relation="include">
        </childnode>
      </node>
      <node id="8688">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp</label>
        <link refid="layer__factory_8cpp"/>
      </node>
      <node id="8685">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/utils/protobuf_utils.cpp</label>
        <link refid="protobuf__utils_8cpp"/>
      </node>
      <node id="8696">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/init_image_data_readers.cpp</label>
        <link refid="init__image__data__readers_8cpp"/>
      </node>
      <node id="8692">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/objective_function_factory.cpp</label>
        <link refid="objective__function__factory_8cpp"/>
      </node>
      <node id="8681">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp</label>
        <link refid="proto__common_8cpp"/>
      </node>
      <node id="8690">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/metric_factory.cpp</label>
        <link refid="metric__factory_8cpp"/>
      </node>
      <node id="8680">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="8681" relation="include">
        </childnode>
        <childnode refid="8682" relation="include">
        </childnode>
        <childnode refid="8684" relation="include">
        </childnode>
        <childnode refid="8697" relation="include">
        </childnode>
      </node>
      <node id="8695">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/init_image_data_readers.hpp</label>
        <link refid="init__image__data__readers_8hpp"/>
        <childnode refid="8696" relation="include">
        </childnode>
        <childnode refid="8681" relation="include">
        </childnode>
      </node>
      <node id="8693">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/optimizer_factory.cpp</label>
        <link refid="optimizer__factory_8cpp"/>
      </node>
      <node id="8694">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/weights_factory.cpp</label>
        <link refid="weights__factory_8cpp"/>
      </node>
      <node id="8687">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp</label>
        <link refid="callback__factory_8cpp"/>
      </node>
      <node id="8697">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/protobuf_utils.hpp</label>
        <link refid="protobuf__utils_8hpp"/>
        <childnode refid="8685" relation="include">
        </childnode>
      </node>
      <node id="8689">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_graph_factory.cpp</label>
        <link refid="layer__graph__factory_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlbann_1_1dropout" prot="public">lbann::dropout</innerclass>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LBANN_LAYER_REGULARIZER_DROPOUT_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LBANN_LAYER_REGULARIZER_DROPOUT_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="regularizer_8hpp" kindref="compound">lbann/layers/regularizers/regularizer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;data_layout<sp/>T_layout&gt;</highlight></codeline>
<codeline lineno="45" refid="classlbann_1_1dropout" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1dropout" kindref="compound">dropout</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1regularizer__layer" kindref="compound">regularizer_layer</ref><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50" refid="classlbann_1_1dropout_1a301be902f285c5cf1d0cd743119a09d8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1dropout_1a301be902f285c5cf1d0cd743119a09d8" kindref="member">dropout</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>keep_prob<sp/>=<sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0.5),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref>*<sp/>cudnn<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classlbann_1_1regularizer__layer" kindref="compound">regularizer_layer</ref>(comm),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref>(keep_prob)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(LBANN_HAS_CUDNN)<sp/>&amp;&amp;<sp/>!defined(LBANN_SEQUENTIAL_CONSISTENCY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>GPU<sp/>memory<sp/>if<sp/>using<sp/>GPU</highlight></codeline>
<codeline lineno="59"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cudnn<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>T_layout<sp/>==<sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" kindref="member">m_using_gpus</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref><sp/>=<sp/>cudnn;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classlbann_1_1dropout_1ab2057d4abf48b96f8f6e9f64bdb0fc7e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1dropout_1ab2057d4abf48b96f8f6e9f64bdb0fc7e" kindref="member">dropout</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dropout" kindref="compound">dropout</ref>&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1regularizer__layer" kindref="compound">regularizer_layer</ref>(other),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref>(other.<ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref>),</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref>(!other.<ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref>?<sp/>nullptr<sp/>:<sp/>other.<ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref>-&gt;Copy())<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>m_states_d<sp/>=<sp/>other.m_states_d;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reserve_space_d<sp/>=<sp/>other.m_reserve_space_d;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!other.m_dropout_cudnn_desc.empty())<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setup_dropout_cudnn_desc();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classlbann_1_1dropout_1a0243b0bc3c2a4239a5ba6d64e6566a15" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1dropout" kindref="compound">dropout</ref>&amp;<sp/><ref refid="classlbann_1_1dropout_1a0243b0bc3c2a4239a5ba6d64e6566a15" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dropout" kindref="compound">dropout</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" kindref="member">regularizer_layer::operator=</ref>(other);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!!other.<ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref><sp/>=<sp/>std::unique_ptr&lt;AbsDistMat&gt;(other.<ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref>-&gt;Copy());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>m_states_d<sp/>=<sp/>other.m_states_d;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reserve_space_d<sp/>=<sp/>other.m_reserve_space_d;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>desc<sp/>:<sp/>m_dropout_cudnn_desc)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDNN(cudnnDestroyDropoutDescriptor(desc));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dropout_cudnn_desc.clear();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!other.m_dropout_cudnn_desc.empty())<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setup_dropout_cudnn_desc();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classlbann_1_1dropout_1a4b18d1195a176f4dd653767bfc0a9f6b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1dropout_1a4b18d1195a176f4dd653767bfc0a9f6b" kindref="member">~dropout</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>desc<sp/>:<sp/>m_dropout_cudnn_desc)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDNN(cudnnDestroyDropoutDescriptor(desc));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classlbann_1_1dropout_1a0e6e50b50f8c2620315f3257bbab41b3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1dropout" kindref="compound">dropout</ref>*<sp/><ref refid="classlbann_1_1dropout_1a0e6e50b50f8c2620315f3257bbab41b3" kindref="member">copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dropout_1a301be902f285c5cf1d0cd743119a09d8" kindref="member">dropout</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classlbann_1_1dropout_1a4d07cd79c7a4ab29db233a361aede358" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1dropout_1a4d07cd79c7a4ab29db233a361aede358" kindref="member">get_type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;dropout&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classlbann_1_1dropout_1a7b53ee7d758337fe40788a567b5d092c" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1dropout_1a7b53ee7d758337fe40788a567b5d092c" kindref="member">get_description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;<sp/>dropout<sp/>keep_prob:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref>)<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>dataLayout:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classlbann_1_1Layer_1ae3f4a5602df821f4221614b1e3782dc1" kindref="member">get_data_layout_string</ref>(<ref refid="classlbann_1_1dropout_1aefeb16614f9bf4b9e643e1d5b48ec62d" kindref="member">get_data_layout</ref>());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classlbann_1_1dropout_1abf399d8463721d322aedbb76d60534c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dropout_1abf399d8463721d322aedbb76d60534c6" kindref="member">setup_matrices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9951bb1719d534e0401b1f06cad19eab" kindref="member">El::Grid</ref>&amp;<sp/>grid)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e" kindref="member">regularizer_layer::setup_matrices</ref>(grid);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" kindref="member">m_using_gpus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref><sp/>=<sp/>std::unique_ptr&lt;AbsDistMat&gt;(<ref refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" kindref="member">get_activations</ref>().Copy());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123" refid="classlbann_1_1dropout_1aefeb16614f9bf4b9e643e1d5b48ec62d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08db" kindref="member">data_layout</ref><sp/><ref refid="classlbann_1_1dropout_1aefeb16614f9bf4b9e643e1d5b48ec62d" kindref="member">get_data_layout</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T_layout;<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classlbann_1_1dropout_1abaa3d0c6d99200b186d0a55201f77b6a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dropout_1abaa3d0c6d99200b186d0a55201f77b6a" kindref="member">setup_gpu</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" kindref="member">regularizer_layer::setup_gpu</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;cuDNN<sp/>not<sp/>detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>work<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_CUDNN(cudnnDropoutGetStatesSize(this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_handle(0),<sp/>&amp;size));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>(size<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>-<sp/>1)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>m_states_d<sp/>=<sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref>(<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>,<sp/>size,<sp/>1);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_CUDNN(cudnnDropoutGetReserveSpaceSize(this-&gt;m_prev_activations_cudnn_desc,<sp/>&amp;size));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>(size<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>-<sp/>1)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reserve_space_d<sp/>=<sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref>(<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>,<sp/>size,<sp/>1);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>cuDNN<sp/>descriptors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>setup_dropout_cudnn_desc();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classlbann_1_1dropout_1a9ed94f278835b6c9e8185de01705e53a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dropout_1a9ed94f278835b6c9e8185de01705e53a" kindref="member">fp_compute</ref><sp/>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" kindref="member">m_using_gpus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1dropout_1ad71de4282d2164171bbcad158a7bf1e7" kindref="member">fp_compute_gpu</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1dropout_1a358c502d8e7eeb1fed8b5df468793b09" kindref="member">fp_compute_cpu</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classlbann_1_1dropout_1a053e3f392a6a90b3bcc07f62f3818bce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dropout_1a053e3f392a6a90b3bcc07f62f3818bce" kindref="member">bp_compute</ref><sp/>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" kindref="member">m_using_gpus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1dropout_1aeafadecbcfc81734d0c1850b4004dcc3" kindref="member">bp_compute_gpu</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1dropout_1aca0160de0c3db5c29a0c4c6bddd0cf4f" kindref="member">bp_compute_cpu</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classlbann_1_1dropout_1a478368964f515f5456324b6504a5358f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dropout_1a478368964f515f5456324b6504a5358f" kindref="member">fp_setup_data</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mini_batch_size)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" kindref="member">m_using_gpus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>GPU<sp/>output<sp/>is<sp/>not<sp/>a<sp/>view<sp/>during<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mode<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>output_d<sp/>=<sp/>m_activations_d[0];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref><sp/>&amp;&amp;<sp/>output_d.is_view())<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>input_d<sp/>=<sp/>m_prev_activations_d[0];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_d.clear();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_d.resize(input_d.get_height(),<sp/>input_d.get_width_per_gpu());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" kindref="member">regularizer_layer::fp_setup_data</ref>(mini_batch_size);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classlbann_1_1dropout_1a358c502d8e7eeb1fed8b5df468793b09" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dropout_1a358c502d8e7eeb1fed8b5df468793b09" kindref="member">fp_compute_cpu</ref>()<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>input<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" kindref="member">get_prev_activations</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>output<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" kindref="member">get_activations</ref>();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>nothing<sp/>if<sp/>dropout<sp/>is<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mode<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>!=<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref><sp/>||<sp/><ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref><sp/>&lt;<sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0))<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>El::LockedView(output,<sp/>input);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>mask<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>scale<sp/>=<sp/>1<sp/>/<sp/><ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>height<sp/>=<sp/>input.Height();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>width<sp/>=<sp/>input.Width();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref>-&gt;Resize(height,<sp/>width);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_SEQUENTIAL_CONSISTENCY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelbann_1ad1e3fe84cfa5257be476de3be805064d" kindref="member">bernoulli_fill_procdet</ref>(*<ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref>,<sp/>height,<sp/>width,<sp/>DataType(<ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref>));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref><sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>El::EntrywiseMap(*<ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref>,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::function&lt;DataType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType&amp;)&gt;)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>([</highlight><highlight class="keyword">this</highlight><highlight class="normal">,scale](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType&amp;<sp/>z)-&gt;DataType<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>gen<sp/>=<sp/><ref refid="namespacelbann_1ae6ce9c2fdec6f81803f6b1a6555c31c5" kindref="member">get_fast_generator</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::bernoulli_distribution<sp/>dist(<ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dist(gen)<sp/>?<sp/>scale<sp/>:<sp/>DataType(0);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_SEQUENTIAL_CONSISTENCY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>mask<sp/>matrix<sp/>to<sp/>get<sp/>activations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>El::Hadamard(input,<sp/>*<ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref>,<sp/>output);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classlbann_1_1dropout_1aca0160de0c3db5c29a0c4c6bddd0cf4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dropout_1aca0160de0c3db5c29a0c4c6bddd0cf4f" kindref="member">bp_compute_cpu</ref>()<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>gradient_wrt_output<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" kindref="member">get_prev_error_signals</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>gradient_wrt_input<sp/>=<sp/><ref refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" kindref="member">get_error_signals</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mode<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>!=<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref><sp/>||<sp/><ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref><sp/>&lt;<sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0))<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>El::Axpy(DataType(1),<sp/>gradient_wrt_output,<sp/>gradient_wrt_input);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>El::Hadamard(gradient_wrt_output,<sp/>*<ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref>,<sp/>*<ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>El::Axpy(DataType(1),<sp/>*<ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref>,<sp/>gradient_wrt_input);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classlbann_1_1dropout_1ad71de4282d2164171bbcad158a7bf1e7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dropout_1ad71de4282d2164171bbcad158a7bf1e7" kindref="member">fp_compute_gpu</ref>()<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;cuDNN<sp/>not<sp/>detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>input_d<sp/>=<sp/>this-&gt;m_prev_activations_d[0];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>output_d<sp/>=<sp/>this-&gt;m_activations_d[0];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>num_gpus<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_num_gpus();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>nothing<sp/>if<sp/>dropout<sp/>is<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mode<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>!=<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref><sp/>||<sp/><ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref><sp/>&lt;<sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0))<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output_d.locked_view(input_d);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>dropout<sp/>on<sp/>each<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_gpus;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDA(cudaSetDevice(this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_gpu(i)));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDNN(cudnnSetStream(this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_handle(i),</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_stream(i)));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDNN(cudnnDropoutForward(this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_handle(i),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dropout_cudnn_desc[i],</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_prev_activations_cudnn_desc,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_d.get_locked_data(i),</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_activations_cudnn_desc,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_d.get_data(i),</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_reserve_space_d.get_data(i),</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_reserve_space_d.get_height()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classlbann_1_1dropout_1aeafadecbcfc81734d0c1850b4004dcc3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dropout_1aeafadecbcfc81734d0c1850b4004dcc3" kindref="member">bp_compute_gpu</ref>()<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;cuDNN<sp/>not<sp/>detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>gradient_wrt_output_d<sp/>=<sp/>this-&gt;m_prev_error_signals_d[0];</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>gradient_wrt_input_d<sp/>=<sp/>this-&gt;m_error_signals_d[0];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>num_gpus<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_num_gpus();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>error<sp/>signal<sp/>if<sp/>dropout<sp/>is<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mode<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>!=<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref><sp/>||<sp/><ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref><sp/>&lt;<sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0))<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;num_gpus;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDA(cudaSetDevice(this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_gpu(i)));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cublas::geam(this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_cublas_handle(i),</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CUBLAS_OP_N,<sp/>CUBLAS_OP_N,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_wrt_input_d.get_height(),</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_mini_batch_size_per_gpu,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType(1),</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_wrt_output_d.get_locked_data(i),</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_wrt_output_d.get_leading_dim(),</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType(1),</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_wrt_input_d.get_locked_data(i),</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_wrt_input_d.get_leading_dim(),</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_wrt_input_d.get_data(i),</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_wrt_input_d.get_leading_dim());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>dropout<sp/>backprop<sp/>on<sp/>each<sp/>GPU</highlight></codeline>
<codeline lineno="295"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_gpus;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDA(cudaSetDevice(this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_gpu(i)));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDNN(cudnnSetStream(this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_handle(i),</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_stream(i)));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDNN(cudnnDropoutBackward(this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_handle(i),</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dropout_cudnn_desc[i],</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_prev_error_signals_cudnn_desc,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_wrt_output_d.get_locked_data(i),</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_error_signals_cudnn_desc,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_wrt_input_d.get_data(i),</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_reserve_space_d.get_data(i),</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_reserve_space_d.get_height()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup_dropout_cudnn_desc()<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>num_gpus<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_num_gpus();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dropout_cudnn_desc.assign(num_gpus,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_gpus;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDA(cudaSetDevice(this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_gpu(i)));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDNN(cudnnSetStream(this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_handle(i),</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_stream(i)));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDNN(cudnnCreateDropoutDescriptor(&amp;m_dropout_cudnn_desc[i]));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDNN(cudnnSetDropoutDescriptor(m_dropout_cudnn_desc[i],</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" kindref="member">m_cudnn</ref>-&gt;get_handle(i),</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(1<sp/>-<sp/><ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref>),</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_states_d.get_data(i),</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_states_d.get_height()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType),</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelbann_1a4fea7ba21017b49d1e34394b4c20c764" kindref="member">get_generator</ref>()()));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/><ref refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" kindref="member">m_keep_prob</ref>;</highlight></codeline>
<codeline lineno="337" refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;AbsDistMat&gt;<sp/><ref refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" kindref="member">m_mask</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>std::vector&lt;cudnnDropoutDescriptor_t&gt;<sp/>m_dropout_cudnn_desc;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref><sp/>m_states_d;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref><sp/>m_reserve_space_d;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_LAYER_REGULARIZER_DROPOUT_HPP_INCLUDED</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp"/>
  </compounddef>
</doxygen>
