<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="callback__timer_8cpp" kind="file" language="C++">
    <compoundname>callback_timer.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes refid="timer_8hpp" local="yes">lbann/utils/timer.hpp</includes>
    <includes refid="callback__timer_8hpp" local="yes">lbann/callbacks/callback_timer.hpp</includes>
    <incdepgraph>
      <node id="18556">
        <label>sys/stat.h</label>
      </node>
      <node id="18533">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="18534" relation="include">
        </childnode>
        <childnode refid="18522" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18535" relation="include">
        </childnode>
      </node>
      <node id="18550">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18525">
        <label>El.hpp</label>
      </node>
      <node id="18524">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="18525" relation="include">
        </childnode>
        <childnode refid="18526" relation="include">
        </childnode>
        <childnode refid="18527" relation="include">
        </childnode>
        <childnode refid="18532" relation="include">
        </childnode>
      </node>
      <node id="18521">
        <label>lbann/callbacks/callback_timer.hpp</label>
        <link refid="callback__timer_8hpp"/>
        <childnode refid="18520" relation="include">
        </childnode>
        <childnode refid="18522" relation="include">
        </childnode>
        <childnode refid="18523" relation="include">
        </childnode>
      </node>
      <node id="18558">
        <label>fcntl.h</label>
      </node>
      <node id="18561">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18535" relation="include">
        </childnode>
        <childnode refid="18542" relation="include">
        </childnode>
        <childnode refid="18550" relation="include">
        </childnode>
      </node>
      <node id="18534">
        <label>string</label>
      </node>
      <node id="18547">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="18522" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18535" relation="include">
        </childnode>
        <childnode refid="18542" relation="include">
        </childnode>
      </node>
      <node id="18519">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="18520" relation="include">
        </childnode>
      </node>
      <node id="18536">
        <label>map</label>
      </node>
      <node id="18552">
        <label>unordered_set</label>
      </node>
      <node id="18546">
        <label>exception</label>
      </node>
      <node id="18549">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18535" relation="include">
        </childnode>
        <childnode refid="18542" relation="include">
        </childnode>
        <childnode refid="18547" relation="include">
        </childnode>
      </node>
      <node id="18557">
        <label>sys/types.h</label>
      </node>
      <node id="18523">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18533" relation="include">
        </childnode>
        <childnode refid="18538" relation="include">
        </childnode>
        <childnode refid="18539" relation="include">
        </childnode>
      </node>
      <node id="18553">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="18545" relation="include">
        </childnode>
        <childnode refid="18522" relation="include">
        </childnode>
        <childnode refid="18554" relation="include">
        </childnode>
        <childnode refid="18536" relation="include">
        </childnode>
      </node>
      <node id="18529">
        <label>cstdio</label>
      </node>
      <node id="18543">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="18544" relation="include">
        </childnode>
        <childnode refid="18534" relation="include">
        </childnode>
      </node>
      <node id="18531">
        <label>cxxabi.h</label>
      </node>
      <node id="18517">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_timer.cpp</label>
        <link refid="callback__timer_8cpp"/>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18519" relation="include">
        </childnode>
        <childnode refid="18521" relation="include">
        </childnode>
      </node>
      <node id="18542">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18535" relation="include">
        </childnode>
        <childnode refid="18543" relation="include">
        </childnode>
        <childnode refid="18545" relation="include">
        </childnode>
        <childnode refid="18546" relation="include">
        </childnode>
      </node>
      <node id="18522">
        <label>vector</label>
      </node>
      <node id="18535">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="18522" relation="include">
        </childnode>
        <childnode refid="18536" relation="include">
        </childnode>
        <childnode refid="18537" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
      </node>
      <node id="18559">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="18560" relation="include">
        </childnode>
        <childnode refid="18561" relation="include">
        </childnode>
      </node>
      <node id="18555">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="18556" relation="include">
        </childnode>
        <childnode refid="18557" relation="include">
        </childnode>
        <childnode refid="18558" relation="include">
        </childnode>
      </node>
      <node id="18551">
        <label>lbann.pb.h</label>
      </node>
      <node id="18528">
        <label>cstdlib</label>
      </node>
      <node id="18545">
        <label>iostream</label>
      </node>
      <node id="18540">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="18541" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18535" relation="include">
        </childnode>
        <childnode refid="18542" relation="include">
        </childnode>
        <childnode refid="18547" relation="include">
        </childnode>
        <childnode refid="18548" relation="include">
        </childnode>
        <childnode refid="18534" relation="include">
        </childnode>
        <childnode refid="18552" relation="include">
        </childnode>
      </node>
      <node id="18562">
        <label>unordered_map</label>
      </node>
      <node id="18539">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18535" relation="include">
        </childnode>
        <childnode refid="18533" relation="include">
        </childnode>
        <childnode refid="18540" relation="include">
        </childnode>
        <childnode refid="18542" relation="include">
        </childnode>
        <childnode refid="18547" relation="include">
        </childnode>
        <childnode refid="18519" relation="include">
        </childnode>
        <childnode refid="18550" relation="include">
        </childnode>
        <childnode refid="18551" relation="include">
        </childnode>
        <childnode refid="18534" relation="include">
        </childnode>
        <childnode refid="18522" relation="include">
        </childnode>
      </node>
      <node id="18520">
        <label>chrono</label>
      </node>
      <node id="18560">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18539" relation="include">
        </childnode>
        <childnode refid="18548" relation="include">
        </childnode>
      </node>
      <node id="18544">
        <label>csignal</label>
      </node>
      <node id="18548">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="18534" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18535" relation="include">
        </childnode>
        <childnode refid="18542" relation="include">
        </childnode>
        <childnode refid="18547" relation="include">
        </childnode>
        <childnode refid="18549" relation="include">
        </childnode>
        <childnode refid="18550" relation="include">
        </childnode>
        <childnode refid="18551" relation="include">
        </childnode>
      </node>
      <node id="18532">
        <label>lbann_config.hpp</label>
      </node>
      <node id="18554">
        <label>set</label>
      </node>
      <node id="18538">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="18524" relation="include">
        </childnode>
        <childnode refid="18535" relation="include">
        </childnode>
        <childnode refid="18539" relation="include">
        </childnode>
        <childnode refid="18533" relation="include">
        </childnode>
        <childnode refid="18553" relation="include">
        </childnode>
        <childnode refid="18555" relation="include">
        </childnode>
        <childnode refid="18550" relation="include">
        </childnode>
        <childnode refid="18559" relation="include">
        </childnode>
        <childnode refid="18561" relation="include">
        </childnode>
        <childnode refid="18548" relation="include">
        </childnode>
        <childnode refid="18540" relation="include">
        </childnode>
        <childnode refid="18551" relation="include">
        </childnode>
        <childnode refid="18522" relation="include">
        </childnode>
        <childnode refid="18534" relation="include">
        </childnode>
        <childnode refid="18562" relation="include">
        </childnode>
      </node>
      <node id="18541">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="18518">
        <label>algorithm</label>
      </node>
      <node id="18527">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="18528" relation="include">
        </childnode>
        <childnode refid="18529" relation="include">
        </childnode>
        <childnode refid="18530" relation="include">
        </childnode>
        <childnode refid="18531" relation="include">
        </childnode>
      </node>
      <node id="18526">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="18525" relation="include">
        </childnode>
      </node>
      <node id="18537">
        <label>typeindex</label>
      </node>
      <node id="18530">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lbann_callback_timer<sp/>.hpp<sp/>.cpp<sp/>-<sp/>Callback<sp/>hooks<sp/>to<sp/>time<sp/>training</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8hpp" kindref="compound">lbann/utils/timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callback__timer_8hpp" kindref="compound">lbann/callbacks/callback_timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classlbann_1_1lbann__callback__timer_1a6a8a59707a52b8b570b7605b90fdd159" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__timer_1a6a8a59707a52b8b570b7605b90fdd159" kindref="member">lbann_callback_timer::batch_timing_begin</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__timer_1a56a597dea5c6649442311dc15ee6d06f" kindref="member">m_batch_start_time</ref><sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classlbann_1_1lbann__callback__timer_1afbf58bd4e1b4c1bcae2e50f78c9507f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__timer_1afbf58bd4e1b4c1bcae2e50f78c9507f0" kindref="member">lbann_callback_timer::batch_timing_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>mb_time<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/><ref refid="classlbann_1_1lbann__callback__timer_1a56a597dea5c6649442311dc15ee6d06f" kindref="member">m_batch_start_time</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__timer_1ae20dcc6bf921444e2724478ba751ade1" kindref="member">m_batch_times</ref>.push_back(mb_time);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref>-&gt;<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(</highlight><highlight class="stringliteral">&quot;minibatch_time&quot;</highlight><highlight class="normal">,<sp/>mb_time,<sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()-1);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classlbann_1_1lbann__callback__timer_1a5eb2a9d5c0c2fe4a7d7f45369928e2fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__timer_1a5eb2a9d5c0c2fe4a7d7f45369928e2fd" kindref="member">lbann_callback_timer::timing_begin</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__timer_1ae20dcc6bf921444e2724478ba751ade1" kindref="member">m_batch_times</ref>.clear();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__timer_1a5e65e92eadce733120772d420ffbb7d5" kindref="member">m_start_time</ref><sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classlbann_1_1lbann__callback__timer_1a955e59858c6803e96b21fe494cdf3971" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__timer_1a955e59858c6803e96b21fe494cdf3971" kindref="member">lbann_callback_timer::timing_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref><sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>run<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>run_time<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/><ref refid="classlbann_1_1lbann__callback__timer_1a5e65e92eadce733120772d420ffbb7d5" kindref="member">m_start_time</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>minibatch<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_batches<sp/>=<sp/><ref refid="classlbann_1_1lbann__callback__timer_1ae20dcc6bf921444e2724478ba751ade1" kindref="member">m_batch_times</ref>.size();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>batch_time_mean<sp/>=<sp/>std::nan(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>batch_time_min<sp/>=<sp/>std::nan(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>batch_time_max<sp/>=<sp/>std::nan(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>batch_time_stdev<sp/>=<sp/>std::nan(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_batches<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>batch_time_mean<sp/>=<sp/>std::accumulate(<ref refid="classlbann_1_1lbann__callback__timer_1ae20dcc6bf921444e2724478ba751ade1" kindref="member">m_batch_times</ref>.begin(),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__timer_1ae20dcc6bf921444e2724478ba751ade1" kindref="member">m_batch_times</ref>.end(),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>batch_time_mean<sp/>/=<sp/>num_batches;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>batch_time_min<sp/>=<sp/>*std::min_element(<ref refid="classlbann_1_1lbann__callback__timer_1ae20dcc6bf921444e2724478ba751ade1" kindref="member">m_batch_times</ref>.begin(),</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__timer_1ae20dcc6bf921444e2724478ba751ade1" kindref="member">m_batch_times</ref>.end());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>batch_time_max<sp/>=<sp/>*std::max_element(<ref refid="classlbann_1_1lbann__callback__timer_1ae20dcc6bf921444e2724478ba751ade1" kindref="member">m_batch_times</ref>.begin(),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__timer_1ae20dcc6bf921444e2724478ba751ade1" kindref="member">m_batch_times</ref>.end());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_batches<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>sqsum<sp/>=<sp/>std::inner_product(<ref refid="classlbann_1_1lbann__callback__timer_1ae20dcc6bf921444e2724478ba751ade1" kindref="member">m_batch_times</ref>.begin(),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__timer_1ae20dcc6bf921444e2724478ba751ade1" kindref="member">m_batch_times</ref>.end(),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__timer_1ae20dcc6bf921444e2724478ba751ade1" kindref="member">m_batch_times</ref>.begin(),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>var<sp/>=<sp/>sqsum<sp/>/<sp/>num_batches<sp/>-<sp/>batch_time_mean<sp/>*<sp/>batch_time_mean;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>=<sp/>num_batches<sp/>*<sp/>var<sp/>/<sp/>(num_batches<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>batch_time_stdev<sp/>=<sp/>std::sqrt(std::max(var,<sp/>0.0));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>string<sp/>for<sp/>execution<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>std::string<sp/>mode_string;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(m-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>())<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>mode_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;training<sp/>epoch<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(m-&gt;<ref refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" kindref="member">get_cur_epoch</ref>()-1);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>mode_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;validation&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>mode_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>execution<sp/>mode<sp/>for<sp/>reporting<sp/>results&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>timing<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_models<sp/>=<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" kindref="member">get_num_models</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1ad8a5790dfa9191d4b4f889e8707e57f1" kindref="member">am_model_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gather<sp/>timing<sp/>results<sp/>in<sp/>world<sp/>master</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;EvalType&gt;<sp/>run_time_list(num_models);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;EvalType&gt;<sp/>mean_list(num_models);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;EvalType&gt;<sp/>min_list(num_models);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;EvalType&gt;<sp/>max_list(num_models);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;EvalType&gt;<sp/>stdev_list(num_models);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a142c396a4d4a2c16ee234b813e7e45a6" kindref="member">intermodel_gather</ref>(run_time,<sp/>run_time_list);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a142c396a4d4a2c16ee234b813e7e45a6" kindref="member">intermodel_gather</ref>(batch_time_mean,<sp/>mean_list);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a142c396a4d4a2c16ee234b813e7e45a6" kindref="member">intermodel_gather</ref>(batch_time_min,<sp/>min_list);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a142c396a4d4a2c16ee234b813e7e45a6" kindref="member">intermodel_gather</ref>(batch_time_max,<sp/>max_list);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a142c396a4d4a2c16ee234b813e7e45a6" kindref="member">intermodel_gather</ref>(batch_time_stdev,<sp/>stdev_list);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a142c396a4d4a2c16ee234b813e7e45a6" kindref="member">intermodel_gather</ref>(run_time,<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1adbd99fe6c8df2689217c9ee16d6234d7" kindref="member">get_intermodel_master</ref>());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a142c396a4d4a2c16ee234b813e7e45a6" kindref="member">intermodel_gather</ref>(batch_time_mean,<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1adbd99fe6c8df2689217c9ee16d6234d7" kindref="member">get_intermodel_master</ref>());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a142c396a4d4a2c16ee234b813e7e45a6" kindref="member">intermodel_gather</ref>(batch_time_min,<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1adbd99fe6c8df2689217c9ee16d6234d7" kindref="member">get_intermodel_master</ref>());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a142c396a4d4a2c16ee234b813e7e45a6" kindref="member">intermodel_gather</ref>(batch_time_max,<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1adbd99fe6c8df2689217c9ee16d6234d7" kindref="member">get_intermodel_master</ref>());</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a142c396a4d4a2c16ee234b813e7e45a6" kindref="member">intermodel_gather</ref>(batch_time_stdev,<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1adbd99fe6c8df2689217c9ee16d6234d7" kindref="member">get_intermodel_master</ref>());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_models;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Model<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mode_string<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;run<sp/>time<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>run_time_list[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_models;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Model<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mode_string<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;mini-batch<sp/>time<sp/>statistics<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::isnan(mean_list[i]))<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>mean_list[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>mean,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::isnan(max_list[i]))<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>max_list[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>max,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::isnan(min_list[i]))<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>min_list[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>min,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::isnan(stdev_list[i]))<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>stdev_list[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>stdev&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_timer.cpp"/>
  </compounddef>
</doxygen>
