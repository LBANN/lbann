<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="data__reader__mnist_8cpp" kind="file" language="C++">
    <compoundname>data_reader_mnist.cpp</compoundname>
    <includes refid="data__reader__mnist_8hpp" local="yes">lbann/data_readers/data_reader_mnist.hpp</includes>
    <includes refid="file__utils_8hpp" local="yes">lbann/utils/file_utils.hpp</includes>
    <includes local="no">cstdio</includes>
    <incdepgraph>
      <node id="19621">
        <label>sys/stat.h</label>
      </node>
      <node id="19628">
        <label>cv_process.hpp</label>
        <link refid="cv__process_8hpp"/>
        <childnode refid="19629" relation="include">
        </childnode>
        <childnode refid="19632" relation="include">
        </childnode>
        <childnode refid="19635" relation="include">
        </childnode>
        <childnode refid="19636" relation="include">
        </childnode>
        <childnode refid="19639" relation="include">
        </childnode>
        <childnode refid="19640" relation="include">
        </childnode>
        <childnode refid="19641" relation="include">
        </childnode>
        <childnode refid="19643" relation="include">
        </childnode>
        <childnode refid="19645" relation="include">
        </childnode>
        <childnode refid="19646" relation="include">
        </childnode>
      </node>
      <node id="19647">
        <label>lbann/utils/file_utils.hpp</label>
        <link refid="file__utils_8hpp"/>
        <childnode refid="19617" relation="include">
        </childnode>
        <childnode refid="19609" relation="include">
        </childnode>
        <childnode refid="19618" relation="include">
        </childnode>
        <childnode refid="19648" relation="include">
        </childnode>
        <childnode refid="19649" relation="include">
        </childnode>
      </node>
      <node id="19643">
        <label>cv_mean_extractor.hpp</label>
        <link refid="cv__mean__extractor_8hpp"/>
        <childnode refid="19629" relation="include">
        </childnode>
        <childnode refid="19644" relation="include">
        </childnode>
      </node>
      <node id="19646">
        <label>limits</label>
      </node>
      <node id="19649">
        <label>iterator</label>
      </node>
      <node id="19624">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="19606" relation="include">
        </childnode>
        <childnode refid="19598" relation="include">
        </childnode>
      </node>
      <node id="19612">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="19598" relation="include">
        </childnode>
        <childnode refid="19599" relation="include">
        </childnode>
      </node>
      <node id="19599">
        <label>El.hpp</label>
      </node>
      <node id="19634">
        <label>lbann/utils/mild_exception.hpp</label>
        <link refid="mild__exception_8hpp"/>
        <childnode refid="19618" relation="include">
        </childnode>
      </node>
      <node id="19598">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="19599" relation="include">
        </childnode>
        <childnode refid="19600" relation="include">
        </childnode>
        <childnode refid="19601" relation="include">
        </childnode>
        <childnode refid="19606" relation="include">
        </childnode>
      </node>
      <node id="19596">
        <label>data_reader_image.hpp</label>
        <link refid="data__reader__image_8hpp"/>
        <childnode refid="19597" relation="include">
        </childnode>
        <childnode refid="19624" relation="include">
        </childnode>
        <childnode refid="19628" relation="include">
        </childnode>
      </node>
      <node id="19625">
        <label>cassert</label>
      </node>
      <node id="19623">
        <label>fcntl.h</label>
      </node>
      <node id="19631">
        <label>opencv_extensions.hpp</label>
        <link refid="opencv__extensions_8hpp"/>
      </node>
      <node id="19639">
        <label>cv_colorizer.hpp</label>
        <link refid="cv__colorizer_8hpp"/>
        <childnode refid="19629" relation="include">
        </childnode>
      </node>
      <node id="19617">
        <label>string</label>
      </node>
      <node id="19610">
        <label>map</label>
      </node>
      <node id="19635">
        <label>cv_subtractor.hpp</label>
        <link refid="cv__subtractor_8hpp"/>
        <childnode refid="19629" relation="include">
        </childnode>
        <childnode refid="19598" relation="include">
        </childnode>
      </node>
      <node id="19619">
        <label>exception</label>
      </node>
      <node id="19648">
        <label>fstream</label>
      </node>
      <node id="19637">
        <label>ostream</label>
      </node>
      <node id="19613">
        <label>random</label>
      </node>
      <node id="19622">
        <label>sys/types.h</label>
      </node>
      <node id="19633">
        <label>typeinfo</label>
      </node>
      <node id="19603">
        <label>cstdio</label>
      </node>
      <node id="19640">
        <label>cv_decolorizer.hpp</label>
        <link refid="cv__decolorizer_8hpp"/>
        <childnode refid="19606" relation="include">
        </childnode>
        <childnode refid="19629" relation="include">
        </childnode>
      </node>
      <node id="19615">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="19616" relation="include">
        </childnode>
        <childnode refid="19617" relation="include">
        </childnode>
      </node>
      <node id="19605">
        <label>cxxabi.h</label>
      </node>
      <node id="19614">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="19598" relation="include">
        </childnode>
        <childnode refid="19608" relation="include">
        </childnode>
        <childnode refid="19615" relation="include">
        </childnode>
        <childnode refid="19618" relation="include">
        </childnode>
        <childnode refid="19619" relation="include">
        </childnode>
      </node>
      <node id="19627">
        <label>unistd.h</label>
      </node>
      <node id="19609">
        <label>vector</label>
      </node>
      <node id="19608">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="19609" relation="include">
        </childnode>
        <childnode refid="19610" relation="include">
        </childnode>
        <childnode refid="19611" relation="include">
        </childnode>
        <childnode refid="19598" relation="include">
        </childnode>
      </node>
      <node id="19594">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist.cpp</label>
        <link refid="data__reader__mnist_8cpp"/>
        <childnode refid="19595" relation="include">
        </childnode>
        <childnode refid="19647" relation="include">
        </childnode>
        <childnode refid="19603" relation="include">
        </childnode>
      </node>
      <node id="19642">
        <label>utility</label>
      </node>
      <node id="19620">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="19621" relation="include">
        </childnode>
        <childnode refid="19622" relation="include">
        </childnode>
        <childnode refid="19623" relation="include">
        </childnode>
      </node>
      <node id="19602">
        <label>cstdlib</label>
      </node>
      <node id="19630">
        <label>opencv.hpp</label>
        <link refid="opencv_8hpp"/>
        <childnode refid="19606" relation="include">
        </childnode>
      </node>
      <node id="19618">
        <label>iostream</label>
      </node>
      <node id="19632">
        <label>cv_normalizer.hpp</label>
        <link refid="cv__normalizer_8hpp"/>
        <childnode refid="19633" relation="include">
        </childnode>
        <childnode refid="19629" relation="include">
        </childnode>
        <childnode refid="19598" relation="include">
        </childnode>
        <childnode refid="19634" relation="include">
        </childnode>
      </node>
      <node id="19607">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="19598" relation="include">
        </childnode>
        <childnode refid="19608" relation="include">
        </childnode>
        <childnode refid="19612" relation="include">
        </childnode>
        <childnode refid="19613" relation="include">
        </childnode>
      </node>
      <node id="19629">
        <label>cv_transform.hpp</label>
        <link refid="cv__transform_8hpp"/>
        <childnode refid="19630" relation="include">
        </childnode>
        <childnode refid="19631" relation="include">
        </childnode>
      </node>
      <node id="19636">
        <label>cv_augmenter.hpp</label>
        <link refid="cv__augmenter_8hpp"/>
        <childnode refid="19629" relation="include">
        </childnode>
        <childnode refid="19618" relation="include">
        </childnode>
        <childnode refid="19637" relation="include">
        </childnode>
        <childnode refid="19638" relation="include">
        </childnode>
        <childnode refid="19617" relation="include">
        </childnode>
      </node>
      <node id="19616">
        <label>csignal</label>
      </node>
      <node id="19641">
        <label>cv_cropper.hpp</label>
        <link refid="cv__cropper_8hpp"/>
        <childnode refid="19629" relation="include">
        </childnode>
        <childnode refid="19642" relation="include">
        </childnode>
        <childnode refid="19637" relation="include">
        </childnode>
      </node>
      <node id="19597">
        <label>data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="19598" relation="include">
        </childnode>
        <childnode refid="19607" relation="include">
        </childnode>
        <childnode refid="19614" relation="include">
        </childnode>
        <childnode refid="19608" relation="include">
        </childnode>
        <childnode refid="19620" relation="include">
        </childnode>
        <childnode refid="19612" relation="include">
        </childnode>
        <childnode refid="19624" relation="include">
        </childnode>
        <childnode refid="19625" relation="include">
        </childnode>
        <childnode refid="19626" relation="include">
        </childnode>
        <childnode refid="19617" relation="include">
        </childnode>
        <childnode refid="19609" relation="include">
        </childnode>
        <childnode refid="19627" relation="include">
        </childnode>
      </node>
      <node id="19595">
        <label>lbann/data_readers/data_reader_mnist.hpp</label>
        <link refid="data__reader__mnist_8hpp"/>
        <childnode refid="19596" relation="include">
        </childnode>
        <childnode refid="19624" relation="include">
        </childnode>
      </node>
      <node id="19606">
        <label>lbann_config.hpp</label>
      </node>
      <node id="19644">
        <label>type_traits</label>
      </node>
      <node id="19626">
        <label>algorithm</label>
      </node>
      <node id="19601">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="19602" relation="include">
        </childnode>
        <childnode refid="19603" relation="include">
        </childnode>
        <childnode refid="19604" relation="include">
        </childnode>
        <childnode refid="19605" relation="include">
        </childnode>
      </node>
      <node id="19638">
        <label>cstring</label>
      </node>
      <node id="19600">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="19599" relation="include">
        </childnode>
      </node>
      <node id="19645">
        <label>memory</label>
      </node>
      <node id="19611">
        <label>typeindex</label>
      </node>
      <node id="19604">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mnist_reader<sp/>.hpp<sp/>.cpp<sp/>-<sp/>data<sp/>reader<sp/>class<sp/>for<sp/>MNIST<sp/>dataset</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__reader__mnist_8hpp" kindref="compound">lbann/data_readers/data_reader_mnist.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="file__utils_8hpp" kindref="compound">lbann/utils/file_utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classlbann_1_1mnist__reader_1abe2c3dd2e8d5ad42ec762fdd37bc9769" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1mnist__reader_1a7634b11fdfc3501bd75d60c567158cbf" kindref="member">mnist_reader::mnist_reader</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffle)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1image__data__reader" kindref="compound">image_data_reader</ref>(shuffle)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1mnist__reader_1a5b9a3d56e2d1e1c6820b3c7cc8cde17d" kindref="member">set_defaults</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classlbann_1_1mnist__reader_1a7634b11fdfc3501bd75d60c567158cbf" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1mnist__reader_1a7634b11fdfc3501bd75d60c567158cbf" kindref="member">mnist_reader::mnist_reader</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1mnist__reader" kindref="compound">mnist_reader</ref>(true)<sp/>{}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classlbann_1_1mnist__reader_1a5b9a3d56e2d1e1c6820b3c7cc8cde17d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1mnist__reader_1a5b9a3d56e2d1e1c6820b3c7cc8cde17d" kindref="member">mnist_reader::set_defaults</ref>()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1image__data__reader_1af001f3d1c0f1c580b66988233b3a64f0" kindref="member">m_image_width</ref><sp/>=<sp/>28;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1image__data__reader_1a0632efa3deaa9d61e671f741909eb3fe" kindref="member">m_image_height</ref><sp/>=<sp/>28;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1image__data__reader_1aab1a440f361521dc7bd583cefe1061f8" kindref="member">m_image_num_channels</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1image__data__reader_1a0164b0e3abbe92daef73b36fb925403e" kindref="member">set_linearized_image_size</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1image__data__reader_1af280e8758a6ec3acee7c62e6351d17e0" kindref="member">m_num_labels</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classlbann_1_1mnist__reader_1af257b58b61ae9f3f623f1cb5d18c4841" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1mnist__reader_1af257b58b61ae9f3f623f1cb5d18c4841" kindref="member">mnist_reader::fetch_datum</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>X,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mb_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixelcount<sp/>=<sp/><ref refid="classlbann_1_1image__data__reader_1af001f3d1c0f1c580b66988233b3a64f0" kindref="member">m_image_width</ref><sp/>*<sp/><ref refid="classlbann_1_1image__data__reader_1a0632efa3deaa9d61e671f741909eb3fe" kindref="member">m_image_height</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>tmp<sp/>=<sp/><ref refid="classlbann_1_1mnist__reader_1a566ec18b29037abafe472b371f86aaca" kindref="member">m_image_data</ref>[data_id];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>pixelcount;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>X.Set(p,<sp/>mb_idx,<sp/>tmp[p+1]);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pixel_col<sp/>=<sp/>X(El::IR(0,<sp/>X.Height()),<sp/>El::IR(mb_idx,<sp/>mb_idx<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__image__preprocessor_1a27cb5182c4f764cbfa4edecbb78ef29d" kindref="member">augment</ref>(pixel_col,<sp/>m_image_height,<sp/><ref refid="classlbann_1_1image__data__reader_1af001f3d1c0f1c580b66988233b3a64f0" kindref="member">m_image_width</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__image__preprocessor_1ae370cdc9f776ce8cce94a45cacf47425" kindref="member">normalize</ref>(pixel_col,<sp/>1);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__image__preprocessor_1aece5b572d0a2fe123cc66412d7a5c91e" kindref="member">pixel_noise</ref>(pixel_col);<sp/></highlight><highlight class="comment">//add<sp/>noise<sp/>to<sp/>image,<sp/>disable<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classlbann_1_1mnist__reader_1a62404e18f0d114b99c11f3800c0d7451" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1mnist__reader_1a62404e18f0d114b99c11f3800c0d7451" kindref="member">mnist_reader::fetch_label</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>Y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mb_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>label<sp/>=<sp/><ref refid="classlbann_1_1mnist__reader_1a566ec18b29037abafe472b371f86aaca" kindref="member">m_image_data</ref>[data_id][0];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>Y.Set(label,<sp/>mb_idx,<sp/>1);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//===================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="namespacelbann_1a59f65281406da5bc57f49d8ec682be2d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacelbann_1a59f65281406da5bc57f49d8ec682be2d" kindref="member">load_mnist_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>imagepath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>labelpath,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader_1a51af253029b7daea29bc46cbbef686b3" kindref="member">m_first_n</ref>,<sp/>std::vector&lt;std::vector&lt;unsigned<sp/>char&gt;<sp/>&gt;&amp;<sp/><ref refid="classlbann_1_1mnist__reader_1a566ec18b29037abafe472b371f86aaca" kindref="member">m_image_data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>FILE<sp/>*fplbl<sp/>=<sp/>fopen(labelpath.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fplbl)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>load_mnist_data:<sp/>failed<sp/>to<sp/>open<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>labelpath);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>magicnum1,<sp/>numitems1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>fread(&amp;magicnum1,<sp/>4,<sp/>1,<sp/>fplbl);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>fread(&amp;numitems1,<sp/>4,<sp/>1,<sp/>fplbl);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="namespacelbann_1a0fd8bc0ad31da913a124683f5ec4fdf1" kindref="member">__swapEndianInt</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;)magicnum1);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="namespacelbann_1a0fd8bc0ad31da913a124683f5ec4fdf1" kindref="member">__swapEndianInt</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;)numitems1);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>FILE<sp/>*fpimg<sp/>=<sp/>fopen(imagepath.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fpimg)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>load_mnist_data:<sp/>failed<sp/>to<sp/>open<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>imagepath);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>magicnum2,<sp/>numitems2,<sp/>imgwidth,<sp/>imgheight;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>fread(&amp;magicnum2,<sp/>4,<sp/>1,<sp/>fpimg);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>fread(&amp;numitems2,<sp/>4,<sp/>1,<sp/>fpimg);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>fread(&amp;imgwidth,<sp/>4,<sp/>1,<sp/>fpimg);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>fread(&amp;imgheight,<sp/>4,<sp/>1,<sp/>fpimg);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="namespacelbann_1a0fd8bc0ad31da913a124683f5ec4fdf1" kindref="member">__swapEndianInt</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;)magicnum2);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="namespacelbann_1a0fd8bc0ad31da913a124683f5ec4fdf1" kindref="member">__swapEndianInt</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;)numitems2);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="namespacelbann_1a0fd8bc0ad31da913a124683f5ec4fdf1" kindref="member">__swapEndianInt</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;)imgwidth);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="namespacelbann_1a0fd8bc0ad31da913a124683f5ec4fdf1" kindref="member">__swapEndianInt</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;)imgheight);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numitems1<sp/>!=<sp/>numitems2)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fplbl);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fpimg);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>load_mnist_data:<sp/>numitems1<sp/>!=<sp/>numitems2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_first_n<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>numitems1<sp/>=<sp/>m_first_n<sp/>&gt;<sp/>numitems1<sp/>?<sp/>numitems1<sp/>:<sp/><ref refid="classlbann_1_1generic__data__reader_1a51af253029b7daea29bc46cbbef686b3" kindref="member">m_first_n</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1mnist__reader_1a566ec18b29037abafe472b371f86aaca" kindref="member">m_image_data</ref>.resize(numitems1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numitems1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1mnist__reader_1a566ec18b29037abafe472b371f86aaca" kindref="member">m_image_data</ref>[n].resize(1+(imgwidth<sp/>*<sp/>imgheight));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(&amp;<ref refid="classlbann_1_1mnist__reader_1a566ec18b29037abafe472b371f86aaca" kindref="member">m_image_data</ref>[n][0],<sp/>1,<sp/>1,<sp/>fplbl);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(&amp;<ref refid="classlbann_1_1mnist__reader_1a566ec18b29037abafe472b371f86aaca" kindref="member">m_image_data</ref>[n][1],<sp/>imgwidth<sp/>*<sp/>imgheight,<sp/>1,<sp/>fpimg);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>fclose(fpimg);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>fclose(fplbl);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classlbann_1_1mnist__reader_1aacbd6c4dec95b9849083d96e0005b392" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1mnist__reader_1aacbd6c4dec95b9849083d96e0005b392" kindref="member">mnist_reader::load</ref>()<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__reader_1ae82c40eebc05e2f0c1198afcc7a7f009" kindref="member">is_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;starting<sp/>lbann::mnist_reader::load\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1mnist__reader_1a566ec18b29037abafe472b371f86aaca" kindref="member">m_image_data</ref>.clear();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>FileDir<sp/>=<sp/><ref refid="classlbann_1_1generic__data__reader_1ab4c6c2d4ba40ece809ce896828c8ff03" kindref="member">get_file_dir</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>ImageFile<sp/>=<sp/><ref refid="classlbann_1_1generic__data__reader_1a56664e1b43f3fe923cf6d652f14b40a9" kindref="member">get_data_filename</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>LabelFile<sp/>=<sp/><ref refid="classlbann_1_1generic__data__reader_1af0f82d719fcd6e0668414836f2673d5c" kindref="member">get_label_filename</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>filepath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>imagepath<sp/>=<sp/>FileDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>ImageFile;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>labelpath<sp/>=<sp/>FileDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>LabelFile;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__reader_1ae82c40eebc05e2f0c1198afcc7a7f009" kindref="member">is_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>labels!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="namespacelbann_1a59f65281406da5bc57f49d8ec682be2d" kindref="member">load_mnist_data</ref>(imagepath,<sp/>labelpath,<sp/><ref refid="classlbann_1_1generic__data__reader_1a51af253029b7daea29bc46cbbef686b3" kindref="member">m_first_n</ref>,<sp/><ref refid="classlbann_1_1mnist__reader_1a566ec18b29037abafe472b371f86aaca" kindref="member">m_image_data</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__reader_1a51af253029b7daea29bc46cbbef686b3" kindref="member">m_first_n</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1ae6929a8bd2e59da72a8c2e537f0b2b37" kindref="member">set_use_percent</ref>(1.0);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1aa2d83c4ffc58534e0c193b6b9f9fb925" kindref="member">set_absolute_sample_count</ref>(0u);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" kindref="member">m_shuffled_indices</ref>.clear();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" kindref="member">m_shuffled_indices</ref>.resize(<ref refid="classlbann_1_1mnist__reader_1a566ec18b29037abafe472b371f86aaca" kindref="member">m_image_data</ref>.size());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" kindref="member">m_shuffled_indices</ref>.size();<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" kindref="member">m_shuffled_indices</ref>[n]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__reader_1ae82c40eebc05e2f0c1198afcc7a7f009" kindref="member">is_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>select_subset_of_data;<sp/>m_shuffled_indices.size:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" kindref="member">m_shuffled_indices</ref>.size()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1aa28fdeeb6af492540f507e49adff5d6c" kindref="member">select_subset_of_data</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist.cpp"/>
  </compounddef>
</doxygen>
