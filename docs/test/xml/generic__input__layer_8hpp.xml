<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="generic__input__layer_8hpp" kind="file" language="C++">
    <compoundname>generic_input_layer.hpp</compoundname>
    <includes refid="io__layer_8hpp" local="yes">lbann/layers/io/io_layer.hpp</includes>
    <includes refid="generic__io__buffer_8hpp" local="yes">lbann/io/data_buffers/generic_io_buffer.hpp</includes>
    <includes refid="partitioned__io__buffer_8hpp" local="yes">lbann/io/data_buffers/partitioned_io_buffer.hpp</includes>
    <includes refid="distributed__io__buffer_8hpp" local="yes">lbann/io/data_buffers/distributed_io_buffer.hpp</includes>
    <includes refid="model_8hpp" local="yes">lbann/models/model.hpp</includes>
    <includes refid="callback__imcomm_8hpp" local="yes">lbann/callbacks/callback_imcomm.hpp</includes>
    <includedby refid="callback__io_8cpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_io.cpp</includedby>
    <includedby refid="model_8cpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp</includedby>
    <includedby refid="recurrent_8cpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp</includedby>
    <includedby refid="input__layer_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp</includedby>
    <includedby refid="generic__target__layer_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/target/generic_target_layer.hpp</includedby>
    <incdepgraph>
      <node id="7517">
        <label>sys/stat.h</label>
      </node>
      <node id="7496">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="7497" relation="include">
        </childnode>
        <childnode refid="7493" relation="include">
        </childnode>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
      </node>
      <node id="7537">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="7534" relation="include">
        </childnode>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7511" relation="include">
        </childnode>
        <childnode refid="7500" relation="include">
        </childnode>
        <childnode refid="7538" relation="include">
        </childnode>
        <childnode refid="7539" relation="include">
        </childnode>
      </node>
      <node id="7520">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="7491" relation="include">
        </childnode>
        <childnode refid="7483" relation="include">
        </childnode>
      </node>
      <node id="7508">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7484" relation="include">
        </childnode>
      </node>
      <node id="7484">
        <label>El.hpp</label>
      </node>
      <node id="7483">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="7484" relation="include">
        </childnode>
        <childnode refid="7485" relation="include">
        </childnode>
        <childnode refid="7486" relation="include">
        </childnode>
        <childnode refid="7491" relation="include">
        </childnode>
      </node>
      <node id="7527">
        <label>lbann/io/data_buffers/distributed_io_buffer.hpp</label>
        <link refid="distributed__io__buffer_8hpp"/>
        <childnode refid="7525" relation="include">
        </childnode>
      </node>
      <node id="7535">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="7493" relation="include">
        </childnode>
        <childnode refid="7510" relation="include">
        </childnode>
        <childnode refid="7534" relation="include">
        </childnode>
        <childnode refid="7536" relation="include">
        </childnode>
        <childnode refid="7537" relation="include">
        </childnode>
      </node>
      <node id="7521">
        <label>cassert</label>
      </node>
      <node id="7519">
        <label>fcntl.h</label>
      </node>
      <node id="7533">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7500" relation="include">
        </childnode>
        <childnode refid="7508" relation="include">
        </childnode>
      </node>
      <node id="7481">
        <label>lbann/layers/io/io_layer.hpp</label>
        <link refid="io__layer_8hpp"/>
        <childnode refid="7482" relation="include">
        </childnode>
        <childnode refid="7513" relation="include">
        </childnode>
        <childnode refid="7524" relation="include">
        </childnode>
        <childnode refid="7508" relation="include">
        </childnode>
        <childnode refid="7500" relation="include">
        </childnode>
        <childnode refid="7497" relation="include">
        </childnode>
        <childnode refid="7518" relation="include">
        </childnode>
        <childnode refid="7517" relation="include">
        </childnode>
        <childnode refid="7523" relation="include">
        </childnode>
        <childnode refid="7488" relation="include">
        </childnode>
      </node>
      <node id="7497">
        <label>string</label>
      </node>
      <node id="7525">
        <label>lbann/io/data_buffers/generic_io_buffer.hpp</label>
        <link refid="generic__io__buffer_8hpp"/>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7513" relation="include">
        </childnode>
      </node>
      <node id="7505">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="7493" relation="include">
        </childnode>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7500" relation="include">
        </childnode>
      </node>
      <node id="7511">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="7512" relation="include">
        </childnode>
      </node>
      <node id="7494">
        <label>map</label>
      </node>
      <node id="7510">
        <label>unordered_set</label>
      </node>
      <node id="7538">
        <label>omp.h</label>
      </node>
      <node id="7504">
        <label>exception</label>
      </node>
      <node id="7515">
        <label>random</label>
      </node>
      <node id="7507">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7500" relation="include">
        </childnode>
        <childnode refid="7505" relation="include">
        </childnode>
      </node>
      <node id="7518">
        <label>sys/types.h</label>
      </node>
      <node id="7536">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7496" relation="include">
        </childnode>
        <childnode refid="7528" relation="include">
        </childnode>
        <childnode refid="7482" relation="include">
        </childnode>
      </node>
      <node id="7529">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="7503" relation="include">
        </childnode>
        <childnode refid="7493" relation="include">
        </childnode>
        <childnode refid="7530" relation="include">
        </childnode>
        <childnode refid="7494" relation="include">
        </childnode>
      </node>
      <node id="7488">
        <label>cstdio</label>
      </node>
      <node id="7526">
        <label>lbann/io/data_buffers/partitioned_io_buffer.hpp</label>
        <link refid="partitioned__io__buffer_8hpp"/>
        <childnode refid="7525" relation="include">
        </childnode>
      </node>
      <node id="7501">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="7502" relation="include">
        </childnode>
        <childnode refid="7497" relation="include">
        </childnode>
      </node>
      <node id="7490">
        <label>cxxabi.h</label>
      </node>
      <node id="7500">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7501" relation="include">
        </childnode>
        <childnode refid="7503" relation="include">
        </childnode>
        <childnode refid="7504" relation="include">
        </childnode>
      </node>
      <node id="7523">
        <label>unistd.h</label>
      </node>
      <node id="7493">
        <label>vector</label>
      </node>
      <node id="7492">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="7493" relation="include">
        </childnode>
        <childnode refid="7494" relation="include">
        </childnode>
        <childnode refid="7495" relation="include">
        </childnode>
        <childnode refid="7483" relation="include">
        </childnode>
      </node>
      <node id="7531">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="7532" relation="include">
        </childnode>
        <childnode refid="7533" relation="include">
        </childnode>
      </node>
      <node id="7516">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="7517" relation="include">
        </childnode>
        <childnode refid="7518" relation="include">
        </childnode>
        <childnode refid="7519" relation="include">
        </childnode>
      </node>
      <node id="7509">
        <label>lbann.pb.h</label>
      </node>
      <node id="7487">
        <label>cstdlib</label>
      </node>
      <node id="7480">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="7481" relation="include">
        </childnode>
        <childnode refid="7525" relation="include">
        </childnode>
        <childnode refid="7526" relation="include">
        </childnode>
        <childnode refid="7527" relation="include">
        </childnode>
        <childnode refid="7528" relation="include">
        </childnode>
        <childnode refid="7535" relation="include">
        </childnode>
      </node>
      <node id="7503">
        <label>iostream</label>
      </node>
      <node id="7498">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="7499" relation="include">
        </childnode>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7500" relation="include">
        </childnode>
        <childnode refid="7505" relation="include">
        </childnode>
        <childnode refid="7506" relation="include">
        </childnode>
        <childnode refid="7497" relation="include">
        </childnode>
        <childnode refid="7510" relation="include">
        </childnode>
      </node>
      <node id="7534">
        <label>unordered_map</label>
      </node>
      <node id="7514">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7508" relation="include">
        </childnode>
        <childnode refid="7515" relation="include">
        </childnode>
      </node>
      <node id="7482">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7496" relation="include">
        </childnode>
        <childnode refid="7498" relation="include">
        </childnode>
        <childnode refid="7500" relation="include">
        </childnode>
        <childnode refid="7505" relation="include">
        </childnode>
        <childnode refid="7511" relation="include">
        </childnode>
        <childnode refid="7508" relation="include">
        </childnode>
        <childnode refid="7509" relation="include">
        </childnode>
        <childnode refid="7497" relation="include">
        </childnode>
        <childnode refid="7493" relation="include">
        </childnode>
      </node>
      <node id="7512">
        <label>chrono</label>
      </node>
      <node id="7532">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7482" relation="include">
        </childnode>
        <childnode refid="7506" relation="include">
        </childnode>
      </node>
      <node id="7502">
        <label>csignal</label>
      </node>
      <node id="7524">
        <label>lbann/utils/dataset.hpp</label>
        <link refid="dataset_8hpp"/>
        <childnode refid="7513" relation="include">
        </childnode>
      </node>
      <node id="7506">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="7497" relation="include">
        </childnode>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7500" relation="include">
        </childnode>
        <childnode refid="7505" relation="include">
        </childnode>
        <childnode refid="7507" relation="include">
        </childnode>
        <childnode refid="7508" relation="include">
        </childnode>
        <childnode refid="7509" relation="include">
        </childnode>
      </node>
      <node id="7513">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7514" relation="include">
        </childnode>
        <childnode refid="7500" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7516" relation="include">
        </childnode>
        <childnode refid="7508" relation="include">
        </childnode>
        <childnode refid="7520" relation="include">
        </childnode>
        <childnode refid="7521" relation="include">
        </childnode>
        <childnode refid="7522" relation="include">
        </childnode>
        <childnode refid="7497" relation="include">
        </childnode>
        <childnode refid="7493" relation="include">
        </childnode>
        <childnode refid="7523" relation="include">
        </childnode>
      </node>
      <node id="7491">
        <label>lbann_config.hpp</label>
      </node>
      <node id="7530">
        <label>set</label>
      </node>
      <node id="7528">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7482" relation="include">
        </childnode>
        <childnode refid="7496" relation="include">
        </childnode>
        <childnode refid="7529" relation="include">
        </childnode>
        <childnode refid="7516" relation="include">
        </childnode>
        <childnode refid="7508" relation="include">
        </childnode>
        <childnode refid="7531" relation="include">
        </childnode>
        <childnode refid="7533" relation="include">
        </childnode>
        <childnode refid="7506" relation="include">
        </childnode>
        <childnode refid="7498" relation="include">
        </childnode>
        <childnode refid="7509" relation="include">
        </childnode>
        <childnode refid="7493" relation="include">
        </childnode>
        <childnode refid="7497" relation="include">
        </childnode>
        <childnode refid="7534" relation="include">
        </childnode>
      </node>
      <node id="7499">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="7522">
        <label>algorithm</label>
      </node>
      <node id="7486">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="7487" relation="include">
        </childnode>
        <childnode refid="7488" relation="include">
        </childnode>
        <childnode refid="7489" relation="include">
        </childnode>
        <childnode refid="7490" relation="include">
        </childnode>
      </node>
      <node id="7485">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="7484" relation="include">
        </childnode>
      </node>
      <node id="7539">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="7538" relation="include">
        </childnode>
      </node>
      <node id="7495">
        <label>typeindex</label>
      </node>
      <node id="7489">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7592">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/mean_absolute_deviation.cpp</label>
        <link refid="objective__functions_2loss__functions_2mean__absolute__deviation_8cpp"/>
      </node>
      <node id="7557">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="7558" relation="include">
        </childnode>
        <childnode refid="7559" relation="include">
        </childnode>
        <childnode refid="7560" relation="include">
        </childnode>
        <childnode refid="7561" relation="include">
        </childnode>
        <childnode refid="7562" relation="include">
        </childnode>
        <childnode refid="7563" relation="include">
        </childnode>
        <childnode refid="7564" relation="include">
        </childnode>
        <childnode refid="7565" relation="include">
        </childnode>
        <childnode refid="7555" relation="include">
        </childnode>
      </node>
      <node id="7541">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_io.cpp</label>
        <link refid="callback__io_8cpp"/>
      </node>
      <node id="7548">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_variable_minibatch.cpp</label>
        <link refid="callback__variable__minibatch_8cpp"/>
      </node>
      <node id="7590">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/geom_negloglike.cpp</label>
        <link refid="geom__negloglike_8cpp"/>
      </node>
      <node id="7591">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp</label>
        <link refid="objective__functions_2loss__functions_2mean__absolute__deviation_8hpp"/>
        <childnode refid="7592" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7546">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_dump_minibatch_sample_indices.cpp</label>
        <link refid="callback__dump__minibatch__sample__indices_8cpp"/>
      </node>
      <node id="7600">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/polya_negloglike.cpp</label>
        <link refid="polya__negloglike_8cpp"/>
      </node>
      <node id="7581">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/loss_function.hpp</label>
        <link refid="loss__function_8hpp"/>
        <childnode refid="7574" relation="include">
        </childnode>
        <childnode refid="7582" relation="include">
        </childnode>
        <childnode refid="7583" relation="include">
        </childnode>
        <childnode refid="7585" relation="include">
        </childnode>
        <childnode refid="7587" relation="include">
        </childnode>
        <childnode refid="7589" relation="include">
        </childnode>
        <childnode refid="7591" relation="include">
        </childnode>
        <childnode refid="7593" relation="include">
        </childnode>
        <childnode refid="7595" relation="include">
        </childnode>
        <childnode refid="7597" relation="include">
        </childnode>
        <childnode refid="7599" relation="include">
        </childnode>
      </node>
      <node id="7562">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/model_factory.cpp</label>
        <link refid="model__factory_8cpp"/>
      </node>
      <node id="7586">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/cross_entropy.cpp</label>
        <link refid="cross__entropy_8cpp"/>
      </node>
      <node id="7572">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/metrics/pearson_correlation.cpp</label>
        <link refid="pearson__correlation_8cpp"/>
      </node>
      <node id="7554">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="7555">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="7552" relation="include">
        </childnode>
        <childnode refid="7556" relation="include">
        </childnode>
        <childnode refid="7557" relation="include">
        </childnode>
        <childnode refid="7566" relation="include">
        </childnode>
      </node>
      <node id="7578">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_dump_activations.cpp</label>
        <link refid="callback__dump__activations_8cpp"/>
      </node>
      <node id="7544">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp</label>
        <link refid="input__layer_8hpp"/>
        <childnode refid="7545" relation="include">
        </childnode>
        <childnode refid="7546" relation="include">
        </childnode>
        <childnode refid="7547" relation="include">
        </childnode>
        <childnode refid="7548" relation="include">
        </childnode>
        <childnode refid="7549" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7583">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp</label>
        <link refid="binary__cross__entropy_8hpp"/>
        <childnode refid="7584" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7553">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="7554" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7599">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp</label>
        <link refid="polya__negloglike_8hpp"/>
        <childnode refid="7600" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7543">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp</label>
        <link refid="recurrent_8cpp"/>
      </node>
      <node id="7559">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp</label>
        <link refid="layer__factory_8cpp"/>
      </node>
      <node id="7576">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_checknan.cpp</label>
        <link refid="callback__checknan_8cpp"/>
      </node>
      <node id="7556">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/utils/protobuf_utils.cpp</label>
        <link refid="protobuf__utils_8cpp"/>
      </node>
      <node id="7587">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp</label>
        <link refid="cross__entropy__with__uncertainty_8hpp"/>
        <childnode refid="7588" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7575">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/target/target_layer.hpp</label>
        <link refid="target__layer_8hpp"/>
        <childnode refid="7576" relation="include">
        </childnode>
        <childnode refid="7577" relation="include">
        </childnode>
        <childnode refid="7578" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
        <childnode refid="7579" relation="include">
        </childnode>
      </node>
      <node id="7567">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/init_image_data_readers.cpp</label>
        <link refid="init__image__data__readers_8cpp"/>
      </node>
      <node id="7580">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/kl_divergence.cpp</label>
        <link refid="kl__divergence_8cpp"/>
      </node>
      <node id="7571">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/metrics/metric.cpp</label>
        <link refid="metric_8cpp"/>
      </node>
      <node id="7573">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/target/reconstruction.hpp</label>
        <link refid="reconstruction_8hpp"/>
        <childnode refid="7574" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7563">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/objective_function_factory.cpp</label>
        <link refid="objective__function__factory_8cpp"/>
      </node>
      <node id="7584">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/binary_cross_entropy.cpp</label>
        <link refid="binary__cross__entropy_8cpp"/>
      </node>
      <node id="7574">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp</label>
        <link refid="greedy__layerwise__autoencoder_8cpp"/>
      </node>
      <node id="7598">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/poisson_negloglike.cpp</label>
        <link refid="poisson__negloglike_8cpp"/>
      </node>
      <node id="7552">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp</label>
        <link refid="proto__common_8cpp"/>
      </node>
      <node id="7561">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/metric_factory.cpp</label>
        <link refid="metric__factory_8cpp"/>
      </node>
      <node id="7551">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="7552" relation="include">
        </childnode>
        <childnode refid="7553" relation="include">
        </childnode>
        <childnode refid="7555" relation="include">
        </childnode>
        <childnode refid="7568" relation="include">
        </childnode>
      </node>
      <node id="7595">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_squared_error.hpp</label>
        <link refid="objective__functions_2loss__functions_2mean__squared__error_8hpp"/>
        <childnode refid="7596" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7545">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_check_dataset.cpp</label>
        <link refid="callback__check__dataset_8cpp"/>
      </node>
      <node id="7597">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/poisson_negloglike.hpp</label>
        <link refid="poisson__negloglike_8hpp"/>
        <childnode refid="7598" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7566">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/init_image_data_readers.hpp</label>
        <link refid="init__image__data__readers_8hpp"/>
        <childnode refid="7567" relation="include">
        </childnode>
        <childnode refid="7552" relation="include">
        </childnode>
      </node>
      <node id="7582">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/loss_function.cpp</label>
        <link refid="loss__function_8cpp"/>
      </node>
      <node id="7577">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_checksmall.cpp</label>
        <link refid="callback__checksmall_8cpp"/>
      </node>
      <node id="7588">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/cross_entropy_with_uncertainty.cpp</label>
        <link refid="cross__entropy__with__uncertainty_8cpp"/>
      </node>
      <node id="7540">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="7541" relation="include">
        </childnode>
        <childnode refid="7542" relation="include">
        </childnode>
        <childnode refid="7543" relation="include">
        </childnode>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7569" relation="include">
        </childnode>
      </node>
      <node id="7594">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/mean_absolute_error.cpp</label>
        <link refid="mean__absolute__error_8cpp"/>
      </node>
      <node id="7570">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/metrics/categorical_accuracy.cpp</label>
        <link refid="categorical__accuracy_8cpp"/>
      </node>
      <node id="7564">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/optimizer_factory.cpp</label>
        <link refid="optimizer__factory_8cpp"/>
      </node>
      <node id="7550">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_debug_io.cpp</label>
        <link refid="callback__debug__io_8cpp"/>
      </node>
      <node id="7585">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy.hpp</label>
        <link refid="cross__entropy_8hpp"/>
        <childnode refid="7586" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7565">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/weights_factory.cpp</label>
        <link refid="weights__factory_8cpp"/>
      </node>
      <node id="7542">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp</label>
        <link refid="model_8cpp"/>
      </node>
      <node id="7593">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_error.hpp</label>
        <link refid="mean__absolute__error_8hpp"/>
        <childnode refid="7594" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7558">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp</label>
        <link refid="callback__factory_8cpp"/>
      </node>
      <node id="7568">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/protobuf_utils.hpp</label>
        <link refid="protobuf__utils_8hpp"/>
        <childnode refid="7556" relation="include">
        </childnode>
      </node>
      <node id="7549">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug_io.hpp</label>
        <link refid="callback__debug__io_8hpp"/>
        <childnode refid="7550" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7560">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_graph_factory.cpp</label>
        <link refid="layer__graph__factory_8cpp"/>
      </node>
      <node id="7569">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/target/generic_target_layer.hpp</label>
        <link refid="generic__target__layer_8hpp"/>
        <childnode refid="7541" relation="include">
        </childnode>
        <childnode refid="7570" relation="include">
        </childnode>
        <childnode refid="7571" relation="include">
        </childnode>
        <childnode refid="7572" relation="include">
        </childnode>
        <childnode refid="7543" relation="include">
        </childnode>
        <childnode refid="7573" relation="include">
        </childnode>
        <childnode refid="7575" relation="include">
        </childnode>
        <childnode refid="7581" relation="include">
        </childnode>
      </node>
      <node id="7579">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/kl_divergence.hpp</label>
        <link refid="kl__divergence_8hpp"/>
        <childnode refid="7580" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7547">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_print.cpp</label>
        <link refid="callback__print_8cpp"/>
      </node>
      <node id="7589">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/geom_negloglike.hpp</label>
        <link refid="geom__negloglike_8hpp"/>
        <childnode refid="7590" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7596">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/mean_squared_error.cpp</label>
        <link refid="objective__functions_2loss__functions_2mean__squared__error_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlbann_1_1generic__input__layer" prot="public">lbann::generic_input_layer</innerclass>
    <innerclass refid="structlbann_1_1generic__input__layer_1_1dataset__header" prot="public">lbann::generic_input_layer::dataset_header</innerclass>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LBANN_LAYERS_GENERIC_INPUT_LAYER_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LBANN_LAYERS_GENERIC_INPUT_LAYER_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="io__layer_8hpp" kindref="compound">lbann/layers/io/io_layer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;lbann/utils/dataset.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="generic__io__buffer_8hpp" kindref="compound">lbann/io/data_buffers/generic_io_buffer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="partitioned__io__buffer_8hpp" kindref="compound">lbann/io/data_buffers/partitioned_io_buffer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="distributed__io__buffer_8hpp" kindref="compound">lbann/io/data_buffers/distributed_io_buffer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="model_8hpp" kindref="compound">lbann/models/model.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callback__imcomm_8hpp" kindref="compound">lbann/callbacks/callback_imcomm.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="39" refid="classlbann_1_1generic__input__layer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1generic__input__layer" kindref="compound">generic_input_layer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1io__layer" kindref="compound">io_layer</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41" refid="classlbann_1_1generic__input__layer_1a6c3b901ea25ff3bba052cb3e14df4f83" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a6c3b901ea25ff3bba052cb3e14df4f83" kindref="member">data_reader_map_t</ref><sp/>=<sp/>std::map&lt;execution_mode,<sp/>generic_data_reader<sp/>*&gt;;</highlight></codeline>
<codeline lineno="42" refid="classlbann_1_1generic__input__layer_1a9dfe8b9afaebc7a5bcb0177ee2ab428f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__io__buffer" kindref="compound">generic_io_buffer</ref><sp/>*<ref refid="classlbann_1_1generic__input__layer_1a9dfe8b9afaebc7a5bcb0177ee2ab428f" kindref="member">io_buffer</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="classlbann_1_1generic__input__layer_1a0c7ce1625cd2be2368822c2662346538" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a0c7ce1625cd2be2368822c2662346538" kindref="member">generic_input_layer</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_parallel_readers,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;execution_mode,<sp/>generic_data_reader<sp/>*&gt;<sp/>data_readers,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>data_set_spans_models<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>for_regression<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classlbann_1_1io__layer" kindref="compound">io_layer</ref>(comm,<sp/>data_set_spans_models,<sp/>for_regression),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>io_buffer(nullptr),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>(),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>(),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" kindref="member">m_validation_dataset</ref>(),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>(data_readers)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_data_sets_span_models(data_sets_span_models)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>layers<sp/>have<sp/>no<sp/>parents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer_1a841b96b25555247f52921c7f13ae1dfa" kindref="member">m_expected_num_parent_layers</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>]<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>.<ref refid="classlbann_1_1dataset_1ab951c879f151990613567e985fe1e278" kindref="member">total_samples</ref>()<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>]-&gt;get_num_data();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>]<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" kindref="member">m_validation_dataset</ref>.<ref refid="classlbann_1_1dataset_1ab951c879f151990613567e985fe1e278" kindref="member">total_samples</ref>()<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>]-&gt;get_num_data();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>]<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>.<ref refid="classlbann_1_1dataset_1ab951c879f151990613567e985fe1e278" kindref="member">total_samples</ref>()<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>]-&gt;get_num_data();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classlbann_1_1generic__input__layer_1a09575a4120064a6882883b3a0ee11b7e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a09575a4120064a6882883b3a0ee11b7e" kindref="member">~generic_input_layer</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(io_buffer<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a9dfe8b9afaebc7a5bcb0177ee2ab428f" kindref="member">io_buffer</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>layer<sp/>always<sp/>frees<sp/>data<sp/>readers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dr<sp/>:<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>dr.second;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>layers<sp/>copy<sp/>their<sp/>datareaders.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classlbann_1_1generic__input__layer_1a5447106074487e60d69add9cab511319" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a5447106074487e60d69add9cab511319" kindref="member">generic_input_layer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer" kindref="compound">generic_input_layer</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classlbann_1_1io__layer" kindref="compound">io_layer</ref>(other),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>io_buffer(other.io_buffer),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>(other.<ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>(other.<ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" kindref="member">m_validation_dataset</ref>(other.<ref refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" kindref="member">m_validation_dataset</ref>),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>(other.<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dr<sp/>:<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dr.second<sp/>=<sp/>dr.second-&gt;copy();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classlbann_1_1generic__input__layer_1a76d36777d01144cafe7b33ab5ce739d2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__input__layer" kindref="compound">generic_input_layer</ref>&amp;<sp/><ref refid="classlbann_1_1generic__input__layer_1a76d36777d01144cafe7b33ab5ce739d2" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer" kindref="compound">generic_input_layer</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" kindref="member">io_layer::operator=</ref>(other);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>io_buffer<sp/>=<sp/>other.<ref refid="classlbann_1_1generic__input__layer_1a9dfe8b9afaebc7a5bcb0177ee2ab428f" kindref="member">io_buffer</ref>-&gt;<ref refid="classlbann_1_1generic__io__buffer_1a9d8020b82cf467c9148b0b37e7229262" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dr<sp/>:<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dr.second<sp/>=<sp/>dr.second-&gt;<ref refid="classlbann_1_1generic__io__buffer_1a9d8020b82cf467c9148b0b37e7229262" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T_io_buffer&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1ab4fa07865c28a35d39ff736075085aba" kindref="member">initialize_io_buffer</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_parallel_readers,<sp/>std::map&lt;execution_mode,<sp/>generic_data_reader<sp/>*&gt;<sp/>data_readers);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classlbann_1_1generic__input__layer_1a5392ea11b5eb98a8040bf5b5deed836a" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1generic__input__layer_1a5392ea11b5eb98a8040bf5b5deed836a" kindref="member">get_type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;generic_input&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classlbann_1_1generic__input__layer_1a8ffe91a3d5b6f37d2dc17e657898dcc8" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1generic__input__layer_1a8ffe91a3d5b6f37d2dc17e657898dcc8" kindref="member">get_description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a36d9962105ca89889e3f38f1c1801560" kindref="member">get_topo_description</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string<sp/>{}<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>input_layer<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>io_buffer-&gt;<ref refid="classlbann_1_1generic__io__buffer_1adc77c0a280f8a200a8d8495c3a371ebb" kindref="member">get_type</ref>()</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>dataLayout:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1ae3f4a5602df821f4221614b1e3782dc1" kindref="member">get_data_layout_string</ref>(<ref refid="classlbann_1_1Layer_1a5dfb66e81fc085997402a5e2241316bd" kindref="member">get_data_layout</ref>())</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>+<sp/>s<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//data_layout<sp/>get_data_layout()<sp/>const<sp/>override<sp/>{<sp/>return<sp/>T_layout;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::string<sp/>get_description()<sp/>const<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::stringstream<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>(size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;m_neuron_dims.size();<sp/>i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>this-&gt;m_neuron_dims[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>i<sp/>!=<sp/>this-&gt;m_neuron_dims.size()-1)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>&quot;<sp/>x<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>s.str();;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classlbann_1_1generic__input__layer_1ad117da4e6155159439826bba6657cf05" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1ad117da4e6155159439826bba6657cf05" kindref="member">setup_dims</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" kindref="member">io_layer::setup_dims</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" kindref="member">m_neuron_dims</ref><sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6008b13521d27d6139201fa374b088eb" kindref="member">get_data_dims</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" kindref="member">m_num_neuron_dims</ref><sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" kindref="member">m_neuron_dims</ref>.size();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" kindref="member">m_num_neurons</ref><sp/>=<sp/>std::accumulate(this-&gt;<ref refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" kindref="member">m_neuron_dims</ref>.begin(),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" kindref="member">m_neuron_dims</ref>.end(),</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::multiplies&lt;int&gt;());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classlbann_1_1generic__input__layer_1a8ca316b0369689949f3f4106920ec28f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a8ca316b0369689949f3f4106920ec28f" kindref="member">setup_data</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" kindref="member">io_layer::setup_data</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>that<sp/>target_layer<sp/>gets<sp/>initialized<sp/>beforehand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>]<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>]-&gt;setup();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>]-&gt;set_rank(<ref refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" kindref="member">Layer::m_comm</ref>-&gt;get_rank_in_model());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>]<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>]-&gt;setup();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>]-&gt;set_rank(<ref refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" kindref="member">Layer::m_comm</ref>-&gt;get_rank_in_model());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>]<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>]-&gt;setup();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>]-&gt;set_rank(<ref refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" kindref="member">Layer::m_comm</ref>-&gt;get_rank_in_model());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_mb_size<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1a8c311798ff4acaeafdfbf85162ba5084" kindref="member">get_max_mini_batch_size</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlbann_1_1io__layer_1a05c9d6e6cb12e8eb345ac6f5cb95644b" kindref="member">io_layer::m_data_set_spans_models</ref>)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1af108a5dc05276bc6bc57b306204b12e4" kindref="member">calculate_num_iterations_per_epoch_training_spans_models</ref>(max_mb_size);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a0f09422a09e76da77ac42b3037173041" kindref="member">calculate_num_iterations_per_epoch_training_unique_per_models</ref>(max_mb_size);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>io_buffer-&gt;<ref refid="classlbann_1_1generic__io__buffer_1a00f3920147f7f19eceb5336bd6ddb421" kindref="member">setup_data</ref>(this-&gt;<ref refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" kindref="member">m_num_neurons</ref>,<sp/>max_mb_size);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classlbann_1_1generic__input__layer_1ad0b8ea79bc508bd227e08124359531c8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1ad0b8ea79bc508bd227e08124359531c8" kindref="member">fp_setup_data</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mini_batch_size)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>model<sp/>mini-batch<sp/>size<sp/>and<sp/>effective<sp/>mini-batch<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>If<sp/>inter-model<sp/>communication<sp/>is<sp/>activated,<sp/>the<sp/>effective</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mini-batch<sp/>is<sp/>equal<sp/>to<sp/>the<sp/>global<sp/>mini-batch<sp/>size.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>mini_batch_size<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a41d278999fbd10d2cd95b9af04925cf7" kindref="member">get_current_mini_batch_size</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>effective_mini_batch_size<sp/>=<sp/>mini_batch_size;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>cb<sp/>:<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1a38c71a455870e087c4c07acb78e4477c" kindref="member">get_callbacks</ref>())<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dynamic_cast&lt;lbann_callback_imcomm*&gt;(cb)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>effective_mini_batch_size<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aaaa60fb7b94353fccaff25e6a862d833" kindref="member">get_current_global_mini_batch_size</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>mini-batch<sp/>size<sp/>in<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1a4f3cc91f8495870723389be15f77184a" kindref="member">set_current_mini_batch_size</ref>(mini_batch_size);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1aa64829cba8a84928a396893172a1d116" kindref="member">set_effective_mini_batch_size</ref>(effective_mini_batch_size);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" kindref="member">io_layer::fp_setup_data</ref>(mini_batch_size);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Once<sp/>the<sp/>current<sp/>mini-batch<sp/>size<sp/>is<sp/>defined,<sp/>set<sp/>the<sp/>standard<sp/>view<sp/>for<sp/>activations<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>io_buffer-&gt;<ref refid="classlbann_1_1generic__io__buffer_1af84c26ab5ee77d1d9ed9ea5d62823815" kindref="member">set_local_matrix_bypass</ref>(&amp;<ref refid="classlbann_1_1Layer_1a4248f27acebf72b7b7b3ee39c8bcb62a" kindref="member">get_local_activations</ref>());</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>io_buffer-&gt;<ref refid="classlbann_1_1generic__io__buffer_1a458d9bf722effce4177a0ac0aee9124f" kindref="member">set_std_matrix_view</ref>(mini_batch_size);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="classlbann_1_1generic__input__layer_1ae74c8c5a7e14b4fdd4902554bbc7bcef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1ae74c8c5a7e14b4fdd4902554bbc7bcef" kindref="member">fp_compute</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples_in_batch<sp/>=<sp/>io_buffer-&gt;<ref refid="classlbann_1_1generic__io__buffer_1af9fc2100d41328fe399acf7bced950d7" kindref="member">fetch_to_local_matrix</ref>(<ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(),<sp/>mode);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dynamic_cast&lt;partitioned_io_buffer*&gt;(io_buffer)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>predetermined<sp/>size<sp/>of<sp/>the<sp/>mini-batch<sp/>to<sp/>set<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>batch<sp/>size<sp/>for<sp/>the<sp/>neural<sp/>network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_samples_in_batch<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a41d278999fbd10d2cd95b9af04925cf7" kindref="member">get_current_mini_batch_size</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a0c2f123432ec6af168012cc8699a1d3f" kindref="member">update_num_samples_processed</ref>(num_samples_in_batch);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dynamic_cast&lt;distributed_io_buffer*&gt;(io_buffer)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((<ref refid="classlbann_1_1distributed__io__buffer" kindref="compound">distributed_io_buffer</ref>*)<sp/>io_buffer)-&gt;is_current_root(mode))<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a0c2f123432ec6af168012cc8699a1d3f" kindref="member">update_num_samples_processed</ref>(num_samples_in_batch);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected_num_samples_in_batch<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" kindref="member">get_current_mini_batch_size</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_samples_in_batch<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" kindref="member">Layer::m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a929f44a9a9563ae9e4ffe7d44235a195" kindref="member">model_broadcast</ref>(((<ref refid="classlbann_1_1distributed__io__buffer" kindref="compound">distributed_io_buffer</ref>*)<sp/>io_buffer)-&gt;current_root_rank(mode),<sp/>num_samples_in_batch);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1a4f3cc91f8495870723389be15f77184a" kindref="member">set_current_mini_batch_size</ref>(num_samples_in_batch</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="classlbann_1_1generic__input__layer_1a8c3bf45beb91622d56f0dec89cba8e9a" kindref="member">get_current_world_master_mini_batch_adjustment</ref>(<ref refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" kindref="member">get_model_rank</ref>()));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>io_buffer-&gt;<ref refid="classlbann_1_1distributed__io__buffer_1a3a770ec2314313761d6f0eccdb9dc09b" kindref="member">distribute_from_local_matrix</ref>(<ref refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" kindref="member">get_activations</ref>(),<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(),<sp/>mode);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(num_samples_in_batch<sp/>!=</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(expected_num_samples_in_batch<sp/>-<sp/><ref refid="classlbann_1_1generic__input__layer_1a8c3bf45beb91622d56f0dec89cba8e9a" kindref="member">get_current_world_master_mini_batch_adjustment</ref>(<ref refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" kindref="member">get_model_rank</ref>())))<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;I/O<sp/>layers<sp/>number<sp/>of<sp/>samples<sp/>processed<sp/>(&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>num_samples_in_batch</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;)<sp/>does<sp/>not<sp/>match<sp/>the<sp/>mini-batch<sp/>size<sp/>(&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(expected_num_samples_in_batch<sp/>-</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a8c3bf45beb91622d56f0dec89cba8e9a" kindref="member">get_current_world_master_mini_batch_adjustment</ref>(<ref refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" kindref="member">get_model_rank</ref>()))</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>fp_compute<sp/>for<sp/>I/O<sp/>layers<sp/>:<sp/>encoutered<sp/>generic_io_buffer<sp/>type&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="classlbann_1_1generic__input__layer_1a36787a3caf2ef236747c6150edad82ea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a36787a3caf2ef236747c6150edad82ea" kindref="member">bp_compute</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="classlbann_1_1generic__input__layer_1aaf9ac19f7dd725230bde87d859ec0f35" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1aaf9ac19f7dd725230bde87d859ec0f35" kindref="member">update_compute</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>io_buffer-&gt;<ref refid="classlbann_1_1generic__io__buffer_1a9a038d40aec50dbc24c0abe21ad0c0a9" kindref="member">is_data_set_processed</ref>(<ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(),<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>());</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>functions<sp/>to<sp/>access<sp/>the<sp/>data<sp/>readers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="classlbann_1_1generic__input__layer_1a5715a966647e8cc92489f9e1950b2d28" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*<ref refid="classlbann_1_1generic__input__layer_1a5715a966647e8cc92489f9e1950b2d28" kindref="member">get_data_reader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(mode);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>data_reader<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mode)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>generic<sp/>data<sp/>distribution:<sp/>invalid<sp/>execution<sp/>phase&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_reader;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*<ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="classlbann_1_1generic__input__layer_1a8a85d3e1bdd31082ca22535939596acb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a8a85d3e1bdd31082ca22535939596acb" kindref="member">get_num_parallel_readers</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(mode);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data_reader<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1ad15887cc31657d03925835aab0d4b675" kindref="member">get_num_parallel_readers</ref>()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classlbann_1_1generic__input__layer_1a5ed2e13553574ba9ff54565ebc049982" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a5ed2e13553574ba9ff54565ebc049982" kindref="member">get_num_parallel_readers</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a5ed2e13553574ba9ff54565ebc049982" kindref="member">get_num_parallel_readers</ref>(this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>());</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="classlbann_1_1generic__input__layer_1aa0fa6597ffce537f7cfba29dcc754ee1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1aa0fa6597ffce537f7cfba29dcc754ee1" kindref="member">get_num_iterations_per_epoch</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(mode);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data_reader<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a06fb58d1c0b84b8c76f5b4d160751f34" kindref="member">get_num_iterations_per_epoch</ref>()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="classlbann_1_1generic__input__layer_1a82bd22c834c5ef526e0c740c80451e1b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a82bd22c834c5ef526e0c740c80451e1b" kindref="member">get_num_iterations_per_epoch</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a82bd22c834c5ef526e0c740c80451e1b" kindref="member">get_num_iterations_per_epoch</ref>(this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>());</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="classlbann_1_1generic__input__layer_1abad654f945f62d4610f8afa597777713" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1abad654f945f62d4610f8afa597777713" kindref="member">get_current_step_in_epoch</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(mode);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data_reader<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a7c884d3646396a05d9e01e3b7a260419" kindref="member">get_current_step_in_epoch</ref>()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="classlbann_1_1generic__input__layer_1a660d82888a5c1eb72c2906d6367cbc35" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a660d82888a5c1eb72c2906d6367cbc35" kindref="member">get_current_step_in_epoch</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a660d82888a5c1eb72c2906d6367cbc35" kindref="member">get_current_step_in_epoch</ref>(this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>());</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="classlbann_1_1generic__input__layer_1a8af40ec1991900bf23b78e6429256b9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a8af40ec1991900bf23b78e6429256b9c" kindref="member">get_mini_batch_size</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(mode);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data_reader<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1af85a5ea421ba6ef7558cdf4bba36fdf0" kindref="member">get_mini_batch_size</ref>()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classlbann_1_1generic__input__layer_1a5e3c66c5726ab4a00d75bdcd2c07b640" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a5e3c66c5726ab4a00d75bdcd2c07b640" kindref="member">get_last_mini_batch_size</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(mode);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data_reader<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a79cb3bee4e0d19006ef9213763dc8af2" kindref="member">get_last_mini_batch_size</ref>()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="classlbann_1_1generic__input__layer_1aebca4bd6660ee5b7f99129bd84ed4f8d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1aebca4bd6660ee5b7f99129bd84ed4f8d" kindref="member">get_last_mini_batch_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1aebca4bd6660ee5b7f99129bd84ed4f8d" kindref="member">get_last_mini_batch_size</ref>(this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>());</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="classlbann_1_1generic__input__layer_1aad7e5f1c51037a175c6bc9abaccdc7d6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1aad7e5f1c51037a175c6bc9abaccdc7d6" kindref="member">get_current_mini_batch_size</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(mode);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data_reader<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1aec4624f295e1e3c6c5053838624441a5" kindref="member">get_current_mini_batch_size</ref>()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="classlbann_1_1generic__input__layer_1a41d278999fbd10d2cd95b9af04925cf7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a41d278999fbd10d2cd95b9af04925cf7" kindref="member">get_current_mini_batch_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a41d278999fbd10d2cd95b9af04925cf7" kindref="member">get_current_mini_batch_size</ref>(this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>());</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="classlbann_1_1generic__input__layer_1ac07b58c08183995852889dacfc69e459" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1ac07b58c08183995852889dacfc69e459" kindref="member">get_global_mini_batch_size</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(mode);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data_reader<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1aaa4110d53f59a127326e63ca4110b56b" kindref="member">get_global_mini_batch_size</ref>()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="classlbann_1_1generic__input__layer_1a7ccb2e0dd8a9d9ab60e1e9d04bb80f2d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a7ccb2e0dd8a9d9ab60e1e9d04bb80f2d" kindref="member">get_global_last_mini_batch_size</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(mode);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data_reader<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a96bb5c116c1a23822f6662b866df4a17" kindref="member">get_global_last_mini_batch_size</ref>()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="classlbann_1_1generic__input__layer_1ae8252d343e2f287dd7cece935ea5a075" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1ae8252d343e2f287dd7cece935ea5a075" kindref="member">get_current_global_mini_batch_size</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(mode);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data_reader<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a3f7114448c6b43a5aac30c002e4bade3" kindref="member">get_current_global_mini_batch_size</ref>()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="classlbann_1_1generic__input__layer_1aaaa60fb7b94353fccaff25e6a862d833" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1aaaa60fb7b94353fccaff25e6a862d833" kindref="member">get_current_global_mini_batch_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1aaaa60fb7b94353fccaff25e6a862d833" kindref="member">get_current_global_mini_batch_size</ref>(this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>());</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="classlbann_1_1generic__input__layer_1a1c2a503d4009b6360d96db128796983c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a1c2a503d4009b6360d96db128796983c" kindref="member">get_world_master_mini_batch_adjustment</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(mode);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data_reader<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a0d0f7d684970b5cc59c63050555df302" kindref="member">get_world_master_mini_batch_adjustment</ref>()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="classlbann_1_1generic__input__layer_1a111abcde5f53746dfd6c5fe18187ee57" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a111abcde5f53746dfd6c5fe18187ee57" kindref="member">get_world_master_mini_batch_adjustment</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a111abcde5f53746dfd6c5fe18187ee57" kindref="member">get_world_master_mini_batch_adjustment</ref>(this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>());</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="classlbann_1_1generic__input__layer_1a8c3bf45beb91622d56f0dec89cba8e9a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a8c3bf45beb91622d56f0dec89cba8e9a" kindref="member">get_current_world_master_mini_batch_adjustment</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>model_rank)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(mode);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data_reader<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1af80711baa226f8bc370e8e276c49f3c1" kindref="member">get_current_world_master_mini_batch_adjustment</ref>(model_rank)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="classlbann_1_1generic__input__layer_1a6c14ea2a50c7e7989e8e394671e4531a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a6c14ea2a50c7e7989e8e394671e4531a" kindref="member">get_current_world_master_mini_batch_adjustment</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>model_rank)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a8c3bf45beb91622d56f0dec89cba8e9a" kindref="member">get_current_world_master_mini_batch_adjustment</ref>(this-&gt;<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>(),<sp/>model_rank);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="classlbann_1_1generic__input__layer_1af108a5dc05276bc6bc57b306204b12e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1af108a5dc05276bc6bc57b306204b12e4" kindref="member">calculate_num_iterations_per_epoch_training_spans_models</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mini_batch_size)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>io_buffer-&gt;<ref refid="classlbann_1_1generic__io__buffer_1ac943184cf364f7922648e3acb760b41e" kindref="member">calculate_num_iterations_per_epoch_spanning_models</ref>(mini_batch_size,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>io_buffer-&gt;<ref refid="classlbann_1_1generic__io__buffer_1a4c71135fada7f0da0b315d538d327e59" kindref="member">calculate_num_iterations_per_epoch_single_model</ref>(mini_batch_size,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>io_buffer-&gt;<ref refid="classlbann_1_1generic__io__buffer_1a4c71135fada7f0da0b315d538d327e59" kindref="member">calculate_num_iterations_per_epoch_single_model</ref>(mini_batch_size,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="classlbann_1_1generic__input__layer_1a0f09422a09e76da77ac42b3037173041" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a0f09422a09e76da77ac42b3037173041" kindref="member">calculate_num_iterations_per_epoch_training_unique_per_models</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mini_batch_size)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>io_buffer-&gt;<ref refid="classlbann_1_1generic__io__buffer_1a4c71135fada7f0da0b315d538d327e59" kindref="member">calculate_num_iterations_per_epoch_single_model</ref>(mini_batch_size,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>io_buffer-&gt;<ref refid="classlbann_1_1generic__io__buffer_1a4c71135fada7f0da0b315d538d327e59" kindref="member">calculate_num_iterations_per_epoch_single_model</ref>(mini_batch_size,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>io_buffer-&gt;<ref refid="classlbann_1_1generic__io__buffer_1a4c71135fada7f0da0b315d538d327e59" kindref="member">calculate_num_iterations_per_epoch_single_model</ref>(mini_batch_size,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>functions<sp/>to<sp/>access<sp/>the<sp/>dataset<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="classlbann_1_1generic__input__layer_1af5699540797c22d8846028e578a6fc59" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref>&amp;<sp/><ref refid="classlbann_1_1generic__input__layer_1af5699540797c22d8846028e578a6fc59" kindref="member">get_dataset</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>m)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(m)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>:</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" kindref="member">m_validation_dataset</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;get_dataset:<sp/>invalid<sp/>execution<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="classlbann_1_1generic__input__layer_1a909cf972d13a305a16daba9664180262" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref>&amp;<sp/><ref refid="classlbann_1_1generic__input__layer_1a909cf972d13a305a16daba9664180262" kindref="member">get_dataset</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>m)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(m)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>:</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" kindref="member">m_validation_dataset</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;get_dataset:<sp/>invalid<sp/>execution<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="classlbann_1_1generic__input__layer_1a654365ee97a64c75a547cfb7ef329304" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref>&amp;<sp/><ref refid="classlbann_1_1generic__input__layer_1a654365ee97a64c75a547cfb7ef329304" kindref="member">select_dataset</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1af5699540797c22d8846028e578a6fc59" kindref="member">get_dataset</ref>(<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>());<sp/>}</highlight></codeline>
<codeline lineno="439" refid="classlbann_1_1generic__input__layer_1ab8468d077867b03098bbc71a38edaa15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref>&amp;<sp/><ref refid="classlbann_1_1generic__input__layer_1ab8468d077867b03098bbc71a38edaa15" kindref="member">select_dataset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1af5699540797c22d8846028e578a6fc59" kindref="member">get_dataset</ref>(<ref refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>());<sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="classlbann_1_1generic__input__layer_1a777aa11816a518098212408b569b6fb8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref>*<sp/><ref refid="classlbann_1_1generic__input__layer_1a777aa11816a518098212408b569b6fb8" kindref="member">select_first_valid_dataset</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>])<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>])<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" kindref="member">m_validation_dataset</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>])<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="classlbann_1_1generic__input__layer_1a9783805369ec7cfe5ce61c81baa5d2e2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*<ref refid="classlbann_1_1generic__input__layer_1a9783805369ec7cfe5ce61c81baa5d2e2" kindref="member">select_data_reader</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="classlbann_1_1generic__input__layer_1a0c2f123432ec6af168012cc8699a1d3f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a0c2f123432ec6af168012cc8699a1d3f" kindref="member">update_num_samples_processed</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num_samples)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref>&amp;<sp/>ds<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a654365ee97a64c75a547cfb7ef329304" kindref="member">select_dataset</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>ds.<ref refid="classlbann_1_1dataset_1a412b29a50638f7d8feea4ad368c6a4dc" kindref="member">num_samples_processed</ref>()<sp/>+=<sp/>num_samples;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds.<ref refid="classlbann_1_1dataset_1a73496347a477a5ebb0dbf30140295026" kindref="member">get_num_samples_processed</ref>();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="classlbann_1_1generic__input__layer_1a749741781204b17c8ca172a9a405a90e" refkind="member"><highlight class="normal"><sp/><sp/>El::Matrix&lt;El::Int&gt;*<sp/><ref refid="classlbann_1_1generic__input__layer_1a749741781204b17c8ca172a9a405a90e" kindref="member">get_sample_indices_per_mb</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*dr<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dr-&gt;<ref refid="classlbann_1_1generic__data__reader_1a8d8b44ed55e2af49c70d29277ff57a91" kindref="member">get_indices_fetched_per_mb</ref>();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="classlbann_1_1generic__input__layer_1a6008b13521d27d6139201fa374b088eb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/><ref refid="classlbann_1_1generic__input__layer_1a6008b13521d27d6139201fa374b088eb" kindref="member">get_data_dims</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*dr<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" kindref="member">get_data_reader</ref>();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>dataset*<sp/>ds<sp/>=<sp/>select_first_valid_dataset();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dr)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dr-&gt;<ref refid="classlbann_1_1generic__data__reader_1ae06ff27459ac4a5d8ac14655d4b31318" kindref="member">get_data_dims</ref>();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;(1,<sp/>0);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="classlbann_1_1generic__input__layer_1a36d9962105ca89889e3f38f1c1801560" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1generic__input__layer_1a36d9962105ca89889e3f38f1c1801560" kindref="member">get_topo_description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>s;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" kindref="member">m_neuron_dims</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" kindref="member">m_neuron_dims</ref>[i];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>!=<sp/>this-&gt;m_neuron_dims.size()-1)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>x<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.str();;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="classlbann_1_1generic__input__layer_1aca46cbf29ad2762e9329b46ab2ad1ae7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1aca46cbf29ad2762e9329b46ab2ad1ae7" kindref="member">get_linearized_data_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>linearized_data_size<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>data_reader_map_t::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linearized_data_size<sp/>=<sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1aca46cbf29ad2762e9329b46ab2ad1ae7" kindref="member">get_linearized_data_size</ref>();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmp_data_size<sp/>=<sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1aca46cbf29ad2762e9329b46ab2ad1ae7" kindref="member">get_linearized_data_size</ref>();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linearized_data_size<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>linearized_data_size<sp/>!=<sp/>tmp_data_size)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;lbann_io_layer:<sp/>validation<sp/>data<sp/>set<sp/>size<sp/>does<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;match<sp/>the<sp/>currently<sp/>established<sp/>data<sp/>set<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmp_data_size<sp/>=<sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1aca46cbf29ad2762e9329b46ab2ad1ae7" kindref="member">get_linearized_data_size</ref>();</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linearized_data_size<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>linearized_data_size<sp/>!=<sp/>tmp_data_size)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;lbann_io_layer:<sp/>testing<sp/>data<sp/>set<sp/>size<sp/>does<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;match<sp/>the<sp/>currently<sp/>established<sp/>data<sp/>set<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearized_data_size;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="classlbann_1_1generic__input__layer_1ab6c24db7e2b8e73e7d7894e51246dc5e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1ab6c24db7e2b8e73e7d7894e51246dc5e" kindref="member">get_linearized_label_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1io__layer_1a61f2e00334c820235795154492876476" kindref="member">is_for_regression</ref>())<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>linearized_label_size<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>data_reader_map_t::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linearized_label_size<sp/>=<sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1ab6c24db7e2b8e73e7d7894e51246dc5e" kindref="member">get_linearized_label_size</ref>();</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmp_label_size<sp/>=<sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1ab6c24db7e2b8e73e7d7894e51246dc5e" kindref="member">get_linearized_label_size</ref>();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linearized_label_size<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>linearized_label_size<sp/>!=<sp/>tmp_label_size)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;lbann_io_layer:<sp/>validation<sp/>label<sp/>set<sp/>size<sp/>does<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;match<sp/>the<sp/>currently<sp/>established<sp/>data<sp/>set<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmp_label_size<sp/>=<sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1ab6c24db7e2b8e73e7d7894e51246dc5e" kindref="member">get_linearized_label_size</ref>();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linearized_label_size<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>linearized_label_size<sp/>!=<sp/>tmp_label_size)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;lbann_io_layer:<sp/>testing<sp/>label<sp/>set<sp/>size<sp/>does<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;match<sp/>the<sp/>currently<sp/>established<sp/>data<sp/>set<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearized_label_size;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="classlbann_1_1generic__input__layer_1a6e5e587aa5b32bdfd2dd579a2746885d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a6e5e587aa5b32bdfd2dd579a2746885d" kindref="member">get_linearized_response_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1io__layer_1a61f2e00334c820235795154492876476" kindref="member">is_for_regression</ref>())<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>linearized_response_size<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>data_reader_map_t::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linearized_response_size<sp/>=<sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6e5e587aa5b32bdfd2dd579a2746885d" kindref="member">get_linearized_response_size</ref>();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmp_response_size<sp/>=<sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6e5e587aa5b32bdfd2dd579a2746885d" kindref="member">get_linearized_response_size</ref>();</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linearized_response_size<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>linearized_response_size<sp/>!=<sp/>tmp_response_size)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;lbann_io_layer:<sp/>validation<sp/>response<sp/>set<sp/>size<sp/>does<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;match<sp/>the<sp/>currently<sp/>established<sp/>data<sp/>set<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmp_response_size<sp/>=<sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6e5e587aa5b32bdfd2dd579a2746885d" kindref="member">get_linearized_response_size</ref>();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linearized_response_size<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>linearized_response_size<sp/>!=<sp/>tmp_response_size)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;lbann_io_layer:<sp/>testing<sp/>response<sp/>set<sp/>size<sp/>does<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;match<sp/>the<sp/>currently<sp/>established<sp/>data<sp/>set<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearized_response_size;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="classlbann_1_1generic__input__layer_1a95a7a5ad2a6089ffb9197632015e6062" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a95a7a5ad2a6089ffb9197632015e6062" kindref="member">get_num_samples_trained</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>.<ref refid="classlbann_1_1dataset_1a73496347a477a5ebb0dbf30140295026" kindref="member">get_num_samples_processed</ref>();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="603" refid="classlbann_1_1generic__input__layer_1a68b162bcc5fdfe2bb7279eb5d83cf884" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a68b162bcc5fdfe2bb7279eb5d83cf884" kindref="member">get_num_samples_tested</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>.<ref refid="classlbann_1_1dataset_1a73496347a477a5ebb0dbf30140295026" kindref="member">get_num_samples_processed</ref>();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="606" refid="classlbann_1_1generic__input__layer_1a5fc757d16e26739cd10e5eabafa6a32b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a5fc757d16e26739cd10e5eabafa6a32b" kindref="member">get_total_num_training_samples</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>.<ref refid="classlbann_1_1dataset_1ad314847b347d413162a9d9eab759641f" kindref="member">get_total_samples</ref>();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="609" refid="classlbann_1_1generic__input__layer_1ab5b5318cf000fbdaf35a3545335b60b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1ab5b5318cf000fbdaf35a3545335b60b2" kindref="member">get_total_num_testing_samples</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>.<ref refid="classlbann_1_1dataset_1ad314847b347d413162a9d9eab759641f" kindref="member">get_total_samples</ref>();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="classlbann_1_1generic__input__layer_1a8b375ab97f38166872e4aa9baeca0715" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a8b375ab97f38166872e4aa9baeca0715" kindref="member">at_new_epoch</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data_reader_map_t::const_iterator<sp/>it<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second<sp/>&amp;&amp;<sp/>(it-&gt;second)-&gt;at_new_epoch());</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618" refid="classlbann_1_1generic__input__layer_1a31082076a8aad937eef3cadc0b5e1b27" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1a31082076a8aad937eef3cadc0b5e1b27" kindref="member">is_execution_mode_valid</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref>&amp;<sp/>ds<sp/>=<sp/><ref refid="classlbann_1_1generic__input__layer_1af5699540797c22d8846028e578a6fc59" kindref="member">get_dataset</ref>(mode);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ds.<ref refid="classlbann_1_1dataset_1ad314847b347d413162a9d9eab759641f" kindref="member">get_total_samples</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0));</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>state<sp/>of<sp/>IO<sp/>to<sp/>a<sp/>checkpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="classlbann_1_1generic__input__layer_1abae61e13f47205491a43e4842808945d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1abae61e13f47205491a43e4842808945d" kindref="member">save_to_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val_end)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>state<sp/>of<sp/>data<sp/>readers<sp/>from<sp/>input<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>data_reader_map_t::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!val_end){</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/>this-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1abae61e13f47205491a43e4842808945d" kindref="member">save_to_checkpoint_shared</ref>(p,<sp/></highlight><highlight class="stringliteral">&quot;data_reader_training&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/>this-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1abae61e13f47205491a43e4842808945d" kindref="member">save_to_checkpoint_shared</ref>(p,<sp/></highlight><highlight class="stringliteral">&quot;data_reader_testing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="classlbann_1_1persist_1a34eb918a890ab49dcbeedddf27ec1616" kindref="member">get_rank</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aced95e3bc711276b072af97b65ef9fc1" kindref="member">write_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;reader_train_processed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)<sp/><ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>.<ref refid="classlbann_1_1dataset_1a73496347a477a5ebb0dbf30140295026" kindref="member">get_num_samples_processed</ref>());</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aced95e3bc711276b072af97b65ef9fc1" kindref="member">write_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;reader_train_total&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)<sp/><ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>.<ref refid="classlbann_1_1dataset_1ad314847b347d413162a9d9eab759641f" kindref="member">get_total_samples</ref>());</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aced95e3bc711276b072af97b65ef9fc1" kindref="member">write_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;reader_test_processed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)<sp/><ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>.<ref refid="classlbann_1_1dataset_1a73496347a477a5ebb0dbf30140295026" kindref="member">get_num_samples_processed</ref>());</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aced95e3bc711276b072af97b65ef9fc1" kindref="member">write_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;reader_test_total&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)<sp/><ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>.<ref refid="classlbann_1_1dataset_1ad314847b347d413162a9d9eab759641f" kindref="member">get_total_samples</ref>());</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val_end){</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aced95e3bc711276b072af97b65ef9fc1" kindref="member">write_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56af9ab05454998236921a6b0e281fae632" kindref="member">persist_type::validate</ref>,<sp/></highlight><highlight class="stringliteral">&quot;reader_validate_processed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)<sp/><ref refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" kindref="member">m_validation_dataset</ref>.<ref refid="classlbann_1_1dataset_1a73496347a477a5ebb0dbf30140295026" kindref="member">get_num_samples_processed</ref>());</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aced95e3bc711276b072af97b65ef9fc1" kindref="member">write_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56af9ab05454998236921a6b0e281fae632" kindref="member">persist_type::validate</ref>,<sp/></highlight><highlight class="stringliteral">&quot;reader_validate_total&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)<sp/><ref refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" kindref="member">m_validation_dataset</ref>.<ref refid="classlbann_1_1dataset_1ad314847b347d413162a9d9eab759641f" kindref="member">get_total_samples</ref>());</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/>this-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1abae61e13f47205491a43e4842808945d" kindref="member">save_to_checkpoint_shared</ref>(p,<sp/></highlight><highlight class="stringliteral">&quot;data_reader_validation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="structlbann_1_1generic__input__layer_1_1dataset__header" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlbann_1_1generic__input__layer_1_1dataset__header" kindref="compound">dataset_header</ref><sp/>{</highlight></codeline>
<codeline lineno="667" refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a6866a03f6906e925426ca228e36b416f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a6866a03f6906e925426ca228e36b416f" kindref="member">train_proc</ref>;</highlight></codeline>
<codeline lineno="668" refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a2b748bb9a5d76753032dfc707ab1c1fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a2b748bb9a5d76753032dfc707ab1c1fb" kindref="member">train_total</ref>;</highlight></codeline>
<codeline lineno="669" refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a8da8b64d9d85fc957d5a0473a8256664" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a8da8b64d9d85fc957d5a0473a8256664" kindref="member">test_proc</ref>;</highlight></codeline>
<codeline lineno="670" refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a41af5bce08ef28d6d7b0ad5bb8b6a451" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a41af5bce08ef28d6d7b0ad5bb8b6a451" kindref="member">test_total</ref>;</highlight></codeline>
<codeline lineno="671" refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a6eb5b167b79fcbad04e7365fb8b0e570" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a6eb5b167b79fcbad04e7365fb8b0e570" kindref="member">validate_proc</ref>;</highlight></codeline>
<codeline lineno="672" refid="structlbann_1_1generic__input__layer_1_1dataset__header_1ae44f4d697cd62da2e5daa620ebf0e40c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1ae44f4d697cd62da2e5daa620ebf0e40c" kindref="member">validate_total</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reload<sp/>state<sp/>of<sp/>IO<sp/>from<sp/>a<sp/>checkpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="classlbann_1_1generic__input__layer_1ae5a542333eaf447a05fc586848e7c94c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__input__layer_1ae5a542333eaf447a05fc586848e7c94c" kindref="member">load_from_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>state<sp/>of<sp/>data<sp/>readers<sp/>from<sp/>input<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>data_reader_map_t::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/>this-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1ae5a542333eaf447a05fc586848e7c94c" kindref="member">load_from_checkpoint_shared</ref>(p,<sp/></highlight><highlight class="stringliteral">&quot;data_reader_training&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/>this-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1ae5a542333eaf447a05fc586848e7c94c" kindref="member">load_from_checkpoint_shared</ref>(p,<sp/></highlight><highlight class="stringliteral">&quot;data_reader_testing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>our<sp/>own<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>0<sp/>reads<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlbann_1_1generic__input__layer_1_1dataset__header" kindref="compound">dataset_header</ref><sp/>header;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="classlbann_1_1persist_1a34eb918a890ab49dcbeedddf27ec1616" kindref="member">get_rank</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aa6d996db3714a7ae055adac0d8e8ac63" kindref="member">read_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;reader_train_processed&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>&amp;header.<ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a6866a03f6906e925426ca228e36b416f" kindref="member">train_proc</ref>);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aa6d996db3714a7ae055adac0d8e8ac63" kindref="member">read_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;reader_train_total&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;header.<ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a2b748bb9a5d76753032dfc707ab1c1fb" kindref="member">train_total</ref>);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aa6d996db3714a7ae055adac0d8e8ac63" kindref="member">read_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;reader_test_processed&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>&amp;header.<ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a8da8b64d9d85fc957d5a0473a8256664" kindref="member">test_proc</ref>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aa6d996db3714a7ae055adac0d8e8ac63" kindref="member">read_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;reader_test_total&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;header.<ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a41af5bce08ef28d6d7b0ad5bb8b6a451" kindref="member">test_total</ref>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aa6d996db3714a7ae055adac0d8e8ac63" kindref="member">read_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56af9ab05454998236921a6b0e281fae632" kindref="member">persist_type::validate</ref>,<sp/></highlight><highlight class="stringliteral">&quot;reader_validate_processed&quot;</highlight><highlight class="normal">,<sp/>&amp;header.<ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a6eb5b167b79fcbad04e7365fb8b0e570" kindref="member">validate_proc</ref>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aa6d996db3714a7ae055adac0d8e8ac63" kindref="member">read_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56af9ab05454998236921a6b0e281fae632" kindref="member">persist_type::validate</ref>,<sp/></highlight><highlight class="stringliteral">&quot;reader_validate_total&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>&amp;header.<ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1ae44f4d697cd62da2e5daa620ebf0e40c" kindref="member">validate_total</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.find(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>!=<sp/>this-&gt;<ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>.end())<sp/>&amp;&amp;<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(it-&gt;second)-&gt;<ref refid="classlbann_1_1generic__input__layer_1ae5a542333eaf447a05fc586848e7c94c" kindref="member">load_from_checkpoint_shared</ref>(p,<sp/></highlight><highlight class="stringliteral">&quot;data_reader_validation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>assumes<sp/>homogeneous<sp/>hardware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>broadcast<sp/>data<sp/>from<sp/>rank<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Bcast(&amp;header,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(header),<sp/>MPI_BYTE,<sp/>0,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>our<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>.<ref refid="classlbann_1_1dataset_1a412b29a50638f7d8feea4ad368c6a4dc" kindref="member">num_samples_processed</ref>()<sp/><sp/><sp/>=<sp/>(long)<sp/>header.<ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a6866a03f6906e925426ca228e36b416f" kindref="member">train_proc</ref>;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>.<ref refid="classlbann_1_1dataset_1ab951c879f151990613567e985fe1e278" kindref="member">total_samples</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(long)<sp/>header.<ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a2b748bb9a5d76753032dfc707ab1c1fb" kindref="member">train_total</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>.<ref refid="classlbann_1_1dataset_1a412b29a50638f7d8feea4ad368c6a4dc" kindref="member">num_samples_processed</ref>()<sp/><sp/><sp/><sp/>=<sp/>(long)<sp/>header.<ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a8da8b64d9d85fc957d5a0473a8256664" kindref="member">test_proc</ref>;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>.<ref refid="classlbann_1_1dataset_1ab951c879f151990613567e985fe1e278" kindref="member">total_samples</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(long)<sp/>header.<ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a41af5bce08ef28d6d7b0ad5bb8b6a451" kindref="member">test_total</ref>;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" kindref="member">m_validation_dataset</ref>.<ref refid="classlbann_1_1dataset_1a412b29a50638f7d8feea4ad368c6a4dc" kindref="member">num_samples_processed</ref>()<sp/>=<sp/>(long)<sp/>header.<ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1a6eb5b167b79fcbad04e7365fb8b0e570" kindref="member">validate_proc</ref>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" kindref="member">m_validation_dataset</ref>.<ref refid="classlbann_1_1dataset_1ab951c879f151990613567e985fe1e278" kindref="member">total_samples</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(long)<sp/>header.<ref refid="structlbann_1_1generic__input__layer_1_1dataset__header_1ae44f4d697cd62da2e5daa620ebf0e40c" kindref="member">validate_total</ref>;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="721" refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref><sp/><ref refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" kindref="member">m_training_dataset</ref>;</highlight></codeline>
<codeline lineno="722" refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref><sp/><ref refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" kindref="member">m_testing_dataset</ref>;</highlight></codeline>
<codeline lineno="723" refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref><sp/><ref refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" kindref="member">m_validation_dataset</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>bool<sp/>m_data_sets_span_models;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a6c3b901ea25ff3bba052cb3e14df4f83" kindref="member">data_reader_map_t</ref><sp/><ref refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" kindref="member">m_data_readers</ref>;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/>std::map&lt;execution_mode,<sp/>dataset_stats&gt;<sp/>m_dataset_stats;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal">};</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="classlbann_1_1generic__input__layer_1ab0afac3b3a3ee9e7af81c0885d233756" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>generic_input_layer::initialize_io_buffer&lt;partitioned_io_buffer&gt;(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_parallel_readers,<sp/>std::map&lt;execution_mode,<sp/>generic_data_reader<sp/>*&gt;<sp/>data_readers)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a9dfe8b9afaebc7a5bcb0177ee2ab428f" kindref="member">io_buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1partitioned__io__buffer" kindref="compound">partitioned_io_buffer</ref>(comm,<sp/>num_parallel_readers,<sp/>data_readers);</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="classlbann_1_1generic__input__layer_1ab0afac3b3a3ee9e7af81c0885d233756" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>generic_input_layer::initialize_io_buffer&lt;distributed_io_buffer&gt;(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_parallel_readers,<sp/>std::map&lt;execution_mode,<sp/>generic_data_reader<sp/>*&gt;<sp/>data_readers)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__input__layer_1a9dfe8b9afaebc7a5bcb0177ee2ab428f" kindref="member">io_buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1distributed__io__buffer" kindref="compound">distributed_io_buffer</ref>(comm,<sp/>num_parallel_readers,<sp/>data_readers);</highlight></codeline>
<codeline lineno="736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>LBANN_LAYERS_GENERIC_INPUT_LAYER_HPP_INCLUDED</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/generic_input_layer.hpp"/>
  </compounddef>
</doxygen>
