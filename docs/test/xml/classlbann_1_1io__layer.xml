<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1io__layer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>lbann::io_layer</compoundname>
    <basecompoundref refid="classlbann_1_1Layer" prot="public" virt="non-virtual">lbann::Layer</basecompoundref>
    <derivedcompoundref refid="classlbann_1_1generic__input__layer" prot="public" virt="non-virtual">lbann::generic_input_layer</derivedcompoundref>
    <derivedcompoundref refid="classlbann_1_1generic__target__layer" prot="public" virt="non-virtual">lbann::generic_target_layer</derivedcompoundref>
    <includes refid="io__layer_8hpp" local="no">io_layer.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classlbann_1_1io__layer_1a05c9d6e6cb12e8eb345ac6f5cb95644b" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lbann::io_layer::m_data_set_spans_models</definition>
        <argsstring></argsstring>
        <name>m_data_set_spans_models</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="46" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" bodystart="46" bodyend="-1"/>
        <referencedby refid="classlbann_1_1generic__input__layer_1a8ca316b0369689949f3f4106920ec28f" compoundref="generic__input__layer_8hpp" startline="139" endline="165">lbann::generic_input_layer::setup_data</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlbann_1_1io__layer_1aa1410291168d197a59b47815cced48d4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lbann::io_layer::m_for_regression</definition>
        <argsstring></argsstring>
        <name>m_for_regression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="49" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" bodystart="49" bodyend="-1"/>
        <referencedby refid="classlbann_1_1io__layer_1a61f2e00334c820235795154492876476" compoundref="io__layer_8hpp" startline="180" endline="182">is_for_regression</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::io_layer::io_layer</definition>
        <argsstring>(lbann_comm *comm, bool data_set_spans_models=true, bool for_regression=false)</argsstring>
        <name>io_layer</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>data_set_spans_models</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>for_regression</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="52" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" bodystart="52" bodyend="58"/>
        <references refid="classlbann_1_1io__layer_1a027122c10603ede2ab9be779bad135f8">get_dataset</references>
        <references refid="classlbann_1_1io__layer_1a66acbfb9c03a2e89a751b420416ae3bf">select_dataset</references>
        <references refid="classlbann_1_1io__layer_1a7dbc671fd5a81094854a4d865f7631ce">select_first_valid_dataset</references>
        <references refid="classlbann_1_1io__layer_1aed46cd991ff11bad08933dc61492e26f">select_data_reader</references>
        <references refid="classlbann_1_1io__layer_1a4ed831842ad78aaebfc9519c51268b95">update_num_samples_processed</references>
        <references refid="classlbann_1_1io__layer_1ab319ad5697e002072ee03e8c64523fb5">get_sample_indices_per_mb</references>
        <references refid="classlbann_1_1io__layer_1a67feb9fd903ef4d2ca782bbe7860a413">get_data_dims</references>
        <references refid="classlbann_1_1io__layer_1a955ab7100591d07d0758e8f95c6e50be">get_topo_description</references>
        <references refid="classlbann_1_1io__layer_1ab061ec74d131699c7fd59b992bbe7036">get_linearized_data_size</references>
        <references refid="classlbann_1_1io__layer_1a72a9a1411892b6f03de8b8f9923d77a6">get_linearized_label_size</references>
        <references refid="classlbann_1_1io__layer_1acbc2723e37e911eef6a38caa02c9e708">get_linearized_response_size</references>
        <references refid="classlbann_1_1io__layer_1ad25bf7559a27065c39d0c1d2f849347f">get_num_samples_trained</references>
        <references refid="classlbann_1_1io__layer_1a2b2c9d3c1efce23840ef0c88ec566616">get_num_samples_tested</references>
        <references refid="classlbann_1_1io__layer_1a744fe02208657194120714387b49cb28">get_total_num_training_samples</references>
        <references refid="classlbann_1_1io__layer_1a8c1575ad108ffbdf2a553a44509211e6">get_total_num_testing_samples</references>
        <references refid="classlbann_1_1io__layer_1a0cedc21bf38c1e3d60a93b41981a1626">at_new_epoch</references>
        <references refid="classlbann_1_1io__layer_1a37e2f77a99ee44106ac7d9fd3a275dcc">is_execution_mode_valid</references>
        <references refid="classlbann_1_1persist_1a34eb918a890ab49dcbeedddf27ec1616" compoundref="persist_8hpp" startline="60" endline="62">lbann::persist::get_rank</references>
        <references refid="classlbann_1_1persist_1aced95e3bc711276b072af97b65ef9fc1" compoundref="persist_8cpp" startline="423" endline="425">lbann::persist::write_uint64</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64">lbann::train</references>
        <references refid="classlbann_1_1persist_1aa6d996db3714a7ae055adac0d8e8ac63" compoundref="persist_8cpp" startline="427" endline="429">lbann::persist::read_uint64</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1a027122c10603ede2ab9be779bad135f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref> &amp;</type>
        <definition>virtual dataset&amp; lbann::io_layer::get_dataset</definition>
        <argsstring>(execution_mode m)=0</argsstring>
        <name>get_dataset</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1af2a0f4313863a029263efd0fced40571">get_dataset</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1af5699540797c22d8846028e578a6fc59">get_dataset</reimplementedby>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the dataset for the given execution mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="63" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1ac46dfddf41dc6915db433fe269b53770" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref> &amp;</type>
        <definition>virtual const dataset&amp; lbann::io_layer::get_dataset</definition>
        <argsstring>(execution_mode m) const =0</argsstring>
        <name>get_dataset</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a76569f34b5af75d6b822fb3349f7406f">get_dataset</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a909cf972d13a305a16daba9664180262">get_dataset</reimplementedby>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1a66acbfb9c03a2e89a751b420416ae3bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref> &amp;</type>
        <definition>virtual dataset&amp; lbann::io_layer::select_dataset</definition>
        <argsstring>()=0</argsstring>
        <name>select_dataset</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a0008630554477f39ad5ec950bf803876">select_dataset</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a654365ee97a64c75a547cfb7ef329304">select_dataset</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the dataset associated with the current execution mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="69" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1abbbeb6ca3e1d95b5c35dd9bb499bdd2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref> &amp;</type>
        <definition>virtual const dataset&amp; lbann::io_layer::select_dataset</definition>
        <argsstring>() const =0</argsstring>
        <name>select_dataset</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1ac83761609177fc272fa9c2fe098d4676">select_dataset</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1ab8468d077867b03098bbc71a38edaa15">select_dataset</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1a7dbc671fd5a81094854a4d865f7631ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref> *</type>
        <definition>virtual dataset* lbann::io_layer::select_first_valid_dataset</definition>
        <argsstring>()=0</argsstring>
        <name>select_first_valid_dataset</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a22374687112c04dd6e0e35b94fe0e46c">select_first_valid_dataset</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a777aa11816a518098212408b569b6fb8">select_first_valid_dataset</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the first dataset with a valid (non-null) datareader. Returns null if none are valid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="76" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1aed46cd991ff11bad08933dc61492e26f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *</type>
        <definition>virtual generic_data_reader* lbann::io_layer::select_data_reader</definition>
        <argsstring>() const =0</argsstring>
        <name>select_data_reader</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a9591bdc69e3de9c10fbf71d1faef917a">select_data_reader</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a9783805369ec7cfe5ce61c81baa5d2e2">select_data_reader</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the data reader associated with the current execution mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="81" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1a4ed831842ad78aaebfc9519c51268b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>long</type>
        <definition>virtual long lbann::io_layer::update_num_samples_processed</definition>
        <argsstring>(long num_samples)=0</argsstring>
        <name>update_num_samples_processed</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a0dbe5fc5203e15ddcf8348daf2f697c5">update_num_samples_processed</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a0c2f123432ec6af168012cc8699a1d3f">update_num_samples_processed</reimplementedby>
        <param>
          <type>long</type>
          <declname>num_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the number of samples processed for the current execution mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="86" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1ab319ad5697e002072ee03e8c64523fb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>El::Matrix&lt; El::Int &gt; *</type>
        <definition>El::Matrix&lt;El::Int&gt;* lbann::io_layer::get_sample_indices_per_mb</definition>
        <argsstring>() override=0</argsstring>
        <name>get_sample_indices_per_mb</name>
        <reimplements refid="classlbann_1_1Layer_1a0ac13af6f5ee8316d64c550bef919ee0">get_sample_indices_per_mb</reimplements>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a9673d3fb3db6ecaae979886178b785ea">get_sample_indices_per_mb</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a749741781204b17c8ca172a9a405a90e">get_sample_indices_per_mb</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the sample indices fetched in the current mini-batch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="91" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1a67feb9fd903ef4d2ca782bbe7860a413" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::vector&lt; int &gt;</type>
        <definition>virtual const std::vector&lt;int&gt; lbann::io_layer::get_data_dims</definition>
        <argsstring>() const =0</argsstring>
        <name>get_data_dims</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1abc0a5ec9761f3cebd34d3549d4681108">get_data_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a6008b13521d27d6139201fa374b088eb">get_data_dims</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the dimensions of the underlying data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="96" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1a955ab7100591d07d0758e8f95c6e50be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>std::string lbann::io_layer::get_topo_description</definition>
        <argsstring>() const override=0</argsstring>
        <name>get_topo_description</name>
        <reimplements refid="classlbann_1_1Layer_1a147a7f7dcf0027a60f10109439e5dcea">get_topo_description</reimplements>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1ad6ea9a43254664c75aa06e8e5c1d7e8c">get_topo_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a36d9962105ca89889e3f38f1c1801560">get_topo_description</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable description of the activation tensors. Activation tensors are stored in distributed matrices where each column corresponds to a mini-batch sample. Within each column, the data is packed w.r.t. the last tensor dimension, then w.r.t. the penultimate dimension, and so on. 3D tensors are assumed to be 2D images in NCHW format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="98" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1ab061ec74d131699c7fd59b992bbe7036" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>long</type>
        <definition>virtual long lbann::io_layer::get_linearized_data_size</definition>
        <argsstring>() const =0</argsstring>
        <name>get_linearized_data_size</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a26376bcc04f9c8ec35ff99bd71de43d9">get_linearized_data_size</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1aca46cbf29ad2762e9329b46ab2ad1ae7">get_linearized_data_size</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the linearized size of the underlying data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="103" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1a72a9a1411892b6f03de8b8f9923d77a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>long</type>
        <definition>virtual long lbann::io_layer::get_linearized_label_size</definition>
        <argsstring>() const =0</argsstring>
        <name>get_linearized_label_size</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a8a266291fb01fbcec5cac5fefdef56eb">get_linearized_label_size</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1ab6c24db7e2b8e73e7d7894e51246dc5e">get_linearized_label_size</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the linearized size of the labels for the underlying data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="108" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1acbc2723e37e911eef6a38caa02c9e708" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>long</type>
        <definition>virtual long lbann::io_layer::get_linearized_response_size</definition>
        <argsstring>() const =0</argsstring>
        <name>get_linearized_response_size</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a55c3e1bcb3e4611c379b1082183b3e66">get_linearized_response_size</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a6e5e587aa5b32bdfd2dd579a2746885d">get_linearized_response_size</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="110" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1ad25bf7559a27065c39d0c1d2f849347f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>long</type>
        <definition>virtual long lbann::io_layer::get_num_samples_trained</definition>
        <argsstring>() const =0</argsstring>
        <name>get_num_samples_trained</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1abff09be96adbd480f35fcfba3c6cfc5a">get_num_samples_trained</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a95a7a5ad2a6089ffb9197632015e6062">get_num_samples_trained</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="112" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1a2b2c9d3c1efce23840ef0c88ec566616" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>long</type>
        <definition>virtual long lbann::io_layer::get_num_samples_tested</definition>
        <argsstring>() const =0</argsstring>
        <name>get_num_samples_tested</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a0187134110cd8a641e15f86e010b75a7">get_num_samples_tested</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a68b162bcc5fdfe2bb7279eb5d83cf884">get_num_samples_tested</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="113" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1a744fe02208657194120714387b49cb28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>long</type>
        <definition>virtual long lbann::io_layer::get_total_num_training_samples</definition>
        <argsstring>() const =0</argsstring>
        <name>get_total_num_training_samples</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a857306496e1c55cb15cd81301edb010f">get_total_num_training_samples</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a5fc757d16e26739cd10e5eabafa6a32b">get_total_num_training_samples</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="114" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1a8c1575ad108ffbdf2a553a44509211e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>long</type>
        <definition>virtual long lbann::io_layer::get_total_num_testing_samples</definition>
        <argsstring>() const =0</argsstring>
        <name>get_total_num_testing_samples</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1af41c92981e0a1731d3dee9b1b49201db">get_total_num_testing_samples</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1ab5b5318cf000fbdaf35a3545335b60b2">get_total_num_testing_samples</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="115" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1a0cedc21bf38c1e3d60a93b41981a1626" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool lbann::io_layer::at_new_epoch</definition>
        <argsstring>() const =0</argsstring>
        <name>at_new_epoch</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a9bdeadd84f0b4f31b755fdd338492b1a">at_new_epoch</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a8b375ab97f38166872e4aa9baeca0715">at_new_epoch</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="117" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1a37e2f77a99ee44106ac7d9fd3a275dcc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool lbann::io_layer::is_execution_mode_valid</definition>
        <argsstring>(execution_mode mode) const =0</argsstring>
        <name>is_execution_mode_valid</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a0ae18b3b410c3b6c1a5b34a3547ba4c5">is_execution_mode_valid</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a31082076a8aad937eef3cadc0b5e1b27">is_execution_mode_valid</reimplementedby>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="119" column="1"/>
        <referencedby refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" compoundref="io__layer_8hpp" startline="52" endline="58">io_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1io__layer_1a61f2e00334c820235795154492876476" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::io_layer::is_for_regression</definition>
        <argsstring>() const</argsstring>
        <name>is_for_regression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="180" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" bodystart="180" bodyend="182"/>
        <references refid="classlbann_1_1io__layer_1aa1410291168d197a59b47815cced48d4" compoundref="io__layer_8hpp" startline="49">m_for_regression</references>
        <referencedby refid="classlbann_1_1generic__input__layer_1ab6c24db7e2b8e73e7d7894e51246dc5e" compoundref="generic__input__layer_8hpp" startline="540" endline="568">lbann::generic_input_layer::get_linearized_label_size</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a6e5e587aa5b32bdfd2dd579a2746885d" compoundref="generic__input__layer_8hpp" startline="570" endline="598">lbann::generic_input_layer::get_linearized_response_size</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a3a970c1b23f7367276f7061563fc8b65" compoundref="generic__target__layer_8hpp" startline="114" endline="125">lbann::generic_target_layer::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1target__layer_1ab06729051345c739c33ea445ceed100a" compoundref="target__layer_8hpp" startline="43" endline="51">lbann::target_layer&lt; T_io_buffer, T_layout &gt;::target_layer</referencedby>
        <referencedby refid="namespacelbann_1_1proto_1_1anonymous__namespace_02layer__graph__factory_8cpp_03_1a049fcca970d819d3c08bfdf71883de5c" compoundref="layer__graph__factory_8cpp" startline="64" endline="96">lbann::proto::anonymous_namespace{layer_graph_factory.cpp}::setup_target_pointers</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1157">
        <label>lbann::io_layer</label>
        <link refid="classlbann_1_1io__layer"/>
        <childnode refid="1158" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1159">
        <label>lbann::generic_input_layer</label>
        <link refid="classlbann_1_1generic__input__layer"/>
        <childnode refid="1157" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1161">
        <label>lbann::generic_target_layer</label>
        <link refid="classlbann_1_1generic__target__layer"/>
        <childnode refid="1157" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1163">
        <label>lbann::target_layer&lt; T_io_buffer, T_layout &gt;</label>
        <link refid="classlbann_1_1target__layer"/>
        <childnode refid="1161" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1162">
        <label>lbann::reconstruction_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1reconstruction__layer"/>
        <childnode refid="1161" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1160">
        <label>lbann::input_layer&lt; T_io_buffer, T_layout &gt;</label>
        <link refid="classlbann_1_1input__layer"/>
        <childnode refid="1159" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1158">
        <label>lbann::Layer</label>
        <link refid="classlbann_1_1Layer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1164">
        <label>lbann::io_layer</label>
        <link refid="classlbann_1_1io__layer"/>
        <childnode refid="1165" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1167">
        <label>lbann::model</label>
        <link refid="classlbann_1_1model"/>
        <childnode refid="1168" relation="usage">
          <edgelabel>m_default_optimizer</edgelabel>
        </childnode>
        <childnode refid="1166" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1173" relation="usage">
          <edgelabel>m_objective_function</edgelabel>
        </childnode>
      </node>
      <node id="1168">
        <label>lbann::optimizer</label>
        <link refid="classlbann_1_1optimizer"/>
        <childnode refid="1166" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1169" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
        <childnode refid="1170" relation="usage">
          <edgelabel>m_gradient_allreduce_req</edgelabel>
        </childnode>
        <childnode refid="1171" relation="usage">
          <edgelabel>m_weights</edgelabel>
        </childnode>
      </node>
      <node id="1169">
        <label>lbann::cudnn::cudnn_manager</label>
        <link refid="classlbann_1_1cudnn_1_1cudnn__manager"/>
      </node>
      <node id="1172">
        <label>lbann::weights_initializer</label>
        <link refid="classlbann_1_1weights__initializer"/>
        <childnode refid="1166" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
      <node id="1165">
        <label>lbann::Layer</label>
        <link refid="classlbann_1_1Layer"/>
        <childnode refid="1166" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1167" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
        <childnode refid="1169" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="1171">
        <label>lbann::weights</label>
        <link refid="classlbann_1_1weights"/>
        <childnode refid="1168" relation="usage">
          <edgelabel>m_optimizer</edgelabel>
        </childnode>
        <childnode refid="1166" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1172" relation="usage">
          <edgelabel>m_initializer</edgelabel>
        </childnode>
        <childnode refid="1169" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="1166">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="1170">
        <label>lbann::Al::request</label>
        <link refid="structlbann_1_1Al_1_1request"/>
      </node>
      <node id="1173">
        <label>lbann::objective_function</label>
        <link refid="classlbann_1_1objective__function"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" line="44" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/io_layer.hpp" bodystart="44" bodyend="183"/>
    <listofallmembers>
      <member refid="classlbann_1_1Layer_1ace0346ac56fd7ce7b6b44f27f224f35e" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>add_child_layer</name></member>
      <member refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>add_parent_layer</name></member>
      <member refid="classlbann_1_1Layer_1a8d942eb2cd37c346edc5ff473e0494a2" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>add_to_error_signal</name></member>
      <member refid="classlbann_1_1io__layer_1a0cedc21bf38c1e3d60a93b41981a1626" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>at_new_epoch</name></member>
      <member refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>back_prop</name></member>
      <member refid="classlbann_1_1Layer_1a7442e01f9ee1294df2de811efcf5171e" prot="protected" virt="pure-virtual"><scope>lbann::io_layer</scope><name>bp_compute</name></member>
      <member refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" prot="protected" virt="virtual"><scope>lbann::io_layer</scope><name>bp_setup_data</name></member>
      <member refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>check_setup</name></member>
      <member refid="classlbann_1_1Layer_1a040bf53e261b1ef796739c09b3362a3a" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>clear_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>clear_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a7336909c78e438ba5332c6c1bddeadd2" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>clear_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1af420f22bbac801c85483ade84588a23f" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>copy</name></member>
      <member refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>forward_prop</name></member>
      <member refid="classlbann_1_1Layer_1a523319dd1bd87a0612afa1912bb5aad7" prot="protected" virt="pure-virtual"><scope>lbann::io_layer</scope><name>fp_compute</name></member>
      <member refid="classlbann_1_1Layer_1a22d31298912405660ebb210c0d7c5373" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>fp_output_dims</name></member>
      <member refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" prot="protected" virt="virtual"><scope>lbann::io_layer</scope><name>fp_setup_data</name></member>
      <member refid="classlbann_1_1Layer_1ad55c455dbae0d082cedfa68511709aae" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>freeze</name></member>
      <member refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_activations</name></member>
      <member refid="classlbann_1_1Layer_1af69a4773804c6982e8acaf5810eaa150" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_activations</name></member>
      <member refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>get_bp_output</name></member>
      <member refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a0ad6c5253a4545a7322766d586a4bd33" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1afc7bf4e2a61a6f47f9e1f185bf92439a" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_child_names</name></member>
      <member refid="classlbann_1_1Layer_1a1b528e5872357a82176ee487596b363c" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_cudnn_manager</name></member>
      <member refid="classlbann_1_1io__layer_1a67feb9fd903ef4d2ca782bbe7860a413" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_data_dims</name></member>
      <member refid="classlbann_1_1Layer_1a5dfb66e81fc085997402a5e2241316bd" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_data_layout</name></member>
      <member refid="classlbann_1_1Layer_1ae3f4a5602df821f4221614b1e3782dc1" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_data_layout_string</name></member>
      <member refid="classlbann_1_1io__layer_1a027122c10603ede2ab9be779bad135f8" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_dataset</name></member>
      <member refid="classlbann_1_1io__layer_1ac46dfddf41dc6915db433fe269b53770" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_dataset</name></member>
      <member refid="classlbann_1_1Layer_1acc0803d3428914ca1eb5988c4309174a" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>get_description</name></member>
      <member refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ae09bc5a240e9042371203ba5ff19990c" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1aaeef8c7631204fc415a94dcdfbcfe93d" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_expected_num_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa30dbf20929aaa58b5be98b98217ca88" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_expected_num_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1ac6b43c63399f717cc1a4a0a2007350f2" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>get_fp_output</name></member>
      <member refid="classlbann_1_1Layer_1af4a093d91552cf079217eb346bbb847f" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_layer_names</name></member>
      <member refid="classlbann_1_1Layer_1a9f94210cbb973f1df89ef649899094a1" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>get_layer_pointers</name></member>
      <member refid="classlbann_1_1io__layer_1ab061ec74d131699c7fd59b992bbe7036" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_linearized_data_size</name></member>
      <member refid="classlbann_1_1io__layer_1a72a9a1411892b6f03de8b8f9923d77a6" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_linearized_label_size</name></member>
      <member refid="classlbann_1_1io__layer_1acbc2723e37e911eef6a38caa02c9e708" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_linearized_response_size</name></member>
      <member refid="classlbann_1_1Layer_1a4248f27acebf72b7b7b3ee39c8bcb62a" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_local_activations</name></member>
      <member refid="classlbann_1_1Layer_1aadbc466c72f455c10b53bf45dca56332" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_local_activations</name></member>
      <member refid="classlbann_1_1Layer_1af178d00b9d878aa7d87754bff2a91f3a" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_local_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1acf76bc7fba1e8ab74947ef83a3c8a141" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_local_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a35397843bb0c84030000c7d872229acb" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_local_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1ab0f7b4d0fdb06004dfde5358781eeece" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_local_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a82827edc5e869960144f3ccb2172bfcd" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_local_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1af3490fe9011ef620b827970bc5dcc7a7" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_local_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1afcfb6f55d12c728a59d107fe2d2fff0d" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_model</name></member>
      <member refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_name</name></member>
      <member refid="classlbann_1_1Layer_1a54f53393fadbfdc73b4e72489c868433" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>get_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_num_children</name></member>
      <member refid="classlbann_1_1Layer_1aa35561e662de84deae26045ccb53d862" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>get_num_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>get_num_neurons</name></member>
      <member refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_num_parents</name></member>
      <member refid="classlbann_1_1Layer_1ace32c7df942a8d97d7a25cb8ff8ce71d" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>get_num_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>get_num_prev_neurons</name></member>
      <member refid="classlbann_1_1io__layer_1a2b2c9d3c1efce23840ef0c88ec566616" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_num_samples_tested</name></member>
      <member refid="classlbann_1_1io__layer_1ad25bf7559a27065c39d0c1d2f849347f" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_num_samples_trained</name></member>
      <member refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1a233ceaf4e6c6b5c24dd097ffff511579" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1afdf36947beec676a71ecd6167c3bb724" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_parent_names</name></member>
      <member refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1afc0611b7c3b1537914f25a538486a8cd" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1aff2c8983548364c978acb09ddf58a6fc" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a1acc0fa44acdeffbac158fdac3467973" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>get_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1io__layer_1ab319ad5697e002072ee03e8c64523fb5" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_sample_indices_per_mb</name></member>
      <member refid="classlbann_1_1io__layer_1a955ab7100591d07d0758e8f95c6e50be" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_topo_description</name></member>
      <member refid="classlbann_1_1io__layer_1a8c1575ad108ffbdf2a553a44509211e6" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_total_num_testing_samples</name></member>
      <member refid="classlbann_1_1io__layer_1a744fe02208657194120714387b49cb28" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_total_num_training_samples</name></member>
      <member refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>get_type</name></member>
      <member refid="classlbann_1_1Layer_1a4ee78d42284421519dd18d27b4da0957" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_weights</name></member>
      <member refid="classlbann_1_1Layer_1ab9fe05ad8d21ba5d6dd4d22ee2e0dca0" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>get_weights</name></member>
      <member refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>io_layer</name></member>
      <member refid="classlbann_1_1io__layer_1a37e2f77a99ee44106ac7d9fd3a275dcc" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>is_execution_mode_valid</name></member>
      <member refid="classlbann_1_1io__layer_1a61f2e00334c820235795154492876476" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>is_for_regression</name></member>
      <member refid="classlbann_1_1Layer_1af3c0f9f32eb631f4fdf34ad040ef8637" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>is_frozen</name></member>
      <member refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>Layer</name></member>
      <member refid="classlbann_1_1Layer_1a247cc68c730284f10a2cb42985fe5f3a" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>Layer</name></member>
      <member refid="classlbann_1_1Layer_1a9e262970ecc64166e8b6610e2502ad30" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1Layer_1a7ac9335d75d817fc2d5cf171da9b7e22" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>loadFromCheckpoint</name></member>
      <member refid="classlbann_1_1Layer_1a1ae0e6015dd427c63236a07f8cbd3878" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>loadFromFile</name></member>
      <member refid="classlbann_1_1Layer_1a7caf08e938141d1584e6939cefa4baed" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_activations</name></member>
      <member refid="classlbann_1_1Layer_1ae28626457a58943b25e7a2920fc271f0" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_bp_compute_time</name></member>
      <member refid="classlbann_1_1Layer_1aa60fc41627bcaa9c345775bf5737bb45" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_bp_time</name></member>
      <member refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_comm</name></member>
      <member refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_cudnn</name></member>
      <member refid="classlbann_1_1io__layer_1a05c9d6e6cb12e8eb345ac6f5cb95644b" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_data_set_spans_models</name></member>
      <member refid="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ac08f133dddd150319650e220ab9a523a" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_expected_num_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a841b96b25555247f52921c7f13ae1dfa" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_expected_num_parent_layers</name></member>
      <member refid="classlbann_1_1io__layer_1aa1410291168d197a59b47815cced48d4" prot="private" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_for_regression</name></member>
      <member refid="classlbann_1_1Layer_1aa4e439c1d6a656e709dc4736c9380476" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_fp_compute_time</name></member>
      <member refid="classlbann_1_1Layer_1ab1bd9ab0a6f9e554f4dc936d8316028e" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_fp_time</name></member>
      <member refid="classlbann_1_1Layer_1afdc60df9731a3ecdeeeb8175fa483676" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_frozen</name></member>
      <member refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_model</name></member>
      <member refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_name</name></member>
      <member refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_num_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_num_neurons</name></member>
      <member refid="classlbann_1_1Layer_1adc052afb38f170e839db00d3c8151d1e" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_num_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_num_prev_neurons</name></member>
      <member refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1a52314601c3458268f56e017dc2ade357" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a6fdcbf884150d0b20cffe678fefd7caa" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1ab7d84533662b02d01ba6685ad6f20935" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_update_time</name></member>
      <member refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_using_gpus</name></member>
      <member refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" prot="protected" virt="non-virtual"><scope>lbann::io_layer</scope><name>m_weights</name></member>
      <member refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>operator=</name></member>
      <member refid="classlbann_1_1Layer_1ae9df4e0b0fe7c276c79575f9e11c53af" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>replace_weights</name></member>
      <member refid="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>reset_counters</name></member>
      <member refid="classlbann_1_1Layer_1afce0efa0f1c8f3b1c61069536b2fa8cc" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1Layer_1a994a4beabbace598193b1611eb06b07e" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>saveToCheckpoint</name></member>
      <member refid="classlbann_1_1Layer_1a131876b692c0e68c95d9ae1a86c446df" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>saveToFile</name></member>
      <member refid="classlbann_1_1io__layer_1aed46cd991ff11bad08933dc61492e26f" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>select_data_reader</name></member>
      <member refid="classlbann_1_1io__layer_1a66acbfb9c03a2e89a751b420416ae3bf" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>select_dataset</name></member>
      <member refid="classlbann_1_1io__layer_1abbbeb6ca3e1d95b5c35dd9bb499bdd2d" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>select_dataset</name></member>
      <member refid="classlbann_1_1io__layer_1a7dbc671fd5a81094854a4d865f7631ce" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>select_first_valid_dataset</name></member>
      <member refid="classlbann_1_1Layer_1a001ea76cdd05e2d0d475f408f24702ee" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>set_layer_pointers</name></member>
      <member refid="classlbann_1_1Layer_1a8eed87b25ea902b223c6b7a23abf78b3" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>set_model</name></member>
      <member refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>set_name</name></member>
      <member refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>set_weights</name></member>
      <member refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>setup</name></member>
      <member refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" prot="protected" virt="virtual"><scope>lbann::io_layer</scope><name>setup_data</name></member>
      <member refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" prot="protected" virt="virtual"><scope>lbann::io_layer</scope><name>setup_dims</name></member>
      <member refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" prot="protected" virt="virtual"><scope>lbann::io_layer</scope><name>setup_gpu</name></member>
      <member refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e" prot="protected" virt="virtual"><scope>lbann::io_layer</scope><name>setup_matrices</name></member>
      <member refid="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" prot="protected" virt="virtual"><scope>lbann::io_layer</scope><name>setup_pointers</name></member>
      <member refid="classlbann_1_1Layer_1af7e50932bb60d4cab3b21ab3fb0707ea" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>summarize_matrices</name></member>
      <member refid="classlbann_1_1Layer_1a7f3f26e2ae0497f9a00fd6bc56b50543" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>summarize_stats</name></member>
      <member refid="classlbann_1_1Layer_1aa43ecf9fc67eb1d596c1a69cf35d1245" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>unfreeze</name></member>
      <member refid="classlbann_1_1Layer_1ae4a050e51e3a9bec431cf8b7a5660f2c" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>update</name></member>
      <member refid="classlbann_1_1Layer_1a70e08fc96a612f67ade6ba3809536d85" prot="protected" virt="virtual"><scope>lbann::io_layer</scope><name>update_compute</name></member>
      <member refid="classlbann_1_1io__layer_1a4ed831842ad78aaebfc9519c51268b95" prot="public" virt="pure-virtual"><scope>lbann::io_layer</scope><name>update_num_samples_processed</name></member>
      <member refid="classlbann_1_1Layer_1a6a75532bdaa2ca3879034f2a76085a06" prot="public" virt="non-virtual"><scope>lbann::io_layer</scope><name>using_gpus</name></member>
      <member refid="classlbann_1_1Layer_1ab94eb4ac28bac0c472a1da83ade4adf1" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>write_proto</name></member>
      <member refid="classlbann_1_1Layer_1a68c3f57587956da938406812f13ecb78" prot="public" virt="virtual"><scope>lbann::io_layer</scope><name>~Layer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
