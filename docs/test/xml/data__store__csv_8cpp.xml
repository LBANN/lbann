<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="data__store__csv_8cpp" kind="file" language="C++">
    <compoundname>data_store_csv.cpp</compoundname>
    <includes refid="data__store__csv_8hpp" local="yes">lbann/data_store/data_store_csv.hpp</includes>
    <includes refid="data__reader__csv_8hpp" local="yes">lbann/data_readers/data_reader_csv.hpp</includes>
    <includes refid="exception_8hpp" local="yes">lbann/utils/exception.hpp</includes>
    <includes refid="options_8hpp" local="yes">lbann/utils/options.hpp</includes>
    <includes refid="timer_8hpp" local="yes">lbann/utils/timer.hpp</includes>
    <includes local="no">unordered_set</includes>
    <incdepgraph>
      <node id="20167">
        <label>sys/stat.h</label>
      </node>
      <node id="20170">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="20148" relation="include">
        </childnode>
        <childnode refid="20140" relation="include">
        </childnode>
      </node>
      <node id="20139">
        <label>lbann/data_store/generic_data_store.hpp</label>
        <link refid="generic__data__store_8hpp"/>
        <childnode refid="20140" relation="include">
        </childnode>
        <childnode refid="20149" relation="include">
        </childnode>
        <childnode refid="20150" relation="include">
        </childnode>
        <childnode refid="20153" relation="include">
        </childnode>
      </node>
      <node id="20158">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="20140" relation="include">
        </childnode>
        <childnode refid="20141" relation="include">
        </childnode>
      </node>
      <node id="20141">
        <label>El.hpp</label>
      </node>
      <node id="20140">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="20141" relation="include">
        </childnode>
        <childnode refid="20142" relation="include">
        </childnode>
        <childnode refid="20143" relation="include">
        </childnode>
        <childnode refid="20148" relation="include">
        </childnode>
      </node>
      <node id="20171">
        <label>cassert</label>
      </node>
      <node id="20137">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_store/data_store_csv.cpp</label>
        <link refid="data__store__csv_8cpp"/>
        <childnode refid="20138" relation="include">
        </childnode>
        <childnode refid="20155" relation="include">
        </childnode>
        <childnode refid="20160" relation="include">
        </childnode>
        <childnode refid="20174" relation="include">
        </childnode>
        <childnode refid="20175" relation="include">
        </childnode>
        <childnode refid="20153" relation="include">
        </childnode>
      </node>
      <node id="20169">
        <label>fcntl.h</label>
      </node>
      <node id="20163">
        <label>string</label>
      </node>
      <node id="20175">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="20176" relation="include">
        </childnode>
      </node>
      <node id="20151">
        <label>map</label>
      </node>
      <node id="20153">
        <label>unordered_set</label>
      </node>
      <node id="20165">
        <label>exception</label>
      </node>
      <node id="20159">
        <label>random</label>
      </node>
      <node id="20168">
        <label>sys/types.h</label>
      </node>
      <node id="20145">
        <label>cstdio</label>
      </node>
      <node id="20161">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="20162" relation="include">
        </childnode>
        <childnode refid="20163" relation="include">
        </childnode>
      </node>
      <node id="20147">
        <label>cxxabi.h</label>
      </node>
      <node id="20160">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="20140" relation="include">
        </childnode>
        <childnode refid="20149" relation="include">
        </childnode>
        <childnode refid="20161" relation="include">
        </childnode>
        <childnode refid="20164" relation="include">
        </childnode>
        <childnode refid="20165" relation="include">
        </childnode>
      </node>
      <node id="20173">
        <label>unistd.h</label>
      </node>
      <node id="20150">
        <label>vector</label>
      </node>
      <node id="20149">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="20150" relation="include">
        </childnode>
        <childnode refid="20151" relation="include">
        </childnode>
        <childnode refid="20152" relation="include">
        </childnode>
        <childnode refid="20140" relation="include">
        </childnode>
      </node>
      <node id="20166">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="20167" relation="include">
        </childnode>
        <childnode refid="20168" relation="include">
        </childnode>
        <childnode refid="20169" relation="include">
        </childnode>
      </node>
      <node id="20144">
        <label>cstdlib</label>
      </node>
      <node id="20164">
        <label>iostream</label>
      </node>
      <node id="20155">
        <label>lbann/data_readers/data_reader_csv.hpp</label>
        <link refid="data__reader__csv_8hpp"/>
        <childnode refid="20156" relation="include">
        </childnode>
        <childnode refid="20170" relation="include">
        </childnode>
        <childnode refid="20154" relation="include">
        </childnode>
      </node>
      <node id="20154">
        <label>unordered_map</label>
      </node>
      <node id="20157">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="20140" relation="include">
        </childnode>
        <childnode refid="20149" relation="include">
        </childnode>
        <childnode refid="20158" relation="include">
        </childnode>
        <childnode refid="20159" relation="include">
        </childnode>
      </node>
      <node id="20138">
        <label>lbann/data_store/data_store_csv.hpp</label>
        <link refid="data__store__csv_8hpp"/>
        <childnode refid="20139" relation="include">
        </childnode>
        <childnode refid="20154" relation="include">
        </childnode>
      </node>
      <node id="20176">
        <label>chrono</label>
      </node>
      <node id="20162">
        <label>csignal</label>
      </node>
      <node id="20174">
        <label>lbann/utils/options.hpp</label>
        <link refid="options_8hpp"/>
        <childnode refid="20164" relation="include">
        </childnode>
        <childnode refid="20151" relation="include">
        </childnode>
        <childnode refid="20150" relation="include">
        </childnode>
        <childnode refid="20163" relation="include">
        </childnode>
      </node>
      <node id="20156">
        <label>data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="20140" relation="include">
        </childnode>
        <childnode refid="20157" relation="include">
        </childnode>
        <childnode refid="20160" relation="include">
        </childnode>
        <childnode refid="20149" relation="include">
        </childnode>
        <childnode refid="20166" relation="include">
        </childnode>
        <childnode refid="20158" relation="include">
        </childnode>
        <childnode refid="20170" relation="include">
        </childnode>
        <childnode refid="20171" relation="include">
        </childnode>
        <childnode refid="20172" relation="include">
        </childnode>
        <childnode refid="20163" relation="include">
        </childnode>
        <childnode refid="20150" relation="include">
        </childnode>
        <childnode refid="20173" relation="include">
        </childnode>
      </node>
      <node id="20148">
        <label>lbann_config.hpp</label>
      </node>
      <node id="20172">
        <label>algorithm</label>
      </node>
      <node id="20143">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="20144" relation="include">
        </childnode>
        <childnode refid="20145" relation="include">
        </childnode>
        <childnode refid="20146" relation="include">
        </childnode>
        <childnode refid="20147" relation="include">
        </childnode>
      </node>
      <node id="20142">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="20141" relation="include">
        </childnode>
      </node>
      <node id="20152">
        <label>typeindex</label>
      </node>
      <node id="20146">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__store__csv_8hpp" kindref="compound">lbann/data_store/data_store_csv.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__reader__csv_8hpp" kindref="compound">lbann/data_readers/data_reader_csv.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">lbann/utils/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="options_8hpp" kindref="compound">lbann/utils/options.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8hpp" kindref="compound">lbann/utils/timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classlbann_1_1data__store__csv_1add3e9e9c37f1cdf0e3dba00cc6f49507" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__store__csv_1add3e9e9c37f1cdf0e3dba00cc6f49507" kindref="member">data_store_csv::data_store_csv</ref>(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*reader,<sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store" kindref="compound">generic_data_store</ref>(reader,<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a853741295a07b5687921fc56d0d7d5b2" kindref="member">set_name</ref>(</highlight><highlight class="stringliteral">&quot;data_store_csv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classlbann_1_1data__store__csv_1a6e0928f649f9a808c4e73b77f34ffae3" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__store__csv_1a6e0928f649f9a808c4e73b77f34ffae3" kindref="member">data_store_csv::~data_store_csv</ref>()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classlbann_1_1data__store__csv_1a184c7e6f27c5e07255b9c889ace02407" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__csv_1a184c7e6f27c5e07255b9c889ace02407" kindref="member">data_store_csv::setup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tm1<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;starting<sp/>data_store_csv::setup()<sp/>for<sp/>role:<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a92982e1b399f37e2ead5aa440883cba5" kindref="member">get_role</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>generic_data_store::setup()\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a1cff17def02ee21b6ca0befeb04bb582" kindref="member">generic_data_store::setup</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/><ref refid="classlbann_1_1generic__data__store_1a1a9cc7b097cd7dd6ae0d12d52bb43ea1" kindref="member">m_in_memory</ref>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>yet<sp/>implemented&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1csv__reader" kindref="compound">csv_reader</ref><sp/>*reader<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1csv__reader" kindref="compound">csv_reader</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;dynamic_cast&lt;data_reader_csv*&gt;(m_reader)<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__csv_1a8920e09beb3e40e59e2858daf95a6cf9" kindref="member">m_csv_reader</ref><sp/>=<sp/>reader;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref><sp/>!=<sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1ad15887cc31657d03925835aab0d4b675" kindref="member">get_num_parallel_readers</ref>())<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;num_parallel_readers():<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1ad15887cc31657d03925835aab0d4b675" kindref="member">get_num_parallel_readers</ref>()<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_np:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>for<sp/>this<sp/>data_store<sp/>num_readers<sp/>must<sp/>be<sp/>the<sp/>same<sp/>as<sp/>procs<sp/>per<sp/>model;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>if<sp/>this<sp/>isn&apos;t<sp/>acceptable,<sp/>please<sp/>notify<sp/>Dave<sp/>Hysom<sp/>so<sp/>he<sp/>can<sp/>fix.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reader<sp/>role:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a92982e1b399f37e2ead5aa440883cba5" kindref="member">get_role</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>get_minibatch_index_vector\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1ab861db5f81e45a6063b8922a331dd007" kindref="member">get_minibatch_index_vector</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>exchange_mb_indices()\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1aa0ef8d7528f6775d47641ffe5ac229da" kindref="member">exchange_mb_indices</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>get_my_datastore_indices\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a3558f87939755b08ae151623a5799127" kindref="member">get_my_datastore_indices</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling:<sp/>reader-&gt;fetch_line_label_response(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*m_shuffled_indices)[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;);\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DataType&gt;<sp/>v<sp/>=<sp/>reader-&gt;<ref refid="classlbann_1_1csv__reader_1ae00ba61c2b9db1595ff62ab61a218cfb" kindref="member">fetch_line_label_response</ref>((*m_shuffled_indices)[0]);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__csv_1acf75e96923877e10c8ed499ec48f9320" kindref="member">m_vector_size</ref><sp/>=<sp/>v.size();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Bcast(&amp;<ref refid="classlbann_1_1data__store__csv_1acf75e96923877e10c8ed499ec48f9320" kindref="member">m_vector_size</ref>,<sp/>1,<sp/>MPI_INT,<sp/>0,<sp/><ref refid="classlbann_1_1generic__data__store_1ae2d2d61d5d766a7f525eedcb05e0dbf6" kindref="member">m_mpi_comm</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>populate_datastore()\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__csv_1a6184c48ec096372899e127235bb741da" kindref="member">populate_datastore</ref>();<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>exchange_data()\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__csv_1acacd039d3ca8caf8958b731a1ce382c6" kindref="member">exchange_data</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;data_store_csv::setup<sp/>time:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>tm1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classlbann_1_1data__store__csv_1a3125cf637d40e8908c68bb74690f06da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__csv_1a3125cf637d40e8908c68bb74690f06da" kindref="member">data_store_csv::get_data_buf_DataType</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_id,<sp/>std::vector&lt;DataType&gt;<sp/>*&amp;buf)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__csv_1a456bbbf6d09c1ec04cd6260cf11007d8" kindref="member">m_my_minibatch_data</ref>.find(data_id)<sp/>==<sp/><ref refid="classlbann_1_1data__store__csv_1a456bbbf6d09c1ec04cd6260cf11007d8" kindref="member">m_my_minibatch_data</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>find<sp/>data_id:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>m_my_minibatch_data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a5e64702aa4a38c8533fa52944a8473d5" kindref="member">m_extended_testing</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref><sp/>&amp;&amp;<sp/>first)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nrunning<sp/>extended<sp/>testing<sp/>(in<sp/>get_data_buf_DataType)\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DataType&gt;<sp/>v<sp/>=<sp/><ref refid="classlbann_1_1data__store__csv_1a8920e09beb3e40e59e2858daf95a6cf9" kindref="member">m_csv_reader</ref>-&gt;<ref refid="classlbann_1_1csv__reader_1ae00ba61c2b9db1595ff62ab61a218cfb" kindref="member">fetch_line_label_response</ref>(data_id);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/><ref refid="classlbann_1_1data__store__csv_1a456bbbf6d09c1ec04cd6260cf11007d8" kindref="member">m_my_minibatch_data</ref>[idx])<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>me:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1a87695bfd2d1ed0dbe01d99108e3f68b7" kindref="member">m_rank</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>extended<sp/>testing<sp/>failed<sp/>for<sp/>data_id<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>data_id;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>buf<sp/>=<sp/>&amp;<ref refid="classlbann_1_1data__store__csv_1a456bbbf6d09c1ec04cd6260cf11007d8" kindref="member">m_my_minibatch_data</ref>[data_id];</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classlbann_1_1data__store__csv_1ab0ebfe735a732205f7f3c66c876e20b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__csv_1ab0ebfe735a732205f7f3c66c876e20b9" kindref="member">data_store_csv::get_my_indices</ref>(std::unordered_set&lt;int&gt;<sp/>&amp;indices,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>indices.clear();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>&amp;v<sp/>=<sp/><ref refid="classlbann_1_1generic__data__store_1afd21d4f029e450328f8703dd72702e73" kindref="member">m_all_minibatch_indices</ref>[p];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>(*m_shuffled_indices)[t];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__csv_1a8f0ac398b2ed53c36594ca1baaf4bde0" kindref="member">m_data</ref>.find(index)<sp/>!=<sp/><ref refid="classlbann_1_1data__store__csv_1a8f0ac398b2ed53c36594ca1baaf4bde0" kindref="member">m_data</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indices.insert(index);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classlbann_1_1data__store__csv_1ae0deaa88a2f5164569f796f7d35510d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__csv_1ae0deaa88a2f5164569f796f7d35510d8" kindref="member">data_store_csv::get_indices</ref>(std::unordered_set&lt;int&gt;<sp/>&amp;indices,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>indices.clear();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>&amp;v<sp/>=<sp/><ref refid="classlbann_1_1generic__data__store_1afd21d4f029e450328f8703dd72702e73" kindref="member">m_all_minibatch_indices</ref>[p];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>indices.insert((*<ref refid="classlbann_1_1generic__data__store_1ad456f747ee07f63df15c60833dfb82ad" kindref="member">m_shuffled_indices</ref>)[t]);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classlbann_1_1data__store__csv_1acacd039d3ca8caf8958b731a1ce382c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__csv_1acacd039d3ca8caf8958b731a1ce382c6" kindref="member">data_store_csv::exchange_data</ref>()<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tm1<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//get<sp/>indices<sp/>I<sp/>need<sp/>for<sp/>the<sp/>next<sp/>epoch,<sp/>and<sp/>start<sp/>receives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>std::unordered_set&lt;int&gt;<sp/>indices;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__store__csv_1ae0deaa88a2f5164569f796f7d35510d8" kindref="member">get_indices</ref>(indices,<sp/><ref refid="classlbann_1_1generic__data__store_1a87695bfd2d1ed0dbe01d99108e3f68b7" kindref="member">m_rank</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>std::vector&lt;MPI_Request&gt;<sp/>recv_req(indices.size());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>std::vector&lt;MPI_Status&gt;<sp/>recv_status(indices.size());</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__store__csv_1a456bbbf6d09c1ec04cd6260cf11007d8" kindref="member">m_my_minibatch_data</ref>.clear();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>indices)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__csv_1a456bbbf6d09c1ec04cd6260cf11007d8" kindref="member">m_my_minibatch_data</ref>[t].resize(<ref refid="classlbann_1_1data__store__csv_1acf75e96923877e10c8ed499ec48f9320" kindref="member">m_vector_size</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>owner<sp/>=<sp/><ref refid="classlbann_1_1generic__data__store_1ad0de5ac2cdcf3f692acb252a019a2aed" kindref="member">get_index_owner</ref>(t);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(owner<sp/>&gt;=<sp/><ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref><sp/>or<sp/>owner<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ERROR:<sp/>bad<sp/>rank<sp/>for<sp/>owner<sp/>in<sp/>MPI_Irecv;<sp/>owner:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>owner<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>index:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>jj:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jj+1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>indices.size();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Irecv(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__csv_1a456bbbf6d09c1ec04cd6260cf11007d8" kindref="member">m_my_minibatch_data</ref>[t].<ref refid="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" kindref="member">data</ref>(),<sp/><ref refid="classlbann_1_1data__store__csv_1acf75e96923877e10c8ed499ec48f9320" kindref="member">m_vector_size</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType),<sp/><sp/>MPI_BYTE,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>owner,<sp/>t,<sp/><ref refid="classlbann_1_1generic__data__store_1ae2d2d61d5d766a7f525eedcb05e0dbf6" kindref="member">m_mpi_comm</ref>,<sp/>&amp;(recv_req[jj++]));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//start<sp/>sends<sp/>to<sp/>all<sp/>processors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;MPI_Request&gt;&gt;<sp/>send_req(<ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;MPI_Status&gt;&gt;<sp/>send_status(<ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p=0;<sp/>p&lt;<ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref>;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__csv_1ab0ebfe735a732205f7f3c66c876e20b9" kindref="member">get_my_indices</ref>(indices,<sp/>p);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>send_req[p].resize(indices.size());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>send_status[p].resize(indices.size());</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>jj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>indices)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__csv_1a8f0ac398b2ed53c36594ca1baaf4bde0" kindref="member">m_data</ref>.find(t)<sp/>==<sp/><ref refid="classlbann_1_1data__store__csv_1a8f0ac398b2ed53c36594ca1baaf4bde0" kindref="member">m_data</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_data.find(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>failed.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__csv_1a8f0ac398b2ed53c36594ca1baaf4bde0" kindref="member">m_data</ref>[t].size()<sp/>!=<sp/>(size_t)<ref refid="classlbann_1_1data__store__csv_1acf75e96923877e10c8ed499ec48f9320" kindref="member">m_vector_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_data[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;].size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__store__csv_1a8f0ac398b2ed53c36594ca1baaf4bde0" kindref="member">m_data</ref>[t].size()</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>should<sp/>be:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__store__csv_1acf75e96923877e10c8ed499ec48f9320" kindref="member">m_vector_size</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jj+1</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>indices.size()</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_reader-&gt;get_role:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a92982e1b399f37e2ead5aa440883cba5" kindref="member">get_role</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Isend(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__csv_1a8f0ac398b2ed53c36594ca1baaf4bde0" kindref="member">m_data</ref>[t].<ref refid="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" kindref="member">data</ref>(),<sp/><ref refid="classlbann_1_1data__store__csv_1acf75e96923877e10c8ed499ec48f9320" kindref="member">m_vector_size</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType),<sp/><sp/>MPI_BYTE,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,<sp/>t,<sp/><ref refid="classlbann_1_1generic__data__store_1ae2d2d61d5d766a7f525eedcb05e0dbf6" kindref="member">m_mpi_comm</ref>,<sp/>&amp;(send_req[p][jj++]));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//wait<sp/>for<sp/>sends<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;send_req.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Waitall(send_req[i].size(),<sp/>send_req[i].<ref refid="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" kindref="member">data</ref>(),<sp/>send_status[i].<ref refid="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" kindref="member">data</ref>());</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//wait<sp/>for<sp/>recvs<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>MPI_Waitall(recv_req.size(),<sp/>recv_req.data(),<sp/>recv_status.data());</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;role:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a92982e1b399f37e2ead5aa440883cba5" kindref="member">get_role</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>data_store_csv::exchange_data()<sp/>time:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>tm1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="classlbann_1_1data__store__csv_1a6184c48ec096372899e127235bb741da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__csv_1a6184c48ec096372899e127235bb741da" kindref="member">data_store_csv::populate_datastore</ref>()<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>:<sp/><ref refid="classlbann_1_1generic__data__store_1abd38f8d8aab0648959e09d011abfe20a" kindref="member">m_my_datastore_indices</ref>)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__csv_1a8f0ac398b2ed53c36594ca1baaf4bde0" kindref="member">m_data</ref>[idx]<sp/>=<sp/><ref refid="classlbann_1_1data__store__csv_1a8920e09beb3e40e59e2858daf95a6cf9" kindref="member">m_csv_reader</ref>-&gt;<ref refid="classlbann_1_1csv__reader_1ae00ba61c2b9db1595ff62ab61a218cfb" kindref="member">fetch_line_label_response</ref>(idx);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__csv_1a8f0ac398b2ed53c36594ca1baaf4bde0" kindref="member">m_data</ref>[idx].size()<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/><ref refid="classlbann_1_1data__store__csv_1acf75e96923877e10c8ed499ec48f9320" kindref="member">m_vector_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_data[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>idx<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;].size()<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__store__csv_1a8f0ac398b2ed53c36594ca1baaf4bde0" kindref="member">m_data</ref>[idx].size()</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>but<sp/>should<sp/>be:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_vector_size</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>m_data.size:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__store__csv_1a8f0ac398b2ed53c36594ca1baaf4bde0" kindref="member">m_data</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1a87695bfd2d1ed0dbe01d99108e3f68b7" kindref="member">m_rank</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>err.str()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//throw<sp/>lbann_exception(err.str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/data_store/data_store_csv.cpp"/>
  </compounddef>
</doxygen>
