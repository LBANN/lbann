<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1lbann__callback__print" kind="class" language="C++" prot="public">
    <compoundname>lbann::lbann_callback_print</compoundname>
    <basecompoundref refid="classlbann_1_1lbann__callback" prot="public" virt="non-virtual">lbann::lbann_callback</basecompoundref>
    <includes refid="callback__print_8hpp" local="no">callback_print.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1lbann__callback__print_1ac31f404ac68a2cb24cd3d544d128f1d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_callback_print::lbann_callback_print</definition>
        <argsstring>(int batch_interval=1)</argsstring>
        <name>lbann_callback_print</name>
        <param>
          <type>int</type>
          <declname>batch_interval</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" line="42" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" bodystart="42" bodyend="42"/>
        <references refid="classlbann_1_1lbann__callback__print_1a4924cd2aebecdca00dbc0ac9d71df666">operator=</references>
        <referencedby refid="classlbann_1_1lbann__callback__print_1aa75e076c3d840a2186825be2e8dbac8c" compoundref="callback__print_8hpp" startline="45" endline="45">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__print_1aca5b4f8a44d6194a31c08aabc59c9748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_callback_print::lbann_callback_print</definition>
        <argsstring>(const lbann_callback_print &amp;)=default</argsstring>
        <name>lbann_callback_print</name>
        <param>
          <type>const <ref refid="classlbann_1_1lbann__callback__print" kindref="compound">lbann_callback_print</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__print_1a4924cd2aebecdca00dbc0ac9d71df666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1lbann__callback__print" kindref="compound">lbann_callback_print</ref> &amp;</type>
        <definition>lbann_callback_print&amp; lbann::lbann_callback_print::operator=</definition>
        <argsstring>(const lbann_callback_print &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1lbann__callback__print" kindref="compound">lbann_callback_print</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" line="44" column="1"/>
        <referencedby refid="classlbann_1_1lbann__callback__print_1ac31f404ac68a2cb24cd3d544d128f1d9" compoundref="callback__print_8hpp" startline="42" endline="42">lbann_callback_print</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__print_1aa75e076c3d840a2186825be2e8dbac8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1lbann__callback__print" kindref="compound">lbann_callback_print</ref> *</type>
        <definition>lbann_callback_print* lbann::lbann_callback_print::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a9f545d1269a8c7af335625d049691f26">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" line="45" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" bodystart="45" bodyend="45"/>
        <references refid="classlbann_1_1lbann__callback__print_1ac31f404ac68a2cb24cd3d544d128f1d9" compoundref="callback__print_8hpp" startline="42" endline="42">lbann_callback_print</references>
        <references refid="classlbann_1_1lbann__callback__print_1a405e20e9fa137bd377faf692cc3c54aa" compoundref="callback__print_8cpp" startline="36" endline="44">setup</references>
        <references refid="classlbann_1_1lbann__callback__print_1ae3c99d7c56ac33ab7e09880134b43cad" compoundref="callback__print_8cpp" startline="46" endline="116">on_epoch_begin</references>
        <references refid="classlbann_1_1lbann__callback__print_1a28f2b022193c62f3af40364d2c5b14b2" compoundref="callback__print_8cpp" startline="118" endline="120">on_epoch_end</references>
        <references refid="classlbann_1_1lbann__callback__print_1a7090572e2f89e7994872b5fdb612dd3f" compoundref="callback__print_8cpp" startline="122" endline="124">on_validation_end</references>
        <references refid="classlbann_1_1lbann__callback__print_1a1f72a486004af859823f75c311dcff42" compoundref="callback__print_8cpp" startline="126" endline="128">on_test_end</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__print_1a405e20e9fa137bd377faf692cc3c54aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_print::setup</definition>
        <argsstring>(model *m) override</argsstring>
        <name>setup</name>
        <reimplements refid="classlbann_1_1lbann__callback_1aab5086e27d9bb0a7c7ee8ffc1bc58671">setup</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called once to set up the callback (after all layers are set up). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" line="46" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_print.cpp" bodystart="36" bodyend="44"/>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <references refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" compoundref="model_8hpp" startline="123" endline="125">lbann::model::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <references refid="base_8hpp_1a78b291de8c80b35c360c22d46d44498a" compoundref="base_8hpp" startline="188">LBANN_MAKE_STR</references>
        <referencedby refid="classlbann_1_1lbann__callback__print_1aa75e076c3d840a2186825be2e8dbac8c" compoundref="callback__print_8hpp" startline="45" endline="45">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__print_1ae3c99d7c56ac33ab7e09880134b43cad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_print::on_epoch_begin</definition>
        <argsstring>(model *m) override</argsstring>
        <name>on_epoch_begin</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a4ed9498763412a55953fff71ee3a9456">on_epoch_begin</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called at the beginning of each epoch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" line="47" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_print.cpp" bodystart="46" bodyend="116"/>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <references refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" compoundref="model_8hpp" startline="123" endline="125">lbann::model::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <references refid="classlbann_1_1model_1ae14f4b2cc8882b3739d4aeb25d9e73c9" compoundref="model_8hpp" startline="114" endline="114">lbann::model::get_layers</references>
        <references refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" compoundref="base_8hpp" startline="154">LBANN_ERROR</references>
        <references refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" compoundref="model_8hpp" startline="128" endline="130">lbann::model::get_cur_epoch</references>
        <references refid="classlbann_1_1generic__input__layer_1aa0fa6597ffce537f7cfba29dcc754ee1" compoundref="generic__input__layer_8hpp" startline="290" endline="293">lbann::generic_input_layer::get_num_iterations_per_epoch</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <references refid="classlbann_1_1generic__input__layer_1ac07b58c08183995852889dacfc69e459" compoundref="generic__input__layer_8hpp" startline="331" endline="334">lbann::generic_input_layer::get_global_mini_batch_size</references>
        <references refid="classlbann_1_1generic__input__layer_1a7ccb2e0dd8a9d9ab60e1e9d04bb80f2d" compoundref="generic__input__layer_8hpp" startline="336" endline="339">lbann::generic_input_layer::get_global_last_mini_batch_size</references>
        <references refid="classlbann_1_1generic__input__layer_1a8af40ec1991900bf23b78e6429256b9c" compoundref="generic__input__layer_8hpp" startline="308" endline="311">lbann::generic_input_layer::get_mini_batch_size</references>
        <references refid="classlbann_1_1generic__input__layer_1a5e3c66c5726ab4a00d75bdcd2c07b640" compoundref="generic__input__layer_8hpp" startline="313" endline="316">lbann::generic_input_layer::get_last_mini_batch_size</references>
        <references refid="classlbann_1_1generic__input__layer_1a1c2a503d4009b6360d96db128796983c" compoundref="generic__input__layer_8hpp" startline="350" endline="353">lbann::generic_input_layer::get_world_master_mini_batch_adjustment</references>
        <referencedby refid="classlbann_1_1lbann__callback__print_1aa75e076c3d840a2186825be2e8dbac8c" compoundref="callback__print_8hpp" startline="45" endline="45">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__print_1a28f2b022193c62f3af40364d2c5b14b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_print::on_epoch_end</definition>
        <argsstring>(model *m) override</argsstring>
        <name>on_epoch_end</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a1fc71110e7f754bf73c9e0f344a448a5">on_epoch_end</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called immediate after the end of each epoch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" line="48" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_print.cpp" bodystart="118" bodyend="120"/>
        <references refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">report_results</references>
        <referencedby refid="classlbann_1_1lbann__callback__print_1aa75e076c3d840a2186825be2e8dbac8c" compoundref="callback__print_8hpp" startline="45" endline="45">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__print_1a7090572e2f89e7994872b5fdb612dd3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_print::on_validation_end</definition>
        <argsstring>(model *m) override</argsstring>
        <name>on_validation_end</name>
        <reimplements refid="classlbann_1_1lbann__callback_1adc16e42e5064dc2dc8d84dfbfc1325eb">on_validation_end</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called immediately after the end of validation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" line="49" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_print.cpp" bodystart="122" bodyend="124"/>
        <references refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">report_results</references>
        <referencedby refid="classlbann_1_1lbann__callback__print_1aa75e076c3d840a2186825be2e8dbac8c" compoundref="callback__print_8hpp" startline="45" endline="45">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__print_1a1f72a486004af859823f75c311dcff42" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_print::on_test_end</definition>
        <argsstring>(model *m) override</argsstring>
        <name>on_test_end</name>
        <reimplements refid="classlbann_1_1lbann__callback_1accbad4dd004c1ced33642db6398b2efe">on_test_end</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called immediately after the end of testing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" line="50" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_print.cpp" bodystart="126" bodyend="128"/>
        <references refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">report_results</references>
        <referencedby refid="classlbann_1_1lbann__callback__print_1aa75e076c3d840a2186825be2e8dbac8c" compoundref="callback__print_8hpp" startline="45" endline="45">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__print_1a212640539d73eec3317572150a11b71b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::lbann_callback_print::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a7522c7a14f1d6a1ea762cc2d7248eb3a">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return this callback&apos;s name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" line="51" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" bodystart="51" bodyend="51"/>
        <references refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">report_results</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_print::report_results</definition>
        <argsstring>(model *m)</argsstring>
        <name>report_results</name>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print objective function and metrics to standard output. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" line="55" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_print.cpp" bodystart="130" bodyend="222"/>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <references refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" compoundref="model_8hpp" startline="123" endline="125">lbann::model::get_comm</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" compoundref="model_8hpp" startline="128" endline="130">lbann::model::get_cur_epoch</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <references refid="classlbann_1_1lbann__comm_1ad8a5790dfa9191d4b4f889e8707e57f1" compoundref="comm_8hpp" startline="140" endline="142">lbann::lbann_comm::am_model_master</references>
        <references refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" compoundref="comm_8hpp" startline="152" endline="154">lbann::lbann_comm::get_num_models</references>
        <references refid="classlbann_1_1model_1aee5530467523924a662dec891b9a7993" compoundref="model_8hpp" startline="101" endline="103">lbann::model::get_objective_function</references>
        <references refid="classlbann_1_1objective__function_1a0aa271e497363e97ba3741292961d47d" compoundref="objective__function_8cpp" startline="113" endline="122">lbann::objective_function::get_mean_value</references>
        <references refid="classlbann_1_1objective__function_1a19078ce481d321627adfe0151112602e" compoundref="objective__function_8cpp" startline="124" endline="130">lbann::objective_function::get_statistics_num_samples</references>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <references refid="classlbann_1_1lbann__comm_1a142c396a4d4a2c16ee234b813e7e45a6" compoundref="comm_8hpp" startline="283" endline="285">lbann::lbann_comm::intermodel_gather</references>
        <references refid="classlbann_1_1lbann__comm_1aa682313f366e0b7cf781bc1872911f65" compoundref="comm_8hpp" startline="136" endline="138">lbann::lbann_comm::get_world_master</references>
        <references refid="classlbann_1_1model_1a84c738fd219b8c2936e76a9360f68936" compoundref="model_8hpp" startline="106" endline="108">lbann::model::get_metrics</references>
        <references refid="classlbann_1_1lbann__comm_1adbd99fe6c8df2689217c9ee16d6234d7" compoundref="comm_8hpp" startline="132" endline="134">lbann::lbann_comm::get_intermodel_master</references>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a212640539d73eec3317572150a11b71b" compoundref="callback__print_8hpp" startline="51" endline="51">name</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a28f2b022193c62f3af40364d2c5b14b2" compoundref="callback__print_8cpp" startline="118" endline="120">on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a7090572e2f89e7994872b5fdb612dd3f" compoundref="callback__print_8cpp" startline="122" endline="124">on_validation_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a1f72a486004af859823f75c311dcff42" compoundref="callback__print_8cpp" startline="126" endline="128">on_test_end</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Periodically print computational results. Prints average objective function value and metric scores after each training epoch and evaluation. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1450">
        <label>lbann::lbann_callback</label>
        <link refid="classlbann_1_1lbann__callback"/>
      </node>
      <node id="1449">
        <label>lbann::lbann_callback_print</label>
        <link refid="classlbann_1_1lbann__callback__print"/>
        <childnode refid="1450" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1452">
        <label>lbann::lbann_callback</label>
        <link refid="classlbann_1_1lbann__callback"/>
        <childnode refid="1453" relation="usage">
          <edgelabel>m_summarizer</edgelabel>
        </childnode>
      </node>
      <node id="1453">
        <label>lbann::lbann_summary</label>
        <link refid="classlbann_1_1lbann__summary"/>
      </node>
      <node id="1451">
        <label>lbann::lbann_callback_print</label>
        <link refid="classlbann_1_1lbann__callback__print"/>
        <childnode refid="1452" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" line="40" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_print.hpp" bodystart="40" bodyend="57"/>
    <listofallmembers>
      <member refid="classlbann_1_1lbann__callback__print_1aa75e076c3d840a2186825be2e8dbac8c" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>copy</name></member>
      <member refid="classlbann_1_1lbann__callback_1acec888932129f93ba2a0077192467c9e" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_print</scope><name>get_batch_interval</name></member>
      <member refid="classlbann_1_1lbann__callback_1a679057298a41ddd47f08c157f756c584" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_print</scope><name>lbann_callback</name></member>
      <member refid="classlbann_1_1lbann__callback_1a91d994616b8bf98685ac32939228f96a" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_print</scope><name>lbann_callback</name></member>
      <member refid="classlbann_1_1lbann__callback__print_1ac31f404ac68a2cb24cd3d544d128f1d9" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_print</scope><name>lbann_callback_print</name></member>
      <member refid="classlbann_1_1lbann__callback__print_1aca5b4f8a44d6194a31c08aabc59c9748" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_print</scope><name>lbann_callback_print</name></member>
      <member refid="classlbann_1_1lbann__callback_1a6126e310e9924398c18ccf76bb91c705" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_print</scope><name>m_batch_interval</name></member>
      <member refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_print</scope><name>m_summarizer</name></member>
      <member refid="classlbann_1_1lbann__callback__print_1a212640539d73eec3317572150a11b71b" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>name</name></member>
      <member refid="classlbann_1_1lbann__callback_1a2c0709a26179d115ff85b7561786ee27" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_backward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1abeb1e486e259fd358332abf1e952f630" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_backward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1af183624e63ba65e0003fa988f53dee0c" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_backward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1aba03b59c056ace8094095c08e39b9ac4" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_backward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a9ecf4e44cd4021cdd687de14c850cc83" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_batch_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a895ca577e358601fcae5c04749f60535" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_batch_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a3462e54126adbd0082c22c98d8de5468" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_batch_evaluate_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1ad10891b8ab3de74ee1a70e6255e7d58a" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_batch_evaluate_end</name></member>
      <member refid="classlbann_1_1lbann__callback__print_1ae3c99d7c56ac33ab7e09880134b43cad" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_epoch_begin</name></member>
      <member refid="classlbann_1_1lbann__callback__print_1a28f2b022193c62f3af40364d2c5b14b2" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_epoch_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4a2cff48a688bb56ed14b8b53344f945" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_evaluate_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a044174864e4981a1dac093d58e8c4d6c" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_evaluate_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a0794f3fb88db6fef53f0e2f235f94424" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_evaluate_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1ae23c5a61b81dbdfbd79736ac2b6035aa" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_evaluate_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a22ed977371173105b4aad3a20b9c59dc" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1ab96adb1d77180e00fdd668cd381323fd" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a79a0bb407852d7b330b74373647ffe46" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a5eff0a59fbce98a981d9cdd0547a3ad5" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a1a9248b305f06419889c1b3b0f0893d8" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_optimize_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a497e750da160e0071ce8864ccc3a1344" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_optimize_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a235195d5fa4461835b861a03a5c0278f" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_optimize_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4653e2903bfd3903709a81eaf7eabc1a" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_optimize_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1ace7452239c9ad7aa6247e9496adbcffe" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_phase_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a716bff45bdc5a88eed09c2231f5bc93a" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_test_begin</name></member>
      <member refid="classlbann_1_1lbann__callback__print_1a1f72a486004af859823f75c311dcff42" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_test_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a7c8f0d211967ccc5219144e92571ab26" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_train_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1af28078b0ddaef45124465bef01eefedf" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_train_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a2bde303671110519388d9962bc3e5583" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_validation_begin</name></member>
      <member refid="classlbann_1_1lbann__callback__print_1a7090572e2f89e7994872b5fdb612dd3f" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>on_validation_end</name></member>
      <member refid="classlbann_1_1lbann__callback__print_1a4924cd2aebecdca00dbc0ac9d71df666" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_print</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__callback_1a66b0a8c00a273669fa782ece59e8898b" prot="public" virt="non-virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_print</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" prot="private" virt="non-virtual"><scope>lbann::lbann_callback_print</scope><name>report_results</name></member>
      <member refid="classlbann_1_1lbann__callback_1a02d924df2f8ca851578dc76d9015e48d" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_print</scope><name>set_summarizer</name></member>
      <member refid="classlbann_1_1lbann__callback__print_1a405e20e9fa137bd377faf692cc3c54aa" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>setup</name></member>
      <member refid="classlbann_1_1lbann__callback_1ac91abaec389f8d2547512c45ae587304" prot="public" virt="virtual"><scope>lbann::lbann_callback_print</scope><name>~lbann_callback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
