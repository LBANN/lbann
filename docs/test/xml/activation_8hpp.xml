<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="activation_8hpp" kind="file" language="C++">
    <compoundname>activation.hpp</compoundname>
    <includes refid="layer_8hpp" local="yes">lbann/layers/layer.hpp</includes>
    <includes refid="exception_8hpp" local="yes">lbann/utils/exception.hpp</includes>
    <includedby refid="atan_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/atan.hpp</includedby>
    <includedby refid="bent__identity_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/bent_identity.hpp</includedby>
    <includedby refid="elu_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/elu.hpp</includedby>
    <includedby refid="exponential_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/exponential.hpp</includedby>
    <includedby refid="identity_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/identity.hpp</includedby>
    <includedby refid="leaky__relu_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/leaky_relu.hpp</includedby>
    <includedby refid="power_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/power.hpp</includedby>
    <includedby refid="relu_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/relu.hpp</includedby>
    <includedby refid="selu_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/selu.hpp</includedby>
    <includedby refid="sigmoid_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/sigmoid.hpp</includedby>
    <includedby refid="smooth__relu_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/smooth_relu.hpp</includedby>
    <includedby refid="softmax_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/softmax.hpp</includedby>
    <includedby refid="softplus_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/softplus.hpp</includedby>
    <includedby refid="swish_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/swish.hpp</includedby>
    <includedby refid="tanh_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/tanh.hpp</includedby>
    <includedby refid="fully__connected_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp</includedby>
    <incdepgraph>
      <node id="6630">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="6631" relation="include">
        </childnode>
        <childnode refid="6627" relation="include">
        </childnode>
        <childnode refid="6617" relation="include">
        </childnode>
        <childnode refid="6626" relation="include">
        </childnode>
      </node>
      <node id="6642">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="6617" relation="include">
        </childnode>
        <childnode refid="6618" relation="include">
        </childnode>
      </node>
      <node id="6618">
        <label>El.hpp</label>
      </node>
      <node id="6617">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="6618" relation="include">
        </childnode>
        <childnode refid="6619" relation="include">
        </childnode>
        <childnode refid="6620" relation="include">
        </childnode>
        <childnode refid="6625" relation="include">
        </childnode>
      </node>
      <node id="6631">
        <label>string</label>
      </node>
      <node id="6639">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="6627" relation="include">
        </childnode>
        <childnode refid="6617" relation="include">
        </childnode>
        <childnode refid="6626" relation="include">
        </childnode>
        <childnode refid="6634" relation="include">
        </childnode>
      </node>
      <node id="6645">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="6646" relation="include">
        </childnode>
      </node>
      <node id="6628">
        <label>map</label>
      </node>
      <node id="6644">
        <label>unordered_set</label>
      </node>
      <node id="6638">
        <label>exception</label>
      </node>
      <node id="6641">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="6617" relation="include">
        </childnode>
        <childnode refid="6626" relation="include">
        </childnode>
        <childnode refid="6634" relation="include">
        </childnode>
        <childnode refid="6639" relation="include">
        </childnode>
      </node>
      <node id="6622">
        <label>cstdio</label>
      </node>
      <node id="6635">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6631" relation="include">
        </childnode>
      </node>
      <node id="6624">
        <label>cxxabi.h</label>
      </node>
      <node id="6634">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="6617" relation="include">
        </childnode>
        <childnode refid="6626" relation="include">
        </childnode>
        <childnode refid="6635" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
        <childnode refid="6638" relation="include">
        </childnode>
      </node>
      <node id="6615">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/activation.hpp</label>
        <link refid="activation_8hpp"/>
        <childnode refid="6616" relation="include">
        </childnode>
        <childnode refid="6634" relation="include">
        </childnode>
      </node>
      <node id="6627">
        <label>vector</label>
      </node>
      <node id="6626">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="6627" relation="include">
        </childnode>
        <childnode refid="6628" relation="include">
        </childnode>
        <childnode refid="6629" relation="include">
        </childnode>
        <childnode refid="6617" relation="include">
        </childnode>
      </node>
      <node id="6643">
        <label>lbann.pb.h</label>
      </node>
      <node id="6621">
        <label>cstdlib</label>
      </node>
      <node id="6637">
        <label>iostream</label>
      </node>
      <node id="6632">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="6633" relation="include">
        </childnode>
        <childnode refid="6617" relation="include">
        </childnode>
        <childnode refid="6626" relation="include">
        </childnode>
        <childnode refid="6634" relation="include">
        </childnode>
        <childnode refid="6639" relation="include">
        </childnode>
        <childnode refid="6640" relation="include">
        </childnode>
        <childnode refid="6631" relation="include">
        </childnode>
        <childnode refid="6644" relation="include">
        </childnode>
      </node>
      <node id="6616">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="6617" relation="include">
        </childnode>
        <childnode refid="6626" relation="include">
        </childnode>
        <childnode refid="6630" relation="include">
        </childnode>
        <childnode refid="6632" relation="include">
        </childnode>
        <childnode refid="6634" relation="include">
        </childnode>
        <childnode refid="6639" relation="include">
        </childnode>
        <childnode refid="6645" relation="include">
        </childnode>
        <childnode refid="6642" relation="include">
        </childnode>
        <childnode refid="6643" relation="include">
        </childnode>
        <childnode refid="6631" relation="include">
        </childnode>
        <childnode refid="6627" relation="include">
        </childnode>
      </node>
      <node id="6646">
        <label>chrono</label>
      </node>
      <node id="6636">
        <label>csignal</label>
      </node>
      <node id="6640">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="6631" relation="include">
        </childnode>
        <childnode refid="6617" relation="include">
        </childnode>
        <childnode refid="6626" relation="include">
        </childnode>
        <childnode refid="6634" relation="include">
        </childnode>
        <childnode refid="6639" relation="include">
        </childnode>
        <childnode refid="6641" relation="include">
        </childnode>
        <childnode refid="6642" relation="include">
        </childnode>
        <childnode refid="6643" relation="include">
        </childnode>
      </node>
      <node id="6625">
        <label>lbann_config.hpp</label>
      </node>
      <node id="6633">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="6620">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="6621" relation="include">
        </childnode>
        <childnode refid="6622" relation="include">
        </childnode>
        <childnode refid="6623" relation="include">
        </childnode>
        <childnode refid="6624" relation="include">
        </childnode>
      </node>
      <node id="6619">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="6618" relation="include">
        </childnode>
      </node>
      <node id="6629">
        <label>typeindex</label>
      </node>
      <node id="6623">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6655">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="6656" relation="include">
        </childnode>
        <childnode refid="6657" relation="include">
        </childnode>
        <childnode refid="6658" relation="include">
        </childnode>
        <childnode refid="6659" relation="include">
        </childnode>
        <childnode refid="6660" relation="include">
        </childnode>
        <childnode refid="6661" relation="include">
        </childnode>
        <childnode refid="6662" relation="include">
        </childnode>
        <childnode refid="6663" relation="include">
        </childnode>
        <childnode refid="6653" relation="include">
        </childnode>
      </node>
      <node id="6674">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/selu.hpp</label>
        <link refid="selu_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6673">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/relu.hpp</label>
        <link refid="relu_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6669">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/exponential.hpp</label>
        <link refid="exponential_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6660">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/model_factory.cpp</label>
        <link refid="model__factory_8cpp"/>
      </node>
      <node id="6670">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/identity.hpp</label>
        <link refid="identity_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6652">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="6653">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="6650" relation="include">
        </childnode>
        <childnode refid="6654" relation="include">
        </childnode>
        <childnode refid="6655" relation="include">
        </childnode>
        <childnode refid="6664" relation="include">
        </childnode>
      </node>
      <node id="6651">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="6652" relation="include">
        </childnode>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6676">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/smooth_relu.hpp</label>
        <link refid="smooth__relu_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6657">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp</label>
        <link refid="layer__factory_8cpp"/>
      </node>
      <node id="6654">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/utils/protobuf_utils.cpp</label>
        <link refid="protobuf__utils_8cpp"/>
      </node>
      <node id="6679">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/softplus.hpp</label>
        <link refid="softplus_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6665">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/init_image_data_readers.cpp</label>
        <link refid="init__image__data__readers_8cpp"/>
      </node>
      <node id="6677">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/softmax.hpp</label>
        <link refid="softmax_8hpp"/>
        <childnode refid="6678" relation="include">
        </childnode>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6661">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/objective_function_factory.cpp</label>
        <link refid="objective__function__factory_8cpp"/>
      </node>
      <node id="6680">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/swish.hpp</label>
        <link refid="swish_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6650">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp</label>
        <link refid="proto__common_8cpp"/>
      </node>
      <node id="6659">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/metric_factory.cpp</label>
        <link refid="metric__factory_8cpp"/>
      </node>
      <node id="6668">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/elu.hpp</label>
        <link refid="elu_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6647">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/activation.hpp</label>
        <link refid="activation_8hpp"/>
        <childnode refid="6648" relation="include">
        </childnode>
        <childnode refid="6667" relation="include">
        </childnode>
        <childnode refid="6668" relation="include">
        </childnode>
        <childnode refid="6669" relation="include">
        </childnode>
        <childnode refid="6670" relation="include">
        </childnode>
        <childnode refid="6671" relation="include">
        </childnode>
        <childnode refid="6672" relation="include">
        </childnode>
        <childnode refid="6673" relation="include">
        </childnode>
        <childnode refid="6674" relation="include">
        </childnode>
        <childnode refid="6675" relation="include">
        </childnode>
        <childnode refid="6676" relation="include">
        </childnode>
        <childnode refid="6677" relation="include">
        </childnode>
        <childnode refid="6679" relation="include">
        </childnode>
        <childnode refid="6680" relation="include">
        </childnode>
        <childnode refid="6681" relation="include">
        </childnode>
        <childnode refid="6682" relation="include">
        </childnode>
      </node>
      <node id="6649">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="6650" relation="include">
        </childnode>
        <childnode refid="6651" relation="include">
        </childnode>
        <childnode refid="6653" relation="include">
        </childnode>
        <childnode refid="6666" relation="include">
        </childnode>
      </node>
      <node id="6681">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/tanh.hpp</label>
        <link refid="tanh_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6682">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp</label>
        <link refid="fully__connected_8hpp"/>
        <childnode refid="6683" relation="include">
        </childnode>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6664">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/init_image_data_readers.hpp</label>
        <link refid="init__image__data__readers_8hpp"/>
        <childnode refid="6665" relation="include">
        </childnode>
        <childnode refid="6650" relation="include">
        </childnode>
      </node>
      <node id="6672">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/power.hpp</label>
        <link refid="power_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6675">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/sigmoid.hpp</label>
        <link refid="sigmoid_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6662">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/optimizer_factory.cpp</label>
        <link refid="optimizer__factory_8cpp"/>
      </node>
      <node id="6663">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/weights_factory.cpp</label>
        <link refid="weights__factory_8cpp"/>
      </node>
      <node id="6678">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/layers/activations/softmax.cpp</label>
        <link refid="softmax_8cpp"/>
      </node>
      <node id="6656">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp</label>
        <link refid="callback__factory_8cpp"/>
      </node>
      <node id="6683">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/layers/learning/fully_connected.cpp</label>
        <link refid="fully__connected_8cpp"/>
      </node>
      <node id="6666">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/protobuf_utils.hpp</label>
        <link refid="protobuf__utils_8hpp"/>
        <childnode refid="6654" relation="include">
        </childnode>
      </node>
      <node id="6648">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/atan.hpp</label>
        <link refid="atan_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6658">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_graph_factory.cpp</label>
        <link refid="layer__graph__factory_8cpp"/>
      </node>
      <node id="6671">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/leaky_relu.hpp</label>
        <link refid="leaky__relu_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
      <node id="6667">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/bent_identity.hpp</label>
        <link refid="bent__identity_8hpp"/>
        <childnode refid="6649" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classlbann_1_1activation__layer" prot="public">lbann::activation_layer</innerclass>
    <innerclass refid="classlbann_1_1entrywise__activation__layer" prot="public">lbann::entrywise_activation_layer</innerclass>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LBANN_LAYER_ACTIVATION_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LBANN_LAYER_ACTIVATION_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="layer_8hpp" kindref="compound">lbann/layers/layer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">lbann/utils/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classlbann_1_1activation__layer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1activation__layer" kindref="compound">activation_layer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41" refid="classlbann_1_1activation__layer_1a7df6f5d21ccdd5a24ad6233a52807c6d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1activation__layer_1a7df6f5d21ccdd5a24ad6233a52807c6d" kindref="member">activation_layer</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>)<sp/>:<sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>(comm)<sp/>{}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classlbann_1_1entrywise__activation__layer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1entrywise__activation__layer" kindref="compound">entrywise_activation_layer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1activation__layer" kindref="compound">activation_layer</ref><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50" refid="classlbann_1_1entrywise__activation__layer_1aada1d9200612dcd13259799ef327c557" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1entrywise__activation__layer_1aada1d9200612dcd13259799ef327c557" kindref="member">entrywise_activation_layer</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>)<sp/>:<sp/><ref refid="classlbann_1_1activation__layer" kindref="compound">activation_layer</ref>(comm)<sp/>{}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>DataType<sp/>activation(DataType<sp/>x)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>DataType<sp/>activation_derivative(DataType<sp/>x)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classlbann_1_1entrywise__activation__layer_1a2ec05802115c5f029fa106c88ada89db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1entrywise__activation__layer_1a2ec05802115c5f029fa106c88ada89db" kindref="member">fp_compute</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" kindref="member">m_using_gpus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fp_compute_gpu();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fp_compute_cpu();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classlbann_1_1entrywise__activation__layer_1af632a590e26f335205994f1d715ae1a4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1entrywise__activation__layer_1af632a590e26f335205994f1d715ae1a4" kindref="member">bp_compute</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" kindref="member">m_using_gpus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bp_compute_gpu();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bp_compute_cpu();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classlbann_1_1entrywise__activation__layer_1aeb270dda0c2ec95dd34c35e1e8300f11" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1entrywise__activation__layer_1aeb270dda0c2ec95dd34c35e1e8300f11" kindref="member">fp_compute_gpu</ref>()<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;entrywise_activation_layer:<sp/>no<sp/>forward<sp/>propagation<sp/>GPU<sp/>implementation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classlbann_1_1entrywise__activation__layer_1a569674cb4c0f50ea76acc0733fc53ba9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1entrywise__activation__layer_1a569674cb4c0f50ea76acc0733fc53ba9" kindref="member">bp_compute_gpu</ref>()<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;entrywise_activation_layer:<sp/>no<sp/>backward<sp/>propagation<sp/>GPU<sp/>implementation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classlbann_1_1entrywise__activation__layer_1a8d4b0376b9783414c1cb7812351122ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1entrywise__activation__layer_1a8d4b0376b9783414c1cb7812351122ce" kindref="member">fp_compute_cpu</ref>()<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>and<sp/>output<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_input<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a35397843bb0c84030000c7d872229acb" kindref="member">get_local_prev_activations</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_output<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a4248f27acebf72b7b7b3ee39c8bcb62a" kindref="member">get_local_activations</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrix<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_height<sp/>=<sp/>local_input.Height();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_width<sp/>=<sp/>local_input.Width();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>input_ldim<sp/>=<sp/>local_input.LDim();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_ldim<sp/>=<sp/>local_output.LDim();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType*<sp/>__restrict__<sp/>input_buffer<sp/>=<sp/>local_input.LockedBuffer();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType*<sp/>__restrict__<sp/>output_buffer<sp/>=<sp/>local_output.Buffer();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>activation<sp/>function<sp/>to<sp/>each<sp/>input<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_ldim<sp/>==<sp/>local_height<sp/>&amp;&amp;<sp/>output_ldim<sp/>==<sp/>local_height)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contiguous<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size<sp/>=<sp/>local_height<sp/>*<sp/>local_width;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>buffer_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_buffer[i]<sp/>=<sp/>activation(input_buffer[i]);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-contiguous<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>local_height;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x<sp/>=<sp/>input_buffer[row<sp/>+<sp/>col<sp/>*<sp/>input_ldim];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>y<sp/>=<sp/>output_buffer[row<sp/>+<sp/>col<sp/>*<sp/>output_ldim];</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>activation(x);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classlbann_1_1entrywise__activation__layer_1a38c2c090f26fb8ca269bef45989564a5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1entrywise__activation__layer_1a38c2c090f26fb8ca269bef45989564a5" kindref="member">bp_compute_cpu</ref>()<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>and<sp/>output<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_input<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a35397843bb0c84030000c7d872229acb" kindref="member">get_local_prev_activations</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_gradient_wrt_output<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a82827edc5e869960144f3ccb2172bfcd" kindref="member">get_local_prev_error_signals</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_gradient_wrt_input<sp/>=<sp/><ref refid="classlbann_1_1Layer_1af178d00b9d878aa7d87754bff2a91f3a" kindref="member">get_local_error_signals</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrix<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_height<sp/>=<sp/>local_input.Height();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_width<sp/>=<sp/>local_input.Width();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>input_ldim<sp/>=<sp/>local_input.LDim();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gradient_wrt_output_ldim<sp/>=<sp/>local_gradient_wrt_output.LDim();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gradient_wrt_input_ldim<sp/>=<sp/>local_gradient_wrt_input.LDim();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType*<sp/>__restrict__<sp/>input_buffer<sp/>=<sp/>local_input.LockedBuffer();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType*<sp/>__restrict__<sp/>gradient_wrt_output_buffer</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>local_gradient_wrt_output.LockedBuffer();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType*<sp/>__restrict__<sp/>gradient_wrt_input_buffer</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>local_gradient_wrt_input.Buffer();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>activation<sp/>function<sp/>to<sp/>each<sp/>input<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_ldim<sp/>==<sp/>local_height</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>gradient_wrt_output_ldim<sp/>==<sp/>local_height</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>gradient_wrt_input_ldim<sp/>==<sp/>local_height)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contiguous<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size<sp/>=<sp/>local_height<sp/>*<sp/>local_width;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>buffer_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x<sp/>=<sp/>input_buffer[i];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dy<sp/>=<sp/>gradient_wrt_output_buffer[i];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dx<sp/>=<sp/>gradient_wrt_input_buffer[i];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>+=<sp/>dy<sp/>*<sp/>activation_derivative(x);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-contiguous<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>local_height;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x<sp/>=<sp/>input_buffer[row<sp/>+<sp/>col<sp/>*<sp/>input_ldim];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dy</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>gradient_wrt_output_buffer[row<sp/>+<sp/>col<sp/>*<sp/>gradient_wrt_output_ldim];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dx</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>gradient_wrt_input_buffer[row<sp/>+<sp/>col<sp/>*<sp/>gradient_wrt_input_ldim];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>+=<sp/>dy<sp/>*<sp/>activation_derivative(x);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_LAYER_ACTIVATION_HPP_INCLUDED</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/activations/activation.hpp"/>
  </compounddef>
</doxygen>
