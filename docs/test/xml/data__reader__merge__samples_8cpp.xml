<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="data__reader__merge__samples_8cpp" kind="file" language="C++">
    <compoundname>data_reader_merge_samples.cpp</compoundname>
    <includes refid="data__reader__merge__samples_8hpp" local="yes">lbann/data_readers/data_reader_merge_samples.hpp</includes>
    <includes refid="data__store__merge__samples_8hpp" local="yes">lbann/data_store/data_store_merge_samples.hpp</includes>
    <includes refid="options_8hpp" local="yes">lbann/utils/options.hpp</includes>
    <incdepgraph>
      <node id="19545">
        <label>sys/stat.h</label>
      </node>
      <node id="19553">
        <label>lbann/data_store/data_store_merge_samples.hpp</label>
        <link refid="data__store__merge__samples_8hpp"/>
        <childnode refid="19554" relation="include">
        </childnode>
      </node>
      <node id="19548">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="19530" relation="include">
        </childnode>
        <childnode refid="19522" relation="include">
        </childnode>
      </node>
      <node id="19554">
        <label>lbann/data_store/generic_data_store.hpp</label>
        <link refid="generic__data__store_8hpp"/>
        <childnode refid="19522" relation="include">
        </childnode>
        <childnode refid="19532" relation="include">
        </childnode>
        <childnode refid="19533" relation="include">
        </childnode>
        <childnode refid="19555" relation="include">
        </childnode>
      </node>
      <node id="19536">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="19522" relation="include">
        </childnode>
        <childnode refid="19523" relation="include">
        </childnode>
      </node>
      <node id="19523">
        <label>El.hpp</label>
      </node>
      <node id="19522">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="19523" relation="include">
        </childnode>
        <childnode refid="19524" relation="include">
        </childnode>
        <childnode refid="19525" relation="include">
        </childnode>
        <childnode refid="19530" relation="include">
        </childnode>
      </node>
      <node id="19518">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_merge_samples.cpp</label>
        <link refid="data__reader__merge__samples_8cpp"/>
        <childnode refid="19519" relation="include">
        </childnode>
        <childnode refid="19553" relation="include">
        </childnode>
        <childnode refid="19556" relation="include">
        </childnode>
      </node>
      <node id="19549">
        <label>cassert</label>
      </node>
      <node id="19547">
        <label>fcntl.h</label>
      </node>
      <node id="19541">
        <label>string</label>
      </node>
      <node id="19534">
        <label>map</label>
      </node>
      <node id="19520">
        <label>compound_data_reader.hpp</label>
        <link refid="compound__data__reader_8hpp"/>
        <childnode refid="19521" relation="include">
        </childnode>
        <childnode refid="19552" relation="include">
        </childnode>
      </node>
      <node id="19555">
        <label>unordered_set</label>
      </node>
      <node id="19543">
        <label>exception</label>
      </node>
      <node id="19537">
        <label>random</label>
      </node>
      <node id="19546">
        <label>sys/types.h</label>
      </node>
      <node id="19527">
        <label>cstdio</label>
      </node>
      <node id="19539">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="19540" relation="include">
        </childnode>
        <childnode refid="19541" relation="include">
        </childnode>
      </node>
      <node id="19529">
        <label>cxxabi.h</label>
      </node>
      <node id="19538">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="19522" relation="include">
        </childnode>
        <childnode refid="19532" relation="include">
        </childnode>
        <childnode refid="19539" relation="include">
        </childnode>
        <childnode refid="19542" relation="include">
        </childnode>
        <childnode refid="19543" relation="include">
        </childnode>
      </node>
      <node id="19551">
        <label>unistd.h</label>
      </node>
      <node id="19533">
        <label>vector</label>
      </node>
      <node id="19532">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="19533" relation="include">
        </childnode>
        <childnode refid="19534" relation="include">
        </childnode>
        <childnode refid="19535" relation="include">
        </childnode>
        <childnode refid="19522" relation="include">
        </childnode>
      </node>
      <node id="19552">
        <label>utility</label>
      </node>
      <node id="19544">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="19545" relation="include">
        </childnode>
        <childnode refid="19546" relation="include">
        </childnode>
        <childnode refid="19547" relation="include">
        </childnode>
      </node>
      <node id="19519">
        <label>lbann/data_readers/data_reader_merge_samples.hpp</label>
        <link refid="data__reader__merge__samples_8hpp"/>
        <childnode refid="19520" relation="include">
        </childnode>
      </node>
      <node id="19526">
        <label>cstdlib</label>
      </node>
      <node id="19542">
        <label>iostream</label>
      </node>
      <node id="19531">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="19522" relation="include">
        </childnode>
        <childnode refid="19532" relation="include">
        </childnode>
        <childnode refid="19536" relation="include">
        </childnode>
        <childnode refid="19537" relation="include">
        </childnode>
      </node>
      <node id="19540">
        <label>csignal</label>
      </node>
      <node id="19556">
        <label>lbann/utils/options.hpp</label>
        <link refid="options_8hpp"/>
        <childnode refid="19542" relation="include">
        </childnode>
        <childnode refid="19534" relation="include">
        </childnode>
        <childnode refid="19533" relation="include">
        </childnode>
        <childnode refid="19541" relation="include">
        </childnode>
      </node>
      <node id="19521">
        <label>data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="19522" relation="include">
        </childnode>
        <childnode refid="19531" relation="include">
        </childnode>
        <childnode refid="19538" relation="include">
        </childnode>
        <childnode refid="19532" relation="include">
        </childnode>
        <childnode refid="19544" relation="include">
        </childnode>
        <childnode refid="19536" relation="include">
        </childnode>
        <childnode refid="19548" relation="include">
        </childnode>
        <childnode refid="19549" relation="include">
        </childnode>
        <childnode refid="19550" relation="include">
        </childnode>
        <childnode refid="19541" relation="include">
        </childnode>
        <childnode refid="19533" relation="include">
        </childnode>
        <childnode refid="19551" relation="include">
        </childnode>
      </node>
      <node id="19530">
        <label>lbann_config.hpp</label>
      </node>
      <node id="19550">
        <label>algorithm</label>
      </node>
      <node id="19525">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="19526" relation="include">
        </childnode>
        <childnode refid="19527" relation="include">
        </childnode>
        <childnode refid="19528" relation="include">
        </childnode>
        <childnode refid="19529" relation="include">
        </childnode>
      </node>
      <node id="19524">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="19523" relation="include">
        </childnode>
      </node>
      <node id="19535">
        <label>typeindex</label>
      </node>
      <node id="19528">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Semy_num_readersity,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>data_reader_merge_samples.hpp<sp/>.cpp<sp/>-<sp/>Merge<sp/>samples<sp/>from<sp/>multiple<sp/>data<sp/>readers</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__reader__merge__samples_8hpp" kindref="compound">lbann/data_readers/data_reader_merge_samples.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__store__merge__samples_8hpp" kindref="compound">lbann/data_store/data_store_merge_samples.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="options_8hpp" kindref="compound">lbann/utils/options.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classlbann_1_1data__reader__merge__samples_1a01ff9ff7827030da41f1f6d257551260" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__reader__merge__samples_1a01ff9ff7827030da41f1f6d257551260" kindref="member">data_reader_merge_samples::data_reader_merge_samples</ref>(</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>std::vector&lt;generic_data_reader*&gt;<sp/>data_readers,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffle)<sp/>:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__compound__data__reader" kindref="compound">generic_compound_data_reader</ref>(data_readers,<sp/>shuffle)<sp/>{}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classlbann_1_1data__reader__merge__samples_1aaf15afcafbcd02c21763ae6cfc6ffe01" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__reader__merge__samples_1a01ff9ff7827030da41f1f6d257551260" kindref="member">data_reader_merge_samples::data_reader_merge_samples</ref>(</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__samples" kindref="compound">data_reader_merge_samples</ref>&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__compound__data__reader" kindref="compound">generic_compound_data_reader</ref>(other),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>(other.<ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classlbann_1_1data__reader__merge__samples_1a781fcc341e120886a3359e8ab41121d7" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__reader__merge__samples" kindref="compound">data_reader_merge_samples</ref>&amp;<sp/><ref refid="classlbann_1_1data__reader__merge__samples_1a781fcc341e120886a3359e8ab41121d7" kindref="member">data_reader_merge_samples::operator=</ref>(</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__samples" kindref="compound">data_reader_merge_samples</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a7ece97b6fd2bc62da4d98f29cfb50155" kindref="member">generic_compound_data_reader::operator=</ref>(other);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classlbann_1_1data__reader__merge__samples_1a42d90dd08c4e7bd6d83fde2d7b4578c3" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__reader__merge__samples_1a42d90dd08c4e7bd6d83fde2d7b4578c3" kindref="member">data_reader_merge_samples::~data_reader_merge_samples</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classlbann_1_1data__reader__merge__samples_1ad45275b73fcbca47b74a9c9767f69bc9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1ad45275b73fcbca47b74a9c9767f69bc9" kindref="member">data_reader_merge_samples::load_using_data_store</ref>()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>subsidiary<sp/>data<sp/>readers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>global_num_readers<sp/>=<sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>.size();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>np<sp/>=<sp/><ref refid="classlbann_1_1generic__data__reader_1ad3976d4b7db2d404dbb87a56c33fd456" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" kindref="member">get_procs_per_model</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;global_num_readers;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>owner<sp/>=<sp/>j<sp/>%<sp/>np;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>[j]-&gt;set_compound_rank(owner);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>[j]-&gt;set_comm(<ref refid="classlbann_1_1generic__data__reader_1ad3976d4b7db2d404dbb87a56c33fd456" kindref="member">m_comm</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//only<sp/>the<sp/>processor<sp/>whose<sp/>rank<sp/>==<sp/>owner<sp/>loads<sp/>the<sp/>NpyArray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>[j]-&gt;load();<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>some<sp/>sanity<sp/>checks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_labels,<sp/>data_size,<sp/>label_size;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>num_labels<sp/>=<sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>[0]-&gt;get_num_labels();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>data_size<sp/>=<sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>[0]-&gt;get_linearized_data_size();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>label_size<sp/>=<sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>[0]-&gt;get_linearized_label_size();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>data_dims<sp/>=<sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>[0]-&gt;get_data_dims();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/>MPI_Comm<sp/>comm<sp/>=<sp/>m_comm-&gt;get_model_comm().comm;</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/>std::vector&lt;int&gt;<sp/>data_dims_2<sp/>=<sp/>data_dims;</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/>MPI_Bcast(&amp;num_labels,<sp/>1,<sp/>MPI_INT,<sp/>0,<sp/>comm);</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/>MPI_Bcast(&amp;data_size,<sp/>1,<sp/>MPI_INT,<sp/>0,<sp/>comm);</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/>MPI_Bcast(&amp;label_size,<sp/>1,<sp/>MPI_INT,<sp/>0,<sp/>comm);</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/>MPI_Bcast(&amp;data_dims_2[0],<sp/>data_dims_2.size(),<sp/>MPI_INT,<sp/>0,<sp/>comm);</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1a240368aa9f7f2ab1fa7c8d534b7f54ed" kindref="member">sanity_check_for_consistency</ref>(num_labels,<sp/>data_size,<sp/>label_size,<sp/>data_dims);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>global_num_samples<sp/>=<sp/><ref refid="classlbann_1_1data__reader__merge__samples_1aafa54258bdc9d888da61c817462cdf65" kindref="member">compute_num_samples_psum</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1ae5fe8d5cf8eb1a6aa715579d329a620e" kindref="member">setup_indices</ref>(global_num_samples);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classlbann_1_1data__reader__merge__samples_1aafa54258bdc9d888da61c817462cdf65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1aafa54258bdc9d888da61c817462cdf65" kindref="member">data_reader_merge_samples::compute_num_samples_psum</ref>()<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>global_num_samples<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepend<sp/>a<sp/>0<sp/>to<sp/>make<sp/>things<sp/>easier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>.push_back(0);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>reader<sp/>:<sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>.push_back(reader-&gt;get_num_data());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>global_num_samples<sp/>+=<sp/>reader-&gt;get_num_data();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>std::partial_sum(<ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>.begin(),<sp/><ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>.end(),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>.begin());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>global_num_samples;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classlbann_1_1data__reader__merge__samples_1a240368aa9f7f2ab1fa7c8d534b7f54ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1a240368aa9f7f2ab1fa7c8d534b7f54ed" kindref="member">data_reader_merge_samples::sanity_check_for_consistency</ref>(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_labels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>label_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>&amp;data_dims)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>reader<sp/>:<sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_labels<sp/>!=<sp/>reader-&gt;get_num_labels())<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;data_reader_merge_samples:<sp/>data<sp/>readers<sp/>do<sp/>not<sp/>have<sp/>the<sp/>same<sp/>number<sp/>of<sp/>labels&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_size<sp/>!=<sp/>reader-&gt;get_linearized_data_size())<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;data_reader_merge_samples:<sp/>data<sp/>readers<sp/>do<sp/>not<sp/>have<sp/>the<sp/>same<sp/>data<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_size<sp/>!=<sp/>reader-&gt;get_linearized_label_size())<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;data_reader_merge_samples:<sp/>data<sp/>readers<sp/>do<sp/>not<sp/>have<sp/>the<sp/>same<sp/>label<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_dims<sp/>!=<sp/>reader-&gt;get_data_dims())<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;data_reader_merge_samples:<sp/>data<sp/>readers<sp/>do<sp/>not<sp/>have<sp/>the<sp/>same<sp/>data<sp/>dims&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classlbann_1_1data__reader__merge__samples_1ae5fe8d5cf8eb1a6aa715579d329a620e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1ae5fe8d5cf8eb1a6aa715579d329a620e" kindref="member">data_reader_merge_samples::setup_indices</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>our<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>each<sp/>subsidiary<sp/>data<sp/>reader<sp/>presumably<sp/>shuffled<sp/>its<sp/>indices<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>That&apos;s<sp/>not<sp/>strictly<sp/>necessary,<sp/>but<sp/>does<sp/>not<sp/>impact<sp/>anything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" kindref="member">m_shuffled_indices</ref>.resize(num_samples);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>std::iota(<ref refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" kindref="member">m_shuffled_indices</ref>.begin(),<sp/><ref refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" kindref="member">m_shuffled_indices</ref>.end(),<sp/>0);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1aa28fdeeb6af492540f507e49adff5d6c" kindref="member">select_subset_of_data</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classlbann_1_1data__reader__merge__samples_1ab3554341417f5eba95b9c1098af40410" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1ab3554341417f5eba95b9c1098af40410" kindref="member">data_reader_merge_samples::load</ref>()<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" kindref="member">options::get</ref>()-&gt;has_bool(</highlight><highlight class="stringliteral">&quot;use_data_store&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/><ref refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" kindref="member">options::get</ref>()-&gt;get_bool(</highlight><highlight class="stringliteral">&quot;use_data_store&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1ad45275b73fcbca47b74a9c9767f69bc9" kindref="member">data_reader_merge_samples::load_using_data_store</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>each<sp/>subsidiary<sp/>data<sp/>reader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>reader<sp/>:<sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;set_comm(<ref refid="classlbann_1_1generic__data__reader_1ad3976d4b7db2d404dbb87a56c33fd456" kindref="member">m_comm</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;load();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>total<sp/>number<sp/>of<sp/>samples<sp/>and<sp/>do<sp/>some<sp/>sanity<sp/>checks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_labels<sp/>=<sp/>m_data_readers[0]-&gt;get_num_labels();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_size<sp/>=<sp/>m_data_readers[0]-&gt;get_linearized_data_size();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>label_size<sp/>=<sp/>m_data_readers[0]-&gt;get_linearized_label_size();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>data_dims<sp/>=<sp/>m_data_readers[0]-&gt;get_data_dims();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1a240368aa9f7f2ab1fa7c8d534b7f54ed" kindref="member">sanity_check_for_consistency</ref>(num_labels,<sp/>data_size,<sp/>label_size,<sp/>data_dims);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>global_num_samples<sp/>=<sp/><ref refid="classlbann_1_1data__reader__merge__samples_1aafa54258bdc9d888da61c817462cdf65" kindref="member">compute_num_samples_psum</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1ae5fe8d5cf8eb1a6aa715579d329a620e" kindref="member">setup_indices</ref>(global_num_samples);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classlbann_1_1data__reader__merge__samples_1a413a54d7ccac03bfacdf63cf871fd378" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1a413a54d7ccac03bfacdf63cf871fd378" kindref="member">data_reader_merge_samples::fetch_datum</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>X,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mb_idx,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>right<sp/>data<sp/>reader<sp/>to<sp/>delegate<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_id<sp/>&lt;<sp/><ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>[i<sp/>+<sp/>1])<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_id<sp/>-=<sp/><ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>[i];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>[i]-&gt;fetch_datum(X,<sp/>data_id,<sp/>mb_idx,<sp/>tid);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;data_reader_merge_samples:<sp/>do<sp/>not<sp/>have<sp/>data<sp/>ID<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::to_string(data_id));</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="classlbann_1_1data__reader__merge__samples_1a93ce622e95e7ea0438bc78bdda8df44f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1a93ce622e95e7ea0438bc78bdda8df44f" kindref="member">data_reader_merge_samples::fetch_label</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>Y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mb_idx,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>right<sp/>data<sp/>reader<sp/>to<sp/>delegate<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_id<sp/>&lt;<sp/><ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>[i<sp/>+<sp/>1])<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_id<sp/>-=<sp/><ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>[i];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>[i]-&gt;fetch_label(Y,<sp/>data_id,<sp/>mb_idx,<sp/>tid);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;data_reader_merge_samples:<sp/>do<sp/>not<sp/>have<sp/>data<sp/>ID<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>std::to_string(data_id));</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classlbann_1_1data__reader__merge__samples_1ab39ad6b6e106eb30f58f9eabaf3352ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1ab39ad6b6e106eb30f58f9eabaf3352ad" kindref="member">data_reader_merge_samples::fetch_response</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>Y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mb_idx,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>right<sp/>data<sp/>reader<sp/>to<sp/>delegate<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_id<sp/>&lt;<sp/><ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>[i<sp/>+<sp/>1])<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_id<sp/>-=<sp/><ref refid="classlbann_1_1data__reader__merge__samples_1afd297d61c11bb6b0d03ce64836bd1300" kindref="member">m_num_samples_psum</ref>[i];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__compound__data__reader_1a9815e94ade5873415fd766e09d956d5b" kindref="member">m_data_readers</ref>[i]-&gt;fetch_response(Y,<sp/>data_id,<sp/>mb_idx,<sp/>tid);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;data_reader_merge_samples:<sp/>do<sp/>not<sp/>have<sp/>data<sp/>ID<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>std::to_string(data_id));</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classlbann_1_1data__reader__merge__samples_1a589d6997ad093721e8c2c2cb3197c9e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__samples_1a589d6997ad093721e8c2c2cb3197c9e2" kindref="member">data_reader_merge_samples::setup_data_store</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__reader_1aefc076b842933a882214f4f709ca49c9" kindref="member">m_data_store</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__reader_1aefc076b842933a882214f4f709ca49c9" kindref="member">m_data_store</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1aefc076b842933a882214f4f709ca49c9" kindref="member">m_data_store</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/>m_data_store<sp/>=<sp/>new<sp/>data_store_merge_samples(this,<sp/>m);</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/>if<sp/>(m_data_store<sp/>!=<sp/>nullptr)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/>m_data_store-&gt;setup();</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_merge_samples.cpp"/>
  </compounddef>
</doxygen>
