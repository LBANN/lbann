<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lbann__data__generator_8cpp" kind="file" language="C++">
    <compoundname>lbann_data_generator.cpp</compoundname>
    <includes refid="lbann__data__generator_8hpp" local="yes">lbann/data_readers/lbann_data_generator.hpp</includes>
    <includes refid="random_8hpp" local="yes">lbann/utils/random.hpp</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="20084">
        <label>sys/stat.h</label>
      </node>
      <node id="20087">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="20069" relation="include">
        </childnode>
        <childnode refid="20061" relation="include">
        </childnode>
      </node>
      <node id="20075">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="20061" relation="include">
        </childnode>
        <childnode refid="20062" relation="include">
        </childnode>
      </node>
      <node id="20062">
        <label>El.hpp</label>
      </node>
      <node id="20058">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/lbann_data_generator.cpp</label>
        <link refid="lbann__data__generator_8cpp"/>
        <childnode refid="20059" relation="include">
        </childnode>
        <childnode refid="20070" relation="include">
        </childnode>
        <childnode refid="20091" relation="include">
        </childnode>
      </node>
      <node id="20061">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="20062" relation="include">
        </childnode>
        <childnode refid="20063" relation="include">
        </childnode>
        <childnode refid="20064" relation="include">
        </childnode>
        <childnode refid="20069" relation="include">
        </childnode>
      </node>
      <node id="20088">
        <label>cassert</label>
      </node>
      <node id="20086">
        <label>fcntl.h</label>
      </node>
      <node id="20080">
        <label>string</label>
      </node>
      <node id="20073">
        <label>map</label>
      </node>
      <node id="20082">
        <label>exception</label>
      </node>
      <node id="20076">
        <label>random</label>
      </node>
      <node id="20085">
        <label>sys/types.h</label>
      </node>
      <node id="20066">
        <label>cstdio</label>
      </node>
      <node id="20078">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="20079" relation="include">
        </childnode>
        <childnode refid="20080" relation="include">
        </childnode>
      </node>
      <node id="20068">
        <label>cxxabi.h</label>
      </node>
      <node id="20077">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="20061" relation="include">
        </childnode>
        <childnode refid="20071" relation="include">
        </childnode>
        <childnode refid="20078" relation="include">
        </childnode>
        <childnode refid="20081" relation="include">
        </childnode>
        <childnode refid="20082" relation="include">
        </childnode>
      </node>
      <node id="20090">
        <label>unistd.h</label>
      </node>
      <node id="20072">
        <label>vector</label>
      </node>
      <node id="20071">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="20072" relation="include">
        </childnode>
        <childnode refid="20073" relation="include">
        </childnode>
        <childnode refid="20074" relation="include">
        </childnode>
        <childnode refid="20061" relation="include">
        </childnode>
      </node>
      <node id="20083">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="20084" relation="include">
        </childnode>
        <childnode refid="20085" relation="include">
        </childnode>
        <childnode refid="20086" relation="include">
        </childnode>
      </node>
      <node id="20065">
        <label>cstdlib</label>
      </node>
      <node id="20059">
        <label>lbann/data_readers/lbann_data_generator.hpp</label>
        <link refid="lbann__data__generator_8hpp"/>
        <childnode refid="20060" relation="include">
        </childnode>
        <childnode refid="20087" relation="include">
        </childnode>
      </node>
      <node id="20081">
        <label>iostream</label>
      </node>
      <node id="20070">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="20061" relation="include">
        </childnode>
        <childnode refid="20071" relation="include">
        </childnode>
        <childnode refid="20075" relation="include">
        </childnode>
        <childnode refid="20076" relation="include">
        </childnode>
      </node>
      <node id="20079">
        <label>csignal</label>
      </node>
      <node id="20060">
        <label>data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="20061" relation="include">
        </childnode>
        <childnode refid="20070" relation="include">
        </childnode>
        <childnode refid="20077" relation="include">
        </childnode>
        <childnode refid="20071" relation="include">
        </childnode>
        <childnode refid="20083" relation="include">
        </childnode>
        <childnode refid="20075" relation="include">
        </childnode>
        <childnode refid="20087" relation="include">
        </childnode>
        <childnode refid="20088" relation="include">
        </childnode>
        <childnode refid="20089" relation="include">
        </childnode>
        <childnode refid="20080" relation="include">
        </childnode>
        <childnode refid="20072" relation="include">
        </childnode>
        <childnode refid="20090" relation="include">
        </childnode>
      </node>
      <node id="20069">
        <label>lbann_config.hpp</label>
      </node>
      <node id="20089">
        <label>algorithm</label>
      </node>
      <node id="20064">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="20065" relation="include">
        </childnode>
        <childnode refid="20066" relation="include">
        </childnode>
        <childnode refid="20067" relation="include">
        </childnode>
        <childnode refid="20068" relation="include">
        </childnode>
      </node>
      <node id="20091">
        <label>stdio.h</label>
      </node>
      <node id="20063">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="20062" relation="include">
        </childnode>
      </node>
      <node id="20074">
        <label>typeindex</label>
      </node>
      <node id="20067">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lbann_data_generator<sp/>.hpp<sp/>.cpp<sp/>-<sp/>Synthetic<sp/>Data<sp/>Generator</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lbann__data__generator_8hpp" kindref="compound">lbann/data_readers/lbann_data_generator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="random_8hpp" kindref="compound">lbann/utils/random.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classlbann_1_1DataGenerator_1a66297bbed5baea4bba641e257166370c" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1DataGenerator_1a66297bbed5baea4bba641e257166370c" kindref="member">lbann::DataGenerator::DataGenerator</ref>(Int<sp/>num_samples,<sp/>Int<sp/>width,<sp/>Int<sp/>height,<sp/>Int<sp/>batchSize)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>:<sp/>DataReader(batchSize,<sp/>true)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1DataGenerator_1a679fdbd459ecefa053b64f78a166c020" kindref="member">m_num_samples</ref><sp/>=<sp/>num_samples;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1DataGenerator_1a054cb6ab0d93ec57419a81734ddf04aa" kindref="member">m_data_width</ref><sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1DataGenerator_1a676e679d18eb0523be714345205c662d" kindref="member">m_data_height</ref><sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classlbann_1_1DataGenerator_1a43972ae31aa6812519efe7f6e10ef467" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1DataGenerator_1a66297bbed5baea4bba641e257166370c" kindref="member">lbann::DataGenerator::DataGenerator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1DataGenerator" kindref="compound">DataGenerator</ref>&amp;<sp/>source)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>:<sp/>DataReader((const<sp/>DataReader&amp;)<sp/>source),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1DataGenerator_1a054cb6ab0d93ec57419a81734ddf04aa" kindref="member">m_data_width</ref>(source.<ref refid="classlbann_1_1DataGenerator_1a054cb6ab0d93ec57419a81734ddf04aa" kindref="member">m_data_width</ref>),<sp/><ref refid="classlbann_1_1DataGenerator_1a676e679d18eb0523be714345205c662d" kindref="member">m_data_height</ref>(source.<ref refid="classlbann_1_1DataGenerator_1a676e679d18eb0523be714345205c662d" kindref="member">m_data_height</ref>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>deallocate<sp/>data<sp/>on<sp/>a<sp/>copy<sp/>constuctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>clone_image_data(source);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classlbann_1_1DataGenerator_1a3d524566c15637ca500b6a627904c719" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1DataGenerator_1a3d524566c15637ca500b6a627904c719" kindref="member">lbann::DataGenerator::~DataGenerator</ref>()</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>this-&gt;free();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classlbann_1_1DataGenerator_1a8248cc6ea186c23147887ca83b1c4bd7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1DataGenerator_1a8248cc6ea186c23147887ca83b1c4bd7" kindref="member">lbann::DataGenerator::load</ref>()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>ShuffledIndices.clear();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>ShuffledIndices.resize(<ref refid="classlbann_1_1DataGenerator_1a679fdbd459ecefa053b64f78a166c020" kindref="member">m_num_samples</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ShuffledIndices.size();<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>ShuffledIndices[n]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="namespacelbann_1a93fc1b42be6ab461e803cb48d58c4d81" kindref="member">uniform_fill_procdet</ref>(<ref refid="classlbann_1_1DataGenerator_1a6e14ec2aa2b20ca3dbb72eddd1c5fad8" kindref="member">m_data</ref>,<sp/><ref refid="classlbann_1_1DataGenerator_1ad24923ec94dc5b6575b50b74adbefc28" kindref="member">get_linearized_data_size</ref>(),<sp/><ref refid="classlbann_1_1DataGenerator_1a679fdbd459ecefa053b64f78a166c020" kindref="member">m_num_samples</ref>,<sp/>128,<sp/>128);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classlbann_1_1DataGenerator_1a1465406c3e9766021dbd48b6b8c48590" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1DataGenerator_1a1465406c3e9766021dbd48b6b8c48590" kindref="member">lbann::DataGenerator::fetch_data</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>X)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!DataReader::position_valid())<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>stringstream<sp/>err;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;__LINE__&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>Data<sp/>Generator<sp/>load<sp/>error:<sp/>!position_valid&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_batch_size<sp/>=<sp/>getBatchSize();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>CurrentPos;<sp/>n<sp/>&lt;<sp/>CurrentPos<sp/>+<sp/>current_batch_size;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ShuffledIndices.size())</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>n<sp/>-<sp/>CurrentPos;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>ShuffledIndices[n];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="classlbann_1_1DataGenerator_1ad24923ec94dc5b6575b50b74adbefc28" kindref="member">get_linearized_data_size</ref>();<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>X.Set(p,<sp/>k,<sp/><ref refid="classlbann_1_1DataGenerator_1a6e14ec2aa2b20ca3dbb72eddd1c5fad8" kindref="member">m_data</ref>.GetLocal(p,<sp/>index));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>-<sp/>CurrentPos);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assignment<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classlbann_1_1DataGenerator_1a0feafc772df2e0923bea06d4d6065bc3" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1DataGenerator" kindref="compound">lbann::DataGenerator</ref>&amp;<sp/><ref refid="classlbann_1_1DataGenerator_1a0feafc772df2e0923bea06d4d6065bc3" kindref="member">lbann::DataGenerator::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1DataGenerator" kindref="compound">DataGenerator</ref>&amp;<sp/>source)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>self-assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;source)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>parent<sp/>operator=<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>DataReader::operator=(source);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classlbann_1_1DataGenerator_1a054cb6ab0d93ec57419a81734ddf04aa" kindref="member">m_data_width</ref><sp/>=<sp/>source.<ref refid="classlbann_1_1DataGenerator_1a054cb6ab0d93ec57419a81734ddf04aa" kindref="member">m_data_width</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classlbann_1_1DataGenerator_1a676e679d18eb0523be714345205c662d" kindref="member">m_data_height</ref><sp/>=<sp/>source.<ref refid="classlbann_1_1DataGenerator_1a676e679d18eb0523be714345205c662d" kindref="member">m_data_height</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/lbann_data_generator.cpp"/>
  </compounddef>
</doxygen>
