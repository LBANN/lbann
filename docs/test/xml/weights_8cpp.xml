<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="weights_8cpp" kind="file" language="C++">
    <compoundname>weights.cpp</compoundname>
    <includes refid="weights_8hpp" local="yes">lbann/weights/weights.hpp</includes>
    <includes refid="optimizer_8hpp" local="yes">lbann/optimizers/optimizer.hpp</includes>
    <includes local="no">numeric</includes>
    <incdepgraph>
      <node id="25941">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="25921" relation="include">
        </childnode>
        <childnode refid="25922" relation="include">
        </childnode>
      </node>
      <node id="25922">
        <label>El.hpp</label>
      </node>
      <node id="25921">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="25922" relation="include">
        </childnode>
        <childnode refid="25923" relation="include">
        </childnode>
        <childnode refid="25924" relation="include">
        </childnode>
        <childnode refid="25929" relation="include">
        </childnode>
      </node>
      <node id="25946">
        <label>numeric</label>
      </node>
      <node id="25920">
        <label>string</label>
      </node>
      <node id="25939">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="25931" relation="include">
        </childnode>
        <childnode refid="25921" relation="include">
        </childnode>
        <childnode refid="25930" relation="include">
        </childnode>
        <childnode refid="25934" relation="include">
        </childnode>
      </node>
      <node id="25932">
        <label>map</label>
      </node>
      <node id="25945">
        <label>unordered_set</label>
      </node>
      <node id="25938">
        <label>exception</label>
      </node>
      <node id="25940">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="25921" relation="include">
        </childnode>
        <childnode refid="25930" relation="include">
        </childnode>
        <childnode refid="25934" relation="include">
        </childnode>
        <childnode refid="25939" relation="include">
        </childnode>
      </node>
      <node id="25926">
        <label>cstdio</label>
      </node>
      <node id="25935">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="25936" relation="include">
        </childnode>
        <childnode refid="25920" relation="include">
        </childnode>
      </node>
      <node id="25928">
        <label>cxxabi.h</label>
      </node>
      <node id="25934">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="25921" relation="include">
        </childnode>
        <childnode refid="25930" relation="include">
        </childnode>
        <childnode refid="25935" relation="include">
        </childnode>
        <childnode refid="25937" relation="include">
        </childnode>
        <childnode refid="25938" relation="include">
        </childnode>
      </node>
      <node id="25931">
        <label>vector</label>
      </node>
      <node id="25930">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="25931" relation="include">
        </childnode>
        <childnode refid="25932" relation="include">
        </childnode>
        <childnode refid="25933" relation="include">
        </childnode>
        <childnode refid="25921" relation="include">
        </childnode>
      </node>
      <node id="25918">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp</label>
        <link refid="weights_8cpp"/>
        <childnode refid="25919" relation="include">
        </childnode>
        <childnode refid="25943" relation="include">
        </childnode>
        <childnode refid="25946" relation="include">
        </childnode>
      </node>
      <node id="25942">
        <label>lbann.pb.h</label>
      </node>
      <node id="25925">
        <label>cstdlib</label>
      </node>
      <node id="25937">
        <label>iostream</label>
      </node>
      <node id="25943">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="25944" relation="include">
        </childnode>
        <childnode refid="25921" relation="include">
        </childnode>
        <childnode refid="25930" relation="include">
        </childnode>
        <childnode refid="25934" relation="include">
        </childnode>
        <childnode refid="25939" relation="include">
        </childnode>
        <childnode refid="25919" relation="include">
        </childnode>
        <childnode refid="25920" relation="include">
        </childnode>
        <childnode refid="25945" relation="include">
        </childnode>
      </node>
      <node id="25936">
        <label>csignal</label>
      </node>
      <node id="25919">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="25920" relation="include">
        </childnode>
        <childnode refid="25921" relation="include">
        </childnode>
        <childnode refid="25930" relation="include">
        </childnode>
        <childnode refid="25934" relation="include">
        </childnode>
        <childnode refid="25939" relation="include">
        </childnode>
        <childnode refid="25940" relation="include">
        </childnode>
        <childnode refid="25941" relation="include">
        </childnode>
        <childnode refid="25942" relation="include">
        </childnode>
      </node>
      <node id="25929">
        <label>lbann_config.hpp</label>
      </node>
      <node id="25944">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="25924">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="25925" relation="include">
        </childnode>
        <childnode refid="25926" relation="include">
        </childnode>
        <childnode refid="25927" relation="include">
        </childnode>
        <childnode refid="25928" relation="include">
        </childnode>
      </node>
      <node id="25923">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="25922" relation="include">
        </childnode>
      </node>
      <node id="25933">
        <label>typeindex</label>
      </node>
      <node id="25927">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>weights<sp/>.hpp<sp/>.cpp<sp/>-<sp/>Layer<sp/>weights<sp/>class</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="weights_8hpp" kindref="compound">lbann/weights/weights.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="optimizer_8hpp" kindref="compound">lbann/optimizers/optimizer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classlbann_1_1weights_1a21a3a3f1806197d10619a1450871e066" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1weights_1a21a3a3f1806197d10619a1450871e066" kindref="member">weights::weights</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref>*<sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref>*<sp/>cudnn)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>:<sp/>m_comm(comm),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cudnn(cudnn),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>m_frozen(false)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>weights<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_weights<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" kindref="member">m_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;weights&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(num_weights);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>num_weights++;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>initialization<sp/>is<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1constant__initializer" kindref="compound">constant_initializer</ref>(<ref refid="classlbann_1_1weights_1a223e8907034888392548ae901222b39c" kindref="member">m_comm</ref>,<sp/>DataType(0));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classlbann_1_1weights_1ab7cca67d4459f3ba6a72dae4bb8d5cc6" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1weights_1a21a3a3f1806197d10619a1450871e066" kindref="member">weights::weights</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights" kindref="compound">weights</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" kindref="member">m_name</ref>(other.<ref refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" kindref="member">m_name</ref>),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a223e8907034888392548ae901222b39c" kindref="member">m_comm</ref>(other.<ref refid="classlbann_1_1weights_1a223e8907034888392548ae901222b39c" kindref="member">m_comm</ref>),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>(other.<ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a9287dfbd8a7e4a9f5e0d6371d43ee92f" kindref="member">m_matrix_height_dims</ref>(other.<ref refid="classlbann_1_1weights_1a9287dfbd8a7e4a9f5e0d6371d43ee92f" kindref="member">m_matrix_height_dims</ref>),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a8317a198bc5b4cd6bee2c806eefd1f12" kindref="member">m_matrix_width_dims</ref>(other.<ref refid="classlbann_1_1weights_1a8317a198bc5b4cd6bee2c806eefd1f12" kindref="member">m_matrix_width_dims</ref>),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>(other.<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref>(other.<ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref>),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref>(other.<ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref>),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a3962305112ba98ef2eb89c6f7035f6dd" kindref="member">m_frozen</ref>(other.<ref refid="classlbann_1_1weights_1a3962305112ba98ef2eb89c6f7035f6dd" kindref="member">m_frozen</ref>)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>deep<sp/>copy<sp/>of<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref><sp/>=<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;Copy();<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref><sp/>=<sp/><ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref>-&gt;<ref refid="classlbann_1_1weights__initializer_1acc84ce49188b74b23987cef3db18525a" kindref="member">copy</ref>();<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref><sp/>=<sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref>-&gt;<ref refid="classlbann_1_1optimizer_1adf19a1d19d832ebfe70072cc202cdf39" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref>-&gt;<ref refid="classlbann_1_1optimizer_1afc00daf2acb6af7e29786524126660c2" kindref="member">set_weights</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>GPU<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>m_values_d<sp/>=<sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>-&gt;copy(other.m_values_d,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" kindref="member">get_matrix_height</ref>(),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" kindref="member">get_matrix_width</ref>());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1weights" kindref="compound">weights</ref>&amp;<sp/><ref refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" kindref="member">weights::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights" kindref="compound">weights</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" kindref="member">m_name</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" kindref="member">m_name</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a223e8907034888392548ae901222b39c" kindref="member">m_comm</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1weights_1a223e8907034888392548ae901222b39c" kindref="member">m_comm</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a9287dfbd8a7e4a9f5e0d6371d43ee92f" kindref="member">m_matrix_height_dims</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1weights_1a9287dfbd8a7e4a9f5e0d6371d43ee92f" kindref="member">m_matrix_height_dims</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a8317a198bc5b4cd6bee2c806eefd1f12" kindref="member">m_matrix_width_dims</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1weights_1a8317a198bc5b4cd6bee2c806eefd1f12" kindref="member">m_matrix_width_dims</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>;<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref>;<sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref>;<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref><sp/>=<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;Copy();<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref><sp/>=<sp/><ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref>-&gt;<ref refid="classlbann_1_1weights__initializer_1acc84ce49188b74b23987cef3db18525a" kindref="member">copy</ref>();<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><sp/><sp/>{<sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref><sp/>=<sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref>-&gt;<ref refid="classlbann_1_1optimizer_1adf19a1d19d832ebfe70072cc202cdf39" kindref="member">copy</ref>();<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>GPU<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>-&gt;deallocate_on_gpus(m_values_d);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>m_values_d<sp/>=<sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>-&gt;copy(other.m_values_d,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" kindref="member">get_matrix_height</ref>(),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" kindref="member">get_matrix_width</ref>());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a3962305112ba98ef2eb89c6f7035f6dd" kindref="member">m_frozen</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1weights_1a3962305112ba98ef2eb89c6f7035f6dd" kindref="member">m_frozen</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classlbann_1_1weights_1a82334405491bee7a2e2a1295dcb94134" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1weights_1a82334405491bee7a2e2a1295dcb94134" kindref="member">weights::~weights</ref>()<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>;<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref>;<sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref>;<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classlbann_1_1weights_1a476989a30cbe62ab2f680235981c3ba5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a476989a30cbe62ab2f680235981c3ba5" kindref="member">weights::setup</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a476989a30cbe62ab2f680235981c3ba5" kindref="member">setup</ref>(std::vector&lt;int&gt;(1,<sp/>size),<sp/>std::vector&lt;int&gt;(),<sp/>El::STAR,<sp/>El::STAR);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classlbann_1_1weights_1a64037919e22272a8931da328f0b2494a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a476989a30cbe62ab2f680235981c3ba5" kindref="member">weights::setup</ref>(std::vector&lt;int&gt;<sp/>tensor_dims)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a476989a30cbe62ab2f680235981c3ba5" kindref="member">setup</ref>(tensor_dims,<sp/>std::vector&lt;int&gt;(),<sp/>El::STAR,<sp/>El::STAR);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classlbann_1_1weights_1aacf5c30b815e2f1c47a33043e440ed65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a476989a30cbe62ab2f680235981c3ba5" kindref="member">weights::setup</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>matrix_height,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>matrix_width,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::Distribution<sp/>col_dist,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::Distribution<sp/>row_dist)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a476989a30cbe62ab2f680235981c3ba5" kindref="member">setup</ref>(std::vector&lt;int&gt;(1,<sp/>matrix_height),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;(1,<sp/>matrix_width),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_dist,<sp/>row_dist);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a476989a30cbe62ab2f680235981c3ba5" kindref="member">weights::setup</ref>(std::vector&lt;int&gt;<sp/>matrix_height_dims,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>matrix_width_dims,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::Distribution<sp/>col_dist,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::Distribution<sp/>row_dist)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>dimensions<sp/>are<sp/>unchanged<sp/>if<sp/>weights<sp/>are<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::DistData<sp/>dist_data(*<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a9287dfbd8a7e4a9f5e0d6371d43ee92f" kindref="member">m_matrix_height_dims</ref><sp/>==<sp/>matrix_height_dims</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="classlbann_1_1weights_1a8317a198bc5b4cd6bee2c806eefd1f12" kindref="member">m_matrix_width_dims</ref><sp/>==<sp/>matrix_width_dims</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>dist_data.colDist<sp/>==<sp/>col_dist</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>dist_data.rowDist<sp/>==<sp/>row_dist)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>setup<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" kindref="member">m_name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>as<sp/>a<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1weights_1ac15d39b1d887c8ff927b0c29f667e752" kindref="member">get_dims_string</ref>(matrix_height_dims,<sp/>matrix_width_dims)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;weights<sp/>matrix<sp/>with<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;col_dist=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>col_dist<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;row_dist=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>row_dist<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;but<sp/>it<sp/>is<sp/>already<sp/>setup<sp/>as<sp/>a<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1weights_1ac15d39b1d887c8ff927b0c29f667e752" kindref="member">get_dims_string</ref>(<ref refid="classlbann_1_1weights_1a9287dfbd8a7e4a9f5e0d6371d43ee92f" kindref="member">m_matrix_height_dims</ref>,<sp/><ref refid="classlbann_1_1weights_1a8317a198bc5b4cd6bee2c806eefd1f12" kindref="member">m_matrix_width_dims</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;matrix<sp/>with<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;col_dist=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dist_data.colDist<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;row_dist=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dist_data.rowDist;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>tensor<sp/>dimensions<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dims_are_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>:<sp/>matrix_height_dims)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;=<sp/>0)<sp/>{<sp/>dims_are_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>:<sp/>matrix_width_dims)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;=<sp/>0)<sp/>{<sp/>dims_are_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dims_are_valid)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>setup<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" kindref="member">m_name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>as<sp/>a<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1weights_1ac15d39b1d887c8ff927b0c29f667e752" kindref="member">get_dims_string</ref>(matrix_height_dims,<sp/>matrix_width_dims)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;weights<sp/>matrix&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>weights<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a9287dfbd8a7e4a9f5e0d6371d43ee92f" kindref="member">m_matrix_height_dims</ref><sp/>=<sp/>matrix_height_dims;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a8317a198bc5b4cd6bee2c806eefd1f12" kindref="member">m_matrix_width_dims</ref><sp/>=<sp/>matrix_width_dims;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref><sp/>=<sp/><ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref>-&gt;<ref refid="classlbann_1_1weights__initializer_1a693fd517e4162029eafdfdee537c7066" kindref="member">construct_matrix</ref>(<ref refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" kindref="member">get_matrix_height</ref>(),</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" kindref="member">get_matrix_width</ref>(),</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_dist,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_dist);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>GPU<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a7137725a835a37ded1a5ad7f739224a7" kindref="member">setup_gpu</ref>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>optimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref>-&gt;<ref refid="classlbann_1_1optimizer_1a7641a88b3c166df2d974a298622b992b" kindref="member">setup</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classlbann_1_1weights_1a7137725a835a37ded1a5ad7f739224a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a7137725a835a37ded1a5ad7f739224a7" kindref="member">weights::setup_gpu</ref>()<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cuDNN<sp/>not<sp/>detected&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>weights<sp/>matrix<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>setup<sp/>GPU<sp/>weights<sp/>matrix<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;before<sp/>initializing<sp/>CPU<sp/>weights<sp/>matrix&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>GPU<sp/>if<sp/>weights<sp/>matrix<sp/>is<sp/>not<sp/>STAR,STAR</highlight></codeline>
<codeline lineno="223"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::DistData<sp/>dist_data(*<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist_data.colDist<sp/>!=<sp/>El::STAR<sp/>||<sp/>dist_data.rowDist<sp/>!=<sp/>El::STAR)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>weights<sp/>matrix<sp/>to<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>-&gt;allocate_on_gpus(m_values_d,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;LocalHeight(),</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;LocalWidth());</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>-&gt;broadcast_to_gpus(m_values_d,<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;LockedMatrix());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classlbann_1_1weights_1ac1f4e6725fc8b265e0ed5dfe140a321a" refkind="member"><highlight class="normal">std::vector&lt;int&gt;<sp/><ref refid="classlbann_1_1weights_1ac1f4e6725fc8b265e0ed5dfe140a321a" kindref="member">weights::get_dims</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>width_dims<sp/>=<sp/><ref refid="classlbann_1_1weights_1a783ce38ed0b75c0264dd7e28911d5ec0" kindref="member">get_matrix_width_dims</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>height_dims<sp/>=<sp/><ref refid="classlbann_1_1weights_1a2971f04c57d90fbb09631b1de3dad336" kindref="member">get_matrix_height_dims</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>dims;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>dims.reserve(width_dims.size()<sp/>+<sp/>height_dims.size());</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>:<sp/>width_dims)<sp/><sp/>{<sp/>dims.push_back(d);<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>:<sp/>height_dims)<sp/>{<sp/>dims.push_back(d);<sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dims;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" kindref="member">weights::get_matrix_height</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>height_dims<sp/>=<sp/><ref refid="classlbann_1_1weights_1a2971f04c57d90fbb09631b1de3dad336" kindref="member">get_matrix_height_dims</ref>();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::accumulate(height_dims.begin(),<sp/>height_dims.end(),</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>std::multiplies&lt;int&gt;());</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" kindref="member">weights::get_matrix_width</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>width_dims<sp/>=<sp/><ref refid="classlbann_1_1weights_1a783ce38ed0b75c0264dd7e28911d5ec0" kindref="member">get_matrix_width_dims</ref>();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::accumulate(width_dims.begin(),<sp/>width_dims.end(),</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>std::multiplies&lt;int&gt;());</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classlbann_1_1weights_1a71e56d32d8e9c0e3ddf0ec2d0cd3924d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a71e56d32d8e9c0e3ddf0ec2d0cd3924d" kindref="member">weights::set_initializer</ref>(<ref refid="classlbann_1_1weights__initializer" kindref="compound">weights_initializer</ref>*<sp/>initializer)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref>;<sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" kindref="member">m_initializer</ref><sp/>=<sp/>initializer;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classlbann_1_1weights_1ab641f66c09c8b5d491c0f262e8cb55e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1ab641f66c09c8b5d491c0f262e8cb55e6" kindref="member">weights::set_optimizer</ref>(<ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref>*<sp/>opt)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref>;<sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref><sp/>=<sp/>opt;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="classlbann_1_1weights_1a09fa4082be905c0c124dde3033e2461b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/><ref refid="classlbann_1_1weights_1a09fa4082be905c0c124dde3033e2461b" kindref="member">weights::get_values</ref>()<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>weights<sp/>matrix<sp/>has<sp/>been<sp/>setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>access<sp/>values<sp/>of<sp/>weights<sp/>before<sp/>they<sp/>are<sp/>setup&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>weights<sp/>matrix<sp/>from<sp/>GPU<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>-&gt;copy_from_gpu(0,<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;Matrix(),<sp/>m_values_d[0]);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>-&gt;synchronize();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classlbann_1_1weights_1ae10da5d92c9402ced7e55f04fbd05a2e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1ae10da5d92c9402ced7e55f04fbd05a2e" kindref="member">weights::set_values</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>values)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>weights<sp/>matrix<sp/>has<sp/>been<sp/>setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>set<sp/>values<sp/>of<sp/>weights<sp/>before<sp/>they<sp/>are<sp/>setup&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>input<sp/>to<sp/>weights<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>El::Copy(values,<sp/>*<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>weights<sp/>matrix<sp/>to<sp/>GPU<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>-&gt;broadcast_to_gpus(m_values_d,<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;LockedMatrix());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>-&gt;synchronize();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="classlbann_1_1weights_1aaae37ad2df0808eb606609cd58cd223b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1aaae37ad2df0808eb606609cd58cd223b" kindref="member">weights::set_value</ref>(DataType<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>tensor<sp/>position<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>size<sp/>=<sp/><ref refid="classlbann_1_1weights_1a3216926df0aaf7aa440b9e5317d05fa2" kindref="member">get_size</ref>();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>set<sp/>weight<sp/>value<sp/>at<sp/>index<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;but<sp/>there<sp/>are<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>values&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>matrix<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>height<sp/>=<sp/><ref refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" kindref="member">get_matrix_height</ref>();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1aaae37ad2df0808eb606609cd58cd223b" kindref="member">set_value</ref>(value,<sp/>index<sp/>%<sp/>height,<sp/>index<sp/>/<sp/>height);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="classlbann_1_1weights_1aca05fb7e298c8f9f1f30fa1a8eac9fbf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1aaae37ad2df0808eb606609cd58cd223b" kindref="member">weights::set_value</ref>(DataType<sp/>value,<sp/>std::vector&lt;int&gt;<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>tensor<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dims<sp/>=<sp/><ref refid="classlbann_1_1weights_1ac1f4e6725fc8b265e0ed5dfe140a321a" kindref="member">get_dims</ref>();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>tensor<sp/>position<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pos_is_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dims.size()<sp/>!=<sp/>pos.size())<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>pos_is_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>dims.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos[i]<sp/>&lt;<sp/>0<sp/>||<sp/>pos[i]<sp/>&gt;=<sp/>dims[i])<sp/>{<sp/>pos_is_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pos_is_valid)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>set<sp/>weight<sp/>value<sp/>at<sp/>position<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>pos.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>(i<sp/>&gt;<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>pos[i];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>in<sp/>a<sp/>tensor<sp/>with<sp/>dimensions<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>dims.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>(i<sp/>&gt;<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>dims[i];</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>index<sp/>of<sp/>weight<sp/>value<sp/>and<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dims.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>index<sp/>*<sp/>dims[i]<sp/>+<sp/>pos[i];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1aaae37ad2df0808eb606609cd58cd223b" kindref="member">set_value</ref>(value,<sp/>index);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="classlbann_1_1weights_1a7ac0a9e53b249f16d5e2978e47bd6b7f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1aaae37ad2df0808eb606609cd58cd223b" kindref="member">weights::set_value</ref>(DataType<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>matrix<sp/>entry<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>height<sp/>=<sp/><ref refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" kindref="member">get_matrix_height</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>width<sp/>=<sp/><ref refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" kindref="member">get_matrix_width</ref>();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>&lt;<sp/>0<sp/>||<sp/>row<sp/>&gt;=<sp/>height<sp/>||<sp/>col<sp/>&lt;<sp/>0<sp/>||<sp/>col<sp/>&gt;<sp/>width<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>set<sp/>weights<sp/>value<sp/>at<sp/>entry<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>row<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>col<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;in<sp/>a<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>height<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>width<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>matrix&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>value<sp/>if<sp/>it<sp/>is<sp/>local</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;IsLocal(row,<sp/>col))<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>local_row<sp/>=<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;LocalRow(row);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>local_col<sp/>=<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;LocalCol(col);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;SetLocal(local_row,<sp/>local_col,<sp/>value);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>value<sp/>on<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref><sp/>cpu_value(1,<sp/>1);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>cpu_value(0,<sp/>0)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DataType*&gt;<sp/>gpu_value<sp/>=<sp/>m_values_d;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/><ref refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" kindref="member">get_matrix_height</ref>();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(DataType*&amp;<sp/>pointer<sp/>:<sp/>gpu_value)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>+=<sp/>row<sp/>+<sp/>col<sp/>*<sp/>height;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>-&gt;broadcast_to_gpus(gpu_value,<sp/>cpu_value);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="classlbann_1_1weights_1a506b6445c46a92cdadad75caf1c166d3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a506b6445c46a92cdadad75caf1c166d3" kindref="member">weights::get_values_view</ref>(<ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>values_v)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>values<sp/>=<sp/><ref refid="classlbann_1_1weights_1a09fa4082be905c0c124dde3033e2461b" kindref="member">get_values</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(values.DistData()<sp/>==<sp/>values_v.DistData()</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>El::LockedView(values_v,<sp/>values);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>-&gt;copy_from_gpu(0,<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;Matrix(),<sp/>m_values_d[0]);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>El::Copy(values,<sp/>values_v);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">std::vector&lt;DataType*&gt;<sp/>weights::get_values_gpu()<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>access<sp/>weights<sp/>on<sp/>GPU<sp/>when<sp/>GPU<sp/>is<sp/>not<sp/>setup&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_values_d;</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__LIB_CUDN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="classlbann_1_1weights_1ac15d39b1d887c8ff927b0c29f667e752" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classlbann_1_1weights_1ac15d39b1d887c8ff927b0c29f667e752" kindref="member">weights::get_dims_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>matrix_height_dims,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>matrix_width_dims)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>matrix_height_dims.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>(i<sp/>&gt;<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>matrix_height_dims[i];</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)x(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>matrix_width_dims.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>(i<sp/>&gt;<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>matrix_width_dims[i];</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="classlbann_1_1weights_1a48dd6b3d37668bf2ab5abafdf9dabde4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a48dd6b3d37668bf2ab5abafdf9dabde4" kindref="member">weights::save_to_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">lbann::persist</ref>&amp;<sp/>p)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>define<sp/>name<sp/>to<sp/>store<sp/>our<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>l_name[512];</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>sprintf(l_name,<sp/></highlight><highlight class="stringliteral">&quot;weights_%s_%lldx%lld&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" kindref="member">m_name</ref>.c_str(),<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;Height(),<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;Width());</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>out<sp/>our<sp/>weights<sp/>to<sp/>the<sp/>model<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>p.<ref refid="classlbann_1_1persist_1a9170de652405d86d9ba9b3793f8781c6" kindref="member">write_distmat</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c" kindref="member">persist_type::model</ref>,<sp/>l_name,<sp/>(<ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>*)<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>saving<sp/>training<sp/>state,<sp/>also<sp/>write<sp/>out<sp/>state<sp/>of<sp/>optimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref>-&gt;<ref refid="classlbann_1_1optimizer_1afed10c6d8c5bd922f95075abeff711ce" kindref="member">save_to_checkpoint_shared</ref>(p,<sp/>l_name);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="classlbann_1_1weights_1a1a2631987f38d32a90fbee61053a04cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1a1a2631987f38d32a90fbee61053a04cc" kindref="member">weights::write_proto</ref>(lbann_data::WeightsData*<sp/>proto)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>proto<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>proto-&gt;Clear();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>proto-&gt;set_name(<ref refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" kindref="member">m_name</ref>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>:<sp/><ref refid="classlbann_1_1weights_1ac1f4e6725fc8b265e0ed5dfe140a321a" kindref="member">get_dims</ref>())<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>proto-&gt;mutable_shape()-&gt;add_dim(d);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>proto-&gt;set_height(<ref refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" kindref="member">get_matrix_height</ref>());</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>proto-&gt;set_width(<ref refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" kindref="member">get_matrix_width</ref>());</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>weight<sp/>values<sp/>to<sp/>prototext<sp/>on<sp/>world<sp/>master<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a48abd140bc807a8ac1381efd1bfeb375" kindref="member">CircMat</ref><sp/>values<sp/>=<sp/>*<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>;<sp/></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>values.SetRoot(0);<sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights_1a223e8907034888392548ae901222b39c" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_values<sp/>=<sp/>values.LockedMatrix();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>height<sp/>=<sp/>local_values.Height();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>width<sp/>=<sp/>local_values.Width();</highlight></codeline>
<codeline lineno="491"></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(El::Int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>height;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(El::Int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>width;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto-&gt;add_data(local_values(i,j));</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="classlbann_1_1weights_1ad41cac4b516d83f086cdfbcdfaa8223c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1weights_1ad41cac4b516d83f086cdfbcdfaa8223c" kindref="member">weights::load_from_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">lbann::persist</ref>&amp;<sp/>p)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>define<sp/>name<sp/>to<sp/>store<sp/>our<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>l_name[512],<sp/>f_name[512];</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>sprintf(l_name,<sp/></highlight><highlight class="stringliteral">&quot;weights_%s_%lldx%lld&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" kindref="member">m_name</ref>.c_str(),<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;Height(),<sp/><ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;Width());</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>sprintf(f_name,<sp/></highlight><highlight class="stringliteral">&quot;%s.bin&quot;</highlight><highlight class="normal">,<sp/>l_name);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>our<sp/>weights<sp/>from<sp/>model<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aa98be93f33b510e5b506b61de6bd79bd" kindref="member">read_distmat</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c" kindref="member">persist_type::model</ref>,<sp/>f_name,<sp/>(<ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>*)<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>loading<sp/>training<sp/>state,<sp/>read<sp/>in<sp/>state<sp/>of<sp/>optimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" kindref="member">m_optimizer</ref>-&gt;<ref refid="classlbann_1_1optimizer_1a42a52aab9a682fda57c1e639968a44b9" kindref="member">load_from_checkpoint_shared</ref>(p,<sp/>l_name);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp"/>
  </compounddef>
</doxygen>
