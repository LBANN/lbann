<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacelbann_1_1anonymous__namespace_02recurrent_8cpp_03" kind="namespace" language="C++">
    <compoundname>lbann::anonymous_namespace{recurrent.cpp}</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacelbann_1_1anonymous__namespace_02recurrent_8cpp_03_1a8c76387c2dd531058700ad9a41cd093a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::anonymous_namespace{recurrent.cpp}::unroll_input_layer</definition>
        <argsstring>(int unroll_depth, std::vector&lt; Layer *&gt; &amp;layers, std::unordered_map&lt; const Layer *, Layer *&gt; &amp;prev_step_layer, std::unordered_map&lt; const Layer *, Layer *&gt; &amp;next_step_layer)</argsstring>
        <name>unroll_input_layer</name>
        <param>
          <type>int</type>
          <declname>unroll_depth</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>layers</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *, <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>prev_step_layer</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *, <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>next_step_layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup input layer to match unrolled network. The first layer is assumed to be an input layer. A slice layer and a split layer are inserted after the input layer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp" line="47" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp" bodystart="47" bodyend="113"/>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638">DATA_PARALLEL</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0">MODEL_PARALLEL</references>
        <references refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">lbann::Layer::set_name</references>
        <references refid="classlbann_1_1Layer_1ace0346ac56fd7ce7b6b44f27f224f35e" compoundref="layer_8cpp" startline="1238" endline="1247">lbann::Layer::add_child_layer</references>
        <references refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" compoundref="layer_8cpp" startline="1227" endline="1236">lbann::Layer::add_parent_layer</references>
        <referencedby refid="classlbann_1_1recurrent__model_1ac89ddfa607e5cb6b940eb389ebbce6f6" compoundref="recurrent_8cpp" startline="361" endline="393">lbann::recurrent_model::setup_layer_topology</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1anonymous__namespace_02recurrent_8cpp_03_1af04adecd9a62fdcd16ae78b3e95d4bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::anonymous_namespace{recurrent.cpp}::unroll_target_layer</definition>
        <argsstring>(int unroll_depth, std::vector&lt; Layer *&gt; &amp;layers, std::unordered_map&lt; const Layer *, Layer *&gt; &amp;prev_step_layer, std::unordered_map&lt; const Layer *, Layer *&gt; &amp;next_step_layer)</argsstring>
        <name>unroll_target_layer</name>
        <param>
          <type>int</type>
          <declname>unroll_depth</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>layers</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *, <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>prev_step_layer</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *, <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>next_step_layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup target layer to match unrolled network. The last layer is assumed to be a target layer. A concatenation layer is inserted before the target layer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp" line="119" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp" bodystart="119" bodyend="169"/>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638">DATA_PARALLEL</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0">MODEL_PARALLEL</references>
        <referencedby refid="classlbann_1_1recurrent__model_1ac89ddfa607e5cb6b940eb389ebbce6f6" compoundref="recurrent_8cpp" startline="361" endline="393">lbann::recurrent_model::setup_layer_topology</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1anonymous__namespace_02recurrent_8cpp_03_1a16733e1fb301c3099a5fe07d703c3782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::anonymous_namespace{recurrent.cpp}::add_unrolled_layers</definition>
        <argsstring>(int unroll_depth, std::vector&lt; Layer *&gt; &amp;layers, std::unordered_map&lt; const Layer *, Layer *&gt; &amp;prev_step_layer, std::unordered_map&lt; const Layer *, Layer *&gt; &amp;next_step_layer)</argsstring>
        <name>add_unrolled_layers</name>
        <param>
          <type>int</type>
          <declname>unroll_depth</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>layers</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *, <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>prev_step_layer</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *, <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>next_step_layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Duplicate layer network to achieve desired recurrence depth. The layers within each recurrence step have the same topology as the original network. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp" line="175" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp" bodystart="175" bodyend="219"/>
        <referencedby refid="classlbann_1_1recurrent__model_1ac89ddfa607e5cb6b940eb389ebbce6f6" compoundref="recurrent_8cpp" startline="361" endline="393">lbann::recurrent_model::setup_layer_topology</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1anonymous__namespace_02recurrent_8cpp_03_1a50bca1c07c6f3146947b2a0fb5cc815a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::anonymous_namespace{recurrent.cpp}::add_placeholder_layers</definition>
        <argsstring>(std::vector&lt; Layer *&gt; &amp;layers, std::unordered_map&lt; const Layer *, Layer *&gt; &amp;prev_step_layer, std::unordered_map&lt; const Layer *, Layer *&gt; &amp;next_step_layer)</argsstring>
        <name>add_placeholder_layers</name>
        <param>
          <type>std::vector&lt; <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>layers</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *, <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>prev_step_layer</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *, <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>next_step_layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add placeholder layers for first and last recurrence step. If a layer in the first recurrence step expects input from an earlier recurrence step, we insert a zero-valued constant layer. If a layer in the last recurrence step expects to output to a later recurrence step, we insert a dummy layer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp" line="227" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp" bodystart="227" bodyend="317"/>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638">DATA_PARALLEL</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0">MODEL_PARALLEL</references>
        <references refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">lbann::Layer::set_name</references>
        <references refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" compoundref="layer_8cpp" startline="1227" endline="1236">lbann::Layer::add_parent_layer</references>
        <referencedby refid="classlbann_1_1recurrent__model_1ac89ddfa607e5cb6b940eb389ebbce6f6" compoundref="recurrent_8cpp" startline="361" endline="393">lbann::recurrent_model::setup_layer_topology</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1anonymous__namespace_02recurrent_8cpp_03_1a12a6f96a1c15c91218169bf7157cd800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::anonymous_namespace{recurrent.cpp}::setup_unrolled_layer_pointers</definition>
        <argsstring>(std::vector&lt; Layer *&gt; &amp;layers, const std::unordered_map&lt; const Layer *, Layer *&gt; &amp;prev_step_layer, const std::unordered_map&lt; const Layer *, Layer *&gt; &amp;next_step_layer)</argsstring>
        <name>setup_unrolled_layer_pointers</name>
        <param>
          <type>std::vector&lt; <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>layers</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *, <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>prev_step_layer</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *, <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>next_step_layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup pointers between recurrence steps. If a layer&apos;s parent appears after the layer itself, change the parent to the corresponding layer in the previous recurrence step. Similarly, if a layer&apos;s child appears before the layer itself, change the child to the corresponding layer in the next recurrence step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp" line="326" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp" bodystart="326" bodyend="345"/>
        <referencedby refid="classlbann_1_1recurrent__model_1ac89ddfa607e5cb6b940eb389ebbce6f6" compoundref="recurrent_8cpp" startline="361" endline="393">lbann::recurrent_model::setup_layer_topology</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp" line="41" column="1"/>
  </compounddef>
</doxygen>
