<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="safe__inv_8hpp" kind="file" language="C++">
    <compoundname>safe_inv.hpp</compoundname>
    <includes refid="base_8hpp" local="yes">lbann/base.hpp</includes>
    <includes refid="transform_8hpp" local="yes">lbann/layers/transform/transform.hpp</includes>
    <includes refid="exception_8hpp" local="yes">lbann/utils/exception.hpp</includes>
    <includedby refid="lbann_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</includedby>
    <incdepgraph>
      <node id="9407">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="9408" relation="include">
        </childnode>
        <childnode refid="9404" relation="include">
        </childnode>
        <childnode refid="9392" relation="include">
        </childnode>
        <childnode refid="9403" relation="include">
        </childnode>
      </node>
      <node id="9419">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="9392" relation="include">
        </childnode>
        <childnode refid="9393" relation="include">
        </childnode>
      </node>
      <node id="9393">
        <label>El.hpp</label>
      </node>
      <node id="9392">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="9393" relation="include">
        </childnode>
        <childnode refid="9394" relation="include">
        </childnode>
        <childnode refid="9395" relation="include">
        </childnode>
        <childnode refid="9400" relation="include">
        </childnode>
      </node>
      <node id="9391">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/transform/safe_inv.hpp</label>
        <link refid="safe__inv_8hpp"/>
        <childnode refid="9392" relation="include">
        </childnode>
        <childnode refid="9401" relation="include">
        </childnode>
        <childnode refid="9411" relation="include">
        </childnode>
      </node>
      <node id="9408">
        <label>string</label>
      </node>
      <node id="9416">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="9404" relation="include">
        </childnode>
        <childnode refid="9392" relation="include">
        </childnode>
        <childnode refid="9403" relation="include">
        </childnode>
        <childnode refid="9411" relation="include">
        </childnode>
      </node>
      <node id="9422">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="9423" relation="include">
        </childnode>
      </node>
      <node id="9405">
        <label>map</label>
      </node>
      <node id="9421">
        <label>unordered_set</label>
      </node>
      <node id="9415">
        <label>exception</label>
      </node>
      <node id="9401">
        <label>lbann/layers/transform/transform.hpp</label>
        <link refid="transform_8hpp"/>
        <childnode refid="9402" relation="include">
        </childnode>
      </node>
      <node id="9418">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="9392" relation="include">
        </childnode>
        <childnode refid="9403" relation="include">
        </childnode>
        <childnode refid="9411" relation="include">
        </childnode>
        <childnode refid="9416" relation="include">
        </childnode>
      </node>
      <node id="9397">
        <label>cstdio</label>
      </node>
      <node id="9412">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="9413" relation="include">
        </childnode>
        <childnode refid="9408" relation="include">
        </childnode>
      </node>
      <node id="9399">
        <label>cxxabi.h</label>
      </node>
      <node id="9411">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="9392" relation="include">
        </childnode>
        <childnode refid="9403" relation="include">
        </childnode>
        <childnode refid="9412" relation="include">
        </childnode>
        <childnode refid="9414" relation="include">
        </childnode>
        <childnode refid="9415" relation="include">
        </childnode>
      </node>
      <node id="9404">
        <label>vector</label>
      </node>
      <node id="9403">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="9404" relation="include">
        </childnode>
        <childnode refid="9405" relation="include">
        </childnode>
        <childnode refid="9406" relation="include">
        </childnode>
        <childnode refid="9392" relation="include">
        </childnode>
      </node>
      <node id="9420">
        <label>lbann.pb.h</label>
      </node>
      <node id="9396">
        <label>cstdlib</label>
      </node>
      <node id="9414">
        <label>iostream</label>
      </node>
      <node id="9409">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="9410" relation="include">
        </childnode>
        <childnode refid="9392" relation="include">
        </childnode>
        <childnode refid="9403" relation="include">
        </childnode>
        <childnode refid="9411" relation="include">
        </childnode>
        <childnode refid="9416" relation="include">
        </childnode>
        <childnode refid="9417" relation="include">
        </childnode>
        <childnode refid="9408" relation="include">
        </childnode>
        <childnode refid="9421" relation="include">
        </childnode>
      </node>
      <node id="9402">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="9392" relation="include">
        </childnode>
        <childnode refid="9403" relation="include">
        </childnode>
        <childnode refid="9407" relation="include">
        </childnode>
        <childnode refid="9409" relation="include">
        </childnode>
        <childnode refid="9411" relation="include">
        </childnode>
        <childnode refid="9416" relation="include">
        </childnode>
        <childnode refid="9422" relation="include">
        </childnode>
        <childnode refid="9419" relation="include">
        </childnode>
        <childnode refid="9420" relation="include">
        </childnode>
        <childnode refid="9408" relation="include">
        </childnode>
        <childnode refid="9404" relation="include">
        </childnode>
      </node>
      <node id="9423">
        <label>chrono</label>
      </node>
      <node id="9413">
        <label>csignal</label>
      </node>
      <node id="9417">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="9408" relation="include">
        </childnode>
        <childnode refid="9392" relation="include">
        </childnode>
        <childnode refid="9403" relation="include">
        </childnode>
        <childnode refid="9411" relation="include">
        </childnode>
        <childnode refid="9416" relation="include">
        </childnode>
        <childnode refid="9418" relation="include">
        </childnode>
        <childnode refid="9419" relation="include">
        </childnode>
        <childnode refid="9420" relation="include">
        </childnode>
      </node>
      <node id="9400">
        <label>lbann_config.hpp</label>
      </node>
      <node id="9410">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="9395">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="9396" relation="include">
        </childnode>
        <childnode refid="9397" relation="include">
        </childnode>
        <childnode refid="9398" relation="include">
        </childnode>
        <childnode refid="9399" relation="include">
        </childnode>
      </node>
      <node id="9394">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="9393" relation="include">
        </childnode>
      </node>
      <node id="9406">
        <label>typeindex</label>
      </node>
      <node id="9398">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9431">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="9432" relation="include">
        </childnode>
        <childnode refid="9433" relation="include">
        </childnode>
        <childnode refid="9434" relation="include">
        </childnode>
        <childnode refid="9435" relation="include">
        </childnode>
        <childnode refid="9436" relation="include">
        </childnode>
        <childnode refid="9437" relation="include">
        </childnode>
        <childnode refid="9438" relation="include">
        </childnode>
        <childnode refid="9439" relation="include">
        </childnode>
        <childnode refid="9429" relation="include">
        </childnode>
      </node>
      <node id="9436">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/model_factory.cpp</label>
        <link refid="model__factory_8cpp"/>
      </node>
      <node id="9428">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="9429">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9430" relation="include">
        </childnode>
        <childnode refid="9431" relation="include">
        </childnode>
        <childnode refid="9440" relation="include">
        </childnode>
      </node>
      <node id="9424">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/transform/safe_inv.hpp</label>
        <link refid="safe__inv_8hpp"/>
        <childnode refid="9425" relation="include">
        </childnode>
      </node>
      <node id="9427">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="9428" relation="include">
        </childnode>
        <childnode refid="9425" relation="include">
        </childnode>
      </node>
      <node id="9433">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp</label>
        <link refid="layer__factory_8cpp"/>
      </node>
      <node id="9430">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/utils/protobuf_utils.cpp</label>
        <link refid="protobuf__utils_8cpp"/>
      </node>
      <node id="9441">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/init_image_data_readers.cpp</label>
        <link refid="init__image__data__readers_8cpp"/>
      </node>
      <node id="9437">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/objective_function_factory.cpp</label>
        <link refid="objective__function__factory_8cpp"/>
      </node>
      <node id="9426">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp</label>
        <link refid="proto__common_8cpp"/>
      </node>
      <node id="9435">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/metric_factory.cpp</label>
        <link refid="metric__factory_8cpp"/>
      </node>
      <node id="9425">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9427" relation="include">
        </childnode>
        <childnode refid="9429" relation="include">
        </childnode>
        <childnode refid="9442" relation="include">
        </childnode>
      </node>
      <node id="9440">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/init_image_data_readers.hpp</label>
        <link refid="init__image__data__readers_8hpp"/>
        <childnode refid="9441" relation="include">
        </childnode>
        <childnode refid="9426" relation="include">
        </childnode>
      </node>
      <node id="9438">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/optimizer_factory.cpp</label>
        <link refid="optimizer__factory_8cpp"/>
      </node>
      <node id="9439">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/weights_factory.cpp</label>
        <link refid="weights__factory_8cpp"/>
      </node>
      <node id="9432">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp</label>
        <link refid="callback__factory_8cpp"/>
      </node>
      <node id="9442">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/protobuf_utils.hpp</label>
        <link refid="protobuf__utils_8hpp"/>
        <childnode refid="9430" relation="include">
        </childnode>
      </node>
      <node id="9434">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_graph_factory.cpp</label>
        <link refid="layer__graph__factory_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlbann_1_1safe__inv__layer" prot="public">lbann::safe_inv_layer</innerclass>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LBANN_LAYER_SAFE_INV_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LBANN_LAYER_SAFE_INV_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_8hpp" kindref="compound">lbann/base.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="transform_8hpp" kindref="compound">lbann/layers/transform/transform.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">lbann/utils/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;data_layout<sp/>T_layout<sp/>=<sp/>data_layout::DATA_PARALLEL&gt;</highlight></codeline>
<codeline lineno="40" refid="classlbann_1_1safe__inv__layer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1safe__inv__layer" kindref="compound">safe_inv_layer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1transform__layer" kindref="compound">transform_layer</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="classlbann_1_1safe__inv__layer_1ae8978232b726f450b961a63e5ff33279" refkind="member"><highlight class="normal"><sp/><sp/>DataType<sp/><ref refid="classlbann_1_1safe__inv__layer_1ae8978232b726f450b961a63e5ff33279" kindref="member">m_threshhold</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classlbann_1_1safe__inv__layer_1a8568b80fcabd1427eaa4b4deed294f5e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1safe__inv__layer_1a8568b80fcabd1427eaa4b4deed294f5e" kindref="member">safe_inv_layer</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>threshhold<sp/>=<sp/>DataType(0),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref><sp/>*cudnn<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classlbann_1_1transform__layer" kindref="compound">transform_layer</ref>(comm),<sp/>m_threshhold(threshhold)<sp/>{}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classlbann_1_1safe__inv__layer_1aaaf9a3b769c579122cd361caa65c7958" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1safe__inv__layer" kindref="compound">safe_inv_layer</ref>*<sp/><ref refid="classlbann_1_1safe__inv__layer_1aaaf9a3b769c579122cd361caa65c7958" kindref="member">copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1safe__inv__layer_1a8568b80fcabd1427eaa4b4deed294f5e" kindref="member">safe_inv_layer</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="54" refid="classlbann_1_1safe__inv__layer_1a6ee075564c6b683a42fc77b16638a588" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1safe__inv__layer_1a6ee075564c6b683a42fc77b16638a588" kindref="member">get_type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;safe_inv&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="55" refid="classlbann_1_1safe__inv__layer_1aa82e763a902004d7b0f05b390c3bd45f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08db" kindref="member">data_layout</ref><sp/><ref refid="classlbann_1_1safe__inv__layer_1aa82e763a902004d7b0f05b390c3bd45f" kindref="member">get_data_layout</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T_layout;<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classlbann_1_1safe__inv__layer_1a1823f1ac48228eec1fa0c1578b2b1ab3" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1safe__inv__layer_1a1823f1ac48228eec1fa0c1578b2b1ab3" kindref="member">get_description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>s;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>dataLayout:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1ae3f4a5602df821f4221614b1e3782dc1" kindref="member">get_data_layout_string</ref>(<ref refid="classlbann_1_1safe__inv__layer_1aa82e763a902004d7b0f05b390c3bd45f" kindref="member">get_data_layout</ref>());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.str();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classlbann_1_1safe__inv__layer_1a070fe64c2a605eb5624d509740de1c32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1safe__inv__layer_1a070fe64c2a605eb5624d509740de1c32" kindref="member">fp_compute</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_input<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a35397843bb0c84030000c7d872229acb" kindref="member">get_local_prev_activations</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_output<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a4248f27acebf72b7b7b3ee39c8bcb62a" kindref="member">get_local_activations</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_height<sp/>=<sp/>local_input.Height();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_width<sp/>=<sp/>local_input.Width();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>local_height;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>x<sp/>=<sp/>local_input(row,<sp/>col);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType&amp;<sp/>y<sp/>=<sp/>local_output(row,<sp/>col);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>std::fabs(x)<sp/>&gt;<sp/>m_threshhold<sp/>?<sp/>1<sp/>/<sp/>x<sp/>:<sp/>DataType(0);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classlbann_1_1safe__inv__layer_1a6c9d917f226b718733ee60da9da0291b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1safe__inv__layer_1a6c9d917f226b718733ee60da9da0291b" kindref="member">bp_compute</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_input<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a35397843bb0c84030000c7d872229acb" kindref="member">get_local_prev_activations</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_gradient_wrt_output<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a82827edc5e869960144f3ccb2172bfcd" kindref="member">get_local_prev_error_signals</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_gradient_wrt_input<sp/>=<sp/><ref refid="classlbann_1_1Layer_1af178d00b9d878aa7d87754bff2a91f3a" kindref="member">get_local_error_signals</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_height<sp/>=<sp/>local_input.Height();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_width<sp/>=<sp/>local_input.Width();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>local_height;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>x<sp/>=<sp/>local_input(row,<sp/>col);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>dy<sp/>=<sp/>local_gradient_wrt_output(row,<sp/>col);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType&amp;<sp/>dx<sp/>=<sp/>local_gradient_wrt_input(row,<sp/>col);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>+=<sp/>std::fabs(x)<sp/>&gt;<sp/>m_threshhold<sp/>?<sp/><sp/>-<sp/>dy<sp/>/<sp/>(x<sp/>*<sp/>x)<sp/>:<sp/>DataType(0);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_LAYER_SAFE_INV_HPP_INCLUDED</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/transform/safe_inv.hpp"/>
  </compounddef>
</doxygen>
