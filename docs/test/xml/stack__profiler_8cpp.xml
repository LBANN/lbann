<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stack__profiler_8cpp" kind="file" language="C++">
    <compoundname>stack_profiler.cpp</compoundname>
    <includes refid="options_8hpp" local="yes">lbann/utils/options.hpp</includes>
    <includes refid="stack__profiler_8hpp" local="yes">lbann/utils/stack_profiler.hpp</includes>
    <includes refid="cyg__profile_8hpp" local="yes">lbann/utils/cyg_profile.hpp</includes>
    <includes local="no">cxxabi.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">dlfcn.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="25802">
        <label>lbann/utils/stack_profiler.hpp</label>
        <link refid="stack__profiler_8hpp"/>
        <childnode refid="25803" relation="include">
        </childnode>
        <childnode refid="25804" relation="include">
        </childnode>
        <childnode refid="25798" relation="include">
        </childnode>
        <childnode refid="25805" relation="include">
        </childnode>
        <childnode refid="25806" relation="include">
        </childnode>
        <childnode refid="25807" relation="include">
        </childnode>
      </node>
      <node id="25801">
        <label>string</label>
      </node>
      <node id="25799">
        <label>map</label>
      </node>
      <node id="25803">
        <label>string.h</label>
      </node>
      <node id="25806">
        <label>cstdio</label>
      </node>
      <node id="25807">
        <label>cxxabi.h</label>
      </node>
      <node id="25796">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp</label>
        <link refid="stack__profiler_8cpp"/>
        <childnode refid="25797" relation="include">
        </childnode>
        <childnode refid="25802" relation="include">
        </childnode>
        <childnode refid="25808" relation="include">
        </childnode>
        <childnode refid="25807" relation="include">
        </childnode>
        <childnode refid="25809" relation="include">
        </childnode>
        <childnode refid="25806" relation="include">
        </childnode>
        <childnode refid="25805" relation="include">
        </childnode>
        <childnode refid="25804" relation="include">
        </childnode>
        <childnode refid="25803" relation="include">
        </childnode>
      </node>
      <node id="25800">
        <label>vector</label>
      </node>
      <node id="25805">
        <label>cstdlib</label>
      </node>
      <node id="25798">
        <label>iostream</label>
      </node>
      <node id="25797">
        <label>lbann/utils/options.hpp</label>
        <link refid="options_8hpp"/>
        <childnode refid="25798" relation="include">
        </childnode>
        <childnode refid="25799" relation="include">
        </childnode>
        <childnode refid="25800" relation="include">
        </childnode>
        <childnode refid="25801" relation="include">
        </childnode>
      </node>
      <node id="25809">
        <label>algorithm</label>
      </node>
      <node id="25808">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="25805" relation="include">
        </childnode>
        <childnode refid="25806" relation="include">
        </childnode>
        <childnode refid="25804" relation="include">
        </childnode>
        <childnode refid="25807" relation="include">
        </childnode>
      </node>
      <node id="25804">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="stack__profiler_8cpp_1acaf4dd8f3a0755b44949a87760cd1102" prot="public" static="no" mutable="no">
        <type><ref refid="structc__hash__table" kindref="compound">c_hash_table</ref> *</type>
        <definition>c_hash_table* c_hash_the_hash_table</definition>
        <argsstring></argsstring>
        <name>c_hash_the_hash_table</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>following are pure C functions for creating a hash table, and definitions for variables used in the &apos;extern &quot;C&quot;&apos; inline functions in <ref refid="base_8hpp" kindref="compound">lbann/base.hpp</ref></para><para>following that are the stack_profiler class definitions; the stack_profiler is a c++ class in the lbann namespace </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" line="20" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" bodystart="20" bodyend="-1"/>
        <referencedby refid="cyg__profile_8hpp_1ab51b5864ac189a74ae78a87749f2d85b" compoundref="cyg__profile_8hpp" startline="165" endline="210">c_hash_insert</referencedby>
        <referencedby refid="cyg__profile_8hpp_1a180ca8d5835108eae791ba3ce34484f0" compoundref="cyg__profile_8hpp" startline="214" endline="236">c_hash_lookup</referencedby>
        <referencedby refid="classlbann_1_1stack__profiler_1a27d55f6551cf445d3d0e9836858f6872" compoundref="stack__profiler_8cpp" startline="107" endline="132">lbann::stack_profiler::print</referencedby>
      </memberdef>
      <memberdef kind="variable" id="stack__profiler_8cpp_1a6cc00bff1b0fcee1e92c726aea92c818" prot="public" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* c_hash_fp_full_stack_trace</definition>
        <argsstring></argsstring>
        <name>c_hash_fp_full_stack_trace</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This module contains pure C variables and functions that are used in conjunction with <ref refid="cyg__profile_8hpp_1a6a92627690a70d1ac4cbe5f5fae5c196" kindref="member">__cyg_profile_func_enter()</ref> and <ref refid="cyg__profile_8hpp_1a42601a54843c953a90ace14cd551cde8" kindref="member">__cyg_profile_func_exit()</ref> to profile the stack at runtime. Some functions are inlined below; others are defined in <ref refid="stack__profiler_8cpp" kindref="compound">src/utils/stack_profiler.cpp</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" line="21" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" bodystart="21" bodyend="-1"/>
        <referencedby refid="classlbann_1_1stack__profiler_1a57329b6f2822f91e6dad13b19bcc81d9" compoundref="stack__profiler_8cpp" startline="68" endline="76">lbann::stack_profiler::~stack_profiler</referencedby>
        <referencedby refid="classlbann_1_1stack__profiler_1a5c8e2ec1f36d36ff8211ec8910063777" compoundref="stack__profiler_8cpp" startline="82" endline="101">lbann::stack_profiler::activate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="stack__profiler_8cpp_1a434aed2bad9781985a12de882aa0ec84" prot="public" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* c_hash_fp_full_stack_trace_metadata</definition>
        <argsstring></argsstring>
        <name>c_hash_fp_full_stack_trace_metadata</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" line="22" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" bodystart="22" bodyend="-1"/>
        <referencedby refid="classlbann_1_1stack__profiler_1a57329b6f2822f91e6dad13b19bcc81d9" compoundref="stack__profiler_8cpp" startline="68" endline="76">lbann::stack_profiler::~stack_profiler</referencedby>
        <referencedby refid="classlbann_1_1stack__profiler_1a5c8e2ec1f36d36ff8211ec8910063777" compoundref="stack__profiler_8cpp" startline="82" endline="101">lbann::stack_profiler::activate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="stack__profiler_8cpp_1a193e8df9f6b1bc5794e9aa25f82e6a5f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int c_hash_profiling_is_turned_on</definition>
        <argsstring></argsstring>
        <name>c_hash_profiling_is_turned_on</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" line="23" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" bodystart="23" bodyend="-1"/>
        <referencedby refid="classlbann_1_1stack__profiler_1a5c8e2ec1f36d36ff8211ec8910063777" compoundref="stack__profiler_8cpp" startline="82" endline="101">lbann::stack_profiler::activate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="stack__profiler_8cpp_1a92d77137d4b87923f488746604d72f94" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int c_hash_thread_id</definition>
        <argsstring></argsstring>
        <name>c_hash_thread_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" line="24" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" bodystart="24" bodyend="-1"/>
        <referencedby refid="cyg__profile_8hpp_1ab5ce10a091e20ffd33bfd0bc9982f6c4" compoundref="stack__profiler_8cpp" startline="33" endline="35">c_hash_set_thread_id</referencedby>
        <referencedby refid="classlbann_1_1stack__profiler_1a5c8e2ec1f36d36ff8211ec8910063777" compoundref="stack__profiler_8cpp" startline="82" endline="101">lbann::stack_profiler::activate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="stack__profiler_8cpp_1ae5255f380b4dacdd914710cbe8181ee2" prot="public" static="no" mutable="no">
        <type>short</type>
        <definition>short c_hash_func_id</definition>
        <argsstring></argsstring>
        <name>c_hash_func_id</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" line="25" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" bodystart="25" bodyend="-1"/>
        <referencedby refid="cyg__profile_8hpp_1ab51b5864ac189a74ae78a87749f2d85b" compoundref="cyg__profile_8hpp" startline="165" endline="210">c_hash_insert</referencedby>
      </memberdef>
      <memberdef kind="variable" id="stack__profiler_8cpp_1a5c0c7f1634059c3321a07d97508e59e3" prot="public" static="no" mutable="no">
        <type>Dl_info</type>
        <definition>Dl_info c_hash_info</definition>
        <argsstring></argsstring>
        <name>c_hash_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" line="27" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stack__profiler_8cpp_1a6e154cbf670e1744cf46337adddfb782" prot="public" static="no" mutable="no">
        <type>short</type>
        <definition>short c_hash_depth</definition>
        <argsstring></argsstring>
        <name>c_hash_depth</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" line="28" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" bodystart="28" bodyend="-1"/>
        <referencedby refid="cyg__profile_8hpp_1a42601a54843c953a90ace14cd551cde8" compoundref="cyg__profile_8hpp" startline="125" endline="134">__cyg_profile_func_exit</referencedby>
        <referencedby refid="cyg__profile_8hpp_1a6a92627690a70d1ac4cbe5f5fae5c196" compoundref="cyg__profile_8hpp" startline="149" endline="159">__cyg_profile_func_enter</referencedby>
      </memberdef>
      <memberdef kind="variable" id="stack__profiler_8cpp_1a60ca1ac997785ebd8547c022d07fe4b5" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long c_hash_lookups</definition>
        <argsstring></argsstring>
        <name>c_hash_lookups</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" line="30" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" bodystart="30" bodyend="-1"/>
        <referencedby refid="cyg__profile_8hpp_1a180ca8d5835108eae791ba3ce34484f0" compoundref="cyg__profile_8hpp" startline="214" endline="236">c_hash_lookup</referencedby>
        <referencedby refid="classlbann_1_1stack__profiler_1a27d55f6551cf445d3d0e9836858f6872" compoundref="stack__profiler_8cpp" startline="107" endline="132">lbann::stack_profiler::print</referencedby>
      </memberdef>
      <memberdef kind="variable" id="stack__profiler_8cpp_1a9e4c390c04f233e99f7577a1c63be028" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long c_hash_collisions</definition>
        <argsstring></argsstring>
        <name>c_hash_collisions</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" line="31" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" bodystart="31" bodyend="-1"/>
        <referencedby refid="cyg__profile_8hpp_1a180ca8d5835108eae791ba3ce34484f0" compoundref="cyg__profile_8hpp" startline="214" endline="236">c_hash_lookup</referencedby>
        <referencedby refid="classlbann_1_1stack__profiler_1a27d55f6551cf445d3d0e9836858f6872" compoundref="stack__profiler_8cpp" startline="107" endline="132">lbann::stack_profiler::print</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stack__profiler_8cpp_1ab5ce10a091e20ffd33bfd0bc9982f6c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void c_hash_set_thread_id</definition>
        <argsstring>(int id)</argsstring>
        <name>c_hash_set_thread_id</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" line="33" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" bodystart="33" bodyend="35"/>
        <references refid="stack__profiler_8cpp_1a92d77137d4b87923f488746604d72f94" compoundref="stack__profiler_8cpp" startline="24">c_hash_thread_id</references>
      </memberdef>
      <memberdef kind="function" id="stack__profiler_8cpp_1ad1c2d92ab2c29021521d36cf4c97e488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void c_hash_create</definition>
        <argsstring>(long size)</argsstring>
        <name>c_hash_create</name>
        <param>
          <type>long</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the hash table! This is a singleton creates the singleton hash table; the table will contain at least &quot;size&quot; slots (FYI, the table size is a power of two) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" line="37" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp" bodystart="37" bodyend="60"/>
        <references refid="structc__hash__table_1afd5bfd9640fc5b72f75457fb7dd89663" compoundref="cyg__profile_8hpp" startline="79">c_hash_table::size</references>
        <references refid="structc__hash__table_1ae4c33f323d44301e5990ba3355a2d708" compoundref="cyg__profile_8hpp" startline="80">c_hash_table::count</references>
        <references refid="structc__hash__table_1a87debaad1679b5fd28537908174a7487" compoundref="cyg__profile_8hpp" startline="81">c_hash_table::cur_mark</references>
        <references refid="structc__hash__table_1abfdd282e54441552086f78d30b959d60" compoundref="cyg__profile_8hpp" startline="82">c_hash_table::data</references>
        <references refid="structc__hash__node_1a83dedd9d9f8b425832404116b456b46d" compoundref="cyg__profile_8hpp" startline="67">c_hash_node::key</references>
        <references refid="structc__hash__node_1af5199f281a298c18ee13e8fc8a86359e" compoundref="cyg__profile_8hpp" startline="68">c_hash_node::mark</references>
        <references refid="structc__hash__node_1a3b00ec567a576f3677911f8b8e421de0" compoundref="cyg__profile_8hpp" startline="73">c_hash_node::func</references>
        <references refid="classlbann_1_1stack__profiler_1a7a1803ee126dfb5a215c5966458451fd" compoundref="stack__profiler_8hpp" startline="63">lbann::stack_profiler::s_instance</references>
        <referencedby refid="classlbann_1_1stack__profiler_1a5c8e2ec1f36d36ff8211ec8910063777" compoundref="stack__profiler_8cpp" startline="82" endline="101">lbann::stack_profiler::activate</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="options_8hpp" kindref="compound">lbann/utils/options.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stack__profiler_8hpp" kindref="compound">lbann/utils/stack_profiler.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cyg__profile_8hpp" kindref="compound">lbann/utils/cyg_profile.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cxxabi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlfcn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="cyg__profile_8hpp_1acaf4dd8f3a0755b44949a87760cd1102" refkind="member"><highlight class="normal"><ref refid="structc__hash__table" kindref="compound">c_hash_table</ref><sp/>*<sp/><ref refid="stack__profiler_8cpp_1acaf4dd8f3a0755b44949a87760cd1102" kindref="member">c_hash_the_hash_table</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="21" refid="cyg__profile_8hpp_1a6cc00bff1b0fcee1e92c726aea92c818" refkind="member"><highlight class="normal">FILE<sp/>*<ref refid="stack__profiler_8cpp_1a6cc00bff1b0fcee1e92c726aea92c818" kindref="member">c_hash_fp_full_stack_trace</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="22" refid="cyg__profile_8hpp_1a434aed2bad9781985a12de882aa0ec84" refkind="member"><highlight class="normal">FILE<sp/>*<ref refid="stack__profiler_8cpp_1a434aed2bad9781985a12de882aa0ec84" kindref="member">c_hash_fp_full_stack_trace_metadata</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="23" refid="cyg__profile_8hpp_1a193e8df9f6b1bc5794e9aa25f82e6a5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stack__profiler_8cpp_1a193e8df9f6b1bc5794e9aa25f82e6a5f" kindref="member">c_hash_profiling_is_turned_on</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24" refid="cyg__profile_8hpp_1a92d77137d4b87923f488746604d72f94" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stack__profiler_8cpp_1a92d77137d4b87923f488746604d72f94" kindref="member">c_hash_thread_id</ref>;</highlight></codeline>
<codeline lineno="25" refid="cyg__profile_8hpp_1ae5255f380b4dacdd914710cbe8181ee2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="stack__profiler_8cpp_1ae5255f380b4dacdd914710cbe8181ee2" kindref="member">c_hash_func_id</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="cyg__profile_8hpp_1a5c0c7f1634059c3321a07d97508e59e3" refkind="member"><highlight class="normal">Dl_info<sp/><ref refid="stack__profiler_8cpp_1a5c0c7f1634059c3321a07d97508e59e3" kindref="member">c_hash_info</ref>;</highlight></codeline>
<codeline lineno="28" refid="cyg__profile_8hpp_1a6e154cbf670e1744cf46337adddfb782" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="stack__profiler_8cpp_1a6e154cbf670e1744cf46337adddfb782" kindref="member">c_hash_depth</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="cyg__profile_8hpp_1a60ca1ac997785ebd8547c022d07fe4b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="stack__profiler_8cpp_1a60ca1ac997785ebd8547c022d07fe4b5" kindref="member">c_hash_lookups</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31" refid="cyg__profile_8hpp_1a9e4c390c04f233e99f7577a1c63be028" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="stack__profiler_8cpp_1a9e4c390c04f233e99f7577a1c63be028" kindref="member">c_hash_collisions</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="cyg__profile_8hpp_1ab5ce10a091e20ffd33bfd0bc9982f6c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stack__profiler_8cpp_1ab5ce10a091e20ffd33bfd0bc9982f6c4" kindref="member">c_hash_set_thread_id</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="stack__profiler_8cpp_1a92d77137d4b87923f488746604d72f94" kindref="member">c_hash_thread_id</ref><sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="cyg__profile_8hpp_1ad1c2d92ab2c29021521d36cf4c97e488" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stack__profiler_8cpp_1ad1c2d92ab2c29021521d36cf4c97e488" kindref="member">c_hash_create</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="structc__hash__table" kindref="compound">c_hash_table</ref><sp/>*h<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structc__hash__table" kindref="compound">c_hash_table</ref>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structc__hash__table" kindref="compound">c_hash_table</ref>));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>h-&gt;<ref refid="structc__hash__table_1afd5bfd9640fc5b72f75457fb7dd89663" kindref="member">size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>h-&gt;<ref refid="structc__hash__table_1ae4c33f323d44301e5990ba3355a2d708" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>h-&gt;<ref refid="structc__hash__table_1a87debaad1679b5fd28537908174a7487" kindref="member">cur_mark</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>h-&gt;<ref refid="structc__hash__table_1abfdd282e54441552086f78d30b959d60" kindref="member">data</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//initial<sp/>size<sp/>for<sp/>hash<sp/>table;<sp/>want<sp/>this<sp/>to<sp/>be<sp/>a<sp/>power<sp/>of<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sz<sp/>&lt;<sp/>size)<sp/>{<sp/>sz<sp/>*=<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rule-of-thumb:<sp/>ensure<sp/>there&apos;s<sp/>some<sp/>padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(sz-size)<sp/>&lt;<sp/>(.1<sp/>*<sp/>sz)<sp/>)<sp/>{<sp/>sz<sp/>*=<sp/>2.0;<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>h-&gt;<ref refid="structc__hash__table_1afd5bfd9640fc5b72f75457fb7dd89663" kindref="member">size</ref><sp/>=<sp/>sz;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//allocate<sp/>and<sp/>zero<sp/>the<sp/>hash<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="structc__hash__node" kindref="compound">c_hash_node</ref><sp/>*d<sp/>=<sp/>h-&gt;<ref refid="structc__hash__table_1abfdd282e54441552086f78d30b959d60" kindref="member">data</ref><sp/>=<sp/>(<ref refid="structc__hash__node" kindref="compound">c_hash_node</ref>*)malloc(sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structc__hash__node" kindref="compound">c_hash_node</ref>));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;sz;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>d[i].<ref refid="structc__hash__node_1a83dedd9d9f8b425832404116b456b46d" kindref="member">key</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>d[i].<ref refid="structc__hash__node_1af5199f281a298c18ee13e8fc8a86359e" kindref="member">mark</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>d[i].<ref refid="structc__hash__node_1a3b00ec567a576f3677911f8b8e421de0" kindref="member">func</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>c_hash_the_hash_table<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">stack_profiler<sp/>*<sp/><ref refid="classlbann_1_1stack__profiler_1a7a1803ee126dfb5a215c5966458451fd" kindref="member">stack_profiler::s_instance</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>stack_profiler;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classlbann_1_1stack__profiler_1a57329b6f2822f91e6dad13b19bcc81d9" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1stack__profiler_1a57329b6f2822f91e6dad13b19bcc81d9" kindref="member">stack_profiler::~stack_profiler</ref>()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//todo:<sp/>free<sp/>hash<sp/>table<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack__profiler_8cpp_1a6cc00bff1b0fcee1e92c726aea92c818" kindref="member">c_hash_fp_full_stack_trace</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(<ref refid="stack__profiler_8cpp_1a6cc00bff1b0fcee1e92c726aea92c818" kindref="member">c_hash_fp_full_stack_trace</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack__profiler_8cpp_1a434aed2bad9781985a12de882aa0ec84" kindref="member">c_hash_fp_full_stack_trace_metadata</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(<ref refid="stack__profiler_8cpp_1a434aed2bad9781985a12de882aa0ec84" kindref="member">c_hash_fp_full_stack_trace_metadata</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classlbann_1_1stack__profiler_1aee22d226f565eb88cc877570ca818033" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1stack__profiler_1aee22d226f565eb88cc877570ca818033" kindref="member">stack_profiler::stack_profiler</ref>()</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1stack__profiler_1a7dd8bf137ea417ecf54537d64c6d296a" kindref="member">m_full_stack_trace</ref>(false)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classlbann_1_1stack__profiler_1a5c8e2ec1f36d36ff8211ec8910063777" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1stack__profiler_1a5c8e2ec1f36d36ff8211ec8910063777" kindref="member">stack_profiler::activate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1stack__profiler_1a1bd742927294507fe67184cb4f47b86c" kindref="member">m_thread_id</ref><sp/>=<sp/>thread;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="stack__profiler_8cpp_1a92d77137d4b87923f488746604d72f94" kindref="member">c_hash_thread_id</ref><sp/>=<sp/>thread;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classoptions" kindref="compound">options</ref><sp/>*opts<sp/>=<sp/><ref refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" kindref="member">options::get</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1aafb1d2a7ccde0b1bf786230ba4080ecd" kindref="member">has_bool</ref>(</highlight><highlight class="stringliteral">&quot;st_on&quot;</highlight><highlight class="normal">)<sp/>and<sp/>opts-&gt;<ref refid="classoptions_1a99aa190102de33e2aed39723929f9fad" kindref="member">get_bool</ref>(</highlight><highlight class="stringliteral">&quot;st_on&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;creating<sp/>hash<sp/>table!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stack__profiler_8cpp_1ad1c2d92ab2c29021521d36cf4c97e488" kindref="member">c_hash_create</ref>(10000);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stack__profiler_8cpp_1a193e8df9f6b1bc5794e9aa25f82e6a5f" kindref="member">c_hash_profiling_is_turned_on</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1aafb1d2a7ccde0b1bf786230ba4080ecd" kindref="member">has_bool</ref>(</highlight><highlight class="stringliteral">&quot;st_full_trace&quot;</highlight><highlight class="normal">)<sp/>and<sp/>opts-&gt;<ref refid="classoptions_1a99aa190102de33e2aed39723929f9fad" kindref="member">get_bool</ref>(</highlight><highlight class="stringliteral">&quot;st_full_trace&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1stack__profiler_1a7dd8bf137ea417ecf54537d64c6d296a" kindref="member">m_full_stack_trace</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1stack__profiler_1a1bd742927294507fe67184cb4f47b86c" kindref="member">m_thread_id</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack__profiler_8cpp_1a6cc00bff1b0fcee1e92c726aea92c818" kindref="member">c_hash_fp_full_stack_trace</ref><sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;full_stack_trace.bin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack__profiler_8cpp_1a434aed2bad9781985a12de882aa0ec84" kindref="member">c_hash_fp_full_stack_trace_metadata</ref><sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;full_stack_trace.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stack__profiler_8cpp_1a193e8df9f6b1bc5794e9aa25f82e6a5f" kindref="member">c_hash_profiling_is_turned_on</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="namespacelbann_1aedcfce41af2eae595ce58b1180f66bd1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacelbann_1aedcfce41af2eae595ce58b1180f66bd1" kindref="member">count_sorter</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;std::string,<sp/>long&gt;<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;std::string,<sp/>long&gt;<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.second<sp/>&gt;<sp/>b.second;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classlbann_1_1stack__profiler_1a27d55f6551cf445d3d0e9836858f6872" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1stack__profiler_1a27d55f6551cf445d3d0e9836858f6872" kindref="member">stack_profiler::print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1stack__profiler_1a1bd742927294507fe67184cb4f47b86c" kindref="member">m_thread_id</ref><sp/>!=<sp/>0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="structc__hash__table" kindref="compound">c_hash_table</ref><sp/>*h<sp/>=<sp/><ref refid="stack__profiler_8cpp_1acaf4dd8f3a0755b44949a87760cd1102" kindref="member">c_hash_the_hash_table</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;demangling<sp/>...<sp/>num<sp/>hash<sp/>table<sp/>entries:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>h-&gt;<ref refid="structc__hash__table_1ae4c33f323d44301e5990ba3355a2d708" kindref="member">count</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>std::vector&lt;std::pair&lt;std::string,<sp/>long&gt;&gt;<sp/>v;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>v.reserve(<sp/>h-&gt;<ref refid="structc__hash__table_1ae4c33f323d44301e5990ba3355a2d708" kindref="member">count</ref><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="structc__hash__node" kindref="compound">c_hash_node</ref><sp/>*<ref refid="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" kindref="member">data</ref><sp/>=<sp/>h-&gt;<ref refid="structc__hash__table_1abfdd282e54441552086f78d30b959d60" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>k=0;<sp/>k<sp/>&lt;<sp/>h-&gt;<ref refid="structc__hash__table_1afd5bfd9640fc5b72f75457fb7dd89663" kindref="member">size</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[k].mark<sp/>==<sp/>h-&gt;<ref refid="structc__hash__table_1a87debaad1679b5fd28537908174a7487" kindref="member">cur_mark</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(std::make_pair(data[k].name,<sp/>data[k].count));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>std::sort(v.begin(),<sp/>v.end(),<sp/><ref refid="namespacelbann_1aedcfce41af2eae595ce58b1180f66bd1" kindref="member">count_sorter</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>t.second<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.first<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;===================================================================\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;hash<sp/>table<sp/>lookups:<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="stack__profiler_8cpp_1a60ca1ac997785ebd8547c022d07fe4b5" kindref="member">c_hash_lookups</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;hash<sp/>table<sp/>collisions:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="stack__profiler_8cpp_1a9e4c390c04f233e99f7577a1c63be028" kindref="member">c_hash_collisions</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/stack_profiler.cpp"/>
  </compounddef>
</doxygen>
