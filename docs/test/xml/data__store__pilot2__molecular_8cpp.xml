<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="data__store__pilot2__molecular_8cpp" kind="file" language="C++">
    <compoundname>data_store_pilot2_molecular.cpp</compoundname>
    <includes refid="data__store__pilot2__molecular_8hpp" local="yes">lbann/data_store/data_store_pilot2_molecular.hpp</includes>
    <includes refid="data__reader__pilot2__molecular_8hpp" local="yes">lbann/data_readers/data_reader_pilot2_molecular.hpp</includes>
    <includes refid="exception_8hpp" local="yes">lbann/utils/exception.hpp</includes>
    <includes refid="options_8hpp" local="yes">lbann/utils/options.hpp</includes>
    <includes refid="timer_8hpp" local="yes">lbann/utils/timer.hpp</includes>
    <includes local="no">unordered_set</includes>
    <incdepgraph>
      <node id="20528">
        <label>sys/stat.h</label>
      </node>
      <node id="20531">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="20509" relation="include">
        </childnode>
        <childnode refid="20501" relation="include">
        </childnode>
      </node>
      <node id="20500">
        <label>lbann/data_store/generic_data_store.hpp</label>
        <link refid="generic__data__store_8hpp"/>
        <childnode refid="20501" relation="include">
        </childnode>
        <childnode refid="20510" relation="include">
        </childnode>
        <childnode refid="20511" relation="include">
        </childnode>
        <childnode refid="20514" relation="include">
        </childnode>
      </node>
      <node id="20519">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="20501" relation="include">
        </childnode>
        <childnode refid="20502" relation="include">
        </childnode>
      </node>
      <node id="20502">
        <label>El.hpp</label>
      </node>
      <node id="20501">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="20502" relation="include">
        </childnode>
        <childnode refid="20503" relation="include">
        </childnode>
        <childnode refid="20504" relation="include">
        </childnode>
        <childnode refid="20509" relation="include">
        </childnode>
      </node>
      <node id="20532">
        <label>cassert</label>
      </node>
      <node id="20530">
        <label>fcntl.h</label>
      </node>
      <node id="20499">
        <label>lbann/data_store/data_store_pilot2_molecular.hpp</label>
        <link refid="data__store__pilot2__molecular_8hpp"/>
        <childnode refid="20500" relation="include">
        </childnode>
        <childnode refid="20515" relation="include">
        </childnode>
      </node>
      <node id="20524">
        <label>string</label>
      </node>
      <node id="20537">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="20538" relation="include">
        </childnode>
      </node>
      <node id="20512">
        <label>map</label>
      </node>
      <node id="20514">
        <label>unordered_set</label>
      </node>
      <node id="20526">
        <label>exception</label>
      </node>
      <node id="20520">
        <label>random</label>
      </node>
      <node id="20529">
        <label>sys/types.h</label>
      </node>
      <node id="20506">
        <label>cstdio</label>
      </node>
      <node id="20498">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_store/data_store_pilot2_molecular.cpp</label>
        <link refid="data__store__pilot2__molecular_8cpp"/>
        <childnode refid="20499" relation="include">
        </childnode>
        <childnode refid="20516" relation="include">
        </childnode>
        <childnode refid="20521" relation="include">
        </childnode>
        <childnode refid="20536" relation="include">
        </childnode>
        <childnode refid="20537" relation="include">
        </childnode>
        <childnode refid="20514" relation="include">
        </childnode>
      </node>
      <node id="20522">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="20523" relation="include">
        </childnode>
        <childnode refid="20524" relation="include">
        </childnode>
      </node>
      <node id="20508">
        <label>cxxabi.h</label>
      </node>
      <node id="20521">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="20501" relation="include">
        </childnode>
        <childnode refid="20510" relation="include">
        </childnode>
        <childnode refid="20522" relation="include">
        </childnode>
        <childnode refid="20525" relation="include">
        </childnode>
        <childnode refid="20526" relation="include">
        </childnode>
      </node>
      <node id="20534">
        <label>unistd.h</label>
      </node>
      <node id="20511">
        <label>vector</label>
      </node>
      <node id="20510">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="20511" relation="include">
        </childnode>
        <childnode refid="20512" relation="include">
        </childnode>
        <childnode refid="20513" relation="include">
        </childnode>
        <childnode refid="20501" relation="include">
        </childnode>
      </node>
      <node id="20527">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="20528" relation="include">
        </childnode>
        <childnode refid="20529" relation="include">
        </childnode>
        <childnode refid="20530" relation="include">
        </childnode>
      </node>
      <node id="20516">
        <label>lbann/data_readers/data_reader_pilot2_molecular.hpp</label>
        <link refid="data__reader__pilot2__molecular_8hpp"/>
        <childnode refid="20517" relation="include">
        </childnode>
        <childnode refid="20535" relation="include">
        </childnode>
      </node>
      <node id="20505">
        <label>cstdlib</label>
      </node>
      <node id="20525">
        <label>iostream</label>
      </node>
      <node id="20515">
        <label>unordered_map</label>
      </node>
      <node id="20518">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="20501" relation="include">
        </childnode>
        <childnode refid="20510" relation="include">
        </childnode>
        <childnode refid="20519" relation="include">
        </childnode>
        <childnode refid="20520" relation="include">
        </childnode>
      </node>
      <node id="20538">
        <label>chrono</label>
      </node>
      <node id="20523">
        <label>csignal</label>
      </node>
      <node id="20536">
        <label>lbann/utils/options.hpp</label>
        <link refid="options_8hpp"/>
        <childnode refid="20525" relation="include">
        </childnode>
        <childnode refid="20512" relation="include">
        </childnode>
        <childnode refid="20511" relation="include">
        </childnode>
        <childnode refid="20524" relation="include">
        </childnode>
      </node>
      <node id="20517">
        <label>data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="20501" relation="include">
        </childnode>
        <childnode refid="20518" relation="include">
        </childnode>
        <childnode refid="20521" relation="include">
        </childnode>
        <childnode refid="20510" relation="include">
        </childnode>
        <childnode refid="20527" relation="include">
        </childnode>
        <childnode refid="20519" relation="include">
        </childnode>
        <childnode refid="20531" relation="include">
        </childnode>
        <childnode refid="20532" relation="include">
        </childnode>
        <childnode refid="20533" relation="include">
        </childnode>
        <childnode refid="20524" relation="include">
        </childnode>
        <childnode refid="20511" relation="include">
        </childnode>
        <childnode refid="20534" relation="include">
        </childnode>
      </node>
      <node id="20509">
        <label>lbann_config.hpp</label>
      </node>
      <node id="20533">
        <label>algorithm</label>
      </node>
      <node id="20504">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="20505" relation="include">
        </childnode>
        <childnode refid="20506" relation="include">
        </childnode>
        <childnode refid="20507" relation="include">
        </childnode>
        <childnode refid="20508" relation="include">
        </childnode>
      </node>
      <node id="20535">
        <label>cnpy.h</label>
      </node>
      <node id="20503">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="20502" relation="include">
        </childnode>
      </node>
      <node id="20513">
        <label>typeindex</label>
      </node>
      <node id="20507">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__store__pilot2__molecular_8hpp" kindref="compound">lbann/data_store/data_store_pilot2_molecular.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__reader__pilot2__molecular_8hpp" kindref="compound">lbann/data_readers/data_reader_pilot2_molecular.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">lbann/utils/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="options_8hpp" kindref="compound">lbann/utils/options.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8hpp" kindref="compound">lbann/utils/timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classlbann_1_1data__store__pilot2__molecular_1a125dd5e8628bb97608bd8e4a7b7428ef" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__store__pilot2__molecular_1a125dd5e8628bb97608bd8e4a7b7428ef" kindref="member">data_store_pilot2_molecular::data_store_pilot2_molecular</ref>(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*reader,<sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store" kindref="compound">generic_data_store</ref>(reader,<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a853741295a07b5687921fc56d0d7d5b2" kindref="member">set_name</ref>(</highlight><highlight class="stringliteral">&quot;data_store_pilot2_molecular&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classlbann_1_1data__store__pilot2__molecular_1a73f7d920f8f8174af4c2cec984fee7e6" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__store__pilot2__molecular_1a73f7d920f8f8174af4c2cec984fee7e6" kindref="member">data_store_pilot2_molecular::~data_store_pilot2_molecular</ref>()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//MPI_Win_free(<sp/>&amp;m_win<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classlbann_1_1data__store__pilot2__molecular_1a975d7907053a8b2e92ea5f77ca4ae7a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a975d7907053a8b2e92ea5f77ca4ae7a3" kindref="member">data_store_pilot2_molecular::setup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tm1<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a9229deea455ef0a68508e6b956887dd3" kindref="member">m_owner</ref><sp/>=<sp/>(int)<ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1ac4fc0729e7f1240e167fe897df99f950" kindref="member">get_compound_rank</ref>()<sp/>==<sp/>(int)<ref refid="classlbann_1_1generic__data__store_1a87695bfd2d1ed0dbe01d99108e3f68b7" kindref="member">m_rank</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1ad0c7ed6c6858d9958f73000b0b3137ac" kindref="member">m_owner_rank</ref><sp/>=<sp/><ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1ac4fc0729e7f1240e167fe897df99f950" kindref="member">get_compound_rank</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a9229deea455ef0a68508e6b956887dd3" kindref="member">m_owner</ref>)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;starting<sp/>data_store_pilot2_molecular::setup()<sp/>for<sp/>role:<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a92982e1b399f37e2ead5aa440883cba5" kindref="member">get_role</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>owning<sp/>processor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1ad0c7ed6c6858d9958f73000b0b3137ac" kindref="member">m_owner_rank</ref><sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a9229deea455ef0a68508e6b956887dd3" kindref="member">m_owner</ref>)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>generic_data_store::setup()\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a1cff17def02ee21b6ca0befeb04bb582" kindref="member">generic_data_store::setup</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/><ref refid="classlbann_1_1generic__data__store_1a1a9cc7b097cd7dd6ae0d12d52bb43ea1" kindref="member">m_in_memory</ref>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>yet<sp/>implemented&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1pilot2__molecular__reader" kindref="compound">pilot2_molecular_reader</ref><sp/>*reader<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1pilot2__molecular__reader" kindref="compound">pilot2_molecular_reader</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;dynamic_cast&lt;data_reader_pilot2_molecular*&gt;(m_reader)<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref><sp/>=<sp/>reader;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>list<sp/>of<sp/>indices<sp/>used<sp/>in<sp/>calls<sp/>to<sp/>generic_data_reader::fetch_data<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>this<sp/>processor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1ab861db5f81e45a6063b8922a331dd007" kindref="member">get_minibatch_index_vector</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>list<sp/>of<sp/>indices<sp/>used<sp/>in<sp/>calls<sp/>to<sp/>generic_data_reader::fetch_data<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>all<sp/>processors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>exchange_mb_indices\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1aa0ef8d7528f6775d47641ffe5ac229da" kindref="member">exchange_mb_indices</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>storage<sp/>for<sp/>the<sp/>data<sp/>that<sp/>will<sp/>be<sp/>passed<sp/>to<sp/>the<sp/>data<sp/>reader&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fetch_datum<sp/>method.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1aad14735a82ce4cdcb153fcca94cd2b41" kindref="member">m_data_buffer</ref>.resize(omp_get_max_threads());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_features<sp/>=<sp/>m_pilot2_reader-&gt;get_num_features();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_neighbors<sp/>=<sp/>m_pilot2_reader-&gt;get_num_neighbors();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;<ref refid="classlbann_1_1data__store__pilot2__molecular_1aad14735a82ce4cdcb153fcca94cd2b41" kindref="member">m_data_buffer</ref>.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1aad14735a82ce4cdcb153fcca94cd2b41" kindref="member">m_data_buffer</ref>[j].resize(num_features<sp/>*<sp/>(num_neighbors+1));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a9229deea455ef0a68508e6b956887dd3" kindref="member">m_owner</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>construct_data_store()\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a8021fa0a93e39c9d43de6ecc2d72e14e" kindref="member">construct_data_store</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a9229deea455ef0a68508e6b956887dd3" kindref="member">m_owner</ref>)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>build_nabor_map()\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1af70726cfb8377832ce457d9b874bf34e" kindref="member">build_nabor_map</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a9229deea455ef0a68508e6b956887dd3" kindref="member">m_owner</ref>)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>exchange_data()\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1addaa6db4e1b3a25424da9da63c0b3616" kindref="member">exchange_data</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a9229deea455ef0a68508e6b956887dd3" kindref="member">m_owner</ref>)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;data_store_pilot2_molecular::setup<sp/>time:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>tm1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classlbann_1_1data__store__pilot2__molecular_1a8021fa0a93e39c9d43de6ecc2d72e14e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a8021fa0a93e39c9d43de6ecc2d72e14e" kindref="member">data_store_pilot2_molecular::construct_data_store</ref>()<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>feature<sp/>and<sp/>neighbor<sp/>data<sp/>from<sp/>the<sp/>pilot2_molecular<sp/>data<sp/>reader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1abba5a68c484be69a441e5e9711356a46" kindref="member">get_word_size</ref>()<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>implemented<sp/>for<sp/>word_size<sp/>=<sp/>4;<sp/>please<sp/>ask<sp/>Dave<sp/>Hysom<sp/>to<sp/>fix&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*features_8<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1a6694fec3678fd8a883d5d8de6c2c74d5" kindref="member">get_features_8</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples_per_frame<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1a91e233f9878e93e31de2085cbcad1f10" kindref="member">get_num_samples_per_frame</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;<ref refid="classlbann_1_1generic__data__store_1a0dfa2ffa01845b84ca477fb3e14a36c6" kindref="member">m_num_global_indices</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_id<sp/>=<sp/>(*m_shuffled_indices)[j];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_features<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1ad4fcb0da3f6964cbe24de4feac3f5f4a" kindref="member">get_num_features</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a0157fe4d04961c03c0d983cb43aa1cec" kindref="member">fill_in_data</ref>(data_id,<sp/>num_samples_per_frame,<sp/>num_features,<sp/>features_8);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>replicated<sp/>code<sp/>from<sp/>data_reader_pilot2_molecular::fetch_molecule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classlbann_1_1data__store__pilot2__molecular_1a0157fe4d04961c03c0d983cb43aa1cec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a0157fe4d04961c03c0d983cb43aa1cec" kindref="member">data_store_pilot2_molecular::fill_in_data</ref>(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_id,<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples_per_frame,<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_features,<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*features)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1ac95223a0829a83a5d400c4d66efdcb93" kindref="member">get_frame</ref>(data_id);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_offset<sp/>=<sp/>frame<sp/>*<sp/>num_features<sp/>*<sp/>num_samples_per_frame;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intra_frame_data_id<sp/>=<sp/>data_id<sp/>-<sp/>frame<sp/>*<sp/>num_samples_per_frame;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" kindref="member">data</ref><sp/>=<sp/>features<sp/>+<sp/>frame_offset<sp/>+<sp/>intra_frame_data_id<sp/>*<sp/>num_features;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1afbb012980857b9841deefb055905e6f5" kindref="member">m_data</ref>.find(data_id)<sp/>!=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1afbb012980857b9841deefb055905e6f5" kindref="member">m_data</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>duplicate<sp/>data_id:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data_id;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1afbb012980857b9841deefb055905e6f5" kindref="member">m_data</ref>[data_id].resize(num_features);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;num_features;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1afbb012980857b9841deefb055905e6f5" kindref="member">m_data</ref>[data_id][i]<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1add998998fa16444e4509b08f79b291da" kindref="member">scale_data</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(i,<sp/>data[i]);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classlbann_1_1data__store__pilot2__molecular_1af70726cfb8377832ce457d9b874bf34e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1af70726cfb8377832ce457d9b874bf34e" kindref="member">data_store_pilot2_molecular::build_nabor_map</ref>()<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//bcast<sp/>neighbor<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a9229deea455ef0a68508e6b956887dd3" kindref="member">m_owner</ref>)<sp/>sz=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1a628d96b642e913550316076a11ba5285" kindref="member">get_neighbors_data_size</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>MPI_Bcast(&amp;sz,<sp/>1,<sp/>MPI_INT,<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1ad0c7ed6c6858d9958f73000b0b3137ac" kindref="member">m_owner_rank</ref>,<sp/><ref refid="classlbann_1_1generic__data__store_1ae2d2d61d5d766a7f525eedcb05e0dbf6" kindref="member">m_mpi_comm</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*neighbors_8;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>work;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a9229deea455ef0a68508e6b956887dd3" kindref="member">m_owner</ref>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors_8<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1a9553eeece9aa1658cdc986b3ef803dea" kindref="member">get_neighbors_8</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>work.resize(sz);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors_8<sp/>=<sp/>work.data();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>MPI_Bcast(neighbors_8,<sp/>sz,<sp/>MPI_DOUBLE,<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1ad0c7ed6c6858d9958f73000b0b3137ac" kindref="member">m_owner_rank</ref>,<sp/><ref refid="classlbann_1_1generic__data__store_1ae2d2d61d5d766a7f525eedcb05e0dbf6" kindref="member">m_mpi_comm</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//fill<sp/>in<sp/>the<sp/>nabors<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data_id<sp/>:<sp/>(*<ref refid="classlbann_1_1generic__data__store_1ad456f747ee07f63df15c60833dfb82ad" kindref="member">m_shuffled_indices</ref>))<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1ac95223a0829a83a5d400c4d66efdcb93" kindref="member">get_frame</ref>(data_id);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_neighborhood<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1a1dcc424e004681f9287453df64bb751f" kindref="member">get_max_neighborhood</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples_per_frame<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1a91e233f9878e93e31de2085cbcad1f10" kindref="member">get_num_samples_per_frame</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbor_frame_offset<sp/>=<sp/>frame<sp/>*<sp/>num_samples_per_frame<sp/>*<sp/>(2<sp/>*<sp/>max_neighborhood);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intra_frame_data_id<sp/>=<sp/>data_id<sp/>-<sp/>frame<sp/>*<sp/>num_samples_per_frame;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_neighbors<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1a7c379056841cda42247ff518270bcfdf" kindref="member">get_num_neighbors</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a567c6bcdfab6f9248f3c320d505861bc" kindref="member">m_neighbors</ref>[data_id].reserve(num_neighbors);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*neighbor_data<sp/>=<sp/>neighbors_8<sp/>+<sp/>neighbor_frame_offset<sp/>+<sp/>intra_frame_data_id<sp/>*<sp/>(2<sp/>*<sp/>max_neighborhood);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;num_neighbors<sp/>+<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbor_id<sp/>=<sp/>neighbor_data[i];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a567c6bcdfab6f9248f3c320d505861bc" kindref="member">m_neighbors</ref>[data_id].push_back(neighbor_id);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="classlbann_1_1data__store__pilot2__molecular_1ab0f82fb7fdec7779bbb693e06a206127" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1ab0f82fb7fdec7779bbb693e06a206127" kindref="member">data_store_pilot2_molecular::get_data_buf</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid,<sp/>std::vector&lt;double&gt;<sp/>*&amp;buf)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>&amp;v<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1aad14735a82ce4cdcb153fcca94cd2b41" kindref="member">m_data_buffer</ref>[tid];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>std::fill(v.begin(),<sp/>v.end(),<sp/>0.0);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a567c6bcdfab6f9248f3c320d505861bc" kindref="member">m_neighbors</ref>.find(data_id)<sp/>==<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a567c6bcdfab6f9248f3c320d505861bc" kindref="member">m_neighbors</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>data_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found<sp/>in<sp/>m_neighbors<sp/>(primary<sp/>molecule)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a67fb9174cecff931f61e7f6ca000315b" kindref="member">m_my_molecules</ref>.find(data_id)<sp/>==<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a67fb9174cecff931f61e7f6ca000315b" kindref="member">m_my_molecules</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>data_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found<sp/>in<sp/>m_my_molecules&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//fill<sp/>in<sp/>data<sp/>for<sp/>the<sp/>primary<sp/>molecule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>&amp;d1<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a67fb9174cecff931f61e7f6ca000315b" kindref="member">m_my_molecules</ref>[data_id];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;d1.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>v[jj++]<sp/>=<sp/>d1[j];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//fill<sp/>in<sp/>data<sp/>for<sp/>the<sp/>primary<sp/>molecule&apos;s<sp/>neighbor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>&amp;nabors<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a567c6bcdfab6f9248f3c320d505861bc" kindref="member">m_neighbors</ref>[data_id];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_features<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1ad4fcb0da3f6964cbe24de4feac3f5f4a" kindref="member">get_num_features</ref>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>h=0;<sp/>h&lt;nabors.size();<sp/>h++)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nabors[h]<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a67fb9174cecff931f61e7f6ca000315b" kindref="member">m_my_molecules</ref>.find(data_id)<sp/>==<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a67fb9174cecff931f61e7f6ca000315b" kindref="member">m_my_molecules</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>nabors[h]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found<sp/>in<sp/>m_my_molecules<sp/>(neighbor)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>&amp;d2<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a67fb9174cecff931f61e7f6ca000315b" kindref="member">m_my_molecules</ref>[nabors[h]];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;d2.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[jj++]<sp/>=<sp/>d2[i];</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jj<sp/>+=<sp/>num_features;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>buf<sp/>=<sp/>&amp;v;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classlbann_1_1data__store__pilot2__molecular_1a7eadb63f1c879c62b587a7b5d972d4e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a7eadb63f1c879c62b587a7b5d972d4e4" kindref="member">data_store_pilot2_molecular::get_required_molecules</ref>(std::unordered_set&lt;int&gt;<sp/>&amp;required_molecules,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>required_molecules.clear();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>&amp;v<sp/>=<sp/><ref refid="classlbann_1_1generic__data__store_1afd21d4f029e450328f8703dd72702e73" kindref="member">m_all_minibatch_indices</ref>[p];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_id<sp/>=<sp/>(*m_shuffled_indices)[t];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>required_molecules.insert(data_id);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a567c6bcdfab6f9248f3c320d505861bc" kindref="member">m_neighbors</ref>.find(data_id)<sp/>==<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a567c6bcdfab6f9248f3c320d505861bc" kindref="member">m_neighbors</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_neighbors.find(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t2<sp/>:<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a567c6bcdfab6f9248f3c320d505861bc" kindref="member">m_neighbors</ref>[data_id])<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required_molecules.insert(t2);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="classlbann_1_1data__store__pilot2__molecular_1addaa6db4e1b3a25424da9da63c0b3616" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1addaa6db4e1b3a25424da9da63c0b3616" kindref="member">data_store_pilot2_molecular::exchange_data</ref>()<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tm1<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//get<sp/>set<sp/>of<sp/>molecules<sp/>required<sp/>for<sp/>the<sp/>next<sp/>epoch<sp/>for<sp/>myself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>std::unordered_set&lt;int&gt;<sp/>required_molecules;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a7eadb63f1c879c62b587a7b5d972d4e4" kindref="member">get_required_molecules</ref>(required_molecules,<sp/><ref refid="classlbann_1_1generic__data__store_1a87695bfd2d1ed0dbe01d99108e3f68b7" kindref="member">m_rank</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//start<sp/>receives<sp/>for<sp/>my<sp/>required<sp/>molecules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a67fb9174cecff931f61e7f6ca000315b" kindref="member">m_my_molecules</ref>.clear();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_features<sp/>=<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a1875ae12fe7c2b11818ddb3fecff9f72" kindref="member">m_pilot2_reader</ref>-&gt;<ref refid="classlbann_1_1pilot2__molecular__reader_1ad4fcb0da3f6964cbe24de4feac3f5f4a" kindref="member">get_num_features</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>std::vector&lt;MPI_Request&gt;<sp/>recv_req(required_molecules.size());</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>std::vector&lt;MPI_Status&gt;<sp/>recv_status(required_molecules.size());</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>required_molecules)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a67fb9174cecff931f61e7f6ca000315b" kindref="member">m_my_molecules</ref>[t].resize(num_features);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Irecv(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a67fb9174cecff931f61e7f6ca000315b" kindref="member">m_my_molecules</ref>[t].<ref refid="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" kindref="member">data</ref>(),<sp/>num_features,<sp/>MPI_DOUBLE,<sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1ad0c7ed6c6858d9958f73000b0b3137ac" kindref="member">m_owner_rank</ref>,<sp/>t,<sp/><ref refid="classlbann_1_1generic__data__store_1ae2d2d61d5d766a7f525eedcb05e0dbf6" kindref="member">m_mpi_comm</ref>,<sp/>&amp;(recv_req[jj++]));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//owner<sp/>starts<sp/>sends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;MPI_Request&gt;&gt;<sp/>send_req;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;MPI_Status&gt;&gt;<sp/>send_status;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a9229deea455ef0a68508e6b956887dd3" kindref="member">m_owner</ref>)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>send_req.resize(<ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>send_status.resize(<ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p&lt;<ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref>;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__pilot2__molecular_1a7eadb63f1c879c62b587a7b5d972d4e4" kindref="member">get_required_molecules</ref>(required_molecules,<sp/>p);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_req[p].resize(required_molecules.size());</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_status[p].resize(required_molecules.size());</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>required_molecules)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Isend(<ref refid="classlbann_1_1data__store__pilot2__molecular_1afbb012980857b9841deefb055905e6f5" kindref="member">m_data</ref>[t].<ref refid="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" kindref="member">data</ref>(),<sp/>num_features,<sp/>MPI_DOUBLE,<sp/>p,<sp/>t,<sp/><ref refid="classlbann_1_1generic__data__store_1ae2d2d61d5d766a7f525eedcb05e0dbf6" kindref="member">m_mpi_comm</ref>,<sp/>&amp;(send_req[p][jj++]));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//wait<sp/>for<sp/>sends<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a9229deea455ef0a68508e6b956887dd3" kindref="member">m_owner</ref>)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;send_req.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Waitall(send_req[i].size(),<sp/>send_req[i].<ref refid="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" kindref="member">data</ref>(),<sp/>send_status[i].<ref refid="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" kindref="member">data</ref>());</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//wait<sp/>for<sp/>recvs<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>MPI_Waitall(recv_req.size(),<sp/>recv_req.data(),<sp/>recv_status.data());</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__pilot2__molecular_1a9229deea455ef0a68508e6b956887dd3" kindref="member">m_owner</ref>)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;role:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a92982e1b399f37e2ead5aa440883cba5" kindref="member">get_role</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>data_store_pilot2_molecular::exchange_data()<sp/>time:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>tm1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/data_store/data_store_pilot2_molecular.cpp"/>
  </compounddef>
</doxygen>
