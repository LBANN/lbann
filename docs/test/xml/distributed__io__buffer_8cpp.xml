<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="distributed__io__buffer_8cpp" kind="file" language="C++">
    <compoundname>distributed_io_buffer.cpp</compoundname>
    <includes refid="distributed__io__buffer_8hpp" local="yes">lbann/io/data_buffers/distributed_io_buffer.hpp</includes>
    <includes refid="exception_8hpp" local="yes">lbann/utils/exception.hpp</includes>
    <incdepgraph>
      <node id="20693">
        <label>sys/stat.h</label>
      </node>
      <node id="20696">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="20677" relation="include">
        </childnode>
        <childnode refid="20669" relation="include">
        </childnode>
      </node>
      <node id="20684">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="20669" relation="include">
        </childnode>
        <childnode refid="20670" relation="include">
        </childnode>
      </node>
      <node id="20670">
        <label>El.hpp</label>
      </node>
      <node id="20669">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="20670" relation="include">
        </childnode>
        <childnode refid="20671" relation="include">
        </childnode>
        <childnode refid="20672" relation="include">
        </childnode>
        <childnode refid="20677" relation="include">
        </childnode>
      </node>
      <node id="20667">
        <label>lbann/io/data_buffers/distributed_io_buffer.hpp</label>
        <link refid="distributed__io__buffer_8hpp"/>
        <childnode refid="20668" relation="include">
        </childnode>
      </node>
      <node id="20697">
        <label>cassert</label>
      </node>
      <node id="20695">
        <label>fcntl.h</label>
      </node>
      <node id="20689">
        <label>string</label>
      </node>
      <node id="20668">
        <label>lbann/io/data_buffers/generic_io_buffer.hpp</label>
        <link refid="generic__io__buffer_8hpp"/>
        <childnode refid="20669" relation="include">
        </childnode>
        <childnode refid="20678" relation="include">
        </childnode>
        <childnode refid="20682" relation="include">
        </childnode>
      </node>
      <node id="20680">
        <label>map</label>
      </node>
      <node id="20691">
        <label>exception</label>
      </node>
      <node id="20685">
        <label>random</label>
      </node>
      <node id="20694">
        <label>sys/types.h</label>
      </node>
      <node id="20674">
        <label>cstdio</label>
      </node>
      <node id="20687">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="20688" relation="include">
        </childnode>
        <childnode refid="20689" relation="include">
        </childnode>
      </node>
      <node id="20676">
        <label>cxxabi.h</label>
      </node>
      <node id="20686">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="20669" relation="include">
        </childnode>
        <childnode refid="20678" relation="include">
        </childnode>
        <childnode refid="20687" relation="include">
        </childnode>
        <childnode refid="20690" relation="include">
        </childnode>
        <childnode refid="20691" relation="include">
        </childnode>
      </node>
      <node id="20699">
        <label>unistd.h</label>
      </node>
      <node id="20679">
        <label>vector</label>
      </node>
      <node id="20678">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="20679" relation="include">
        </childnode>
        <childnode refid="20680" relation="include">
        </childnode>
        <childnode refid="20681" relation="include">
        </childnode>
        <childnode refid="20669" relation="include">
        </childnode>
      </node>
      <node id="20692">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="20693" relation="include">
        </childnode>
        <childnode refid="20694" relation="include">
        </childnode>
        <childnode refid="20695" relation="include">
        </childnode>
      </node>
      <node id="20673">
        <label>cstdlib</label>
      </node>
      <node id="20690">
        <label>iostream</label>
      </node>
      <node id="20683">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="20669" relation="include">
        </childnode>
        <childnode refid="20678" relation="include">
        </childnode>
        <childnode refid="20684" relation="include">
        </childnode>
        <childnode refid="20685" relation="include">
        </childnode>
      </node>
      <node id="20666">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/distributed_io_buffer.cpp</label>
        <link refid="distributed__io__buffer_8cpp"/>
        <childnode refid="20667" relation="include">
        </childnode>
        <childnode refid="20686" relation="include">
        </childnode>
      </node>
      <node id="20688">
        <label>csignal</label>
      </node>
      <node id="20682">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="20669" relation="include">
        </childnode>
        <childnode refid="20683" relation="include">
        </childnode>
        <childnode refid="20686" relation="include">
        </childnode>
        <childnode refid="20678" relation="include">
        </childnode>
        <childnode refid="20692" relation="include">
        </childnode>
        <childnode refid="20684" relation="include">
        </childnode>
        <childnode refid="20696" relation="include">
        </childnode>
        <childnode refid="20697" relation="include">
        </childnode>
        <childnode refid="20698" relation="include">
        </childnode>
        <childnode refid="20689" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
        <childnode refid="20699" relation="include">
        </childnode>
      </node>
      <node id="20677">
        <label>lbann_config.hpp</label>
      </node>
      <node id="20698">
        <label>algorithm</label>
      </node>
      <node id="20672">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="20673" relation="include">
        </childnode>
        <childnode refid="20674" relation="include">
        </childnode>
        <childnode refid="20675" relation="include">
        </childnode>
        <childnode refid="20676" relation="include">
        </childnode>
      </node>
      <node id="20671">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="20670" relation="include">
        </childnode>
      </node>
      <node id="20681">
        <label>typeindex</label>
      </node>
      <node id="20675">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="distributed__io__buffer_8hpp" kindref="compound">lbann/io/data_buffers/distributed_io_buffer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">lbann/utils/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classlbann_1_1distributed__io__buffer_1a2066033e844ec7b9b95dfe7615a0a256" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1distributed__io__buffer_1a2066033e844ec7b9b95dfe7615a0a256" kindref="member">lbann::distributed_io_buffer::distributed_io_buffer</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_parallel_readers,<sp/>std::map&lt;execution_mode,<sp/>generic_data_reader<sp/>*&gt;<sp/>data_readers)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1generic__io__buffer" kindref="compound">generic_io_buffer</ref>(comm,<sp/>num_parallel_readers,<sp/>data_readers),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>m_requested_max_num_parallel_readers(num_parallel_readers)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1distributed__io__buffer_1a59ef8621c57755f73671b782e11dbe89" kindref="member">m_data_buffers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__buffer" kindref="compound">data_buffer</ref>(comm);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1distributed__io__buffer_1a59ef8621c57755f73671b782e11dbe89" kindref="member">m_data_buffers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__buffer" kindref="compound">data_buffer</ref>(comm);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1distributed__io__buffer_1a59ef8621c57755f73671b782e11dbe89" kindref="member">m_data_buffers</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__buffer" kindref="compound">data_buffer</ref>(comm);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classlbann_1_1distributed__io__buffer_1abfeb87d4dc402b482db60926ca9b3ec1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1distributed__io__buffer_1abfeb87d4dc402b482db60926ca9b3ec1" kindref="member">lbann::distributed_io_buffer::fetch_to_local_matrix</ref>(<ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader,<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_parallel_readers<sp/>=<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1ad15887cc31657d03925835aab0d4b675" kindref="member">get_num_parallel_readers</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__buffer" kindref="compound">data_buffer</ref><sp/>*buf<sp/>=<sp/><ref refid="classlbann_1_1distributed__io__buffer_1ac176f3fced1191534a985f831136aa3e" kindref="member">get_data_buffer</ref>(mode);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf-&gt;<ref refid="classlbann_1_1data__buffer_1a5d2333dc0a74333b9d8ebfcc8084c783" kindref="member">m_root</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>&lt;<sp/>num_parallel_readers<sp/>&amp;&amp;<sp/>!buf-&gt;<ref refid="classlbann_1_1data__buffer_1af83d8197ff61c85ab32a612480932a5b" kindref="member">m_local_reader_done</ref>)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Zero(buf-&gt;<ref refid="classlbann_1_1data__buffer_1a3d839e04fd26b5810027144662af0e54" kindref="member">M_local</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1a5f07c95c2fa99046df6d5437d1ef6375" kindref="member">m_num_samples_in_batch</ref><sp/>=<sp/>(*fetch_data_fn)(buf-&gt;<ref refid="classlbann_1_1data__buffer_1a3d839e04fd26b5810027144662af0e54" kindref="member">M_local</ref>,<sp/>data_reader);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>data_valid<sp/>=<sp/>(buf-&gt;<ref refid="classlbann_1_1data__buffer_1a5f07c95c2fa99046df6d5437d1ef6375" kindref="member">m_num_samples_in_batch</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data_valid)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1a14de875712b1362110e41fdd5a3e58a5" kindref="member">m_num_data_per_epoch</ref>+=buf-&gt;<ref refid="classlbann_1_1data__buffer_1a5f07c95c2fa99046df6d5437d1ef6375" kindref="member">m_num_samples_in_batch</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1ad0c2ff22428f74cf7c8eb4a2be534338" kindref="member">m_local_data_valid</ref><sp/>=<sp/>data_valid;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1a5f07c95c2fa99046df6d5437d1ef6375" kindref="member">m_num_samples_in_batch</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classlbann_1_1distributed__io__buffer_1a3a770ec2314313761d6f0eccdb9dc09b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1distributed__io__buffer_1a3a770ec2314313761d6f0eccdb9dc09b" kindref="member">lbann::distributed_io_buffer::distribute_from_local_matrix</ref>(<ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>Ms,<sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader,<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_parallel_readers<sp/>=<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1ad15887cc31657d03925835aab0d4b675" kindref="member">get_num_parallel_readers</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__buffer" kindref="compound">data_buffer</ref><sp/>*buf<sp/>=<sp/><ref refid="classlbann_1_1distributed__io__buffer_1ac176f3fced1191534a985f831136aa3e" kindref="member">get_data_buffer</ref>(mode);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1a9c9f68cda527896bc45762ddac7c2e2a" kindref="member">Ms</ref>.SetRoot(buf-&gt;<ref refid="classlbann_1_1data__buffer_1a5d2333dc0a74333b9d8ebfcc8084c783" kindref="member">m_root</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a6086ced12c3eefeea6e2a78eff286983" kindref="member">model_barrier</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>==<sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1a5d2333dc0a74333b9d8ebfcc8084c783" kindref="member">m_root</ref>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!buf-&gt;<ref refid="classlbann_1_1data__buffer_1ad0c2ff22428f74cf7c8eb4a2be534338" kindref="member">m_local_data_valid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>lbann_distributed_io_buffer:<sp/>No<sp/>valid<sp/>data<sp/>for<sp/>this<sp/>step<sp/>--<sp/>local<sp/>data<sp/>was<sp/>invalid&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>CopyFromRoot(buf-&gt;<ref refid="classlbann_1_1data__buffer_1a3d839e04fd26b5810027144662af0e54" kindref="member">M_local</ref>(El::ALL,<sp/>El::IR(0,<sp/>Ms.Width())),<sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1a9c9f68cda527896bc45762ddac7c2e2a" kindref="member">Ms</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1ad0c2ff22428f74cf7c8eb4a2be534338" kindref="member">m_local_data_valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1a5f07c95c2fa99046df6d5437d1ef6375" kindref="member">m_num_samples_in_batch</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>CopyFromNonRoot(buf-&gt;<ref refid="classlbann_1_1data__buffer_1a9c9f68cda527896bc45762ddac7c2e2a" kindref="member">Ms</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a6086ced12c3eefeea6e2a78eff286983" kindref="member">model_barrier</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1a5d2333dc0a74333b9d8ebfcc8084c783" kindref="member">m_root</ref><sp/>=<sp/>(buf-&gt;<ref refid="classlbann_1_1data__buffer_1a5d2333dc0a74333b9d8ebfcc8084c783" kindref="member">m_root</ref><sp/>+<sp/>1)<sp/>%<sp/>num_parallel_readers;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>Copy(buf-&gt;<ref refid="classlbann_1_1data__buffer_1a9c9f68cda527896bc45762ddac7c2e2a" kindref="member">Ms</ref>,<sp/>Ms);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classlbann_1_1distributed__io__buffer_1a2e214f6542d9b12c8a29bf41d0ee220e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1distributed__io__buffer_1a2e214f6542d9b12c8a29bf41d0ee220e" kindref="member">lbann::distributed_io_buffer::is_data_set_processed</ref>(<ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader,<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>just<sp/>the<sp/>ones<sp/>in<sp/>the<sp/>last<sp/>round.<sp/><sp/>This<sp/>will<sp/>ensure<sp/>that<sp/>all<sp/>readers,<sp/>that<sp/>had<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>have<sp/>distributed<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_parallel_readers<sp/>=<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1ad15887cc31657d03925835aab0d4b675" kindref="member">get_num_parallel_readers</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_iterations_per_epoch<sp/>=<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a06fb58d1c0b84b8c76f5b4d160751f34" kindref="member">get_num_iterations_per_epoch</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_step_in_epoch<sp/>=<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a7c884d3646396a05d9e01e3b7a260419" kindref="member">get_current_step_in_epoch</ref>();<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>current<sp/>step<sp/>before<sp/>the<sp/>update<sp/>function<sp/>increments<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__buffer" kindref="compound">data_buffer</ref><sp/>*buf<sp/>=<sp/><ref refid="classlbann_1_1distributed__io__buffer_1ac176f3fced1191534a985f831136aa3e" kindref="member">get_data_buffer</ref>(mode);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_active_reader<sp/>=<sp/>(<ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>&lt;<sp/>num_parallel_readers)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((<ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()+1)%num_parallel_readers<sp/>==<sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1a5d2333dc0a74333b9d8ebfcc8084c783" kindref="member">m_root</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_active_reader)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buf-&gt;<ref refid="classlbann_1_1data__buffer_1ad0c2ff22428f74cf7c8eb4a2be534338" kindref="member">m_local_data_valid</ref>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/><sp/>__LINE__</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>lbann_input_layer_distributed_io_buffer:<sp/>all<sp/>valid<sp/>data<sp/>was<sp/>not<sp/>processed.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1af83d8197ff61c85ab32a612480932a5b" kindref="member">m_local_reader_done</ref><sp/>=<sp/>!(*update_data_reader_fn)(is_active_reader,<sp/>data_reader);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(current_step_in_epoch<sp/>==<sp/>(num_iterations_per_epoch<sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1af83d8197ff61c85ab32a612480932a5b" kindref="member">m_local_reader_done</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1a5d2333dc0a74333b9d8ebfcc8084c783" kindref="member">m_root</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="classlbann_1_1data__buffer_1a14de875712b1362110e41fdd5a3e58a5" kindref="member">m_num_data_per_epoch</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classlbann_1_1distributed__io__buffer_1af6653723714cf8cf51a928fc9f6e6728" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1distributed__io__buffer_1af6653723714cf8cf51a928fc9f6e6728" kindref="member">lbann::distributed_io_buffer::compute_max_num_parallel_readers</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>data_set_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mini_batch_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>requested_num_parallel_readers)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_parallel_readers<sp/>=<sp/>requested_num_parallel_readers;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a483bf8a72d44a0e83da45f3d47bd20d4" kindref="member">get_model_grid</ref>().Size()<sp/>&lt;<sp/>num_parallel_readers)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1ad8a5790dfa9191d4b4f889e8707e57f1" kindref="member">am_model_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning<sp/>the<sp/>grid<sp/>size<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a483bf8a72d44a0e83da45f3d47bd20d4" kindref="member">get_model_grid</ref>().Size()</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;is<sp/>smaller<sp/>than<sp/>the<sp/>number<sp/>of<sp/>requested<sp/>parallel<sp/>readers<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>num_parallel_readers<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>num_parallel_readers<sp/>=<sp/><ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a483bf8a72d44a0e83da45f3d47bd20d4" kindref="member">get_model_grid</ref>().Size();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data_set_size<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_num_parallel_readers<sp/>=<sp/>num_parallel_readers;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ceil((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)data_set_size<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(mini_batch_size<sp/>*<sp/><ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" kindref="member">get_num_models</ref>()))<sp/>&lt;<sp/>max_num_parallel_readers)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_num_parallel_readers--;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>()<sp/>&amp;&amp;<sp/>max_num_parallel_readers<sp/>!=<sp/>num_parallel_readers)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning<sp/>the<sp/>training<sp/>data<sp/>set<sp/>size<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data_set_size</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>too<sp/>small<sp/>for<sp/>the<sp/>number<sp/>of<sp/>requested<sp/>parallel<sp/>readers<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>num_parallel_readers<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>max_num_parallel_readers<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_num_parallel_readers;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classlbann_1_1distributed__io__buffer_1af63a8b162ed869393c5b604c5913c631" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1distributed__io__buffer_1af63a8b162ed869393c5b604c5913c631" kindref="member">lbann::distributed_io_buffer::calculate_num_iterations_per_epoch</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_models,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>model_rank,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_mini_batch_size,<sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data_reader<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>data<sp/>reader<sp/>does<sp/>not<sp/>have<sp/>any<sp/>data<sp/>bail<sp/>out<sp/>(e.g.<sp/>unused<sp/>validation<sp/>reader)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" kindref="member">get_num_data</ref>()<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(max_mini_batch_size<sp/>&gt;<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" kindref="member">get_num_data</ref>())<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>max_mini_batch_size<sp/>=<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" kindref="member">get_num_data</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_parallel_readers_per_model<sp/>=<sp/><ref refid="classlbann_1_1distributed__io__buffer_1af6653723714cf8cf51a928fc9f6e6728" kindref="member">compute_max_num_parallel_readers</ref>(data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" kindref="member">get_num_data</ref>(),<sp/>max_mini_batch_size,<sp/><ref refid="classlbann_1_1distributed__io__buffer_1aa14580fd9d0e8806dc161745525a60dc" kindref="member">m_requested_max_num_parallel_readers</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a9b348d52852062dbc66b0accde5c6e8a" kindref="member">set_num_parallel_readers</ref>(num_parallel_readers_per_model);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(num_parallel_readers_per_model<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>distributed_io_buffer:<sp/>number<sp/>of<sp/>parallel<sp/>readers<sp/>is<sp/>zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch_stride<sp/>=<sp/>num_models<sp/>*<sp/>num_parallel_readers_per_model<sp/>*<sp/>max_mini_batch_size;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base_offset<sp/>=<sp/><ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>*<sp/>num_models<sp/>*<sp/>max_mini_batch_size;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>model_offset<sp/>=<sp/>model_rank<sp/>*<sp/>max_mini_batch_size;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adf161cca4b80eb95f9748050e7fe1809" kindref="member">set_mini_batch_size</ref>(max_mini_batch_size);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1add5bd1d488967ebab5852b636e07db15" kindref="member">set_stride_to_next_mini_batch</ref>(batch_stride);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adb90391e3e9c8e3c2aba4d4a0911ca82" kindref="member">set_sample_stride</ref>(1);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1ac1f3f81ca0e2920658cba026fe09a95b" kindref="member">set_iteration_stride</ref>(num_parallel_readers_per_model);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a8ac14fee514ad30efe8571ce68c2a95d" kindref="member">set_reset_mini_batch_index</ref>(<ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adcf4c6012f44c78589bb75ea530cf518" kindref="member">set_base_offset</ref>(base_offset);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1ab20e835e0e0565717e0fd74da09d4890" kindref="member">set_model_offset</ref>(model_offset);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1ac6d4a5ba1d4e1134620cddcac343bf59" kindref="member">set_initial_position</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_stride_across_models<sp/>=<sp/>max_mini_batch_size<sp/>*<sp/>num_models;<sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a03388338e75d37e1b28389d22bd5b604" kindref="member">set_global_mini_batch_size</ref>(min_stride_across_models);<sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a357389ee93428b68f9400de708f6915d" kindref="member">set_last_mini_batch_size</ref>(max_mini_batch_size);<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a4455d137b469287bf964436f9fcc6d94" kindref="member">set_global_last_mini_batch_size</ref>(min_stride_across_models);<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_whole_mini_batches_per_model<sp/>=<sp/>floor(data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" kindref="member">get_num_data</ref>()<sp/>/<sp/>min_stride_across_models);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_whole_mini_batches_per_reader<sp/>=<sp/>floor(num_whole_mini_batches_per_model<sp/>/<sp/>num_parallel_readers_per_model);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parallel_readers_with_extra_mini_batch<sp/>=<sp/>num_whole_mini_batches_per_model<sp/>%<sp/>num_parallel_readers_per_model;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>global_partial_mini_batch_size<sp/>=<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" kindref="member">get_num_data</ref>()<sp/>-<sp/>(num_whole_mini_batches_per_model<sp/>*<sp/>min_stride_across_models);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>per_model_partial_mini_batch_size<sp/>=<sp/>global_partial_mini_batch_size<sp/>/<sp/>num_models;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>world_master_remainder_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>how<sp/>many<sp/>full<sp/>&quot;parallel&quot;<sp/>mini-batches<sp/>are<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>last_mini_batch_threshold<sp/>=<sp/>num_whole_mini_batches_per_model<sp/>*<sp/>min_stride_across_models;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>BVE<sp/>FIXME<sp/>revisit<sp/>this<sp/>piece<sp/>of<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>&lt;<sp/>parallel_readers_with_extra_mini_batch)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>num_whole_mini_batches_per_reader<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>world_master_remainder_adjustment<sp/>=<sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" kindref="member">get_num_data</ref>()</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(num_whole_mini_batches_per_model<sp/>*<sp/>min_stride_across_models)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(per_model_partial_mini_batch_size<sp/>*<sp/>num_models);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(model_rank<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>==<sp/>parallel_readers_with_extra_mini_batch)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>world_master_remainder_data<sp/>=<sp/>world_master_remainder_adjustment;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>world_master_remainder_adjustment<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>per_model_partial_mini_batch_size<sp/>+=<sp/>world_master_remainder_data;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(world_master_remainder_adjustment<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a208cebb68cf3c1ae1bd9cb5f28e8bf5b" kindref="member">set_world_master_mini_batch_adjustment</ref>(world_master_remainder_adjustment);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(per_model_partial_mini_batch_size<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a357389ee93428b68f9400de708f6915d" kindref="member">set_last_mini_batch_size</ref>(per_model_partial_mini_batch_size);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a4455d137b469287bf964436f9fcc6d94" kindref="member">set_global_last_mini_batch_size</ref>(global_partial_mini_batch_size);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>BVE<sp/>FIXME<sp/>this<sp/>is<sp/>wonky</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(global_partial_mini_batch_size<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a91573d9599b503a6bdf2939e69659e8b" kindref="member">set_num_iterations_per_epoch</ref>(num_whole_mini_batches_per_model+1);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a91573d9599b503a6bdf2939e69659e8b" kindref="member">set_num_iterations_per_epoch</ref>(num_whole_mini_batches_per_model);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a79cb3bee4e0d19006ef9213763dc8af2" kindref="member">get_last_mini_batch_size</ref>()<sp/>&gt;<sp/>max_mini_batch_size)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>calculating<sp/>the<sp/>partial<sp/>mini-batch<sp/>size,<sp/>exceeds<sp/>the<sp/>max<sp/>mini-batch<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_mini_batch_offset<sp/>=</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>std::max(0,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((num_parallel_readers_per_model<sp/>-<sp/><ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>parallel_readers_with_extra_mini_batch)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>min_stride_across_models</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(num_models<sp/>-<sp/>model_rank)<sp/>*<sp/>max_mini_batch_size);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>==<sp/>parallel_readers_with_extra_mini_batch<sp/>&amp;&amp;<sp/>per_model_partial_mini_batch_size<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1af2fc6b35ad8139d15729b19db2895827" kindref="member">set_stride_to_last_mini_batch</ref>(last_mini_batch_offset</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>model_rank<sp/>*<sp/>per_model_partial_mini_batch_size<sp/>+<sp/>world_master_remainder_adjustment);<sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>==<sp/>num_whole_mini_batches_per_model)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>model_offset<sp/>=</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_rank<sp/>*<sp/>per_model_partial_mini_batch_size<sp/>+<sp/>world_master_remainder_adjustment;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1ab20e835e0e0565717e0fd74da09d4890" kindref="member">set_model_offset</ref>(model_offset);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1ac6d4a5ba1d4e1134620cddcac343bf59" kindref="member">set_initial_position</ref>();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1af2fc6b35ad8139d15729b19db2895827" kindref="member">set_stride_to_last_mini_batch</ref>(data_reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a2d1d5657e8b9bf8b8a9d51b33aedf017" kindref="member">get_stride_to_next_mini_batch</ref>());</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(m_comm-&gt;get_rank_in_model()<sp/>&lt;=<sp/>num_parallel_readers_per_model)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;[&quot;<sp/>&lt;&lt;<sp/>m_comm-&gt;get_rank_in_world()<sp/>&lt;&lt;<sp/>&quot;]<sp/>&quot;<sp/>&lt;&lt;<sp/>model_rank<sp/>&lt;&lt;<sp/>&quot;<sp/>model<sp/>rank,<sp/>&quot;&lt;&lt;<sp/>m_comm-&gt;get_rank_in_model()<sp/>&lt;&lt;<sp/>&quot;<sp/>rank<sp/>in<sp/>model,<sp/>num_whole_mini_batches_per_model<sp/>&quot;<sp/>&lt;&lt;<sp/>num_whole_mini_batches_per_model<sp/>&lt;&lt;<sp/>&quot;<sp/>num_whole_mini_batches_per_reader<sp/>&quot;<sp/>&lt;&lt;<sp/>num_whole_mini_batches_per_reader<sp/>&lt;&lt;<sp/>&quot;<sp/>parallel_readers_with_extra_mini_batch<sp/>&quot;<sp/>&lt;&lt;<sp/>parallel_readers_with_extra_mini_batch<sp/>&lt;&lt;<sp/>&quot;<sp/>partial_mini_batch_size=&quot;<sp/>&lt;&lt;<sp/>per_model_partial_mini_batch_size<sp/>&lt;&lt;<sp/>&quot;<sp/>last<sp/>mini<sp/>batch<sp/>size=&quot;<sp/>&lt;&lt;<sp/>data_reader-&gt;get_last_mini_batch_size()<sp/>&lt;&lt;<sp/>&quot;<sp/>world_master_remainder_data=&quot;<sp/>&lt;&lt;<sp/>world_master_remainder_data<sp/>&lt;&lt;<sp/>&quot;<sp/>last<sp/>mini-batch<sp/>threshold<sp/>&quot;<sp/>&lt;&lt;<sp/>last_mini_batch_threshold<sp/>&lt;&lt;<sp/>&quot;<sp/>with<sp/>a<sp/>last<sp/>stride<sp/>of<sp/>&quot;<sp/>&lt;&lt;<sp/>data_reader-&gt;get_stride_to_last_mini_batch()<sp/>&lt;&lt;<sp/>&quot;<sp/>and<sp/>stride<sp/>of<sp/>&quot;<sp/>&lt;&lt;<sp/>data_reader-&gt;get_stride_to_next_mini_batch()<sp/>&lt;&lt;<sp/>&quot;<sp/>and<sp/>there<sp/>are<sp/>&quot;<sp/>&lt;&lt;<sp/>num_parallel_readers_per_model<sp/>&lt;&lt;<sp/>&quot;<sp/>parallel<sp/>readers<sp/>per<sp/>model&quot;<sp/>&lt;&lt;<sp/>&quot;<sp/>last<sp/>mini<sp/>batch<sp/>offset<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>last_mini_batch_offset<sp/>&lt;&lt;<sp/><sp/>&quot;<sp/>parallel<sp/>reader<sp/>with<sp/>extra<sp/>minibatch<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>parallel_readers_with_extra_mini_batch<sp/>&lt;&lt;<sp/>&quot;<sp/>model<sp/>bracket<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>(parallel_readers_with_extra_mini_batch<sp/>*<sp/>max_mini_batch_size<sp/>+<sp/>per_model_partial_mini_batch_size<sp/>+<sp/>world_master_remainder_data)<sp/>&lt;&lt;&quot;<sp/>base<sp/>ofset<sp/>&quot;&lt;&lt;<sp/>data_reader-&gt;get_base_offset()<sp/>&lt;&lt;<sp/>&quot;<sp/>model<sp/>offset<sp/>&quot;<sp/>&lt;&lt;<sp/>data_reader-&gt;get_model_offset()<sp/>&lt;&lt;<sp/>&quot;<sp/>world<sp/>master<sp/>remainder<sp/>adjustment<sp/>&quot;<sp/>&lt;&lt;<sp/>world_master_remainder_adjustment<sp/>&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classlbann_1_1distributed__io__buffer_1aa1f5200f9646d38fe3b3adaf39645330" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1distributed__io__buffer_1aa1f5200f9646d38fe3b3adaf39645330" kindref="member">lbann::distributed_io_buffer::calculate_num_iterations_per_epoch_spanning_models</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_mini_batch_size,<sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1distributed__io__buffer_1af63a8b162ed869393c5b604c5913c631" kindref="member">calculate_num_iterations_per_epoch</ref>(<ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" kindref="member">get_num_models</ref>(),<sp/><ref refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" kindref="member">get_model_rank</ref>(),<sp/>max_mini_batch_size,<sp/>data_reader);</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="classlbann_1_1distributed__io__buffer_1a2a611c36620155646e46e065e040541f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1distributed__io__buffer_1a2a611c36620155646e46e065e040541f" kindref="member">lbann::distributed_io_buffer::calculate_num_iterations_per_epoch_single_model</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_mini_batch_size,<sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*data_reader)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1distributed__io__buffer_1af63a8b162ed869393c5b604c5913c631" kindref="member">calculate_num_iterations_per_epoch</ref>(1,<sp/>0,<sp/>max_mini_batch_size,<sp/>data_reader);</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/distributed_io_buffer.cpp"/>
  </compounddef>
</doxygen>
