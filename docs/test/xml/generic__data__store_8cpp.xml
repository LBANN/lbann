<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="generic__data__store_8cpp" kind="file" language="C++">
    <compoundname>generic_data_store.cpp</compoundname>
    <includes refid="generic__data__store_8hpp" local="yes">lbann/data_store/generic_data_store.hpp</includes>
    <includes refid="data__reader_8hpp" local="yes">lbann/data_readers/data_reader.hpp</includes>
    <includes refid="options_8hpp" local="yes">lbann/utils/options.hpp</includes>
    <includes refid="model_8hpp" local="yes">lbann/models/model.hpp</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">numeric</includes>
    <incdepgraph>
      <node id="20635">
        <label>sys/stat.h</label>
      </node>
      <node id="20645">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="20631" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
      </node>
      <node id="20638">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="20618" relation="include">
        </childnode>
        <childnode refid="20610" relation="include">
        </childnode>
      </node>
      <node id="20609">
        <label>lbann/data_store/generic_data_store.hpp</label>
        <link refid="generic__data__store_8hpp"/>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20623" relation="include">
        </childnode>
      </node>
      <node id="20626">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20611" relation="include">
        </childnode>
      </node>
      <node id="20611">
        <label>El.hpp</label>
      </node>
      <node id="20610">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="20611" relation="include">
        </childnode>
        <childnode refid="20612" relation="include">
        </childnode>
        <childnode refid="20613" relation="include">
        </childnode>
        <childnode refid="20618" relation="include">
        </childnode>
      </node>
      <node id="20639">
        <label>cassert</label>
      </node>
      <node id="20637">
        <label>fcntl.h</label>
      </node>
      <node id="20660">
        <label>numeric</label>
      </node>
      <node id="20658">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
        <childnode refid="20626" relation="include">
        </childnode>
      </node>
      <node id="20631">
        <label>string</label>
      </node>
      <node id="20648">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
      </node>
      <node id="20652">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="20653" relation="include">
        </childnode>
      </node>
      <node id="20621">
        <label>map</label>
      </node>
      <node id="20623">
        <label>unordered_set</label>
      </node>
      <node id="20633">
        <label>exception</label>
      </node>
      <node id="20627">
        <label>random</label>
      </node>
      <node id="20650">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
        <childnode refid="20648" relation="include">
        </childnode>
      </node>
      <node id="20636">
        <label>sys/types.h</label>
      </node>
      <node id="20654">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="20632" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
        <childnode refid="20621" relation="include">
        </childnode>
      </node>
      <node id="20615">
        <label>cstdio</label>
      </node>
      <node id="20629">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="20630" relation="include">
        </childnode>
        <childnode refid="20631" relation="include">
        </childnode>
      </node>
      <node id="20617">
        <label>cxxabi.h</label>
      </node>
      <node id="20628">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20629" relation="include">
        </childnode>
        <childnode refid="20632" relation="include">
        </childnode>
        <childnode refid="20633" relation="include">
        </childnode>
      </node>
      <node id="20608">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_store/generic_data_store.cpp</label>
        <link refid="generic__data__store_8cpp"/>
        <childnode refid="20609" relation="include">
        </childnode>
        <childnode refid="20624" relation="include">
        </childnode>
        <childnode refid="20642" relation="include">
        </childnode>
        <childnode refid="20643" relation="include">
        </childnode>
        <childnode refid="20636" relation="include">
        </childnode>
        <childnode refid="20635" relation="include">
        </childnode>
        <childnode refid="20641" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
      </node>
      <node id="20641">
        <label>unistd.h</label>
      </node>
      <node id="20620">
        <label>vector</label>
      </node>
      <node id="20619">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20621" relation="include">
        </childnode>
        <childnode refid="20622" relation="include">
        </childnode>
        <childnode refid="20610" relation="include">
        </childnode>
      </node>
      <node id="20656">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="20657" relation="include">
        </childnode>
        <childnode refid="20658" relation="include">
        </childnode>
      </node>
      <node id="20634">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="20635" relation="include">
        </childnode>
        <childnode refid="20636" relation="include">
        </childnode>
        <childnode refid="20637" relation="include">
        </childnode>
      </node>
      <node id="20651">
        <label>lbann.pb.h</label>
      </node>
      <node id="20614">
        <label>cstdlib</label>
      </node>
      <node id="20632">
        <label>iostream</label>
      </node>
      <node id="20646">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="20647" relation="include">
        </childnode>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
        <childnode refid="20648" relation="include">
        </childnode>
        <childnode refid="20649" relation="include">
        </childnode>
        <childnode refid="20631" relation="include">
        </childnode>
        <childnode refid="20623" relation="include">
        </childnode>
      </node>
      <node id="20659">
        <label>unordered_map</label>
      </node>
      <node id="20625">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20626" relation="include">
        </childnode>
        <childnode refid="20627" relation="include">
        </childnode>
      </node>
      <node id="20644">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20645" relation="include">
        </childnode>
        <childnode refid="20646" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
        <childnode refid="20648" relation="include">
        </childnode>
        <childnode refid="20652" relation="include">
        </childnode>
        <childnode refid="20626" relation="include">
        </childnode>
        <childnode refid="20651" relation="include">
        </childnode>
        <childnode refid="20631" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
      </node>
      <node id="20653">
        <label>chrono</label>
      </node>
      <node id="20657">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20644" relation="include">
        </childnode>
        <childnode refid="20649" relation="include">
        </childnode>
      </node>
      <node id="20630">
        <label>csignal</label>
      </node>
      <node id="20649">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="20631" relation="include">
        </childnode>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
        <childnode refid="20648" relation="include">
        </childnode>
        <childnode refid="20650" relation="include">
        </childnode>
        <childnode refid="20626" relation="include">
        </childnode>
        <childnode refid="20651" relation="include">
        </childnode>
      </node>
      <node id="20642">
        <label>lbann/utils/options.hpp</label>
        <link refid="options_8hpp"/>
        <childnode refid="20632" relation="include">
        </childnode>
        <childnode refid="20621" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20631" relation="include">
        </childnode>
      </node>
      <node id="20624">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20625" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20634" relation="include">
        </childnode>
        <childnode refid="20626" relation="include">
        </childnode>
        <childnode refid="20638" relation="include">
        </childnode>
        <childnode refid="20639" relation="include">
        </childnode>
        <childnode refid="20640" relation="include">
        </childnode>
        <childnode refid="20631" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20641" relation="include">
        </childnode>
      </node>
      <node id="20618">
        <label>lbann_config.hpp</label>
      </node>
      <node id="20655">
        <label>set</label>
      </node>
      <node id="20643">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="20610" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20644" relation="include">
        </childnode>
        <childnode refid="20645" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20634" relation="include">
        </childnode>
        <childnode refid="20626" relation="include">
        </childnode>
        <childnode refid="20656" relation="include">
        </childnode>
        <childnode refid="20658" relation="include">
        </childnode>
        <childnode refid="20649" relation="include">
        </childnode>
        <childnode refid="20646" relation="include">
        </childnode>
        <childnode refid="20651" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20631" relation="include">
        </childnode>
        <childnode refid="20659" relation="include">
        </childnode>
      </node>
      <node id="20647">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="20640">
        <label>algorithm</label>
      </node>
      <node id="20613">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="20614" relation="include">
        </childnode>
        <childnode refid="20615" relation="include">
        </childnode>
        <childnode refid="20616" relation="include">
        </childnode>
        <childnode refid="20617" relation="include">
        </childnode>
      </node>
      <node id="20612">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="20611" relation="include">
        </childnode>
      </node>
      <node id="20622">
        <label>typeindex</label>
      </node>
      <node id="20616">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="generic__data__store_8hpp" kindref="compound">lbann/data_store/generic_data_store.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__reader_8hpp" kindref="compound">lbann/data_readers/data_reader.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="options_8hpp" kindref="compound">lbann/utils/options.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="model_8hpp" kindref="compound">lbann/models/model.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classlbann_1_1generic__data__store_1acbcd88161c06f4bb9a70bbae857d4ee0" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1generic__data__store_1acbcd88161c06f4bb9a70bbae857d4ee0" kindref="member">generic_data_store::generic_data_store</ref>(<ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*reader,<sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reader(reader),<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>m_comm(m-&gt;get_comm()),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>m_epoch(0),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>m_in_memory(true),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>m_master(m_comm-&gt;am_world_master()),<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>m_model(m),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dir(m_reader-&gt;get_file_dir()),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>m_extended_testing(false),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>m_collect_minibatch_indices(true),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mpi_comm(m_comm-&gt;get_model_comm().<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a719b6b99c20f97a6cf25f6029582bf36" kindref="member">m_comm</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_reader-&gt;get_comm<sp/>is<sp/>nullptr&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a87695bfd2d1ed0dbe01d99108e3f68b7" kindref="member">m_rank</ref><sp/>=<sp/><ref refid="classlbann_1_1generic__data__store_1a719b6b99c20f97a6cf25f6029582bf36" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref><sp/>=<sp/><ref refid="classlbann_1_1generic__data__store_1a719b6b99c20f97a6cf25f6029582bf36" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" kindref="member">get_procs_per_model</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a853741295a07b5687921fc56d0d7d5b2" kindref="member">set_name</ref>(</highlight><highlight class="stringliteral">&quot;generic_data_store&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="classoptions" kindref="compound">options</ref><sp/>*opts<sp/>=<sp/><ref refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" kindref="member">options::get</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;generic_data_store::generic_data_store;<sp/>np:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1aafb1d2a7ccde0b1bf786230ba4080ecd" kindref="member">has_bool</ref>(</highlight><highlight class="stringliteral">&quot;extended_testing&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>opts-&gt;<ref refid="classoptions_1a99aa190102de33e2aed39723929f9fad" kindref="member">get_bool</ref>(</highlight><highlight class="stringliteral">&quot;extended_testing&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a5e64702aa4a38c8533fa52944a8473d5" kindref="member">m_extended_testing</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classlbann_1_1generic__data__store_1ab861db5f81e45a6063b8922a331dd007" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__store_1ab861db5f81e45a6063b8922a331dd007" kindref="member">generic_data_store::get_minibatch_index_vector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t1<sp/>:<sp/>(*<ref refid="classlbann_1_1generic__data__store_1a54c0a85cd536ef566604c4e9916910c8" kindref="member">m_my_minibatch_indices</ref>))<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>+=<sp/>t1.size();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a41f7fec1f1f3d6568a5765be7a6784eb" kindref="member">m_my_minibatch_indices_v</ref>.reserve(s2);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t1<sp/>:<sp/>(*<ref refid="classlbann_1_1generic__data__store_1a54c0a85cd536ef566604c4e9916910c8" kindref="member">m_my_minibatch_indices</ref>))<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t2<sp/>:<sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a41f7fec1f1f3d6568a5765be7a6784eb" kindref="member">m_my_minibatch_indices_v</ref>.push_back(t2);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classlbann_1_1generic__data__store_1a3558f87939755b08ae151623a5799127" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__store_1a3558f87939755b08ae151623a5799127" kindref="member">generic_data_store::get_my_datastore_indices</ref>()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a17d6f931e1a2f4ae9e2452b7d47ead43" kindref="member">m_num_samples</ref>.resize(<ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>std::unordered_set&lt;int&gt;<sp/>mine;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;<ref refid="classlbann_1_1generic__data__store_1ad456f747ee07f63df15c60833dfb82ad" kindref="member">m_shuffled_indices</ref>-&gt;size();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>(*m_shuffled_indices)[j];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>owner<sp/>=<sp/>idx<sp/>%<sp/><ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a17d6f931e1a2f4ae9e2452b7d47ead43" kindref="member">m_num_samples</ref>[owner]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(owner<sp/>==<sp/><ref refid="classlbann_1_1generic__data__store_1a87695bfd2d1ed0dbe01d99108e3f68b7" kindref="member">m_rank</ref>)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1abd38f8d8aab0648959e09d011abfe20a" kindref="member">m_my_datastore_indices</ref>.insert(idx);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classlbann_1_1generic__data__store_1a1cff17def02ee21b6ca0befeb04bb582" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__store_1a1cff17def02ee21b6ca0befeb04bb582" kindref="member">generic_data_store::setup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1abdf41bf60ba37fa3de49c65c178dc7b0" kindref="member">set_shuffled_indices</ref>(<sp/>&amp;(<ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a38eedaa9c8680e885a3ec05009f5f492" kindref="member">get_shuffled_indices</ref>())<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a694438e0c70be757cc020ffc918fb165" kindref="member">set_num_global_indices</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a4381c1192e029d24c5b02cbd68988f77" kindref="member">m_num_readers</ref><sp/>=<sp/><ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1ad15887cc31657d03925835aab0d4b675" kindref="member">get_num_parallel_readers</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;data_reader<sp/>type<sp/>is:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1abeb849fb8e10b4fa317c90bc33f61758" kindref="member">get_type</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>set<sp/>of<sp/>global<sp/>indices<sp/>used<sp/>by<sp/>this<sp/>processor<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>generic_data_reader::fetch_data().<sp/>Note<sp/>that<sp/>these<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;original&apos;<sp/>indices,<sp/>not<sp/>shuffled<sp/>indices,<sp/>i.e,<sp/>these<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remain<sp/>constant<sp/>through<sp/>all<sp/>epochs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1aa8ce7dae1eeb256820ac4f99893a6d32" kindref="member">m_collect_minibatch_indices</ref>)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>{<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>m_model-&gt;collect_indices\n&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a19fd7c4dc234fa09ac7619e47fe18454" kindref="member">set_save_minibatch_entries</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a92982e1b399f37e2ead5aa440883cba5" kindref="member">get_role</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1acf2fb76306c75f52de0d6ea92b0f38fc" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1aa819e0d7c8bb178155e40e33037cf054" kindref="member">collect_indices</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a92982e1b399f37e2ead5aa440883cba5" kindref="member">get_role</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;validate&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1acf2fb76306c75f52de0d6ea92b0f38fc" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1aa819e0d7c8bb178155e40e33037cf054" kindref="member">collect_indices</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a92982e1b399f37e2ead5aa440883cba5" kindref="member">get_role</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1acf2fb76306c75f52de0d6ea92b0f38fc" kindref="member">m_model</ref>-&gt;<ref refid="classlbann_1_1model_1aa819e0d7c8bb178155e40e33037cf054" kindref="member">collect_indices</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>s2;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bad<sp/>role;<sp/>should<sp/>be<sp/>train,<sp/>test,<sp/>or<sp/>validate;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>we<sp/>got:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a92982e1b399f37e2ead5aa440883cba5" kindref="member">get_role</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(s2.str());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a19fd7c4dc234fa09ac7619e47fe18454" kindref="member">set_save_minibatch_entries</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a54c0a85cd536ef566604c4e9916910c8" kindref="member">m_my_minibatch_indices</ref><sp/>=<sp/>&amp;(<ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a192632a8037f6a1eef202747f5916bf3" kindref="member">get_minibatch_indices</ref>());</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classlbann_1_1generic__data__store_1a7641d15eba63426acf5071acb8026442" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__store_1a7641d15eba63426acf5071acb8026442" kindref="member">generic_data_store::get_file_size</ref>(std::string<sp/>dir,<sp/>std::string<sp/>fn)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>std::string<sp/>imagepath;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1ab479c127f00ce550c7433b90e40a5a3d" kindref="member">m_dir</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>imagepath<sp/>=<sp/>fn;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>imagepath<sp/>=<sp/>dir<sp/>+<sp/>fn;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat(imagepath.c_str(),<sp/>&amp;st)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;stat<sp/>failed<sp/>for<sp/>dir:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dir</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>fn:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fn;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st.st_size;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classlbann_1_1generic__data__store_1abdf41bf60ba37fa3de49c65c178dc7b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__store_1abdf41bf60ba37fa3de49c65c178dc7b0" kindref="member">generic_data_store::set_shuffled_indices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>*indices)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1ad456f747ee07f63df15c60833dfb82ad" kindref="member">m_shuffled_indices</ref><sp/>=<sp/>indices;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>++<ref refid="classlbann_1_1generic__data__store_1a1b373d13815ed7f9a7c1dae20b236e91" kindref="member">m_epoch</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a1b373d13815ed7f9a7c1dae20b236e91" kindref="member">m_epoch</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a5a34663fbbc3714d45743a6ca7195f51" kindref="member">exchange_data</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/>if<sp/>(m_rank<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/>bool<sp/>is_shuffled<sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(size_t<sp/>j=1;<sp/>j&lt;indices-&gt;size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((*indices)[j-1]+1<sp/>!=<sp/>(*indices)[j])<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_shuffled<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/>//std::cerr<sp/>&lt;&lt;<sp/>&quot;IS_SHUFFLED:<sp/>&quot;<sp/>&lt;&lt;<sp/>is_shuffled<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classlbann_1_1generic__data__store_1abd5bf0321c063996369e1e2659bd99aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__store_1abd5bf0321c063996369e1e2659bd99aa" kindref="member">generic_data_store::exchange_mb_counts</ref>()<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>my_num_indices<sp/>=<sp/><ref refid="classlbann_1_1generic__data__store_1a41f7fec1f1f3d6568a5765be7a6784eb" kindref="member">m_my_minibatch_indices_v</ref>.size();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a8ba0cf1a3d83d835060f45a53d77fbfd" kindref="member">m_mb_counts</ref>.resize(<ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>num(<ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref>,<sp/>1);<sp/></highlight><highlight class="comment">//num<sp/>elements<sp/>to<sp/>be<sp/>received<sp/>from<sp/>P_j</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>MPI_Allgather(&amp;my_num_indices,<sp/>1,<sp/>MPI_INT,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a8ba0cf1a3d83d835060f45a53d77fbfd" kindref="member">m_mb_counts</ref>.data(),<sp/>1,<sp/>MPI_INT,<sp/><ref refid="classlbann_1_1generic__data__store_1ae2d2d61d5d766a7f525eedcb05e0dbf6" kindref="member">m_mpi_comm</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classlbann_1_1generic__data__store_1aa0ef8d7528f6775d47641ffe5ac229da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__data__store_1aa0ef8d7528f6775d47641ffe5ac229da" kindref="member">generic_data_store::exchange_mb_indices</ref>()<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1abd5bf0321c063996369e1e2659bd99aa" kindref="member">exchange_mb_counts</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>data<sp/>structures<sp/>to<sp/>exchange<sp/>minibatch<sp/>indices<sp/>with<sp/>all<sp/>processors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//displacement<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>displ(<ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>displ[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=1;<sp/>j&lt;<ref refid="classlbann_1_1generic__data__store_1a8ba0cf1a3d83d835060f45a53d77fbfd" kindref="member">m_mb_counts</ref>.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>displ[j]<sp/>=<sp/>displ[j-1]<sp/>+<sp/><ref refid="classlbann_1_1generic__data__store_1a8ba0cf1a3d83d835060f45a53d77fbfd" kindref="member">m_mb_counts</ref>[j-1];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//recv<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>std::accumulate(<ref refid="classlbann_1_1generic__data__store_1a8ba0cf1a3d83d835060f45a53d77fbfd" kindref="member">m_mb_counts</ref>.begin(),<sp/><ref refid="classlbann_1_1generic__data__store_1a8ba0cf1a3d83d835060f45a53d77fbfd" kindref="member">m_mb_counts</ref>.end(),<sp/>0);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>all_indices(n);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//receive<sp/>the<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>MPI_Allgatherv(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a41f7fec1f1f3d6568a5765be7a6784eb" kindref="member">m_my_minibatch_indices_v</ref>.data(),<sp/><ref refid="classlbann_1_1generic__data__store_1a41f7fec1f1f3d6568a5765be7a6784eb" kindref="member">m_my_minibatch_indices_v</ref>.size(),<sp/>MPI_INT,<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>all_indices.data(),<sp/><ref refid="classlbann_1_1generic__data__store_1a8ba0cf1a3d83d835060f45a53d77fbfd" kindref="member">m_mb_counts</ref>.data(),<sp/>displ.data(),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_INT,<sp/><ref refid="classlbann_1_1generic__data__store_1ae2d2d61d5d766a7f525eedcb05e0dbf6" kindref="member">m_mpi_comm</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//fill<sp/>in<sp/>the<sp/>final<sp/>data<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1afd21d4f029e450328f8703dd72702e73" kindref="member">m_all_minibatch_indices</ref>.resize(<ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;<ref refid="classlbann_1_1generic__data__store_1afcd4f99959c265c8c03dcf8ad3779d85" kindref="member">m_np</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1afd21d4f029e450328f8703dd72702e73" kindref="member">m_all_minibatch_indices</ref>[j].reserve(<ref refid="classlbann_1_1generic__data__store_1a8ba0cf1a3d83d835060f45a53d77fbfd" kindref="member">m_mb_counts</ref>[j]);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=displ[j];<sp/>i&lt;displ[j]+<ref refid="classlbann_1_1generic__data__store_1a8ba0cf1a3d83d835060f45a53d77fbfd" kindref="member">m_mb_counts</ref>[j];<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1afd21d4f029e450328f8703dd72702e73" kindref="member">m_all_minibatch_indices</ref>[j].push_back(all_indices[i]);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/data_store/generic_data_store.cpp"/>
  </compounddef>
</doxygen>
