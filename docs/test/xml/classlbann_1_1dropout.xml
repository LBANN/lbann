<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1dropout" kind="class" language="C++" prot="public">
    <compoundname>lbann::dropout</compoundname>
    <basecompoundref refid="classlbann_1_1regularizer__layer" prot="public" virt="non-virtual">lbann::regularizer_layer</basecompoundref>
    <includes refid="dropout_8hpp" local="no">dropout.hpp</includes>
    <templateparamlist>
      <param>
        <type><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08db" kindref="member">data_layout</ref></type>
        <declname>T_layout</declname>
        <defname>T_layout</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" prot="private" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
        <definition>EvalType lbann::dropout&lt; T_layout &gt;::m_keep_prob</definition>
        <argsstring></argsstring>
        <name>m_keep_prob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Probability of keeping each unit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="335" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="335" bodyend="-1"/>
        <referencedby refid="classlbann_1_1dropout_1a0243b0bc3c2a4239a5ba6d64e6566a15" compoundref="dropout_8hpp" startline="80" endline="98">lbann::dropout&lt; T_layout &gt;::operator=</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a7b53ee7d758337fe40788a567b5d092c" compoundref="dropout_8hpp" startline="112" endline="115">lbann::dropout&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a358c502d8e7eeb1fed8b5df468793b09" compoundref="dropout_8hpp" startline="182" endline="216">lbann::dropout&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1aca0160de0c3db5c29a0c4c6bddd0cf4f" compoundref="dropout_8hpp" startline="219" endline="229">lbann::dropout&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1ad71de4282d2164171bbcad158a7bf1e7" compoundref="dropout_8hpp" startline="231" endline="262">lbann::dropout&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1aeafadecbcfc81734d0c1850b4004dcc3" compoundref="dropout_8hpp" startline="264" endline="310">lbann::dropout&lt; T_layout &gt;::bp_compute_gpu</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &gt;</type>
        <definition>std::unique_ptr&lt;AbsDistMat&gt; lbann::dropout&lt; T_layout &gt;::m_mask</definition>
        <argsstring></argsstring>
        <name>m_mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current dropout mask (a scaled Bernoulli random matrix). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="337" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="337" bodyend="-1"/>
        <referencedby refid="classlbann_1_1dropout_1a0243b0bc3c2a4239a5ba6d64e6566a15" compoundref="dropout_8hpp" startline="80" endline="98">lbann::dropout&lt; T_layout &gt;::operator=</referencedby>
        <referencedby refid="classlbann_1_1dropout_1abf399d8463721d322aedbb76d60534c6" compoundref="dropout_8hpp" startline="117" endline="122">lbann::dropout&lt; T_layout &gt;::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a358c502d8e7eeb1fed8b5df468793b09" compoundref="dropout_8hpp" startline="182" endline="216">lbann::dropout&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1aca0160de0c3db5c29a0c4c6bddd0cf4f" compoundref="dropout_8hpp" startline="219" endline="229">lbann::dropout&lt; T_layout &gt;::bp_compute_cpu</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1dropout_1a301be902f285c5cf1d0cd743119a09d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::dropout&lt; T_layout &gt;::dropout</definition>
        <argsstring>(lbann_comm *comm, EvalType keep_prob=EvalType(0.5), cudnn::cudnn_manager *cudnn=nullptr)</argsstring>
        <name>dropout</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
          <declname>keep_prob</declname>
          <defval><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0.5)</defval>
        </param>
        <param>
          <type><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref> *</type>
          <declname>cudnn</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keep_prob</parametername>
</parameternamelist>
<parameterdescription>
<para>dropout probability. Keep units with probabiliy keep_prob. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="50" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="50" bodyend="65"/>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638">DATA_PARALLEL</references>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">lbann::Layer::m_using_gpus</references>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">lbann::Layer::m_cudnn</references>
        <referencedby refid="classlbann_1_1dropout_1a0e6e50b50f8c2620315f3257bbab41b3" compoundref="dropout_8hpp" startline="108" endline="108">lbann::dropout&lt; T_layout &gt;::copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1ab2057d4abf48b96f8f6e9f64bdb0fc7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::dropout&lt; T_layout &gt;::dropout</definition>
        <argsstring>(const dropout &amp;other)</argsstring>
        <name>dropout</name>
        <param>
          <type>const <ref refid="classlbann_1_1dropout" kindref="compound">dropout</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="67" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="67" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1a0243b0bc3c2a4239a5ba6d64e6566a15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlbann_1_1dropout" kindref="compound">dropout</ref> &amp;</type>
        <definition>dropout&amp; lbann::dropout&lt; T_layout &gt;::operator=</definition>
        <argsstring>(const dropout &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1dropout" kindref="compound">dropout</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="80" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="80" bodyend="98"/>
        <references refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">lbann::Layer::operator=</references>
        <references refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" compoundref="dropout_8hpp" startline="335">lbann::dropout&lt; T_layout &gt;::m_keep_prob</references>
        <references refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" compoundref="dropout_8hpp" startline="337">lbann::dropout&lt; T_layout &gt;::m_mask</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1a4b18d1195a176f4dd653767bfc0a9f6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::dropout&lt; T_layout &gt;::~dropout</definition>
        <argsstring>() override</argsstring>
        <name>~dropout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="100" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="100" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1a0e6e50b50f8c2620315f3257bbab41b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1dropout" kindref="compound">dropout</ref> *</type>
        <definition>dropout* lbann::dropout&lt; T_layout &gt;::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1Layer_1af420f22bbac801c85483ade84588a23f">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy function. This function dynamically allocates memory for a layer instance and instantiates a copy. The caller is responsible for deallocating the instance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="108" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="108" bodyend="108"/>
        <references refid="classlbann_1_1dropout_1a301be902f285c5cf1d0cd743119a09d8" compoundref="dropout_8hpp" startline="50" endline="65">lbann::dropout&lt; T_layout &gt;::dropout</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1a4d07cd79c7a4ab29db233a361aede358" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::dropout&lt; T_layout &gt;::get_type</definition>
        <argsstring>() const override</argsstring>
        <name>get_type</name>
        <reimplements refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239">get_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the layer type&apos;s name. A layer type name should be brief, human-readable description of the layer&apos;s mathematical operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="110" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1a7b53ee7d758337fe40788a567b5d092c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::dropout&lt; T_layout &gt;::get_description</definition>
        <argsstring>() const override</argsstring>
        <name>get_description</name>
        <reimplements refid="classlbann_1_1Layer_1acc0803d3428914ca1eb5988c4309174a">get_description</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable description of the layer parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="112" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="112" bodyend="115"/>
        <references refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" compoundref="dropout_8hpp" startline="335">lbann::dropout&lt; T_layout &gt;::m_keep_prob</references>
        <references refid="classlbann_1_1Layer_1ae3f4a5602df821f4221614b1e3782dc1" compoundref="layer_8cpp" startline="1205" endline="1216">lbann::Layer::get_data_layout_string</references>
        <references refid="classlbann_1_1dropout_1aefeb16614f9bf4b9e643e1d5b48ec62d" compoundref="dropout_8hpp" startline="123" endline="123">lbann::dropout&lt; T_layout &gt;::get_data_layout</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1abf399d8463721d322aedbb76d60534c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::dropout&lt; T_layout &gt;::setup_matrices</definition>
        <argsstring>(const El::Grid &amp;grid) override</argsstring>
        <name>setup_matrices</name>
        <reimplements refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e">setup_matrices</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9951bb1719d534e0401b1f06cad19eab" kindref="member">El::Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instantiate distributed matrices. If the layer has already been setup, this function should destroy all matrices and reinstantiate them. However, it is not guaranteed that derived classes will obey this behavior. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="117" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="117" bodyend="122"/>
        <references refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e" compoundref="layer_8cpp" startline="580" endline="598">lbann::Layer::setup_matrices</references>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">lbann::Layer::m_using_gpus</references>
        <references refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" compoundref="dropout_8hpp" startline="337">lbann::dropout&lt; T_layout &gt;::m_mask</references>
        <references refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" compoundref="layer_8cpp" startline="376" endline="378">lbann::Layer::get_activations</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1aefeb16614f9bf4b9e643e1d5b48ec62d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08db" kindref="member">data_layout</ref></type>
        <definition>data_layout lbann::dropout&lt; T_layout &gt;::get_data_layout</definition>
        <argsstring>() const override</argsstring>
        <name>get_data_layout</name>
        <reimplements refid="classlbann_1_1Layer_1a5dfb66e81fc085997402a5e2241316bd">get_data_layout</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get data layout of the data tensors. We assume that the data layouts of the previous activations, activations, previous error signals, and error signals are the same. Each concrete layer that is templated on its data layout should override this function to return its template parameter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="123" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="123" bodyend="123"/>
        <referencedby refid="classlbann_1_1dropout_1a7b53ee7d758337fe40788a567b5d092c" compoundref="dropout_8hpp" startline="112" endline="115">lbann::dropout&lt; T_layout &gt;::get_description</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1abaa3d0c6d99200b186d0a55201f77b6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::dropout&lt; T_layout &gt;::setup_gpu</definition>
        <argsstring>() override</argsstring>
        <name>setup_gpu</name>
        <reimplements refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863">setup_gpu</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup GPU objects. Called by the setup function if GPUs are enabled. The base method initializes GPU matrices for the previous activations, activations, previous error signals, and error signals. It also initializes cuDNN tensor descriptors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="125" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="125" bodyend="144"/>
        <references refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">lbann::Layer::setup_gpu</references>
        <references refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" compoundref="base_8hpp" startline="154">LBANN_ERROR</references>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">lbann::Layer::m_cudnn</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classlbann_1_1dropout_1a9ed94f278835b6c9e8185de01705e53a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::dropout&lt; T_layout &gt;::fp_compute</definition>
        <argsstring>() override</argsstring>
        <name>fp_compute</name>
        <reimplements refid="classlbann_1_1Layer_1a523319dd1bd87a0612afa1912bb5aad7">fp_compute</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the computation for the forward propagation step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="148" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="148" bodyend="154"/>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">lbann::Layer::m_using_gpus</references>
        <references refid="classlbann_1_1dropout_1ad71de4282d2164171bbcad158a7bf1e7" compoundref="dropout_8hpp" startline="231" endline="262">lbann::dropout&lt; T_layout &gt;::fp_compute_gpu</references>
        <references refid="classlbann_1_1dropout_1a358c502d8e7eeb1fed8b5df468793b09" compoundref="dropout_8hpp" startline="182" endline="216">lbann::dropout&lt; T_layout &gt;::fp_compute_cpu</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1a053e3f392a6a90b3bcc07f62f3818bce" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::dropout&lt; T_layout &gt;::bp_compute</definition>
        <argsstring>() override</argsstring>
        <name>bp_compute</name>
        <reimplements refid="classlbann_1_1Layer_1a7442e01f9ee1294df2de811efcf5171e">bp_compute</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the computation for the backward propagation step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="156" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="156" bodyend="162"/>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">lbann::Layer::m_using_gpus</references>
        <references refid="classlbann_1_1dropout_1aeafadecbcfc81734d0c1850b4004dcc3" compoundref="dropout_8hpp" startline="264" endline="310">lbann::dropout&lt; T_layout &gt;::bp_compute_gpu</references>
        <references refid="classlbann_1_1dropout_1aca0160de0c3db5c29a0c4c6bddd0cf4f" compoundref="dropout_8hpp" startline="219" endline="229">lbann::dropout&lt; T_layout &gt;::bp_compute_cpu</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlbann_1_1dropout_1a478368964f515f5456324b6504a5358f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::dropout&lt; T_layout &gt;::fp_setup_data</definition>
        <argsstring>(int mini_batch_size) override</argsstring>
        <name>fp_setup_data</name>
        <reimplements refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7">fp_setup_data</reimplements>
        <param>
          <type>int</type>
          <declname>mini_batch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup data for forward propagation. Base method gets previous activations from parent layers and resizes activations for the current mini-batch size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="166" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="166" bodyend="180"/>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">lbann::Layer::m_using_gpus</references>
        <references refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" compoundref="layer_8hpp" startline="425">lbann::Layer::m_model</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">lbann::Layer::fp_setup_data</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1a358c502d8e7eeb1fed8b5df468793b09" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::dropout&lt; T_layout &gt;::fp_compute_cpu</definition>
        <argsstring>()</argsstring>
        <name>fp_compute_cpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="182" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="182" bodyend="216"/>
        <references refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" compoundref="layer_8cpp" startline="373" endline="375">lbann::Layer::get_prev_activations</references>
        <references refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" compoundref="layer_8cpp" startline="376" endline="378">lbann::Layer::get_activations</references>
        <references refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" compoundref="layer_8hpp" startline="425">lbann::Layer::m_model</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" compoundref="dropout_8hpp" startline="335">lbann::dropout&lt; T_layout &gt;::m_keep_prob</references>
        <references refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" compoundref="dropout_8hpp" startline="337">lbann::dropout&lt; T_layout &gt;::m_mask</references>
        <references refid="namespacelbann_1ad1e3fe84cfa5257be476de3be805064d" compoundref="random_8cpp" startline="208" endline="221">lbann::bernoulli_fill_procdet</references>
        <references refid="namespacelbann_1ae6ce9c2fdec6f81803f6b1a6555c31c5" compoundref="random_8cpp" startline="64" endline="66">lbann::get_fast_generator</references>
        <referencedby refid="classlbann_1_1dropout_1a9ed94f278835b6c9e8185de01705e53a" compoundref="dropout_8hpp" startline="148" endline="154">lbann::dropout&lt; T_layout &gt;::fp_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1aca0160de0c3db5c29a0c4c6bddd0cf4f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::dropout&lt; T_layout &gt;::bp_compute_cpu</definition>
        <argsstring>()</argsstring>
        <name>bp_compute_cpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adjust gradients for dropout in backprop. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="219" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="219" bodyend="229"/>
        <references refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" compoundref="layer_8cpp" startline="379" endline="381">lbann::Layer::get_prev_error_signals</references>
        <references refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" compoundref="layer_8cpp" startline="382" endline="384">lbann::Layer::get_error_signals</references>
        <references refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" compoundref="layer_8hpp" startline="425">lbann::Layer::m_model</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" compoundref="dropout_8hpp" startline="335">lbann::dropout&lt; T_layout &gt;::m_keep_prob</references>
        <references refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" compoundref="dropout_8hpp" startline="337">lbann::dropout&lt; T_layout &gt;::m_mask</references>
        <referencedby refid="classlbann_1_1dropout_1a053e3f392a6a90b3bcc07f62f3818bce" compoundref="dropout_8hpp" startline="156" endline="162">lbann::dropout&lt; T_layout &gt;::bp_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1ad71de4282d2164171bbcad158a7bf1e7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::dropout&lt; T_layout &gt;::fp_compute_gpu</definition>
        <argsstring>()</argsstring>
        <name>fp_compute_gpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="231" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="231" bodyend="262"/>
        <references refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" compoundref="base_8hpp" startline="154">LBANN_ERROR</references>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">lbann::Layer::m_cudnn</references>
        <references refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" compoundref="layer_8hpp" startline="425">lbann::Layer::m_model</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" compoundref="dropout_8hpp" startline="335">lbann::dropout&lt; T_layout &gt;::m_keep_prob</references>
        <referencedby refid="classlbann_1_1dropout_1a9ed94f278835b6c9e8185de01705e53a" compoundref="dropout_8hpp" startline="148" endline="154">lbann::dropout&lt; T_layout &gt;::fp_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1dropout_1aeafadecbcfc81734d0c1850b4004dcc3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::dropout&lt; T_layout &gt;::bp_compute_gpu</definition>
        <argsstring>()</argsstring>
        <name>bp_compute_gpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="264" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="264" bodyend="310"/>
        <references refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" compoundref="base_8hpp" startline="154">LBANN_ERROR</references>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">lbann::Layer::m_cudnn</references>
        <references refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" compoundref="layer_8hpp" startline="425">lbann::Layer::m_model</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" compoundref="dropout_8hpp" startline="335">lbann::dropout&lt; T_layout &gt;::m_keep_prob</references>
        <references refid="namespacelbann_1a4fea7ba21017b49d1e34394b4c20c764" compoundref="random_8cpp" startline="60" endline="62">lbann::get_generator</references>
        <referencedby refid="classlbann_1_1dropout_1a053e3f392a6a90b3bcc07f62f3818bce" compoundref="dropout_8hpp" startline="156" endline="162">lbann::dropout&lt; T_layout &gt;::bp_compute</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Dropout layer: Probabilistically drop layer outputs. See: Srivastava, Nitish, et al. &quot;Dropout: a simple way to prevent
  neural networks from overfitting.&quot; Journal of Machine Learning Research 15.1 (2014). The weights are multiplied by 1/(keep probability) at training time, as discussed in section 10 of the paper. Keep probabilities of 0.5 for fully-connected layers and 0.8 for input layers are good starting points. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="684">
        <label>lbann::regularizer_layer</label>
        <link refid="classlbann_1_1regularizer__layer"/>
        <childnode refid="685" relation="public-inheritance">
        </childnode>
      </node>
      <node id="685">
        <label>lbann::Layer</label>
        <link refid="classlbann_1_1Layer"/>
      </node>
      <node id="683">
        <label>lbann::dropout&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1dropout"/>
        <childnode refid="684" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="690">
        <label>lbann::model</label>
        <link refid="classlbann_1_1model"/>
        <childnode refid="691" relation="usage">
          <edgelabel>m_default_optimizer</edgelabel>
        </childnode>
        <childnode refid="689" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="696" relation="usage">
          <edgelabel>m_objective_function</edgelabel>
        </childnode>
      </node>
      <node id="687">
        <label>lbann::regularizer_layer</label>
        <link refid="classlbann_1_1regularizer__layer"/>
        <childnode refid="688" relation="public-inheritance">
        </childnode>
      </node>
      <node id="691">
        <label>lbann::optimizer</label>
        <link refid="classlbann_1_1optimizer"/>
        <childnode refid="689" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="692" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
        <childnode refid="693" relation="usage">
          <edgelabel>m_gradient_allreduce_req</edgelabel>
        </childnode>
        <childnode refid="694" relation="usage">
          <edgelabel>m_weights</edgelabel>
        </childnode>
      </node>
      <node id="692">
        <label>lbann::cudnn::cudnn_manager</label>
        <link refid="classlbann_1_1cudnn_1_1cudnn__manager"/>
      </node>
      <node id="695">
        <label>lbann::weights_initializer</label>
        <link refid="classlbann_1_1weights__initializer"/>
        <childnode refid="689" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
      <node id="688">
        <label>lbann::Layer</label>
        <link refid="classlbann_1_1Layer"/>
        <childnode refid="689" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="690" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
        <childnode refid="692" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="694">
        <label>lbann::weights</label>
        <link refid="classlbann_1_1weights"/>
        <childnode refid="691" relation="usage">
          <edgelabel>m_optimizer</edgelabel>
        </childnode>
        <childnode refid="689" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="695" relation="usage">
          <edgelabel>m_initializer</edgelabel>
        </childnode>
        <childnode refid="692" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="689">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="686">
        <label>lbann::dropout&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1dropout"/>
        <childnode refid="687" relation="public-inheritance">
        </childnode>
      </node>
      <node id="693">
        <label>lbann::Al::request</label>
        <link refid="structlbann_1_1Al_1_1request"/>
      </node>
      <node id="696">
        <label>lbann::objective_function</label>
        <link refid="classlbann_1_1objective__function"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" line="45" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/regularizers/dropout.hpp" bodystart="45" bodyend="348"/>
    <listofallmembers>
      <member refid="classlbann_1_1Layer_1ace0346ac56fd7ce7b6b44f27f224f35e" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>add_child_layer</name></member>
      <member refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>add_parent_layer</name></member>
      <member refid="classlbann_1_1Layer_1a8d942eb2cd37c346edc5ff473e0494a2" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>add_to_error_signal</name></member>
      <member refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>back_prop</name></member>
      <member refid="classlbann_1_1dropout_1a053e3f392a6a90b3bcc07f62f3818bce" prot="protected" virt="virtual"><scope>lbann::dropout</scope><name>bp_compute</name></member>
      <member refid="classlbann_1_1dropout_1aca0160de0c3db5c29a0c4c6bddd0cf4f" prot="private" virt="non-virtual"><scope>lbann::dropout</scope><name>bp_compute_cpu</name></member>
      <member refid="classlbann_1_1dropout_1aeafadecbcfc81734d0c1850b4004dcc3" prot="private" virt="non-virtual"><scope>lbann::dropout</scope><name>bp_compute_gpu</name></member>
      <member refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" prot="protected" virt="virtual"><scope>lbann::dropout</scope><name>bp_setup_data</name></member>
      <member refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>check_setup</name></member>
      <member refid="classlbann_1_1Layer_1a040bf53e261b1ef796739c09b3362a3a" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>clear_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>clear_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a7336909c78e438ba5332c6c1bddeadd2" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>clear_parent_layers</name></member>
      <member refid="classlbann_1_1dropout_1a0e6e50b50f8c2620315f3257bbab41b3" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>copy</name></member>
      <member refid="classlbann_1_1dropout_1a301be902f285c5cf1d0cd743119a09d8" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>dropout</name></member>
      <member refid="classlbann_1_1dropout_1ab2057d4abf48b96f8f6e9f64bdb0fc7e" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>dropout</name></member>
      <member refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>forward_prop</name></member>
      <member refid="classlbann_1_1dropout_1a9ed94f278835b6c9e8185de01705e53a" prot="protected" virt="virtual"><scope>lbann::dropout</scope><name>fp_compute</name></member>
      <member refid="classlbann_1_1dropout_1a358c502d8e7eeb1fed8b5df468793b09" prot="private" virt="non-virtual"><scope>lbann::dropout</scope><name>fp_compute_cpu</name></member>
      <member refid="classlbann_1_1dropout_1ad71de4282d2164171bbcad158a7bf1e7" prot="private" virt="non-virtual"><scope>lbann::dropout</scope><name>fp_compute_gpu</name></member>
      <member refid="classlbann_1_1Layer_1a22d31298912405660ebb210c0d7c5373" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>fp_output_dims</name></member>
      <member refid="classlbann_1_1dropout_1a478368964f515f5456324b6504a5358f" prot="private" virt="virtual"><scope>lbann::dropout</scope><name>fp_setup_data</name></member>
      <member refid="classlbann_1_1Layer_1ad55c455dbae0d082cedfa68511709aae" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>freeze</name></member>
      <member refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_activations</name></member>
      <member refid="classlbann_1_1Layer_1af69a4773804c6982e8acaf5810eaa150" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_activations</name></member>
      <member refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_bp_output</name></member>
      <member refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a0ad6c5253a4545a7322766d586a4bd33" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1afc7bf4e2a61a6f47f9e1f185bf92439a" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_child_names</name></member>
      <member refid="classlbann_1_1Layer_1a1b528e5872357a82176ee487596b363c" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_cudnn_manager</name></member>
      <member refid="classlbann_1_1dropout_1aefeb16614f9bf4b9e643e1d5b48ec62d" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_data_layout</name></member>
      <member refid="classlbann_1_1Layer_1ae3f4a5602df821f4221614b1e3782dc1" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_data_layout_string</name></member>
      <member refid="classlbann_1_1dropout_1a7b53ee7d758337fe40788a567b5d092c" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_description</name></member>
      <member refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ae09bc5a240e9042371203ba5ff19990c" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1aaeef8c7631204fc415a94dcdfbcfe93d" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_expected_num_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa30dbf20929aaa58b5be98b98217ca88" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_expected_num_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1ac6b43c63399f717cc1a4a0a2007350f2" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_fp_output</name></member>
      <member refid="classlbann_1_1Layer_1af4a093d91552cf079217eb346bbb847f" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_layer_names</name></member>
      <member refid="classlbann_1_1Layer_1a9f94210cbb973f1df89ef649899094a1" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_layer_pointers</name></member>
      <member refid="classlbann_1_1Layer_1a4248f27acebf72b7b7b3ee39c8bcb62a" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_local_activations</name></member>
      <member refid="classlbann_1_1Layer_1aadbc466c72f455c10b53bf45dca56332" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_local_activations</name></member>
      <member refid="classlbann_1_1Layer_1af178d00b9d878aa7d87754bff2a91f3a" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_local_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1acf76bc7fba1e8ab74947ef83a3c8a141" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_local_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a35397843bb0c84030000c7d872229acb" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_local_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1ab0f7b4d0fdb06004dfde5358781eeece" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_local_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a82827edc5e869960144f3ccb2172bfcd" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_local_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1af3490fe9011ef620b827970bc5dcc7a7" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_local_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1afcfb6f55d12c728a59d107fe2d2fff0d" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_model</name></member>
      <member refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_name</name></member>
      <member refid="classlbann_1_1Layer_1a54f53393fadbfdc73b4e72489c868433" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_num_children</name></member>
      <member refid="classlbann_1_1Layer_1aa35561e662de84deae26045ccb53d862" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_num_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_num_neurons</name></member>
      <member refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_num_parents</name></member>
      <member refid="classlbann_1_1Layer_1ace32c7df942a8d97d7a25cb8ff8ce71d" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_num_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_num_prev_neurons</name></member>
      <member refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1a233ceaf4e6c6b5c24dd097ffff511579" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1afdf36947beec676a71ecd6167c3bb724" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_parent_names</name></member>
      <member refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1afc0611b7c3b1537914f25a538486a8cd" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1aff2c8983548364c978acb09ddf58a6fc" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a1acc0fa44acdeffbac158fdac3467973" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a0ac13af6f5ee8316d64c550bef919ee0" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_sample_indices_per_mb</name></member>
      <member refid="classlbann_1_1Layer_1a147a7f7dcf0027a60f10109439e5dcea" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_topo_description</name></member>
      <member refid="classlbann_1_1dropout_1a4d07cd79c7a4ab29db233a361aede358" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>get_type</name></member>
      <member refid="classlbann_1_1Layer_1a4ee78d42284421519dd18d27b4da0957" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_weights</name></member>
      <member refid="classlbann_1_1Layer_1ab9fe05ad8d21ba5d6dd4d22ee2e0dca0" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>get_weights</name></member>
      <member refid="classlbann_1_1Layer_1af3c0f9f32eb631f4fdf34ad040ef8637" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>is_frozen</name></member>
      <member refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>Layer</name></member>
      <member refid="classlbann_1_1Layer_1a247cc68c730284f10a2cb42985fe5f3a" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>Layer</name></member>
      <member refid="classlbann_1_1Layer_1a9e262970ecc64166e8b6610e2502ad30" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1Layer_1a7ac9335d75d817fc2d5cf171da9b7e22" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>loadFromCheckpoint</name></member>
      <member refid="classlbann_1_1Layer_1a1ae0e6015dd427c63236a07f8cbd3878" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>loadFromFile</name></member>
      <member refid="classlbann_1_1Layer_1a7caf08e938141d1584e6939cefa4baed" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_activations</name></member>
      <member refid="classlbann_1_1Layer_1ae28626457a58943b25e7a2920fc271f0" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_bp_compute_time</name></member>
      <member refid="classlbann_1_1Layer_1aa60fc41627bcaa9c345775bf5737bb45" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_bp_time</name></member>
      <member refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_comm</name></member>
      <member refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_cudnn</name></member>
      <member refid="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ac08f133dddd150319650e220ab9a523a" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_expected_num_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a841b96b25555247f52921c7f13ae1dfa" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_expected_num_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa4e439c1d6a656e709dc4736c9380476" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_fp_compute_time</name></member>
      <member refid="classlbann_1_1Layer_1ab1bd9ab0a6f9e554f4dc936d8316028e" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_fp_time</name></member>
      <member refid="classlbann_1_1Layer_1afdc60df9731a3ecdeeeb8175fa483676" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_frozen</name></member>
      <member refid="classlbann_1_1dropout_1aa06cbee70f3426b589990889b8ac8872" prot="private" virt="non-virtual"><scope>lbann::dropout</scope><name>m_keep_prob</name></member>
      <member refid="classlbann_1_1dropout_1ad7d359957d41adcb64e6e3a2d4ad278d" prot="private" virt="non-virtual"><scope>lbann::dropout</scope><name>m_mask</name></member>
      <member refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_model</name></member>
      <member refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_name</name></member>
      <member refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_num_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_num_neurons</name></member>
      <member refid="classlbann_1_1Layer_1adc052afb38f170e839db00d3c8151d1e" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_num_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_num_prev_neurons</name></member>
      <member refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1a52314601c3458268f56e017dc2ade357" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a6fdcbf884150d0b20cffe678fefd7caa" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1ab7d84533662b02d01ba6685ad6f20935" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_update_time</name></member>
      <member refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_using_gpus</name></member>
      <member refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" prot="protected" virt="non-virtual"><scope>lbann::dropout</scope><name>m_weights</name></member>
      <member refid="classlbann_1_1dropout_1a0243b0bc3c2a4239a5ba6d64e6566a15" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>operator=</name></member>
      <member refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" prot="public" virt="non-virtual" ambiguityscope="lbann::regularizer_layer::"><scope>lbann::dropout</scope><name>operator=</name></member>
      <member refid="classlbann_1_1regularizer__layer_1a2ebf3877b905b479a0250b74cf8f68b3" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>regularizer_layer</name></member>
      <member refid="classlbann_1_1Layer_1ae9df4e0b0fe7c276c79575f9e11c53af" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>replace_weights</name></member>
      <member refid="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>reset_counters</name></member>
      <member refid="classlbann_1_1Layer_1afce0efa0f1c8f3b1c61069536b2fa8cc" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1Layer_1a994a4beabbace598193b1611eb06b07e" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>saveToCheckpoint</name></member>
      <member refid="classlbann_1_1Layer_1a131876b692c0e68c95d9ae1a86c446df" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>saveToFile</name></member>
      <member refid="classlbann_1_1Layer_1a001ea76cdd05e2d0d475f408f24702ee" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>set_layer_pointers</name></member>
      <member refid="classlbann_1_1Layer_1a8eed87b25ea902b223c6b7a23abf78b3" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>set_model</name></member>
      <member refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>set_name</name></member>
      <member refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>set_weights</name></member>
      <member refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>setup</name></member>
      <member refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" prot="protected" virt="virtual"><scope>lbann::dropout</scope><name>setup_data</name></member>
      <member refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" prot="protected" virt="virtual"><scope>lbann::dropout</scope><name>setup_dims</name></member>
      <member refid="classlbann_1_1dropout_1abaa3d0c6d99200b186d0a55201f77b6a" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>setup_gpu</name></member>
      <member refid="classlbann_1_1dropout_1abf399d8463721d322aedbb76d60534c6" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>setup_matrices</name></member>
      <member refid="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" prot="protected" virt="virtual"><scope>lbann::dropout</scope><name>setup_pointers</name></member>
      <member refid="classlbann_1_1Layer_1af7e50932bb60d4cab3b21ab3fb0707ea" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>summarize_matrices</name></member>
      <member refid="classlbann_1_1Layer_1a7f3f26e2ae0497f9a00fd6bc56b50543" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>summarize_stats</name></member>
      <member refid="classlbann_1_1Layer_1aa43ecf9fc67eb1d596c1a69cf35d1245" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>unfreeze</name></member>
      <member refid="classlbann_1_1Layer_1ae4a050e51e3a9bec431cf8b7a5660f2c" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>update</name></member>
      <member refid="classlbann_1_1Layer_1a70e08fc96a612f67ade6ba3809536d85" prot="protected" virt="virtual"><scope>lbann::dropout</scope><name>update_compute</name></member>
      <member refid="classlbann_1_1Layer_1a6a75532bdaa2ca3879034f2a76085a06" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>using_gpus</name></member>
      <member refid="classlbann_1_1Layer_1ab94eb4ac28bac0c472a1da83ade4adf1" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>write_proto</name></member>
      <member refid="classlbann_1_1dropout_1a4b18d1195a176f4dd653767bfc0a9f6b" prot="public" virt="non-virtual"><scope>lbann::dropout</scope><name>~dropout</name></member>
      <member refid="classlbann_1_1Layer_1a68c3f57587956da938406812f13ecb78" prot="public" virt="virtual"><scope>lbann::dropout</scope><name>~Layer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
