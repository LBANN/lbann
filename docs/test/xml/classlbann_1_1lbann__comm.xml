<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1lbann__comm" kind="class" language="C++" prot="public">
    <compoundname>lbann::lbann_comm</compoundname>
    <includes refid="comm_8hpp" local="no">comm.hpp</includes>
    <innerclass refid="structlbann_1_1lbann__comm_1_1allreduce__options" prot="public">lbann::lbann_comm::allreduce_options</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019" prot="public" static="no">
        <name>allreduce_algorithm</name>
        <enumvalue id="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019a5b39c8b553c821e7cddc6da64b5bd2ee" prot="public">
          <name>DEFAULT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019a0fcc90da4811c877ba9f9c12f7d60bc9" prot="public">
          <name>DYNAMIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019a5a99a7b378e450d9e91b10b1f0085274" prot="public">
          <name>RECURSIVE_DOUBLING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Choose algorithm based on data size. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019ae97d669b6498b36d1ce07b3d2c544fee" prot="public">
          <name>PAIRWISE_EXCHANGE_RING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019ae69b8a2544417fb71e2767e95d7ac8f3" prot="public">
          <name>RING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019aecfb3869b05d9c2103f98c386a9e8a41" prot="public">
          <name>RABENSEIFNER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019accc0377a8afbf50e7094f5c23a8af223" prot="public">
          <name>INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specify different allreduce algorithms. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="764" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="764" bodyend="772"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a1fc59c935580eab2ce8e60464a45ef39" prot="private" static="no" mutable="no">
        <type>const El::mpi::Comm</type>
        <definition>const El::mpi::Comm lbann::lbann_comm::world_comm</definition>
        <argsstring></argsstring>
        <name>world_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>World communicator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="925" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="925" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a58a75b76bd61ec8a26c1cbbec3dc2f45" prot="private" static="no" mutable="no">
        <type>El::mpi::Comm</type>
        <definition>El::mpi::Comm lbann::lbann_comm::model_comm</definition>
        <argsstring></argsstring>
        <name>model_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Communicator for every process in this model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="927" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="927" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1af17b1093313c5e4223f9036798f9e12f" compoundref="comm_8cpp" startline="78" endline="92">~lbann_comm</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" compoundref="comm_8cpp" startline="94" endline="130">split_models</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a6086ced12c3eefeea6e2a78eff286983" compoundref="comm_8cpp" startline="258" endline="261">model_barrier</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" prot="private" static="no" mutable="no">
        <type>El::mpi::Comm</type>
        <definition>El::mpi::Comm lbann::lbann_comm::intermodel_comm</definition>
        <argsstring></argsstring>
        <name>intermodel_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Communicator for every process with the same model rank. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="929" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="929" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1af17b1093313c5e4223f9036798f9e12f" compoundref="comm_8cpp" startline="78" endline="92">~lbann_comm</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" compoundref="comm_8cpp" startline="94" endline="130">split_models</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a68b36ba64db34f33cb135bc64c4623e0" compoundref="comm_8cpp" startline="132" endline="136">intermodel_sum_matrix</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a4989229db1ee858c5a2170a989653d0b" compoundref="comm_8cpp" startline="245" endline="247">intermodel_broadcast_matrix</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a5834e95e066313d9328b22e4a0ec8663" compoundref="comm_8cpp" startline="253" endline="256">intermodel_barrier</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a34d5414f1ac4749e6f0937b638bb5cc6" compoundref="comm_8cpp" startline="325" endline="374">intermodel_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a8aeb530ae4cedfa4d1141bb9c4704e6c" prot="private" static="no" mutable="no">
        <type>El::mpi::Comm</type>
        <definition>El::mpi::Comm lbann::lbann_comm::node_comm</definition>
        <argsstring></argsstring>
        <name>node_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Communicator for every process in the same compute node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="931" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="931" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a63eae73674cbadea2eff8b6595322336" compoundref="comm_8cpp" startline="56" endline="76">lbann_comm</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1af17b1093313c5e4223f9036798f9e12f" compoundref="comm_8cpp" startline="78" endline="92">~lbann_comm</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a44bc6b8683f04c2a3fc2f01fc734a946" compoundref="comm_8cpp" startline="1005" endline="1045">setup_node_comm</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a29fb31be115db3225b145f250a7778d9" prot="private" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a9951bb1719d534e0401b1f06cad19eab" kindref="member">Grid</ref> *</type>
        <definition>Grid* lbann::lbann_comm::grid</definition>
        <argsstring></argsstring>
        <name>grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Grid for this model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="933" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="933" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1af17b1093313c5e4223f9036798f9e12f" compoundref="comm_8cpp" startline="78" endline="92">~lbann_comm</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" compoundref="comm_8cpp" startline="94" endline="130">split_models</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a256ff5a0bafb33f43784ffc8dd2d29cf" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::lbann_comm::num_models</definition>
        <argsstring></argsstring>
        <name>num_models</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of models. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="935" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="935" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" compoundref="comm_8cpp" startline="94" endline="130">split_models</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::lbann_comm::procs_per_model</definition>
        <argsstring></argsstring>
        <name>procs_per_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of processors per model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="937" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="937" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a63eae73674cbadea2eff8b6595322336" compoundref="comm_8cpp" startline="56" endline="76">lbann_comm</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" compoundref="comm_8cpp" startline="94" endline="130">split_models</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a1f3f90a996dbba4cd1cca60596933ea3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::lbann_comm::model_rank</definition>
        <argsstring></argsstring>
        <name>model_rank</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rank of the model this process is in. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="939" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="939" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" compoundref="comm_8cpp" startline="94" endline="130">split_models</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a0dcccd57c2b591eb7682e192e0a09033" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::lbann_comm::rank_in_model</definition>
        <argsstring></argsstring>
        <name>rank_in_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rank of this process within its model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="941" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="941" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" compoundref="comm_8cpp" startline="94" endline="130">split_models</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a2ffc59f0c1d97df2ca6845312c8c8b3e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::lbann_comm::procs_per_node</definition>
        <argsstring></argsstring>
        <name>procs_per_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of processers per compute node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="943" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="943" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a63eae73674cbadea2eff8b6595322336" compoundref="comm_8cpp" startline="56" endline="76">lbann_comm</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a597189b10f61947580f97fb8d1da7355" compoundref="comm_8cpp" startline="1047" endline="1056">setup_threads</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1abb5c8b008b5cac11702bf1f991c78ab0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::lbann_comm::rank_in_node</definition>
        <argsstring></argsstring>
        <name>rank_in_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rank of this process within its compute node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="945" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="945" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a63eae73674cbadea2eff8b6595322336" compoundref="comm_8cpp" startline="56" endline="76">lbann_comm</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a3299a37fe7b0eae43a5c154148ab6dc2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; lbann::lbann_comm::world_ranks_on_node</definition>
        <argsstring></argsstring>
        <name>world_ranks_on_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The list of world ranks that are on this compute node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="947" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="947" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a44bc6b8683f04c2a3fc2f01fc734a946" compoundref="comm_8cpp" startline="1005" endline="1045">setup_node_comm</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a23ff8e3563e4472af29d15f6cb823bc1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::lbann_comm::threads_per_proc</definition>
        <argsstring></argsstring>
        <name>threads_per_proc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default number of threads per process. This is the number of OpenMP threads to use for parallel regions, provided omp_set_num_threads has not been called or the num_threads directive has not been provided. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="953" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="953" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a597189b10f61947580f97fb8d1da7355" compoundref="comm_8cpp" startline="1047" endline="1056">setup_threads</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a10f13918019cd2e021768e3388355ba2" compoundref="comm_8cpp" startline="1058" endline="1062">reset_threads</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" prot="private" static="no" mutable="no">
        <type>std::map&lt; size_t, std::vector&lt; uint8_t * &gt; &gt;</type>
        <definition>std::map&lt;size_t, std::vector&lt;uint8_t *&gt; &gt; lbann::lbann_comm::collective_bufs</definition>
        <argsstring></argsstring>
        <name>collective_bufs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pre-allocated buffers for collectives. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="955" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="955" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1af17b1093313c5e4223f9036798f9e12f" compoundref="comm_8cpp" startline="78" endline="92">~lbann_comm</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" compoundref="comm_8cpp" startline="1064" endline="1084">get_collective_buffer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1ac7731d6bcdb6775009467cf4138d4bab" prot="private" static="no" mutable="no">
        <type><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019" kindref="member">allreduce_algorithm</ref></type>
        <definition>allreduce_algorithm lbann::lbann_comm::default_allreduce_algo</definition>
        <argsstring></argsstring>
        <name>default_allreduce_algo</name>
        <initializer>=
    <ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019a0fcc90da4811c877ba9f9c12f7d60bc9" kindref="member">allreduce_algorithm::DYNAMIC</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current default allreduce algorithm. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="957" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="957" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1aa4f15459eca2a06174a877ba0c23feb7" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::num_model_barriers</definition>
        <argsstring></argsstring>
        <name>num_model_barriers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="979" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="979" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a6086ced12c3eefeea6e2a78eff286983" compoundref="comm_8cpp" startline="258" endline="261">model_barrier</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a03d946ef5ea5d3b15351e78a2eed10fe" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::num_intermodel_barriers</definition>
        <argsstring></argsstring>
        <name>num_intermodel_barriers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="980" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="980" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a5834e95e066313d9328b22e4a0ec8663" compoundref="comm_8cpp" startline="253" endline="256">intermodel_barrier</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a4f01e2f2d8220dc34cf39eb4a255cd7d" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::num_global_barriers</definition>
        <argsstring></argsstring>
        <name>num_global_barriers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="981" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="981" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1ae12af95f4826571efa03fb8520260daa" compoundref="comm_8cpp" startline="263" endline="266">global_barrier</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::bytes_sent</definition>
        <argsstring></argsstring>
        <name>bytes_sent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="982" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="982" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a68b36ba64db34f33cb135bc64c4623e0" compoundref="comm_8cpp" startline="132" endline="136">intermodel_sum_matrix</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1adaff1e6549a3fb902c85f1be2718c1ff" compoundref="comm_8cpp" startline="142" endline="175">allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a2a7bb6cf3707366fc0671d8894ca30ea" compoundref="comm_8cpp" startline="177" endline="213">nb_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" compoundref="comm_8cpp" startline="376" endline="431">recursive_doubling_allreduce_pow2</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::bytes_received</definition>
        <argsstring></argsstring>
        <name>bytes_received</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="983" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="983" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a68b36ba64db34f33cb135bc64c4623e0" compoundref="comm_8cpp" startline="132" endline="136">intermodel_sum_matrix</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1adaff1e6549a3fb902c85f1be2718c1ff" compoundref="comm_8cpp" startline="142" endline="175">allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a2a7bb6cf3707366fc0671d8894ca30ea" compoundref="comm_8cpp" startline="177" endline="213">nb_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" compoundref="comm_8cpp" startline="376" endline="431">recursive_doubling_allreduce_pow2</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::ar_bytes_sent</definition>
        <argsstring></argsstring>
        <name>ar_bytes_sent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="985" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="985" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" compoundref="comm_8cpp" startline="376" endline="431">recursive_doubling_allreduce_pow2</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::ar_bytes_received</definition>
        <argsstring></argsstring>
        <name>ar_bytes_received</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="986" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="986" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" compoundref="comm_8cpp" startline="376" endline="431">recursive_doubling_allreduce_pow2</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1ac74bcfb565c1bb6604f336c6d1b647cc" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::ar_rs_bytes_sent</definition>
        <argsstring></argsstring>
        <name>ar_rs_bytes_sent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="987" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="987" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a2c3e1db0f6d2345748132322b0555db7" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::ar_rs_bytes_received</definition>
        <argsstring></argsstring>
        <name>ar_rs_bytes_received</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="988" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="988" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a2cfe1264a83865360692c48d7869fe67" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::ar_ag_bytes_sent</definition>
        <argsstring></argsstring>
        <name>ar_ag_bytes_sent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="989" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="989" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1afded6f478dc5021d1edec306dc6c528c" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::ar_ag_bytes_received</definition>
        <argsstring></argsstring>
        <name>ar_ag_bytes_received</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="990" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="990" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1aa57d2fbeef85fd8a3c9f2a37ca7687c8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lbann::lbann_comm::ar_time</definition>
        <argsstring></argsstring>
        <name>ar_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="991" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="991" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" compoundref="comm_8cpp" startline="376" endline="431">recursive_doubling_allreduce_pow2</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a85022d803e339eb14a15129a07876c2b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lbann::lbann_comm::ar_rs_time</definition>
        <argsstring></argsstring>
        <name>ar_rs_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="992" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="992" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a48768342eb05c1c6cdaa52c3599b93c8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lbann::lbann_comm::ar_ag_time</definition>
        <argsstring></argsstring>
        <name>ar_ag_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="993" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="993" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a4e3d35520a8f567579f9235e9808ba1c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lbann::lbann_comm::ar_send_transform_time</definition>
        <argsstring></argsstring>
        <name>ar_send_transform_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="994" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="994" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" compoundref="comm_8cpp" startline="376" endline="431">recursive_doubling_allreduce_pow2</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1adb393f47d60eaa59bace80d2d3dd3bf2" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lbann::lbann_comm::ar_recv_transform_time</definition>
        <argsstring></argsstring>
        <name>ar_recv_transform_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="995" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="995" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1aa642b0ae2321fa464b0092da527f6375" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lbann::lbann_comm::ar_recv_apply_transform_time</definition>
        <argsstring></argsstring>
        <name>ar_recv_apply_transform_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="996" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="996" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" compoundref="comm_8cpp" startline="376" endline="431">recursive_doubling_allreduce_pow2</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lbann::lbann_comm::ar_send_time</definition>
        <argsstring></argsstring>
        <name>ar_send_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="997" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="997" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" compoundref="comm_8cpp" startline="376" endline="431">recursive_doubling_allreduce_pow2</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lbann::lbann_comm::ar_recv_time</definition>
        <argsstring></argsstring>
        <name>ar_recv_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="998" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="998" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" compoundref="comm_8cpp" startline="376" endline="431">recursive_doubling_allreduce_pow2</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1aaadab22d368e8004a9877828a3bc9e93" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lbann::lbann_comm::ar_rs_send_time</definition>
        <argsstring></argsstring>
        <name>ar_rs_send_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="999" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="999" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1adefa0ee8b0a6b74072448e20d40f502d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lbann::lbann_comm::ar_rs_recv_time</definition>
        <argsstring></argsstring>
        <name>ar_rs_recv_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="1000" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="1000" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a64cb0b86e9368c1d83370ba6cb0083ba" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lbann::lbann_comm::ar_ag_send_time</definition>
        <argsstring></argsstring>
        <name>ar_ag_send_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="1001" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="1001" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__comm_1a1896c3ecd1d5b084497c6ed47c1c9bae" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lbann::lbann_comm::ar_ag_recv_time</definition>
        <argsstring></argsstring>
        <name>ar_ag_recv_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="1002" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="1002" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a63eae73674cbadea2eff8b6595322336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_comm::lbann_comm</definition>
        <argsstring>(int procs_per_model=0, const El::mpi::Comm world=El::mpi::COMM_WORLD)</argsstring>
        <name>lbann_comm</name>
        <param>
          <type>int</type>
          <declname>procs_per_model</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>world</declname>
          <defval>El::mpi::COMM_WORLD</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init communicators for models each with procs_per_model processes, defaulting to every process in one model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="96" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="56" bodyend="76"/>
        <references refid="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" compoundref="comm_8cpp" startline="94" endline="130">split_models</references>
        <references refid="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" compoundref="comm_8hpp" startline="937">procs_per_model</references>
        <references refid="classlbann_1_1lbann__comm_1a44bc6b8683f04c2a3fc2f01fc734a946" compoundref="comm_8cpp" startline="1005" endline="1045">setup_node_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a2ffc59f0c1d97df2ca6845312c8c8b3e" compoundref="comm_8hpp" startline="943">procs_per_node</references>
        <references refid="classlbann_1_1lbann__comm_1a8aeb530ae4cedfa4d1141bb9c4704e6c" compoundref="comm_8hpp" startline="931">node_comm</references>
        <references refid="classlbann_1_1lbann__comm_1abb5c8b008b5cac11702bf1f991c78ab0" compoundref="comm_8hpp" startline="945">rank_in_node</references>
        <references refid="classlbann_1_1lbann__comm_1a597189b10f61947580f97fb8d1da7355" compoundref="comm_8cpp" startline="1047" endline="1056">setup_threads</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a198a6066e7908941898e07ebd62f8d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_comm::lbann_comm</definition>
        <argsstring>(const lbann_comm &amp;)=delete</argsstring>
        <name>lbann_comm</name>
        <param>
          <type>const <ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Don&apos;t allow copying; it doesn&apos;t make sense for the communicator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ae5373895ee134866be9f2b042a1cef21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> &amp;</type>
        <definition>lbann_comm&amp; lbann::lbann_comm::operator=</definition>
        <argsstring>(const lbann_comm &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Don&apos;t allow assignment; it doesn&apos;t make sense for the communicator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1af17b1093313c5e4223f9036798f9e12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_comm::~lbann_comm</definition>
        <argsstring>()</argsstring>
        <name>~lbann_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="102" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="78" bodyend="92"/>
        <references refid="classlbann_1_1lbann__comm_1a29fb31be115db3225b145f250a7778d9" compoundref="comm_8hpp" startline="933">grid</references>
        <references refid="classlbann_1_1lbann__comm_1a58a75b76bd61ec8a26c1cbbec3dc2f45" compoundref="comm_8hpp" startline="927">model_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" compoundref="comm_8hpp" startline="929">intermodel_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a8aeb530ae4cedfa4d1141bb9c4704e6c" compoundref="comm_8hpp" startline="931">node_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" compoundref="comm_8hpp" startline="955">collective_bufs</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::split_models</definition>
        <argsstring>(int procs_per_model)</argsstring>
        <name>split_models</name>
        <param>
          <type>int</type>
          <declname>procs_per_model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Split communicators so each model has procs_per_model processes. If you call this multiple times, it will invalidate existing grids and communicators. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="109" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="94" bodyend="130"/>
        <references refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" compoundref="comm_8hpp" startline="891" endline="893">get_world_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" compoundref="comm_8hpp" startline="937">procs_per_model</references>
        <references refid="classlbann_1_1lbann__comm_1a256ff5a0bafb33f43784ffc8dd2d29cf" compoundref="comm_8hpp" startline="935">num_models</references>
        <references refid="classlbann_1_1lbann__comm_1a1f3f90a996dbba4cd1cca60596933ea3" compoundref="comm_8hpp" startline="939">model_rank</references>
        <references refid="classlbann_1_1lbann__comm_1a0dcccd57c2b591eb7682e192e0a09033" compoundref="comm_8hpp" startline="941">rank_in_model</references>
        <references refid="classlbann_1_1lbann__comm_1a58a75b76bd61ec8a26c1cbbec3dc2f45" compoundref="comm_8hpp" startline="927">model_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" compoundref="comm_8hpp" startline="929">intermodel_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a29fb31be115db3225b145f250a7778d9" compoundref="comm_8hpp" startline="933">grid</references>
        <referencedby refid="classlbann_1_1lbann__comm_1a63eae73674cbadea2eff8b6595322336" compoundref="comm_8cpp" startline="56" endline="76">lbann_comm</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::lbann_comm::get_model_rank</definition>
        <argsstring>() const</argsstring>
        <name>get_model_rank</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get which model this process is in. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="112" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="112" bodyend="114"/>
        <referencedby refid="classlbann_1_1generic__input__layer_1ae74c8c5a7e14b4fdd4902554bbc7bcef" compoundref="generic__input__layer_8hpp" startline="198" endline="241">lbann::generic_input_layer::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__init_1a037f1371c56c1b528f487517a58ce3fb" compoundref="callback__check__init_8cpp" startline="34" endline="72">lbann::lbann_callback_check_init::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a335713a3df9194f657f98cccd2f695f5" compoundref="callback__checknan_8cpp" startline="99" endline="132">lbann::lbann_callback_checknan::dump_network</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac3e88ef582a7e3949b6e016ca2b17459" compoundref="callback__debug_8cpp" startline="37" endline="41">lbann::lbann_callback_debug::on_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1acb3d05be6c600f4d61957ccf10606ddc" compoundref="callback__debug_8cpp" startline="43" endline="47">lbann::lbann_callback_debug::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1adaf60c995d2638a40d9c87a923c53865" compoundref="callback__debug_8cpp" startline="49" endline="53">lbann::lbann_callback_debug::on_backward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19a8ec63f55fc86024c9ab8fe0836500" compoundref="callback__debug_8cpp" startline="55" endline="59">lbann::lbann_callback_debug::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac364fb6e77dc163e146af77bb670d74b" compoundref="callback__debug_8cpp" startline="64" endline="79">lbann::lbann_callback_debug::on_batch_evaluate_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a07a02eb525ebe9c06b361c48fc2977c8" compoundref="callback__debug_8cpp" startline="81" endline="96">lbann::lbann_callback_debug::on_batch_evaluate_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a83fe16882119a54afe59ba616fe1722a" compoundref="callback__debug_8cpp" startline="98" endline="113">lbann::lbann_callback_debug::on_evaluate_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19639823e288e7599947c0abfaa6d1f4" compoundref="callback__debug_8cpp" startline="115" endline="130">lbann::lbann_callback_debug::on_evaluate_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a3c9897a583441381f82a11246aea4424" compoundref="callback__debug__io_8cpp" startline="54" endline="84">lbann::lbann_callback_debug_io::print_fp_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a528f4aea5f657f40b27c58a164d4095a" compoundref="callback__debug__io_8cpp" startline="87" endline="143">lbann::lbann_callback_debug_io::print_phase_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__activations_1acf4429a44ead6ffea303528618bc6572" compoundref="callback__dump__activations_8cpp" startline="35" endline="55">lbann::lbann_callback_dump_activations::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__activations_1a5c93f4455b743e3f61600bf092a6d93c" compoundref="callback__dump__activations_8cpp" startline="57" endline="75">lbann::lbann_callback_dump_activations::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__gradients_1a2485599f66842eda62c8bc8d4d44ef02" compoundref="callback__dump__gradients_8cpp" startline="34" endline="48">lbann::lbann_callback_dump_gradients::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__minibatch__sample__indices_1a34d4564309168b3ab0b2e3092e2f9355" compoundref="callback__dump__minibatch__sample__indices_8cpp" startline="37" endline="58">lbann::lbann_callback_dump_minibatch_sample_indices::dump_to_file</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__weights_1a5902fb87255b410a5d777ea385813416" compoundref="callback__dump__weights_8cpp" startline="42" endline="56">lbann::lbann_callback_dump_weights::dump_weights</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__early__stopping_1a32eb9c5e763c97ab1162cfebea7ad049" compoundref="callback__early__stopping_8cpp" startline="38" endline="61">lbann::lbann_callback_early_stopping::on_validation_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__io_1a118c5cb8a9c83661a67569df890676e2" compoundref="callback__io_8cpp" startline="42" endline="63">lbann::lbann_callback_io::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__io_1a8abca84e4b0dc21b28e5d5e409446fdc" compoundref="callback__io_8cpp" startline="65" endline="86">lbann::lbann_callback_io::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__learning__rate_1ab8eb509bdbea501882d6b248a814bb28" compoundref="callback__learning__rate_8cpp" startline="66" endline="83">lbann::lbann_callback_learning_rate::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__ltfb_1a7d2d1682c4a6a6b7e8ea1e3f4bf33c84" compoundref="callback__ltfb_8cpp" startline="156" endline="202">lbann::lbann_callback_ltfb::on_batch_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timeline_1a7af247d7f016db358da0a57f8a4b76c6" compoundref="callback__timeline_8cpp" startline="49" endline="72">lbann::lbann_callback_timeline::on_train_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__variable__minibatch_1a091e7563b5a7a90638e2521fe39cbf8f" compoundref="callback__variable__minibatch_8cpp" startline="66" endline="125">lbann::lbann_callback_variable_minibatch::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1aa1f5200f9646d38fe3b3adaf39645330" compoundref="distributed__io__buffer_8cpp" startline="284" endline="286">lbann::distributed_io_buffer::calculate_num_iterations_per_epoch_spanning_models</referencedby>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a50b6e2b7a82927526758f7cfb18a1ded" compoundref="partitioned__io__buffer_8cpp" startline="104" endline="196">lbann::partitioned_io_buffer::calculate_num_iterations_per_epoch_spanning_models</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::lbann_comm::get_rank_in_model</definition>
        <argsstring>() const</argsstring>
        <name>get_rank_in_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the rank of this process in its model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="116" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="116" bodyend="118"/>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a8cbc105d8bd9d3b493ef34de7c387929" compoundref="callback__check__dataset_8cpp" startline="77" endline="143">lbann::lbann_callback_check_dataset::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a9bcb1368152c621c4484136ec8eecff8" compoundref="callback__check__dataset_8cpp" startline="145" endline="155">lbann::lbann_callback_check_dataset::on_validation_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1afe1fda5a6bfe632dc680230cc56dff3e" compoundref="callback__check__dataset_8cpp" startline="157" endline="160">lbann::lbann_callback_check_dataset::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__init_1a037f1371c56c1b528f487517a58ce3fb" compoundref="callback__check__init_8cpp" startline="34" endline="72">lbann::lbann_callback_check_init::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a335713a3df9194f657f98cccd2f695f5" compoundref="callback__checknan_8cpp" startline="99" endline="132">lbann::lbann_callback_checknan::dump_network</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac3e88ef582a7e3949b6e016ca2b17459" compoundref="callback__debug_8cpp" startline="37" endline="41">lbann::lbann_callback_debug::on_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1acb3d05be6c600f4d61957ccf10606ddc" compoundref="callback__debug_8cpp" startline="43" endline="47">lbann::lbann_callback_debug::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1adaf60c995d2638a40d9c87a923c53865" compoundref="callback__debug_8cpp" startline="49" endline="53">lbann::lbann_callback_debug::on_backward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19a8ec63f55fc86024c9ab8fe0836500" compoundref="callback__debug_8cpp" startline="55" endline="59">lbann::lbann_callback_debug::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac364fb6e77dc163e146af77bb670d74b" compoundref="callback__debug_8cpp" startline="64" endline="79">lbann::lbann_callback_debug::on_batch_evaluate_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a07a02eb525ebe9c06b361c48fc2977c8" compoundref="callback__debug_8cpp" startline="81" endline="96">lbann::lbann_callback_debug::on_batch_evaluate_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a83fe16882119a54afe59ba616fe1722a" compoundref="callback__debug_8cpp" startline="98" endline="113">lbann::lbann_callback_debug::on_evaluate_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19639823e288e7599947c0abfaa6d1f4" compoundref="callback__debug_8cpp" startline="115" endline="130">lbann::lbann_callback_debug::on_evaluate_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1aa31ee265d40edff982ebf38054394927" compoundref="callback__debug__io_8cpp" startline="38" endline="52">lbann::lbann_callback_debug_io::on_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a3c9897a583441381f82a11246aea4424" compoundref="callback__debug__io_8cpp" startline="54" endline="84">lbann::lbann_callback_debug_io::print_fp_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a528f4aea5f657f40b27c58a164d4095a" compoundref="callback__debug__io_8cpp" startline="87" endline="143">lbann::lbann_callback_debug_io::print_phase_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1ac9b36fc36ab6faa9de44db026addf02a" compoundref="callback__debug__io_8cpp" startline="154" endline="165">lbann::lbann_callback_debug_io::on_evaluate_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__minibatch__sample__indices_1a34d4564309168b3ab0b2e3092e2f9355" compoundref="callback__dump__minibatch__sample__indices_8cpp" startline="37" endline="58">lbann::lbann_callback_dump_minibatch_sample_indices::dump_to_file</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__io_1a118c5cb8a9c83661a67569df890676e2" compoundref="callback__io_8cpp" startline="42" endline="63">lbann::lbann_callback_io::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__io_1a8abca84e4b0dc21b28e5d5e409446fdc" compoundref="callback__io_8cpp" startline="65" endline="86">lbann::lbann_callback_io::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timeline_1a7af247d7f016db358da0a57f8a4b76c6" compoundref="callback__timeline_8cpp" startline="49" endline="72">lbann::lbann_callback_timeline::on_train_end</referencedby>
        <referencedby refid="classlbann_1_1pilot2__molecular__reader_1a1b5160021a532f5f19897bd2250e3a46" compoundref="data__reader__pilot2__molecular_8cpp" startline="39" endline="155">lbann::pilot2_molecular_reader::load</referencedby>
        <referencedby refid="classlbann_1_1generic__data__store_1acbcd88161c06f4bb9a70bbae857d4ee0" compoundref="generic__data__store_8cpp" startline="39" endline="65">lbann::generic_data_store::generic_data_store</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1abfeb87d4dc402b482db60926ca9b3ec1" compoundref="distributed__io__buffer_8cpp" startline="38" endline="59">lbann::distributed_io_buffer::fetch_to_local_matrix</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1a3a770ec2314313761d6f0eccdb9dc09b" compoundref="distributed__io__buffer_8cpp" startline="61" endline="88">lbann::distributed_io_buffer::distribute_from_local_matrix</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1a2e214f6542d9b12c8a29bf41d0ee220e" compoundref="distributed__io__buffer_8cpp" startline="90" endline="122">lbann::distributed_io_buffer::is_data_set_processed</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1af63a8b162ed869393c5b604c5913c631" compoundref="distributed__io__buffer_8cpp" startline="159" endline="282">lbann::distributed_io_buffer::calculate_num_iterations_per_epoch</referencedby>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a777719c9cebe912dc4c005e2c78d77c8" compoundref="partitioned__io__buffer_8cpp" startline="34" endline="53">lbann::partitioned_io_buffer::fetch_to_local_matrix</referencedby>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a50b6e2b7a82927526758f7cfb18a1ded" compoundref="partitioned__io__buffer_8cpp" startline="104" endline="196">lbann::partitioned_io_buffer::calculate_num_iterations_per_epoch_spanning_models</referencedby>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1ad707e54827d6e537127341b10407b716" compoundref="partitioned__io__buffer_8cpp" startline="198" endline="243">lbann::partitioned_io_buffer::calculate_num_iterations_per_epoch_single_model</referencedby>
        <referencedby refid="namespacelbann_1acef152f20e422b3aea1a3c1691a533ac" compoundref="random_8cpp" startline="106" endline="145">lbann::init_random</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a4519335d6772dab3c36517618260d48a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::lbann_comm::get_rank_in_world</definition>
        <argsstring>() const</argsstring>
        <name>get_rank_in_world</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get my rank in COMM_WORLD. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="120" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="120" bodyend="122"/>
        <referencedby refid="classlbann_1_1lbann__callback__hang_1ada39fd10375143a26c99e0a32d4368ce" compoundref="callback__hang_8hpp" startline="53" endline="60">lbann::lbann_callback_hang::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a09388ae76566a6a93c957ab76cd54dcd" compoundref="callback__checknan_8cpp" startline="35" endline="49">lbann::lbann_callback_checknan::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a40d9a9fcc5849746570b99321e1c5488" compoundref="callback__checknan_8cpp" startline="51" endline="64">lbann::lbann_callback_checknan::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a1d1b3b082aa49016e7b80e0f267575da" compoundref="callback__checknan_8cpp" startline="66" endline="78">lbann::lbann_callback_checknan::on_batch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checksmall_1a2f50695feb1444145bae251f2e94b721" compoundref="callback__checksmall_8cpp" startline="35" endline="48">lbann::lbann_callback_checksmall::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checksmall_1aade56a328c4b9df28c0cd979eed9e5ff" compoundref="callback__checksmall_8cpp" startline="50" endline="62">lbann::lbann_callback_checksmall::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checksmall_1a00f1e6ad712638a107667a3e6695a6f0" compoundref="callback__checksmall_8cpp" startline="64" endline="75">lbann::lbann_callback_checksmall::on_batch_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ab3b1ebe8b72575094405eb2e37bb447d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::lbann_comm::get_world_rank</definition>
        <argsstring>(int model, int rank) const</argsstring>
        <name>get_world_rank</name>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the COMM_WORLD rank of the rank&apos;th processor in model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="124" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a96d8d7a0ff8ee1511f8c8b8fa92628af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::lbann_comm::get_model_master</definition>
        <argsstring>() const</argsstring>
        <name>get_model_master</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the rank of the master process in this model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="128" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="128" bodyend="130"/>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a8cbc105d8bd9d3b493ef34de7c387929" compoundref="callback__check__dataset_8cpp" startline="77" endline="143">lbann::lbann_callback_check_dataset::on_epoch_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1adbd99fe6c8df2689217c9ee16d6234d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::lbann_comm::get_intermodel_master</definition>
        <argsstring>() const</argsstring>
        <name>get_intermodel_master</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the rank of the inter-model master process. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="132" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="132" bodyend="134"/>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">lbann::lbann_callback_print::report_results</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timer_1a955e59858c6803e96b21fe494cdf3971" compoundref="callback__timer_8cpp" startline="52" endline="166">lbann::lbann_callback_timer::timing_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aa682313f366e0b7cf781bc1872911f65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::lbann_comm::get_world_master</definition>
        <argsstring>() const</argsstring>
        <name>get_world_master</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the rank of the world master process. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="136" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="136" bodyend="138"/>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">lbann::lbann_callback_print::report_results</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ad8a5790dfa9191d4b4f889e8707e57f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::lbann_comm::am_model_master</definition>
        <argsstring>() const</argsstring>
        <name>am_model_master</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if this process is the master process in its model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="140" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="140" bodyend="142"/>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a8cbc105d8bd9d3b493ef34de7c387929" compoundref="callback__check__dataset_8cpp" startline="77" endline="143">lbann::lbann_callback_check_dataset::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__reconstruction__error_1a8a6a72b8016d3ba3ad11b5e7e2f3f5df" compoundref="callback__check__reconstruction__error_8cpp" startline="38" endline="47">lbann::lbann_callback_check_reconstruction_error::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__early__stopping_1a32eb9c5e763c97ab1162cfebea7ad049" compoundref="callback__early__stopping_8cpp" startline="38" endline="61">lbann::lbann_callback_early_stopping::on_validation_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__learning__rate_1ab8eb509bdbea501882d6b248a814bb28" compoundref="callback__learning__rate_8cpp" startline="66" endline="83">lbann::lbann_callback_learning_rate::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__ltfb_1a7d2d1682c4a6a6b7e8ea1e3f4bf33c84" compoundref="callback__ltfb_8cpp" startline="156" endline="202">lbann::lbann_callback_ltfb::on_batch_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">lbann::lbann_callback_print::report_results</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timer_1a955e59858c6803e96b21fe494cdf3971" compoundref="callback__timer_8cpp" startline="52" endline="166">lbann::lbann_callback_timer::timing_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__variable__minibatch_1a091e7563b5a7a90638e2521fe39cbf8f" compoundref="callback__variable__minibatch_8cpp" startline="66" endline="125">lbann::lbann_callback_variable_minibatch::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1af6653723714cf8cf51a928fc9f6e6728" compoundref="distributed__io__buffer_8cpp" startline="127" endline="157">lbann::distributed_io_buffer::compute_max_num_parallel_readers</referencedby>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a5048100fb7cdc13908ecba6b4415b977" compoundref="partitioned__io__buffer_8cpp" startline="74" endline="102">lbann::partitioned_io_buffer::compute_max_num_parallel_readers</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::lbann_comm::am_world_master</definition>
        <argsstring>() const</argsstring>
        <name>am_world_master</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if this process is the world master process. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="144" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="144" bodyend="146"/>
        <referencedby refid="classlbann_1_1generic__data__reader_1a39f4d80661a2c8e24d8d167ad5bd6c6b" compoundref="data__reader_8hpp" startline="98" endline="101">lbann::generic_data_reader::set_comm</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__init_1a037f1371c56c1b528f487517a58ce3fb" compoundref="callback__check__init_8cpp" startline="34" endline="72">lbann::lbann_callback_check_init::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checkpoint_1a2e5f396667ccc45f7203263b06c5e216" compoundref="callback__checkpoint_8cpp" startline="64" endline="106">lbann::lbann_callback_checkpoint::need_checkpoint</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checkpoint_1a23b6f5abb924b2c4d0694e98c7d6f4d5" compoundref="callback__checkpoint_8cpp" startline="145" endline="202">lbann::lbann_callback_checkpoint::checkpointShared</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checkpoint_1a40d369278bc5963ba2f3cca1750ba004" compoundref="callback__checkpoint_8cpp" startline="203" endline="256">lbann::lbann_callback_checkpoint::restartShared</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__gradient__check_1ab62102d5ab30330386514161b9ee6586" compoundref="callback__gradient__check_8cpp" startline="40" endline="180">lbann::lbann_callback_gradient_check::on_test_begin</referencedby>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a1865e25ff1f3b6ad417d1853ea0bc6f4" compoundref="callback__ltfb_8cpp" startline="43" endline="69">lbann::anonymous_namespace{callback_ltfb.cpp}::assign_partners</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__ltfb_1a7d2d1682c4a6a6b7e8ea1e3f4bf33c84" compoundref="callback__ltfb_8cpp" startline="156" endline="202">lbann::lbann_callback_ltfb::on_batch_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a405e20e9fa137bd377faf692cc3c54aa" compoundref="callback__print_8cpp" startline="36" endline="44">lbann::lbann_callback_print::setup</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1ae3c99d7c56ac33ab7e09880134b43cad" compoundref="callback__print_8cpp" startline="46" endline="116">lbann::lbann_callback_print::on_epoch_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">lbann::lbann_callback_print::report_results</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__save__images_1ab84c4d511a4614ca90644d12dc77edee" compoundref="callback__save__images_8cpp" startline="67" endline="99">lbann::lbann_callback_save_images::save_image</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__save__model_1ae047ee35b65e9bda4080a83833612699" compoundref="callback__save__model_8cpp" startline="41" endline="49">lbann::lbann_callback_save_model::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timer_1a955e59858c6803e96b21fe494cdf3971" compoundref="callback__timer_8cpp" startline="52" endline="166">lbann::lbann_callback_timer::timing_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__variable__minibatch_1a4f5d8ab04ab3e1cc3aa66327d3712f51" compoundref="callback__variable__minibatch_8cpp" startline="40" endline="64">lbann::lbann_callback_variable_minibatch::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1af6653723714cf8cf51a928fc9f6e6728" compoundref="distributed__io__buffer_8cpp" startline="127" endline="157">lbann::distributed_io_buffer::compute_max_num_parallel_readers</referencedby>
        <referencedby refid="classlbann_1_1model_1a989ab581e359f65c9238d627cce5b589" compoundref="model_8cpp" startline="457" endline="466">lbann::model::setup_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1a488da86420421a4890c8fd7a95849acc" compoundref="model_8cpp" startline="1211" endline="1215">lbann::model::write_proto</referencedby>
        <referencedby refid="classlbann_1_1recurrent__model_1a712dabb1c1e90f6e268b42f6abaedd93" compoundref="recurrent_8cpp" startline="395" endline="442">lbann::recurrent_model::setup_layers</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1a53a83327a1115a53affa78c93344e641" compoundref="sequential_8cpp" startline="152" endline="163">lbann::sequential_model::write_proto</referencedby>
        <referencedby refid="classlbann_1_1siamese__model_1afefdbaf473d40e571b2b58539001c9c0" compoundref="siamese_8cpp" startline="148" endline="158">lbann::siamese_model::setup_layers</referencedby>
        <referencedby refid="namespacelbann_1_1proto_1a00597c8b7450c389847980cf6934a619" compoundref="callback__factory_8cpp" startline="54" endline="312">lbann::proto::construct_callback</referencedby>
        <referencedby refid="namespacelbann_1_1proto_1abf0988db9cd58f9ef013588b440c14bd" compoundref="callback__factory_8cpp" startline="314" endline="340">lbann::proto::construct_summarizer</referencedby>
        <referencedby refid="namespacelbann_1_1proto_1a99e65cd4abb769d020ab76ff20c39d0b" compoundref="layer__graph__factory_8cpp" startline="156" endline="260">lbann::proto::construct_layer_graph</referencedby>
        <referencedby refid="proto__common_8hpp_1a9a9d7504db9e1b819fcddac197da3252" compoundref="proto__common_8cpp" startline="18" endline="30">has_motifs</referencedby>
        <referencedby refid="proto__common_8hpp_1a9454e517d698ec0960588364b9b42d6a" compoundref="proto__common_8cpp" startline="32" endline="39">expand_motifs</referencedby>
        <referencedby refid="proto__common_8hpp_1a32d4c032abc19c091fa65ace580fc057" compoundref="proto__common_8cpp" startline="41" endline="270">init_data_readers</referencedby>
        <referencedby refid="proto__common_8hpp_1ae5ac4c13a36b3222afacd8d7b4786140" compoundref="proto__common_8cpp" startline="311" endline="330">set_num_parallel_readers</referencedby>
        <referencedby refid="proto__common_8hpp_1a46fd41f635ff8f352065adc85eb3d1df" compoundref="proto__common_8cpp" startline="386" endline="539">get_cmdline_overrides</referencedby>
        <referencedby refid="proto__common_8hpp_1adf83ffea572cec61b853b61aa68bea27" compoundref="proto__common_8cpp" startline="541" endline="601">print_parameters</referencedby>
        <referencedby refid="proto__common_8hpp_1a403b98ced142a0afa3b939e7af1095b0" compoundref="proto__common_8cpp" startline="603" endline="679">print_help</referencedby>
        <referencedby refid="proto__common_8hpp_1a4f1af470c45e9ed06039685e5f72ea4a" compoundref="proto__common_8cpp" startline="695" endline="779">save_session</referencedby>
        <referencedby refid="classlbann_1_1weights_1a1a2631987f38d32a90fbee61053a04cc" compoundref="weights_8cpp" startline="472" endline="505">lbann::weights::write_proto</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a483bf8a72d44a0e83da45f3d47bd20d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="base_8hpp_1a9951bb1719d534e0401b1f06cad19eab" kindref="member">Grid</ref> &amp;</type>
        <definition>Grid&amp; lbann::lbann_comm::get_model_grid</definition>
        <argsstring>()</argsstring>
        <name>get_model_grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a grid to use for this model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="148" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="148" bodyend="150"/>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1af6653723714cf8cf51a928fc9f6e6728" compoundref="distributed__io__buffer_8cpp" startline="127" endline="157">lbann::distributed_io_buffer::compute_max_num_parallel_readers</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" compoundref="layer_8cpp" startline="501" endline="509">lbann::Layer::setup</referencedby>
        <referencedby refid="classlbann_1_1weights__initializer_1a693fd517e4162029eafdfdee537c7066" compoundref="initializer_8cpp" startline="34" endline="74">lbann::weights_initializer::construct_matrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::lbann_comm::get_num_models</definition>
        <argsstring>() const</argsstring>
        <name>get_num_models</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the total number of models. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="152" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="152" bodyend="154"/>
        <referencedby refid="classlbann_1_1lbann__callback__check__init_1a037f1371c56c1b528f487517a58ce3fb" compoundref="callback__check__init_8cpp" startline="34" endline="72">lbann::lbann_callback_check_init::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a528f4aea5f657f40b27c58a164d4095a" compoundref="callback__debug__io_8cpp" startline="87" endline="143">lbann::lbann_callback_debug_io::print_phase_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a332ba4ceca91939c79fae2735fdc8ff3" compoundref="callback__imcomm_8cpp" startline="111" endline="122">lbann::lbann_callback_imcomm::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a3160dbf536def4f930e0ea0aabdebc11" compoundref="callback__imcomm_8cpp" startline="124" endline="154">lbann::lbann_callback_imcomm::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a0a425ba562f7637b25cd6ba094e7885b" compoundref="callback__imcomm_8cpp" startline="156" endline="205">lbann::lbann_callback_imcomm::on_backward_prop_end</referencedby>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a1865e25ff1f3b6ad417d1853ea0bc6f4" compoundref="callback__ltfb_8cpp" startline="43" endline="69">lbann::anonymous_namespace{callback_ltfb.cpp}::assign_partners</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">lbann::lbann_callback_print::report_results</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timer_1a955e59858c6803e96b21fe494cdf3971" compoundref="callback__timer_8cpp" startline="52" endline="166">lbann::lbann_callback_timer::timing_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a34d5414f1ac4749e6f0937b638bb5cc6" compoundref="comm_8cpp" startline="325" endline="374">intermodel_allreduce</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1af6653723714cf8cf51a928fc9f6e6728" compoundref="distributed__io__buffer_8cpp" startline="127" endline="157">lbann::distributed_io_buffer::compute_max_num_parallel_readers</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1aa1f5200f9646d38fe3b3adaf39645330" compoundref="distributed__io__buffer_8cpp" startline="284" endline="286">lbann::distributed_io_buffer::calculate_num_iterations_per_epoch_spanning_models</referencedby>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a50b6e2b7a82927526758f7cfb18a1ded" compoundref="partitioned__io__buffer_8cpp" startline="104" endline="196">lbann::partitioned_io_buffer::calculate_num_iterations_per_epoch_spanning_models</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::lbann_comm::get_procs_per_model</definition>
        <argsstring>() const</argsstring>
        <name>get_procs_per_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="156" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="156" bodyend="158"/>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a8cbc105d8bd9d3b493ef34de7c387929" compoundref="callback__check__dataset_8cpp" startline="77" endline="143">lbann::lbann_callback_check_dataset::on_epoch_end</referencedby>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a1865e25ff1f3b6ad417d1853ea0bc6f4" compoundref="callback__ltfb_8cpp" startline="43" endline="69">lbann::anonymous_namespace{callback_ltfb.cpp}::assign_partners</referencedby>
        <referencedby refid="classlbann_1_1data__reader__merge__samples_1ad45275b73fcbca47b74a9c9767f69bc9" compoundref="data__reader__merge__samples_8cpp" startline="55" endline="85">lbann::data_reader_merge_samples::load_using_data_store</referencedby>
        <referencedby refid="classlbann_1_1generic__data__store_1acbcd88161c06f4bb9a70bbae857d4ee0" compoundref="generic__data__store_8cpp" startline="39" endline="65">lbann::generic_data_store::generic_data_store</referencedby>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a5048100fb7cdc13908ecba6b4415b977" compoundref="partitioned__io__buffer_8cpp" startline="74" endline="102">lbann::partitioned_io_buffer::compute_max_num_parallel_readers</referencedby>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a50b6e2b7a82927526758f7cfb18a1ded" compoundref="partitioned__io__buffer_8cpp" startline="104" endline="196">lbann::partitioned_io_buffer::calculate_num_iterations_per_epoch_spanning_models</referencedby>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1ad707e54827d6e537127341b10407b716" compoundref="partitioned__io__buffer_8cpp" startline="198" endline="243">lbann::partitioned_io_buffer::calculate_num_iterations_per_epoch_single_model</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">lbann::Layer::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">lbann::Layer::get_bp_output</referencedby>
        <referencedby refid="proto__common_8hpp_1ae5ac4c13a36b3222afacd8d7b4786140" compoundref="proto__common_8cpp" startline="311" endline="330">set_num_parallel_readers</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ac5ccd63337b0cbb2fd730fddd9f8da3e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::lbann_comm::get_procs_per_node</definition>
        <argsstring>() const</argsstring>
        <name>get_procs_per_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of processes in a compute node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="160" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a1eb92927a8f8bcbdd677ccecc1a33c59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::lbann_comm::get_procs_in_world</definition>
        <argsstring>() const</argsstring>
        <name>get_procs_in_world</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the total number of ranks. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="164" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="164" bodyend="166"/>
        <referencedby refid="proto__common_8hpp_1a4f1af470c45e9ed06039685e5f72ea4a" compoundref="proto__common_8cpp" startline="695" endline="779">save_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1acebc5ff36fcb64c05f66757953aefb8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::lbann_comm::get_rank_in_node</definition>
        <argsstring>() const</argsstring>
        <name>get_rank_in_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the rank of this process within its compute node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="168" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a17ef6771432c3e91cd7d404d182ed531" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::lbann_comm::is_world_rank_on_node</definition>
        <argsstring>(int rank) const</argsstring>
        <name>is_world_rank_on_node</name>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if rank (in COMM_WORLD) is on this compute node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="172" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a3c60c211a663801b57197dddf58356da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::lbann_comm::get_default_threads_per_proc</definition>
        <argsstring>() const</argsstring>
        <name>get_default_threads_per_proc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get default number of threads per process. This is the number of OpenMP threads to use for parallel regions, provided omp_set_num_threads has not been called or the num_threads directive has not been provided. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="183" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="183" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a10f13918019cd2e021768e3388355ba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::reset_threads</definition>
        <argsstring>()</argsstring>
        <name>reset_threads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset the number of threads per process to the default. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="188" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="1058" bodyend="1062"/>
        <references refid="classlbann_1_1lbann__comm_1a23ff8e3563e4472af29d15f6cb823bc1" compoundref="comm_8hpp" startline="953">threads_per_proc</references>
        <referencedby refid="classlbann_1_1lbann__comm_1a597189b10f61947580f97fb8d1da7355" compoundref="comm_8cpp" startline="1047" endline="1056">setup_threads</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a68b36ba64db34f33cb135bc64c4623e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::intermodel_sum_matrix</definition>
        <argsstring>(Mat &amp;mat)</argsstring>
        <name>intermodel_sum_matrix</name>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform a sum reduction of mat over the inter-model communicator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="191" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="132" bodyend="136"/>
        <references refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" compoundref="comm_8hpp" startline="982">bytes_sent</references>
        <references refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" compoundref="comm_8hpp" startline="929">intermodel_comm</references>
        <references refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" compoundref="comm_8hpp" startline="983">bytes_received</references>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a3160dbf536def4f930e0ea0aabdebc11" compoundref="callback__imcomm_8cpp" startline="124" endline="154">lbann::lbann_callback_imcomm::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a0a425ba562f7637b25cd6ba094e7885b" compoundref="callback__imcomm_8cpp" startline="156" endline="205">lbann::lbann_callback_imcomm::on_backward_prop_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a55edcd98bf4903235ed11eb7c96f5eb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::intermodel_sum_matrix</definition>
        <argsstring>(AbsDistMat &amp;mat)</argsstring>
        <name>intermodel_sum_matrix</name>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="192" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="138" bodyend="140"/>
        <references refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" compoundref="comm_8hpp" startline="419" endline="424">allreduce</references>
        <references refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" compoundref="comm_8hpp" startline="929">intermodel_comm</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a4989229db1ee858c5a2170a989653d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::intermodel_broadcast_matrix</definition>
        <argsstring>(Mat &amp;mat, int root)</argsstring>
        <name>intermodel_broadcast_matrix</name>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Broadcast mat over the inter-model communicator starting from root. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="194" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="245" bodyend="247"/>
        <references refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" compoundref="comm_8hpp" startline="929">intermodel_comm</references>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a332ba4ceca91939c79fae2735fdc8ff3" compoundref="callback__imcomm_8cpp" startline="111" endline="122">lbann::lbann_callback_imcomm::on_train_begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a7fb6be066a634169cb41cef3f98032f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::intermodel_broadcast_matrix</definition>
        <argsstring>(AbsDistMat &amp;mat, int root)</argsstring>
        <name>intermodel_broadcast_matrix</name>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="195" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="249" bodyend="251"/>
        <references refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" compoundref="comm_8hpp" startline="929">intermodel_comm</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a158db6a85549d314be56806dcb442432" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T lbann::lbann_comm::intermodel_broadcast</definition>
        <argsstring>(int root, T val={})</argsstring>
        <name>intermodel_broadcast</name>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>T</type>
          <declname>val</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inter-model broadcast, returns the broadcast value. Root process specifies root and val, other processes just root. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="201" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="201" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a929f44a9a9563ae9e4ffe7d44235a195" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T lbann::lbann_comm::model_broadcast</definition>
        <argsstring>(int root, T val={})</argsstring>
        <name>model_broadcast</name>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>T</type>
          <declname>val</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Within-model broadcast, returns the broadcast value. Root process specifies root and val, other processes just root. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="215" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="215" bodyend="223"/>
        <referencedby refid="classlbann_1_1generic__input__layer_1ae74c8c5a7e14b4fdd4902554bbc7bcef" compoundref="generic__input__layer_8hpp" startline="198" endline="241">lbann::generic_input_layer::fp_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1af823b7ca3caccbd0710cd1435e60506b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T lbann::lbann_comm::broadcast</definition>
        <argsstring>(int root, const El::mpi::Comm c)</argsstring>
        <name>broadcast</name>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Broadcast over an arbitrary communicator, returns the broadcast value (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="229" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="229" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a34bb0766e57fda27e6618c9e66fec269" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T lbann::lbann_comm::broadcast</definition>
        <argsstring>(int root, T val, const El::mpi::Comm c)</argsstring>
        <name>broadcast</name>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Broadcast over an arbitrary communicator, returns the broadcast value (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="240" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="240" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ab7cdeca37f1fcd22a3b69f6134fb299f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::model_gather</definition>
        <argsstring>(T snd, int root)</argsstring>
        <name>model_gather</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Within-model scalar gather (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="247" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="247" bodyend="249"/>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a8cbc105d8bd9d3b493ef34de7c387929" compoundref="callback__check__dataset_8cpp" startline="77" endline="143">lbann::lbann_callback_check_dataset::on_epoch_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a54ee25dd95d57c0781ac0aa84d30ab8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::model_gather</definition>
        <argsstring>(T snd, T *rcv)</argsstring>
        <name>model_gather</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>rcv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Within-model scalar gather (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="252" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ab3d868497325882372e1a8d9f878cd2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::model_gather</definition>
        <argsstring>(T *snd, int count, int root)</argsstring>
        <name>model_gather</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Within-model scalar-array gather (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="257" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1adc1c96023f4546d57f0a85e905d070b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::model_gather</definition>
        <argsstring>(T *snd, int count, T *rcv)</argsstring>
        <name>model_gather</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>rcv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Within-model scalar-array gather (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="262" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="262" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a9d4eeae3b7ed19d48e95fc3f7138885b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::model_gatherv</definition>
        <argsstring>(T *snd, int count, int root)</argsstring>
        <name>model_gatherv</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Within-model variable-length-array gather (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="267" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="267" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a2752b91d60548d15320d5808d8c523d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::model_gatherv</definition>
        <argsstring>(T *snd, int count, T *rcv, int *rcv_counts, int *rcv_displacements)</argsstring>
        <name>model_gatherv</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>rcv</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rcv_counts</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rcv_displacements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="273" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="273" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a142c396a4d4a2c16ee234b813e7e45a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::intermodel_gather</definition>
        <argsstring>(T snd, int root)</argsstring>
        <name>intermodel_gather</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inter-model gather (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="283" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="283" bodyend="285"/>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">lbann::lbann_callback_print::report_results</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timer_1a955e59858c6803e96b21fe494cdf3971" compoundref="callback__timer_8cpp" startline="52" endline="166">lbann::lbann_callback_timer::timing_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aafaadde82ce60f467b5dcf014dc78481" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::intermodel_gather</definition>
        <argsstring>(T snd, std::vector&lt; T &gt; &amp;rcv)</argsstring>
        <name>intermodel_gather</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>rcv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inter-model gather (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="288" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a3fe4457945fb78769a69ac7f86e4bc11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::intermodel_gather</definition>
        <argsstring>(T *snd, int count, int root)</argsstring>
        <name>intermodel_gather</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inter-model scalar-array gather (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="293" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="293" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a954d59f6574884b9a6c7d5228e9460d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::intermodel_gather</definition>
        <argsstring>(T *snd, int count, T *rcv)</argsstring>
        <name>intermodel_gather</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>rcv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inter-model scalar-array gather (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="298" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="298" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aa784298e6ed0f9f01a20b179d5110df9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::gather</definition>
        <argsstring>(T snd, int root, const El::mpi::Comm c)</argsstring>
        <name>gather</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar gather (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="303" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="303" bodyend="306"/>
        <referencedby refid="classlbann_1_1top__k__categorical__accuracy__metric_1a3449bdb835e7e5bd7d17cd001fb4ae38" compoundref="top__k__categorical__accuracy_8cpp" startline="35" endline="115">lbann::top_k_categorical_accuracy_metric::evaluate_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ae4b572b9b6538ab148b3082f54514c19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::gather</definition>
        <argsstring>(T snd, T *rcv, const El::mpi::Comm c)</argsstring>
        <name>gather</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>rcv</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar gather (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="309" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a46a70202481a0b8bc5770f7174d8462f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::gather</definition>
        <argsstring>(T snd, std::vector&lt; T &gt; &amp;rcv, const El::mpi::Comm c)</argsstring>
        <name>gather</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>rcv</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar gather (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="315" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="315" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a6d9e9a16e30045690ea416bf25b77148" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::gather</definition>
        <argsstring>(T *snd, int count, int root, const El::mpi::Comm c)</argsstring>
        <name>gather</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar-array gather (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="320" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="320" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a90680b777bcecb4d24392b3300919066" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::gather</definition>
        <argsstring>(T *snd, int count, T *rcv, const El::mpi::Comm c)</argsstring>
        <name>gather</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>rcv</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar-array gather (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="326" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a74b5c594bfa5aec03af9ad2bd8f5e979" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T lbann::lbann_comm::scatter</definition>
        <argsstring>(int root, const El::mpi::Comm c)</argsstring>
        <name>scatter</name>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar scatter (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="332" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="332" bodyend="337"/>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a1865e25ff1f3b6ad417d1853ea0bc6f4" compoundref="callback__ltfb_8cpp" startline="43" endline="69">lbann::anonymous_namespace{callback_ltfb.cpp}::assign_partners</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a4918100a99e03a6bca3ec304cb282172" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T lbann::lbann_comm::scatter</definition>
        <argsstring>(T *snd, const El::mpi::Comm c)</argsstring>
        <name>scatter</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar scatter (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="340" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="340" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a485715aa8e0e05d9ced78346342692a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::intermodel_reduce</definition>
        <argsstring>(T snd, int root, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>intermodel_reduce</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inter-model reduce (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="348" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="348" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a4861b03da73bbc8fec61a10ebf129ee0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T lbann::lbann_comm::intermodel_reduce</definition>
        <argsstring>(T snd, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>intermodel_reduce</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inter-model reduce (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="353" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="353" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a4903dbabf8f649abc2734510d434eed2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::model_reduce</definition>
        <argsstring>(T snd, int root, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>model_reduce</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Within-model reduce (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="358" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="358" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aac992e520cfbfb5f7b403ee6c9334b0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T lbann::lbann_comm::model_reduce</definition>
        <argsstring>(T snd, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>model_reduce</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Within-model reduce (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="363" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="363" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aa605a57eb9132fc575e90b1ac825cf0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::model_reduce</definition>
        <argsstring>(T *snd, int count, int root, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>model_reduce</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Within-model scalar array reduce (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="368" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="368" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aba37a188f88277b23583aa8bea2e2f04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::model_reduce</definition>
        <argsstring>(T *snd, int count, T *rcv, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>model_reduce</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>rcv</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Within-model scalar array reduce (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="373" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="373" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ab8a2261394c978aa7e4b74ecebc739a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::reduce</definition>
        <argsstring>(T snd, int root, const El::mpi::Comm c, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>reduce</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar reduce (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="378" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="378" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a982adc23d7e6e6224f8bbd846672e429" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T lbann::lbann_comm::reduce</definition>
        <argsstring>(T snd, const El::mpi::Comm c, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>reduce</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar reduce (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="384" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="384" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a5543241da0cf9193fd1f331bbad5dd70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::reduce</definition>
        <argsstring>(T *snd, int count, int root, const El::mpi::Comm c, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>reduce</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar-array reduce (for non-root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="392" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a476ad01cab90fd01228ec1273a8e389e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::reduce</definition>
        <argsstring>(T *snd, int count, T *rcv, const El::mpi::Comm c, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>reduce</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>rcv</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar-array reduce (for root processes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="398" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="398" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a502bd724f9fb27f0e899306c69a3ec47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T lbann::lbann_comm::intermodel_allreduce</definition>
        <argsstring>(T snd, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>intermodel_allreduce</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inter-model all-reduce. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="404" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="404" bodyend="406"/>
        <referencedby refid="classlbann_1_1lbann__quantizer_1a3fe3493cb16b85bd4eaf251980408f1b" compoundref="quantizer__impl_8hpp" startline="496" endline="574">lbann::lbann_quantizer::intermodel_sum_adaptive_quantized_impl</referencedby>
        <referencedby refid="classlbann_1_1lbann__quantizer_1a4b326de1ca5b7eba6415b6f42f83335b" compoundref="quantizer_8cpp" startline="210" endline="266">lbann::lbann_quantizer::intermodel_sum_onebit_quantized</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aebb6290d1b618eace302404291c598a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T lbann::lbann_comm::model_allreduce</definition>
        <argsstring>(T snd, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>model_allreduce</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Within-model all-reduce. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="409" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="409" bodyend="411"/>
        <referencedby refid="classlbann_1_1categorical__accuracy__metric_1a0ec8c3254569c9f9855675243ac51612" compoundref="categorical__accuracy_8cpp" startline="80" endline="156">lbann::categorical_accuracy_metric::evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1top__k__categorical__accuracy__metric_1a3449bdb835e7e5bd7d17cd001fb4ae38" compoundref="top__k__categorical__accuracy_8cpp" startline="35" endline="115">lbann::top_k_categorical_accuracy_metric::evaluate_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a6dce8c5dd188633e69e9d5c79e5ef1bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::model_allreduce</definition>
        <argsstring>(T *snd, int count, T *rcv, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>model_allreduce</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>rcv</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar array within-model all-reduce. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="414" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="414" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T lbann::lbann_comm::allreduce</definition>
        <argsstring>(T snd, const El::mpi::Comm c, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>allreduce</name>
        <param>
          <type>T</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar allreduce. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="419" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="419" bodyend="424"/>
        <referencedby refid="classlbann_1_1batch__normalization_1ae4cad47f456752e4ea20add0f6f38819" compoundref="batch__normalization_8hpp" startline="558" endline="670">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a83e40edd001a0b71c31fbc9a3acb2231" compoundref="batch__normalization_8hpp" startline="672" endline="801">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a55edcd98bf4903235ed11eb7c96f5eb4" compoundref="comm_8cpp" startline="138" endline="140">intermodel_sum_matrix</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a2a7bb6cf3707366fc0671d8894ca30ea" compoundref="comm_8cpp" startline="177" endline="213">nb_allreduce</referencedby>
        <referencedby refid="classlbann_1_1boolean__accuracy__metric_1acac2d198f516990fe9b87f3abefae635" compoundref="boolean__accuracy_8cpp" startline="31" endline="53">lbann::boolean_accuracy_metric::evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1boolean__false__negatives__metric_1a598dfc1ee40c4e11f001cbf8899e0e0a" compoundref="boolean__false__negatives_8cpp" startline="31" endline="53">lbann::boolean_false_negatives_metric::evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1boolean__false__positives__metric_1abb6573a4e32e97316c69ce9fc24214f0" compoundref="boolean__false__positives_8cpp" startline="31" endline="53">lbann::boolean_false_positives_metric::evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1categorical__accuracy__metric_1a0ec8c3254569c9f9855675243ac51612" compoundref="categorical__accuracy_8cpp" startline="80" endline="156">lbann::categorical_accuracy_metric::evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1mean__absolute__deviation__metric_1a4096a6f389b2f18ff6c19428313f2969" compoundref="metrics_2mean__absolute__deviation_8cpp" startline="31" endline="58">lbann::mean_absolute_deviation_metric::evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1mean__absolute__deviation__loss_1ab0a19f6393ef5df9275f1ed4802e8cf6" compoundref="objective__functions_2loss__functions_2mean__absolute__deviation_8cpp" startline="31" endline="60">lbann::mean_absolute_deviation_loss::finish_evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1mean__squared__error__metric_1a81a2aa469f965d526a489214b3e73e4f" compoundref="metrics_2mean__squared__error_8cpp" startline="31" endline="58">lbann::mean_squared_error_metric::evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1pearson__correlation__metric_1a28453718aa09d609ef5ab157823d8c24" compoundref="pearson__correlation_8cpp" startline="135" endline="163">lbann::pearson_correlation_metric::evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1kl__divergence_1a93aab2ca89cdaab075a940184ae209d5" compoundref="kl__divergence_8cpp" startline="63" endline="92">lbann::kl_divergence::finish_evaluation</referencedby>
        <referencedby refid="classlbann_1_1cross__entropy__with__uncertainty_1abb9b240766b395dab052e3225a0888f6" compoundref="cross__entropy__with__uncertainty_8cpp" startline="74" endline="112">lbann::cross_entropy_with_uncertainty::finish_evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1geom__negloglike_1a320ac2f029e0a43640878bc052bf5299" compoundref="geom__negloglike_8cpp" startline="31" endline="58">lbann::geom_negloglike::finish_evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1mean__absolute__error__loss_1a0b6518199e86abc197e811f0a1ff7868" compoundref="mean__absolute__error_8cpp" startline="31" endline="60">lbann::mean_absolute_error_loss::finish_evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1poisson__negloglike_1a67c3cb239905fa9ee57369dddbbe76ed" compoundref="poisson__negloglike_8cpp" startline="31" endline="59">lbann::poisson_negloglike::finish_evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a81dbe71fef52ee0874549c4cf96c01e3" compoundref="polya__negloglike_8cpp" startline="129" endline="186">lbann::polya_negloglike::finish_evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1group__lasso__weight__regularization_1a48c46b2e06337e1890b12811182db11b" compoundref="group__lasso_8cpp" startline="58" endline="93">lbann::group_lasso_weight_regularization::finish_evaluation</referencedby>
        <referencedby refid="classlbann_1_1group__lasso__weight__regularization_1a9d721928716349c8327ca67257fb827a" compoundref="group__lasso_8cpp" startline="95" endline="141">lbann::group_lasso_weight_regularization::compute_weight_regularization</referencedby>
        <referencedby refid="classlbann_1_1l1__weight__regularization_1a5416b0c884e45854a03e0d2e2b3e63f3" compoundref="l1_8cpp" startline="58" endline="82">lbann::l1_weight_regularization::finish_evaluation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a12dd4f5476c54bdaf1ae2b348174b9fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::allreduce</definition>
        <argsstring>(T *snd, int count, T *rcv, const El::mpi::Comm c, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>allreduce</name>
        <param>
          <type>T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>rcv</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar-array allreduce. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="427" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="427" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a14adb0771b966f40536bf0e92fb00ebb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::allreduce</definition>
        <argsstring>(T *data, int count, const El::mpi::Comm c, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>allreduce</name>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In-place scalar-array allreduce. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="444" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="444" bodyend="458"/>
        <references refid="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" compoundref="cnpy__utils_8hpp" startline="52" endline="59">lbann::cnpy_utils::data</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1adaff1e6549a3fb902c85f1be2718c1ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::allreduce</definition>
        <argsstring>(AbsDistMat &amp;m, const El::mpi::Comm c, El::mpi::Op op=El::mpi::SUM, std::type_index t=std::type_index(typeid(Al::mpi_backend)))</argsstring>
        <name>allreduce</name>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <param>
          <type>std::type_index</type>
          <declname>t</declname>
          <defval>std::type_index(typeid(<ref refid="namespacelbann_1_1Al_1a8a69c2fac7e1117883fff1903c2232ce" kindref="member">Al::mpi_backend</ref>))</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Matrix allreduce. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="460" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="142" bodyend="175"/>
        <references refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" compoundref="comm_8hpp" startline="982">bytes_sent</references>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <references refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" compoundref="comm_8hpp" startline="983">bytes_received</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a2a7bb6cf3707366fc0671d8894ca30ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_allreduce</definition>
        <argsstring>(AbsDistMat &amp;m, const El::mpi::Comm c, Al::request &amp;req, El::mpi::Op op=El::mpi::SUM, std::type_index t=std::type_index(typeid(Al::mpi_backend)))</argsstring>
        <name>nb_allreduce</name>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structlbann_1_1Al_1_1request" kindref="compound">Al::request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <param>
          <type>std::type_index</type>
          <declname>t</declname>
          <defval>std::type_index(typeid(<ref refid="namespacelbann_1_1Al_1a8a69c2fac7e1117883fff1903c2232ce" kindref="member">Al::mpi_backend</ref>))</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Non-blocking matrix allreduce. If LBANN has not been built with Aluminum, then this calls a blocking matrix allreduce. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="468" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="177" bodyend="213"/>
        <references refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" compoundref="comm_8hpp" startline="982">bytes_sent</references>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <references refid="structlbann_1_1Al_1_1request_1ac244ce26cf8ea6ebad799efa6ca39ba3" compoundref="comm_8hpp" startline="72">lbann::Al::request::mpi_req</references>
        <references refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" compoundref="comm_8hpp" startline="983">bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" compoundref="comm_8hpp" startline="419" endline="424">allreduce</references>
        <referencedby refid="classlbann_1_1evaluation__layer_1a6cb3ab97ec80b6cf8606b421d9761c1c" compoundref="evaluation_8hpp" startline="80" endline="98">lbann::evaluation_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1mean__squared__error__loss_1a5cfc9b54a4161015f63e5445e34f49f4" compoundref="objective__functions_2loss__functions_2mean__squared__error_8cpp" startline="31" endline="57">lbann::mean_squared_error_loss::start_evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1cross__entropy_1a5167b7709499516c6a4dbebfc561f6a7" compoundref="cross__entropy_8cpp" startline="31" endline="56">lbann::cross_entropy::start_evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1l2__weight__regularization_1ab3a47d8ef5b8c8e16f076659e864f683" compoundref="l2_8cpp" startline="100" endline="153">lbann::l2_weight_regularization::start_evaluation</referencedby>
        <referencedby refid="classlbann_1_1optimizer_1a1fe495ccbd62d50735615818abecf454" compoundref="optimizer_8cpp" startline="208" endline="259">lbann::optimizer::start_gradient_staging_allreduce</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1afb144a99e0cd2241f5fb05cad68b1f08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_allreduce</definition>
        <argsstring>(T *data, int count, const El::mpi::Comm c, Al::request &amp;req, El::mpi::Op op=El::mpi::SUM)</argsstring>
        <name>nb_allreduce</name>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structlbann_1_1Al_1_1request" kindref="compound">Al::request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>El::mpi::Op</type>
          <declname>op</declname>
          <defval>El::mpi::SUM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Non-blocking in-place scalar-array allreduce. If LBANN has not been built with Aluminum, then this calls a blocking allreduce. This currently only supports host pointers (i.e. the MPI backend). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="479" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="479" bodyend="490"/>
        <references refid="structlbann_1_1Al_1_1request_1ac244ce26cf8ea6ebad799efa6ca39ba3" compoundref="comm_8hpp" startline="72">lbann::Al::request::mpi_req</references>
        <references refid="classlbann_1_1Al_1_1dummy__backend_1a458ac4eb9f62b06984b4ef1b1eeb5851" compoundref="comm_8hpp" startline="54">lbann::Al::dummy_backend::null_req</references>
        <references refid="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" compoundref="cnpy__utils_8hpp" startline="52" endline="59">lbann::cnpy_utils::data</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a30439f28cf615e1406090799c5499321" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::wait</definition>
        <argsstring>(El::mpi::Request&lt; T &gt; &amp;req)</argsstring>
        <name>wait</name>
        <param>
          <type>El::mpi::Request&lt; T &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wait for a non-blocking request to complete. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="494" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="494" bodyend="496"/>
        <referencedby refid="classlbann_1_1evaluation__layer_1a5300d3b7dd4719d2535f9b4838ae996f" compoundref="evaluation_8hpp" startline="69" endline="76">lbann::evaluation_layer&lt; T_layout &gt;::get_value</referencedby>
        <referencedby refid="classlbann_1_1mean__squared__error__loss_1a5486b4e6d6b6fbfdd6fdd381f7cbd7eb" compoundref="objective__functions_2loss__functions_2mean__squared__error_8cpp" startline="59" endline="64">lbann::mean_squared_error_loss::finish_evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1cross__entropy_1a85d6937dc70217062f7b45cb678ea1f9" compoundref="cross__entropy_8cpp" startline="58" endline="62">lbann::cross_entropy::finish_evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1l2__weight__regularization_1a5517e1fa9da8a28f39cf208054f6138a" compoundref="l2_8cpp" startline="155" endline="166">lbann::l2_weight_regularization::finish_evaluation</referencedby>
        <referencedby refid="classlbann_1_1optimizer_1a12b7dbc72eb2de78d6ad798b8939f349" compoundref="optimizer_8cpp" startline="124" endline="164">lbann::optimizer::get_gradient</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a91d09d595801f6228ee0aecf6dea25c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::wait</definition>
        <argsstring>(Al::request &amp;req)</argsstring>
        <name>wait</name>
        <param>
          <type><ref refid="structlbann_1_1Al_1_1request" kindref="compound">Al::request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wait for a non-blocking request to complete. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="499" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="215" bodyend="227"/>
        <references refid="structlbann_1_1Al_1_1request_1ac244ce26cf8ea6ebad799efa6ca39ba3" compoundref="comm_8hpp" startline="72">lbann::Al::request::mpi_req</references>
        <references refid="classlbann_1_1Al_1_1dummy__backend_1a458ac4eb9f62b06984b4ef1b1eeb5851" compoundref="comm_8hpp" startline="54">lbann::Al::dummy_backend::null_req</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a99303a11b939b4aba9d4a67dd0deef56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::lbann_comm::test</definition>
        <argsstring>(Al::request &amp;req)</argsstring>
        <name>test</name>
        <param>
          <type><ref refid="structlbann_1_1Al_1_1request" kindref="compound">Al::request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test whether a non-blocking request has completed; true if it has. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="501" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="229" bodyend="243"/>
        <references refid="structlbann_1_1Al_1_1request_1ac244ce26cf8ea6ebad799efa6ca39ba3" compoundref="comm_8hpp" startline="72">lbann::Al::request::mpi_req</references>
        <references refid="classlbann_1_1Al_1_1dummy__backend_1a458ac4eb9f62b06984b4ef1b1eeb5851" compoundref="comm_8hpp" startline="54">lbann::Al::dummy_backend::null_req</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a5834e95e066313d9328b22e4a0ec8663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::intermodel_barrier</definition>
        <argsstring>()</argsstring>
        <name>intermodel_barrier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Barrier among the inter-model processes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="504" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="253" bodyend="256"/>
        <references refid="classlbann_1_1lbann__comm_1a03d946ef5ea5d3b15351e78a2eed10fe" compoundref="comm_8hpp" startline="980">num_intermodel_barriers</references>
        <references refid="classlbann_1_1lbann__comm_1a303c02c5a127f3ed21f12c9a71cc90a6" compoundref="comm_8cpp" startline="268" endline="270">barrier</references>
        <references refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" compoundref="comm_8hpp" startline="929">intermodel_comm</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a6086ced12c3eefeea6e2a78eff286983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::model_barrier</definition>
        <argsstring>()</argsstring>
        <name>model_barrier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Barrier among processes in this model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="506" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="258" bodyend="261"/>
        <references refid="classlbann_1_1lbann__comm_1aa4f15459eca2a06174a877ba0c23feb7" compoundref="comm_8hpp" startline="979">num_model_barriers</references>
        <references refid="classlbann_1_1lbann__comm_1a303c02c5a127f3ed21f12c9a71cc90a6" compoundref="comm_8cpp" startline="268" endline="270">barrier</references>
        <references refid="classlbann_1_1lbann__comm_1a58a75b76bd61ec8a26c1cbbec3dc2f45" compoundref="comm_8hpp" startline="927">model_comm</references>
        <referencedby refid="classlbann_1_1lbann__callback__timeline_1a35a431c2545b4087d6f970d45f86c054" compoundref="callback__timeline_8cpp" startline="35" endline="47">lbann::lbann_callback_timeline::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1a3a770ec2314313761d6f0eccdb9dc09b" compoundref="distributed__io__buffer_8cpp" startline="61" endline="88">lbann::distributed_io_buffer::distribute_from_local_matrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ae12af95f4826571efa03fb8520260daa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::global_barrier</definition>
        <argsstring>()</argsstring>
        <name>global_barrier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Barrier among all processes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="508" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="263" bodyend="266"/>
        <references refid="classlbann_1_1lbann__comm_1a4f01e2f2d8220dc34cf39eb4a255cd7d" compoundref="comm_8hpp" startline="981">num_global_barriers</references>
        <references refid="classlbann_1_1lbann__comm_1a303c02c5a127f3ed21f12c9a71cc90a6" compoundref="comm_8cpp" startline="268" endline="270">barrier</references>
        <references refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" compoundref="comm_8hpp" startline="891" endline="893">get_world_comm</references>
        <referencedby refid="classlbann_1_1lbann__callback__check__init_1a037f1371c56c1b528f487517a58ce3fb" compoundref="callback__check__init_8cpp" startline="34" endline="72">lbann::lbann_callback_check_init::on_train_begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a303c02c5a127f3ed21f12c9a71cc90a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::barrier</definition>
        <argsstring>(const El::mpi::Comm c)</argsstring>
        <name>barrier</name>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Barrier on an arbitrary communicator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="510" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="268" bodyend="270"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a5834e95e066313d9328b22e4a0ec8663" compoundref="comm_8cpp" startline="253" endline="256">intermodel_barrier</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a6086ced12c3eefeea6e2a78eff286983" compoundref="comm_8cpp" startline="258" endline="261">model_barrier</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ae12af95f4826571efa03fb8520260daa" compoundref="comm_8cpp" startline="263" endline="266">global_barrier</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a086078b881e7250df140ac116adb1939" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::send</definition>
        <argsstring>(const T *data, int count, int model, int rank)</argsstring>
        <name>send</name>
        <param>
          <type>const T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a buffer to rank in model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="514" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="514" bodyend="517"/>
        <referencedby refid="classlbann_1_1lbann__callback__check__init_1a037f1371c56c1b528f487517a58ce3fb" compoundref="callback__check__init_8cpp" startline="34" endline="72">lbann::lbann_callback_check_init::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ac3fa03c3ee8351daed6c7a5fd6f8535d" compoundref="comm_8cpp" startline="272" endline="274">send</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a12ddcc441fa1073aff23797c3c923ef6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::send</definition>
        <argsstring>(const T *data, int count, int model)</argsstring>
        <name>send</name>
        <param>
          <type>const T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="518" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="518" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ac3fa03c3ee8351daed6c7a5fd6f8535d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::send</definition>
        <argsstring>(const Mat &amp;mat, int model, int rank)</argsstring>
        <name>send</name>
        <param>
          <type>const <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="521" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="272" bodyend="274"/>
        <references refid="classlbann_1_1lbann__comm_1a086078b881e7250df140ac116adb1939" compoundref="comm_8hpp" startline="514" endline="517">send</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c">lbann::model</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ae6ad297cccfc9ed893b855046d60b34d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::send</definition>
        <argsstring>(const DistMat &amp;mat, int model, int rank)</argsstring>
        <name>send</name>
        <param>
          <type>const <ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="522" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="276" bodyend="278"/>
        <references refid="classlbann_1_1lbann__comm_1a086078b881e7250df140ac116adb1939" compoundref="comm_8hpp" startline="514" endline="517">send</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c">lbann::model</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a4dc53b43a36e597a0c11266ea3c6d7f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::send</definition>
        <argsstring>(const Mat &amp;mat, int model)</argsstring>
        <name>send</name>
        <param>
          <type>const <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="523" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="523" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aeb76535e61e5bc669ebadad223e4add7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::send</definition>
        <argsstring>(const DistMat &amp;mat, int model)</argsstring>
        <name>send</name>
        <param>
          <type>const <ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="526" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="526" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a70679ca6477c56972f9bc53d52e5ce21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_send</definition>
        <argsstring>(const T *data, int count, int model, int rank, El::mpi::Request&lt; T &gt; &amp;req)</argsstring>
        <name>nb_send</name>
        <param>
          <type>const T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; T &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Corresponding non-blocking sends. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="532" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="532" bodyend="536"/>
        <referencedby refid="classlbann_1_1lbann__comm_1ae86cb0f65c8e11dec7a1cf0d3ce17cd2" compoundref="comm_8cpp" startline="280" endline="283">nb_send</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a6d9de11c64685e0983b196044856d281" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_send</definition>
        <argsstring>(const T *data, int count, int model, El::mpi::Request&lt; T &gt; &amp;req)</argsstring>
        <name>nb_send</name>
        <param>
          <type>const T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; T &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="537" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="537" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ae86cb0f65c8e11dec7a1cf0d3ce17cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_send</definition>
        <argsstring>(const Mat &amp;mat, int model, int rank, El::mpi::Request&lt; DataType &gt; &amp;req)</argsstring>
        <name>nb_send</name>
        <param>
          <type>const <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; DataType &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="541" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="280" bodyend="283"/>
        <references refid="classlbann_1_1lbann__comm_1a70679ca6477c56972f9bc53d52e5ce21" compoundref="comm_8hpp" startline="532" endline="536">nb_send</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c">lbann::model</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ad77344b63311b7ec57c63af67120c3e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_send</definition>
        <argsstring>(const DistMat &amp;mat, int model, int rank, El::mpi::Request&lt; DataType &gt; &amp;req)</argsstring>
        <name>nb_send</name>
        <param>
          <type>const <ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; DataType &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="543" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="285" bodyend="289"/>
        <references refid="classlbann_1_1lbann__comm_1a70679ca6477c56972f9bc53d52e5ce21" compoundref="comm_8hpp" startline="532" endline="536">nb_send</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c">lbann::model</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a7d22130a7d24a710fe6b31c0ccec78b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_send</definition>
        <argsstring>(const Mat &amp;mat, int model, El::mpi::Request&lt; DataType &gt; &amp;req)</argsstring>
        <name>nb_send</name>
        <param>
          <type>const <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; DataType &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="545" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="545" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a1144c161ccc147d879d088b5832d64a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_send</definition>
        <argsstring>(const DistMat &amp;mat, int model, El::mpi::Request&lt; DataType &gt; &amp;req)</argsstring>
        <name>nb_send</name>
        <param>
          <type>const <ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; DataType &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="548" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="548" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::recv</definition>
        <argsstring>(T *data, int count, int model, int rank)</argsstring>
        <name>recv</name>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Corresponding receive to send. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="553" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="553" bodyend="556"/>
        <referencedby refid="classlbann_1_1lbann__callback__check__init_1a037f1371c56c1b528f487517a58ce3fb" compoundref="callback__check__init_8cpp" startline="34" endline="72">lbann::lbann_callback_check_init::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ac1ed8dd7b6f839b69bfb33f88728b18d" compoundref="comm_8cpp" startline="291" endline="293">recv</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a7f2f06772bdee76b4d736c1d7ab84329" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::recv</definition>
        <argsstring>(T *data, int count, int model)</argsstring>
        <name>recv</name>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="557" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="557" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ac1ed8dd7b6f839b69bfb33f88728b18d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::recv</definition>
        <argsstring>(Mat &amp;mat, int model, int rank)</argsstring>
        <name>recv</name>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="560" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="291" bodyend="293"/>
        <references refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" compoundref="comm_8hpp" startline="553" endline="556">recv</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c">lbann::model</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a1376b4f3c0941e19ff23a8baf30eb63d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::recv</definition>
        <argsstring>(DistMat &amp;mat, int model, int rank)</argsstring>
        <name>recv</name>
        <param>
          <type><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="561" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="295" bodyend="297"/>
        <references refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" compoundref="comm_8hpp" startline="553" endline="556">recv</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c">lbann::model</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a6b1ecfe900346c0996fb8066e4f76fe2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::recv</definition>
        <argsstring>(Mat &amp;mat, int model)</argsstring>
        <name>recv</name>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="562" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="562" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a018f0451e2a984d28b6a1f099cf9d421" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::recv</definition>
        <argsstring>(DistMat &amp;mat, int model)</argsstring>
        <name>recv</name>
        <param>
          <type><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="565" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="565" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ab96fe808a236d41ecd05c0cc2461dba0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::recv</definition>
        <argsstring>(T *data, int count)</argsstring>
        <name>recv</name>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>As above, but receive from anyone. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="569" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="569" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a3d0cca55711c9c9913f3d940c5bba4eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::recv</definition>
        <argsstring>(Mat &amp;mat)</argsstring>
        <name>recv</name>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="573" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="299" bodyend="301"/>
        <references refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" compoundref="comm_8hpp" startline="553" endline="556">recv</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1acc92b86b30287689870e018b062076f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::recv</definition>
        <argsstring>(DistMat &amp;mat)</argsstring>
        <name>recv</name>
        <param>
          <type><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="574" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="303" bodyend="305"/>
        <references refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" compoundref="comm_8hpp" startline="553" endline="556">recv</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_recv</definition>
        <argsstring>(T *data, int count, int model, int rank, El::mpi::Request&lt; T &gt; &amp;req)</argsstring>
        <name>nb_recv</name>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; T &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Corresponding non-blocking receives. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="577" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="577" bodyend="582"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a8f850662e84e3efab19244d1ef6752d7" compoundref="comm_8cpp" startline="307" endline="310">nb_recv</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ad75e65db156edd86efa26ef1986668d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_recv</definition>
        <argsstring>(T *data, int count, int model, El::mpi::Request&lt; T &gt; &amp;req)</argsstring>
        <name>nb_recv</name>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; T &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="583" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="583" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a8f850662e84e3efab19244d1ef6752d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_recv</definition>
        <argsstring>(Mat &amp;mat, int model, int rank, El::mpi::Request&lt; DataType &gt; &amp;req)</argsstring>
        <name>nb_recv</name>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; DataType &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="587" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="307" bodyend="310"/>
        <references refid="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" compoundref="comm_8hpp" startline="577" endline="582">nb_recv</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c">lbann::model</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1abec714b3f80361f104eaa004d906798b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_recv</definition>
        <argsstring>(DistMat &amp;mat, int model, int rank, El::mpi::Request&lt; DataType &gt; &amp;req)</argsstring>
        <name>nb_recv</name>
        <param>
          <type><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; DataType &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="588" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="312" bodyend="315"/>
        <references refid="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" compoundref="comm_8hpp" startline="577" endline="582">nb_recv</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c">lbann::model</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ad76ddffcad6e996b8da2ba7670d20b24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_recv</definition>
        <argsstring>(Mat &amp;mat, int model, El::mpi::Request&lt; DataType &gt; &amp;req)</argsstring>
        <name>nb_recv</name>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; DataType &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="589" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="589" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aec876be95ab91bfff6337f06adc6a797" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_recv</definition>
        <argsstring>(DistMat &amp;mat, int model, El::mpi::Request&lt; DataType &gt; &amp;req)</argsstring>
        <name>nb_recv</name>
        <param>
          <type><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; DataType &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="592" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="592" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a77c74bcc60e9946d45cf575234a7acc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_recv</definition>
        <argsstring>(T *data, int count, El::mpi::Request&lt; T &gt; &amp;req)</argsstring>
        <name>nb_recv</name>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; T &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="595" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="595" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a4e703fa356dd7807fda82d1d1eb81e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_recv</definition>
        <argsstring>(Mat &amp;mat, El::mpi::Request&lt; DataType &gt; &amp;req)</argsstring>
        <name>nb_recv</name>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; DataType &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="599" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="317" bodyend="319"/>
        <references refid="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" compoundref="comm_8hpp" startline="577" endline="582">nb_recv</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a105c0fa7997f23637cbd03d566748bca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::nb_recv</definition>
        <argsstring>(DistMat &amp;mat, El::mpi::Request&lt; DataType &gt; &amp;req)</argsstring>
        <name>nb_recv</name>
        <param>
          <type><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>El::mpi::Request&lt; DataType &gt; &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="600" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="321" bodyend="323"/>
        <references refid="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" compoundref="comm_8hpp" startline="577" endline="582">nb_recv</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a6314e3b07b21b8fb0cd2ebe1e49dddb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::sendrecv</definition>
        <argsstring>(const T *snd, int send_count, int send_model, int send_rank, T *rcv, int recv_count, int recv_model, int recv_rank)</argsstring>
        <name>sendrecv</name>
        <param>
          <type>const T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>send_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>send_model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>send_rank</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>rcv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>recv_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>recv_model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>recv_rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send/recv to/from ranks. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="604" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="604" bodyend="611"/>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2b155d39e6dba02a34a7c58d804d865e" compoundref="callback__ltfb_8cpp" startline="75" endline="91">lbann::anonymous_namespace{callback_ltfb.cpp}::exchange_weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a61e8479f25d209be238f1b61115f7a0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::lbann_comm::sendrecv</definition>
        <argsstring>(const T *snd, int send_count, int send_model, T *rcv, int recv_count, int recv_model)</argsstring>
        <name>sendrecv</name>
        <param>
          <type>const T *</type>
          <declname>snd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>send_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>send_model</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>rcv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>recv_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>recv_model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="613" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="613" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aa1db618eb587ead21fb0420bf94bfd45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int lbann::lbann_comm::get_count</definition>
        <argsstring>(int model, int rank)</argsstring>
        <name>get_count</name>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine the size (count) of an incoming message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="620" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="620" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a54544a1b1a691fa7b6314da5682f184c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int lbann::lbann_comm::get_count</definition>
        <argsstring>(int model)</argsstring>
        <name>get_count</name>
        <param>
          <type>int</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="626" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="626" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ab07201c12c01f065acb151f2a3c32efa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::get_num_model_barriers</definition>
        <argsstring>() const</argsstring>
        <name>get_num_model_barriers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of model barriers performed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="632" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="632" bodyend="634"/>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a89b18186fdaa7b6a7a0e9ab8ee334d88" compoundref="callback__summary_8cpp" startline="47" endline="68">lbann::lbann_callback_summary::on_batch_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a78ea2f289eb8de66edecb84b6cf48b84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::get_num_intermodel_barriers</definition>
        <argsstring>() const</argsstring>
        <name>get_num_intermodel_barriers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of inter-model barriers performed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="636" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="636" bodyend="638"/>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a89b18186fdaa7b6a7a0e9ab8ee334d88" compoundref="callback__summary_8cpp" startline="47" endline="68">lbann::lbann_callback_summary::on_batch_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ad5a4f05dc5a2c992ebb659650a7dc6ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::get_num_global_barriers</definition>
        <argsstring>() const</argsstring>
        <name>get_num_global_barriers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of global barriers performed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="640" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="640" bodyend="642"/>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a89b18186fdaa7b6a7a0e9ab8ee334d88" compoundref="callback__summary_8cpp" startline="47" endline="68">lbann::lbann_callback_summary::on_batch_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1afe3d3d12c544b43c478b968ef4226561" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::get_bytes_sent</definition>
        <argsstring>() const</argsstring>
        <name>get_bytes_sent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of bytes sent. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="644" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="644" bodyend="646"/>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a89b18186fdaa7b6a7a0e9ab8ee334d88" compoundref="callback__summary_8cpp" startline="47" endline="68">lbann::lbann_callback_summary::on_batch_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aadc407cd170fc9da46cdc4483f424b2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::get_bytes_received</definition>
        <argsstring>() const</argsstring>
        <name>get_bytes_received</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of bytes received. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="648" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="648" bodyend="650"/>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a89b18186fdaa7b6a7a0e9ab8ee334d88" compoundref="callback__summary_8cpp" startline="47" endline="68">lbann::lbann_callback_summary::on_batch_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ae0be48a03e4e8af43929c97a31a8f361" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::get_ar_bytes_sent</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_bytes_sent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of bytes sent in allreduces. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="652" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="652" bodyend="654"/>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a1b7c53c7c8e04543e1a262a01d847976" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::get_ar_bytes_received</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_bytes_received</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of bytes received in allreduces. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="656" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="656" bodyend="658"/>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a7b9827e5f46d535c8ab2cf2f6c576291" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::get_ar_rs_bytes_sent</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_rs_bytes_sent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of bytes sent in allreduce reduce-scatters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="660" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="660" bodyend="662"/>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a4ed37b23401cd6df6502229bae0e5a1d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::get_ar_rs_bytes_received</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_rs_bytes_received</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of bytes received in allreduce reduce-scatters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="664" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="664" bodyend="666"/>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1af745b91711014bf5a9f8d2466b5a6634" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::get_ar_ag_bytes_sent</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_ag_bytes_sent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of bytes sent in allreduce allgathers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="668" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="668" bodyend="670"/>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a7aaeb171cd6f08926a6919e9a7892a73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lbann::lbann_comm::get_ar_ag_bytes_received</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_ag_bytes_received</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of bytes received in allreduce allgathers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="672" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="672" bodyend="674"/>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a29e966df9f8241bba47aa1663ce4151a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double lbann::lbann_comm::get_ar_time</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the time spent in allreduces. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="676" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="676" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a3db95439bebabcc1648e50698d56dbaa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double lbann::lbann_comm::get_ar_rs_time</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_rs_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the time spent in allreduce reduce-scatters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="680" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="680" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aca331207a61bf11d8979c2c06e20b6be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double lbann::lbann_comm::get_ar_ag_time</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_ag_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the time spent in allreduce allgathers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="684" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="684" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aed5d56c2b7205009c67ab37ea1c1556f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double lbann::lbann_comm::get_ar_send_transform_time</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_send_transform_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the time spent in allreduce send transforms. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="688" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="688" bodyend="690"/>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1afa5144a3d7bd40e1d78193d9f299e8ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double lbann::lbann_comm::get_ar_recv_transform_time</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_recv_transform_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the time spent in allreduce receive transforms. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="692" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="692" bodyend="694"/>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a893af1da4330be474871eeb8b2f9a7b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double lbann::lbann_comm::get_ar_recv_apply_transform_time</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_recv_apply_transform_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the time spent in allreduce receive/apply transforms. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="696" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="696" bodyend="698"/>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a2643a3713d7c2ed64851fc345ba2273f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double lbann::lbann_comm::get_ar_send_time</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_send_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the time spent sending in allreduces. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="700" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="700" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a925aad805ceda573cd380b95b8c4a34a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double lbann::lbann_comm::get_ar_recv_time</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_recv_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the time spent receiving in allreduces. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="704" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="704" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a7222cd0613d9a94eafc89c51bfeae20d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double lbann::lbann_comm::get_ar_rs_send_time</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_rs_send_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the time spent sending in allreduce reduce-scatters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="708" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="708" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ab3474bd1c09ca432e302279acfd83307" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double lbann::lbann_comm::get_ar_rs_recv_time</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_rs_recv_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the time spent receiving in allreduce reduce-scatters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="712" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="712" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a4482ccdfe56837dd4152c3a33f523a1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double lbann::lbann_comm::get_ar_ag_send_time</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_ag_send_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the time spent sending in allreduce allgathers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="716" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="716" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a78820c4fbd15df596d41844276cc966a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double lbann::lbann_comm::get_ar_ag_recv_time</definition>
        <argsstring>() const</argsstring>
        <name>get_ar_ag_recv_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the time spent receiving in allreduce allgathers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="720" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="720" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1adb9afab1b8af03276e6e6347f8021ef5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::reset_stats_counters</definition>
        <argsstring>()</argsstring>
        <name>reset_stats_counters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="723" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="723" bodyend="747"/>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a89b18186fdaa7b6a7a0e9ab8ee334d88" compoundref="callback__summary_8cpp" startline="47" endline="68">lbann::lbann_callback_summary::on_batch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a8dced0a202df3daaece138a7b958e544" compoundref="callback__summary_8cpp" startline="84" endline="100">lbann::lbann_callback_summary::on_test_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aafcb505629dd550ebd0b2c41792aca27" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019" kindref="member">allreduce_algorithm</ref></type>
        <definition>allreduce_algorithm lbann::lbann_comm::get_default_allreduce_algorithm</definition>
        <argsstring>() const</argsstring>
        <name>get_default_allreduce_algorithm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the default allreduce algorithm to use (may be DYNAMIC). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="791" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="791" bodyend="793"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a34d5414f1ac4749e6f0937b638bb5cc6" compoundref="comm_8cpp" startline="325" endline="374">intermodel_allreduce</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1aaae50e4643ca06671e7cb7872d455708" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::set_default_allreduce_algorithm</definition>
        <argsstring>(allreduce_algorithm algo)</argsstring>
        <name>set_default_allreduce_algorithm</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019" kindref="member">allreduce_algorithm</ref></type>
          <declname>algo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the default allreduce algorithm to algo. Do <emphasis>not</emphasis> set it to DEFAULT. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="798" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="798" bodyend="800"/>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a34d5414f1ac4749e6f0937b638bb5cc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::intermodel_allreduce</definition>
        <argsstring>(Mat &amp;mat, int max_recv_count, std::function&lt; uint8_t *(Mat &amp;, El::IR, El::IR, int &amp;, bool, int)&gt; send_transform, std::function&lt; int(uint8_t *, Mat &amp;)&gt; recv_transform, std::function&lt; int(uint8_t *, Mat &amp;, bool)&gt; recv_apply_transform, const allreduce_options opts)</argsstring>
        <name>intermodel_allreduce</name>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_recv_count</declname>
        </param>
        <param>
          <type>std::function&lt; uint8_t *(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;, El::IR, El::IR, int &amp;, bool, int)&gt;</type>
          <declname>send_transform</declname>
        </param>
        <param>
          <type>std::function&lt; int(uint8_t *, <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;)&gt;</type>
          <declname>recv_transform</declname>
        </param>
        <param>
          <type>std::function&lt; int(uint8_t *, <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;, bool)&gt;</type>
          <declname>recv_apply_transform</declname>
        </param>
        <param>
          <type>const <ref refid="structlbann_1_1lbann__comm_1_1allreduce__options" kindref="compound">allreduce_options</ref></type>
          <declname>opts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Do a custom allreduce on mat on the intermodel communicator. This selects the allreduce algorithm to use based on the size of mat. All counts/sizes are in bytes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to allreduce. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_recv_count</parametername>
</parameternamelist>
<parameterdescription>
<para>An upper bound on the size of data that will be received in any step; this will be the size of receive buffers used in the allreduce. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>send_transform</parametername>
</parameternamelist>
<parameterdescription>
<para>A function that takes a range of a matrix and applies a transformation to it. The return value is a pointer to a buffer containing the transformed data, which will be sent. The int&amp; param should be set to the count of how many elements are in the buffer. The boolean parameter indicates whether the matrix is constant between different calls to send_transform; if true, the function may be able to take advantage of this. The int parameter gives a count of how many times send_transform has been called concurrently, starting from 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recv_transform</parametername>
</parameternamelist>
<parameterdescription>
<para>A function that takes a pointer to a buffer and a matrix and applies a transform to the buffer, storing the result in the matrix. The buffer will be data transformed with send_transform and received from another rank. The return value is the actual count of the received data (i.e. the count that the data was sent using). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recv_apply_transform</parametername>
</parameternamelist>
<parameterdescription>
<para>A function like recv_transform except that the transformed data should be combined (applied, reduced) with the current data in the matrix argument. A boolean parameter indicates that no_local_trans was true and the data was not transformed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Various allreduce options. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="829" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="325" bodyend="374"/>
        <references refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a8cb30eb49f6556debf08291056d036e9" compoundref="comm_8hpp" startline="777">lbann::lbann_comm::allreduce_options::algo</references>
        <references refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019a5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</references>
        <references refid="classlbann_1_1lbann__comm_1aafcb505629dd550ebd0b2c41792aca27" compoundref="comm_8hpp" startline="791" endline="793">get_default_allreduce_algorithm</references>
        <references refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" compoundref="comm_8hpp" startline="152" endline="154">get_num_models</references>
        <references refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019a0fcc90da4811c877ba9f9c12f7d60bc9">DYNAMIC</references>
        <references refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019a5a99a7b378e450d9e91b10b1f0085274">RECURSIVE_DOUBLING</references>
        <references refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019ae97d669b6498b36d1ce07b3d2c544fee">PAIRWISE_EXCHANGE_RING</references>
        <references refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" compoundref="comm_8cpp" startline="376" endline="431">recursive_doubling_allreduce_pow2</references>
        <references refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" compoundref="comm_8hpp" startline="929">intermodel_comm</references>
        <references refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</references>
        <references refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019ae69b8a2544417fb71e2767e95d7ac8f3">RING</references>
        <references refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</references>
        <references refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019aecfb3869b05d9c2103f98c386a9e8a41">RABENSEIFNER</references>
        <references refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::recursive_doubling_allreduce_pow2</definition>
        <argsstring>(const El::mpi::Comm comm, Mat &amp;mat, int max_recv_count, std::function&lt; uint8_t *(Mat &amp;, El::IR, El::IR, int &amp;, bool, int)&gt; send_transform, std::function&lt; int(uint8_t *, Mat &amp;, bool)&gt; recv_apply_transform, const allreduce_options opts)</argsstring>
        <name>recursive_doubling_allreduce_pow2</name>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_recv_count</declname>
        </param>
        <param>
          <type>std::function&lt; uint8_t *(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;, El::IR, El::IR, int &amp;, bool, int)&gt;</type>
          <declname>send_transform</declname>
        </param>
        <param>
          <type>std::function&lt; int(uint8_t *, <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;, bool)&gt;</type>
          <declname>recv_apply_transform</declname>
        </param>
        <param>
          <type>const <ref refid="structlbann_1_1lbann__comm_1_1allreduce__options" kindref="compound">allreduce_options</ref></type>
          <declname>opts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A recursive-doubling allreduce. This implementation only works for a power-of-2 number of processes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="840" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="376" bodyend="431"/>
        <references refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" compoundref="timer_8hpp" startline="37" endline="41">lbann::get_time</references>
        <references refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" compoundref="comm_8cpp" startline="1064" endline="1084">get_collective_buffer</references>
        <references refid="structlbann_1_1lbann__comm_1_1allreduce__options_1ad9890ae127412ee65a98cbdb02a4b143" compoundref="comm_8hpp" startline="785">lbann::lbann_comm::allreduce_options::no_local_trans</references>
        <references refid="classlbann_1_1lbann__comm_1a5cdd318d1505ba0f31bf4fe9fadffacc" compoundref="comm_8hpp" startline="896" endline="900">is_rank_node_local</references>
        <references refid="classlbann_1_1lbann__comm_1a4e3d35520a8f567579f9235e9808ba1c" compoundref="comm_8hpp" startline="994">ar_send_transform_time</references>
        <references refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" compoundref="comm_8hpp" startline="982">bytes_sent</references>
        <references refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" compoundref="comm_8hpp" startline="985">ar_bytes_sent</references>
        <references refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" compoundref="comm_8hpp" startline="997">ar_send_time</references>
        <references refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" compoundref="comm_8hpp" startline="998">ar_recv_time</references>
        <references refid="classlbann_1_1lbann__comm_1aa642b0ae2321fa464b0092da527f6375" compoundref="comm_8hpp" startline="996">ar_recv_apply_transform_time</references>
        <references refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" compoundref="comm_8hpp" startline="983">bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" compoundref="comm_8hpp" startline="986">ar_bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1aa57d2fbeef85fd8a3c9f2a37ca7687c8" compoundref="comm_8hpp" startline="991">ar_time</references>
        <referencedby refid="classlbann_1_1lbann__comm_1a34d5414f1ac4749e6f0937b638bb5cc6" compoundref="comm_8cpp" startline="325" endline="374">intermodel_allreduce</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::pe_ring_allreduce</definition>
        <argsstring>(const El::mpi::Comm comm, Mat &amp;mat, int max_recv_count, std::function&lt; uint8_t *(Mat &amp;, El::IR, El::IR, int &amp;, bool, int)&gt; send_transform, std::function&lt; int(uint8_t *, Mat &amp;)&gt; recv_transform, std::function&lt; int(uint8_t *, Mat &amp;, bool)&gt; recv_apply_transform, const allreduce_options opts)</argsstring>
        <name>pe_ring_allreduce</name>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_recv_count</declname>
        </param>
        <param>
          <type>std::function&lt; uint8_t *(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;, El::IR, El::IR, int &amp;, bool, int)&gt;</type>
          <declname>send_transform</declname>
        </param>
        <param>
          <type>std::function&lt; int(uint8_t *, <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;)&gt;</type>
          <declname>recv_transform</declname>
        </param>
        <param>
          <type>std::function&lt; int(uint8_t *, <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;, bool)&gt;</type>
          <declname>recv_apply_transform</declname>
        </param>
        <param>
          <type>const <ref refid="structlbann_1_1lbann__comm_1_1allreduce__options" kindref="compound">allreduce_options</ref></type>
          <declname>opts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An allreduce based on a pairwise-exchange reduce-scatter followed by a ring-based allgather. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_reduces</parametername>
</parameternamelist>
<parameterdescription>
<para>If &gt;1, performs up to num_reduces reduces concurrently in the reduce-scatter phase. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="852" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="433" bodyend="651"/>
        <references refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" compoundref="timer_8hpp" startline="37" endline="41">lbann::get_time</references>
        <references refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a4b3cd4eb74dd5a49ee3ffafa2edc1607" compoundref="comm_8hpp" startline="787">lbann::lbann_comm::allreduce_options::max_reduces</references>
        <references refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" compoundref="comm_8cpp" startline="1064" endline="1084">get_collective_buffer</references>
        <references refid="structlbann_1_1lbann__comm_1_1allreduce__options_1ad9890ae127412ee65a98cbdb02a4b143" compoundref="comm_8hpp" startline="785">lbann::lbann_comm::allreduce_options::no_local_trans</references>
        <references refid="classlbann_1_1lbann__comm_1a5cdd318d1505ba0f31bf4fe9fadffacc" compoundref="comm_8hpp" startline="896" endline="900">is_rank_node_local</references>
        <references refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" compoundref="comm_8hpp" startline="998">ar_recv_time</references>
        <references refid="classlbann_1_1lbann__comm_1adefa0ee8b0a6b74072448e20d40f502d" compoundref="comm_8hpp" startline="1000">ar_rs_recv_time</references>
        <references refid="classlbann_1_1lbann__comm_1a4e3d35520a8f567579f9235e9808ba1c" compoundref="comm_8hpp" startline="994">ar_send_transform_time</references>
        <references refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" compoundref="comm_8hpp" startline="982">bytes_sent</references>
        <references refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" compoundref="comm_8hpp" startline="985">ar_bytes_sent</references>
        <references refid="classlbann_1_1lbann__comm_1ac74bcfb565c1bb6604f336c6d1b647cc" compoundref="comm_8hpp" startline="987">ar_rs_bytes_sent</references>
        <references refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" compoundref="comm_8hpp" startline="997">ar_send_time</references>
        <references refid="classlbann_1_1lbann__comm_1aaadab22d368e8004a9877828a3bc9e93" compoundref="comm_8hpp" startline="999">ar_rs_send_time</references>
        <references refid="classlbann_1_1lbann__comm_1aa642b0ae2321fa464b0092da527f6375" compoundref="comm_8hpp" startline="996">ar_recv_apply_transform_time</references>
        <references refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" compoundref="comm_8hpp" startline="983">bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" compoundref="comm_8hpp" startline="986">ar_bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1a2c3e1db0f6d2345748132322b0555db7" compoundref="comm_8hpp" startline="988">ar_rs_bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1a85022d803e339eb14a15129a07876c2b" compoundref="comm_8hpp" startline="992">ar_rs_time</references>
        <references refid="classlbann_1_1lbann__comm_1a2cfe1264a83865360692c48d7869fe67" compoundref="comm_8hpp" startline="989">ar_ag_bytes_sent</references>
        <references refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" compoundref="comm_8hpp" startline="779">lbann::lbann_comm::allreduce_options::id_recv</references>
        <references refid="classlbann_1_1lbann__comm_1a64cb0b86e9368c1d83370ba6cb0083ba" compoundref="comm_8hpp" startline="1001">ar_ag_send_time</references>
        <references refid="classlbann_1_1lbann__comm_1a1896c3ecd1d5b084497c6ed47c1c9bae" compoundref="comm_8hpp" startline="1002">ar_ag_recv_time</references>
        <references refid="classlbann_1_1lbann__comm_1adb393f47d60eaa59bace80d2d3dd3bf2" compoundref="comm_8hpp" startline="995">ar_recv_transform_time</references>
        <references refid="classlbann_1_1lbann__comm_1afded6f478dc5021d1edec306dc6c528c" compoundref="comm_8hpp" startline="990">ar_ag_bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1a48768342eb05c1c6cdaa52c3599b93c8" compoundref="comm_8hpp" startline="993">ar_ag_time</references>
        <references refid="classlbann_1_1lbann__comm_1aa57d2fbeef85fd8a3c9f2a37ca7687c8" compoundref="comm_8hpp" startline="991">ar_time</references>
        <referencedby refid="classlbann_1_1lbann__comm_1a34d5414f1ac4749e6f0937b638bb5cc6" compoundref="comm_8cpp" startline="325" endline="374">intermodel_allreduce</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::ring_allreduce</definition>
        <argsstring>(const El::mpi::Comm comm, Mat &amp;mat, int max_recv_count, std::function&lt; uint8_t *(Mat &amp;, El::IR, El::IR, int &amp;, bool, int)&gt; send_transform, std::function&lt; int(uint8_t *, Mat &amp;)&gt; recv_transform, std::function&lt; int(uint8_t *, Mat &amp;, bool)&gt; recv_apply_transform, const allreduce_options opts)</argsstring>
        <name>ring_allreduce</name>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_recv_count</declname>
        </param>
        <param>
          <type>std::function&lt; uint8_t *(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;, El::IR, El::IR, int &amp;, bool, int)&gt;</type>
          <declname>send_transform</declname>
        </param>
        <param>
          <type>std::function&lt; int(uint8_t *, <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;)&gt;</type>
          <declname>recv_transform</declname>
        </param>
        <param>
          <type>std::function&lt; int(uint8_t *, <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;, bool)&gt;</type>
          <declname>recv_apply_transform</declname>
        </param>
        <param>
          <type>const <ref refid="structlbann_1_1lbann__comm_1_1allreduce__options" kindref="compound">allreduce_options</ref></type>
          <declname>opts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An allreduce using ring-based reduce-scatter and allgather. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="862" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="653" bodyend="824"/>
        <references refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" compoundref="timer_8hpp" startline="37" endline="41">lbann::get_time</references>
        <references refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" compoundref="comm_8cpp" startline="1064" endline="1084">get_collective_buffer</references>
        <references refid="structlbann_1_1lbann__comm_1_1allreduce__options_1ad9890ae127412ee65a98cbdb02a4b143" compoundref="comm_8hpp" startline="785">lbann::lbann_comm::allreduce_options::no_local_trans</references>
        <references refid="classlbann_1_1lbann__comm_1a5cdd318d1505ba0f31bf4fe9fadffacc" compoundref="comm_8hpp" startline="896" endline="900">is_rank_node_local</references>
        <references refid="classlbann_1_1lbann__comm_1a4e3d35520a8f567579f9235e9808ba1c" compoundref="comm_8hpp" startline="994">ar_send_transform_time</references>
        <references refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" compoundref="comm_8hpp" startline="982">bytes_sent</references>
        <references refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" compoundref="comm_8hpp" startline="985">ar_bytes_sent</references>
        <references refid="classlbann_1_1lbann__comm_1ac74bcfb565c1bb6604f336c6d1b647cc" compoundref="comm_8hpp" startline="987">ar_rs_bytes_sent</references>
        <references refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" compoundref="comm_8hpp" startline="997">ar_send_time</references>
        <references refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" compoundref="comm_8hpp" startline="998">ar_recv_time</references>
        <references refid="classlbann_1_1lbann__comm_1aaadab22d368e8004a9877828a3bc9e93" compoundref="comm_8hpp" startline="999">ar_rs_send_time</references>
        <references refid="classlbann_1_1lbann__comm_1adefa0ee8b0a6b74072448e20d40f502d" compoundref="comm_8hpp" startline="1000">ar_rs_recv_time</references>
        <references refid="classlbann_1_1lbann__comm_1aa642b0ae2321fa464b0092da527f6375" compoundref="comm_8hpp" startline="996">ar_recv_apply_transform_time</references>
        <references refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" compoundref="comm_8hpp" startline="983">bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" compoundref="comm_8hpp" startline="986">ar_bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1a2c3e1db0f6d2345748132322b0555db7" compoundref="comm_8hpp" startline="988">ar_rs_bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1a85022d803e339eb14a15129a07876c2b" compoundref="comm_8hpp" startline="992">ar_rs_time</references>
        <references refid="classlbann_1_1lbann__comm_1a2cfe1264a83865360692c48d7869fe67" compoundref="comm_8hpp" startline="989">ar_ag_bytes_sent</references>
        <references refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" compoundref="comm_8hpp" startline="779">lbann::lbann_comm::allreduce_options::id_recv</references>
        <references refid="classlbann_1_1lbann__comm_1a64cb0b86e9368c1d83370ba6cb0083ba" compoundref="comm_8hpp" startline="1001">ar_ag_send_time</references>
        <references refid="classlbann_1_1lbann__comm_1a1896c3ecd1d5b084497c6ed47c1c9bae" compoundref="comm_8hpp" startline="1002">ar_ag_recv_time</references>
        <references refid="classlbann_1_1lbann__comm_1adb393f47d60eaa59bace80d2d3dd3bf2" compoundref="comm_8hpp" startline="995">ar_recv_transform_time</references>
        <references refid="classlbann_1_1lbann__comm_1afded6f478dc5021d1edec306dc6c528c" compoundref="comm_8hpp" startline="990">ar_ag_bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1a48768342eb05c1c6cdaa52c3599b93c8" compoundref="comm_8hpp" startline="993">ar_ag_time</references>
        <references refid="classlbann_1_1lbann__comm_1aa57d2fbeef85fd8a3c9f2a37ca7687c8" compoundref="comm_8hpp" startline="991">ar_time</references>
        <referencedby refid="classlbann_1_1lbann__comm_1a34d5414f1ac4749e6f0937b638bb5cc6" compoundref="comm_8cpp" startline="325" endline="374">intermodel_allreduce</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::rabenseifner_allreduce</definition>
        <argsstring>(const El::mpi::Comm comm, Mat &amp;mat, int max_recv_count, std::function&lt; uint8_t *(Mat &amp;, El::IR, El::IR, int &amp;, bool, int)&gt; send_transform, std::function&lt; int(uint8_t *, Mat &amp;)&gt; recv_transform, std::function&lt; int(uint8_t *, Mat &amp;, bool)&gt; recv_apply_transform, const allreduce_options opts)</argsstring>
        <name>rabenseifner_allreduce</name>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_recv_count</declname>
        </param>
        <param>
          <type>std::function&lt; uint8_t *(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;, El::IR, El::IR, int &amp;, bool, int)&gt;</type>
          <declname>send_transform</declname>
        </param>
        <param>
          <type>std::function&lt; int(uint8_t *, <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;)&gt;</type>
          <declname>recv_transform</declname>
        </param>
        <param>
          <type>std::function&lt; int(uint8_t *, <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;, bool)&gt;</type>
          <declname>recv_apply_transform</declname>
        </param>
        <param>
          <type>const <ref refid="structlbann_1_1lbann__comm_1_1allreduce__options" kindref="compound">allreduce_options</ref></type>
          <declname>opts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An allreduce using a recursive-halving reduce-scatter followed by a recursive-doubling allgather. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="873" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="826" bodyend="1003"/>
        <references refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" compoundref="timer_8hpp" startline="37" endline="41">lbann::get_time</references>
        <references refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" compoundref="comm_8cpp" startline="1064" endline="1084">get_collective_buffer</references>
        <references refid="structlbann_1_1lbann__comm_1_1allreduce__options_1ad9890ae127412ee65a98cbdb02a4b143" compoundref="comm_8hpp" startline="785">lbann::lbann_comm::allreduce_options::no_local_trans</references>
        <references refid="classlbann_1_1lbann__comm_1a5cdd318d1505ba0f31bf4fe9fadffacc" compoundref="comm_8hpp" startline="896" endline="900">is_rank_node_local</references>
        <references refid="classlbann_1_1lbann__comm_1a4e3d35520a8f567579f9235e9808ba1c" compoundref="comm_8hpp" startline="994">ar_send_transform_time</references>
        <references refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" compoundref="comm_8hpp" startline="982">bytes_sent</references>
        <references refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" compoundref="comm_8hpp" startline="985">ar_bytes_sent</references>
        <references refid="classlbann_1_1lbann__comm_1ac74bcfb565c1bb6604f336c6d1b647cc" compoundref="comm_8hpp" startline="987">ar_rs_bytes_sent</references>
        <references refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" compoundref="comm_8hpp" startline="997">ar_send_time</references>
        <references refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" compoundref="comm_8hpp" startline="998">ar_recv_time</references>
        <references refid="classlbann_1_1lbann__comm_1aaadab22d368e8004a9877828a3bc9e93" compoundref="comm_8hpp" startline="999">ar_rs_send_time</references>
        <references refid="classlbann_1_1lbann__comm_1adefa0ee8b0a6b74072448e20d40f502d" compoundref="comm_8hpp" startline="1000">ar_rs_recv_time</references>
        <references refid="classlbann_1_1lbann__comm_1aa642b0ae2321fa464b0092da527f6375" compoundref="comm_8hpp" startline="996">ar_recv_apply_transform_time</references>
        <references refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" compoundref="comm_8hpp" startline="983">bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" compoundref="comm_8hpp" startline="986">ar_bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1a2c3e1db0f6d2345748132322b0555db7" compoundref="comm_8hpp" startline="988">ar_rs_bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1a85022d803e339eb14a15129a07876c2b" compoundref="comm_8hpp" startline="992">ar_rs_time</references>
        <references refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" compoundref="comm_8hpp" startline="779">lbann::lbann_comm::allreduce_options::id_recv</references>
        <references refid="classlbann_1_1lbann__comm_1a2cfe1264a83865360692c48d7869fe67" compoundref="comm_8hpp" startline="989">ar_ag_bytes_sent</references>
        <references refid="classlbann_1_1lbann__comm_1a64cb0b86e9368c1d83370ba6cb0083ba" compoundref="comm_8hpp" startline="1001">ar_ag_send_time</references>
        <references refid="classlbann_1_1lbann__comm_1a1896c3ecd1d5b084497c6ed47c1c9bae" compoundref="comm_8hpp" startline="1002">ar_ag_recv_time</references>
        <references refid="classlbann_1_1lbann__comm_1adb393f47d60eaa59bace80d2d3dd3bf2" compoundref="comm_8hpp" startline="995">ar_recv_transform_time</references>
        <references refid="classlbann_1_1lbann__comm_1afded6f478dc5021d1edec306dc6c528c" compoundref="comm_8hpp" startline="990">ar_ag_bytes_received</references>
        <references refid="classlbann_1_1lbann__comm_1a48768342eb05c1c6cdaa52c3599b93c8" compoundref="comm_8hpp" startline="993">ar_ag_time</references>
        <references refid="classlbann_1_1lbann__comm_1aa57d2fbeef85fd8a3c9f2a37ca7687c8" compoundref="comm_8hpp" startline="991">ar_time</references>
        <referencedby refid="classlbann_1_1lbann__comm_1a34d5414f1ac4749e6f0937b638bb5cc6" compoundref="comm_8cpp" startline="325" endline="374">intermodel_allreduce</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a61d59b7dff63ece4c10cd3946b41cb39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>El::mpi::Comm</type>
        <definition>El::mpi::Comm lbann::lbann_comm::get_intermodel_comm</definition>
        <argsstring>() const</argsstring>
        <name>get_intermodel_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the intermodel communicator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="881" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="881" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1acc06dd4de92e45030d6fbe5984ae58d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>El::mpi::Comm</type>
        <definition>El::mpi::Comm lbann::lbann_comm::get_model_comm</definition>
        <argsstring>() const</argsstring>
        <name>get_model_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the model communicator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="886" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="886" bodyend="888"/>
        <referencedby refid="classlbann_1_1pilot2__molecular__reader_1a1b5160021a532f5f19897bd2250e3a46" compoundref="data__reader__pilot2__molecular_8cpp" startline="39" endline="155">lbann::pilot2_molecular_reader::load</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const El::mpi::Comm</type>
        <definition>const El::mpi::Comm lbann::lbann_comm::get_world_comm</definition>
        <argsstring>() const</argsstring>
        <name>get_world_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the world communicator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="891" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="891" bodyend="893"/>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a1865e25ff1f3b6ad417d1853ea0bc6f4" compoundref="callback__ltfb_8cpp" startline="43" endline="69">lbann::anonymous_namespace{callback_ltfb.cpp}::assign_partners</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" compoundref="comm_8cpp" startline="94" endline="130">split_models</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ae12af95f4826571efa03fb8520260daa" compoundref="comm_8cpp" startline="263" endline="266">global_barrier</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a44bc6b8683f04c2a3fc2f01fc734a946" compoundref="comm_8cpp" startline="1005" endline="1045">setup_node_comm</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a5cdd318d1505ba0f31bf4fe9fadffacc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::lbann_comm::is_rank_node_local</definition>
        <argsstring>(int rank, const El::mpi::Comm comm) const</argsstring>
        <name>is_rank_node_local</name>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>const El::mpi::Comm</type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if rank (in comm) is on the local node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="896" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="896" bodyend="900"/>
        <referencedby refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" compoundref="comm_8cpp" startline="376" endline="431">recursive_doubling_allreduce_pow2</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a4ba1b9a6b4eb986a348d85c2d80ca3eb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool lbann::lbann_comm::is_sendable</definition>
        <argsstring>(const Mat &amp;mat)</argsstring>
        <name>is_sendable</name>
        <param>
          <type>const <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if mat can be transmitted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="750" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="750" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ac6addefb7577f81fbc90da94d26991e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool lbann::lbann_comm::is_sendable</definition>
        <argsstring>(const AbsDistMat &amp;dist_mat)</argsstring>
        <name>is_sendable</name>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>dist_mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if the local portion of dist_mat can be transmitted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="758" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="758" bodyend="760"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a44bc6b8683f04c2a3fc2f01fc734a946" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::setup_node_comm</definition>
        <argsstring>()</argsstring>
        <name>setup_node_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup communicator for processes in the same compute node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="1005" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="1005" bodyend="1045"/>
        <references refid="comm_8cpp_1a7a92ceb4ddf57dc156d3a1b39f3ab962" compoundref="comm_8cpp" startline="53">checkMPI</references>
        <references refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" compoundref="comm_8hpp" startline="891" endline="893">get_world_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a8aeb530ae4cedfa4d1141bb9c4704e6c" compoundref="comm_8hpp" startline="931">node_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a3299a37fe7b0eae43a5c154148ab6dc2" compoundref="comm_8hpp" startline="947">world_ranks_on_node</references>
        <referencedby refid="classlbann_1_1lbann__comm_1a63eae73674cbadea2eff8b6595322336" compoundref="comm_8cpp" startline="56" endline="76">lbann_comm</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1a597189b10f61947580f97fb8d1da7355" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::lbann_comm::setup_threads</definition>
        <argsstring>()</argsstring>
        <name>setup_threads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the default number of threads per process. This is the number of OpenMP threads to use for parallel regions, provided omp_set_num_threads has not been called or the num_threads directive has not been provided. If the environment variable OMP_NUM_THREADS is defined, it&apos;s value is used for the default. Otherwise, then the default is the number of hardware cores per node divided by the number of processes per node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="1015" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="1047" bodyend="1056"/>
        <references refid="classlbann_1_1lbann__comm_1a23ff8e3563e4472af29d15f6cb823bc1" compoundref="comm_8hpp" startline="953">threads_per_proc</references>
        <references refid="classlbann_1_1lbann__comm_1a2ffc59f0c1d97df2ca6845312c8c8b3e" compoundref="comm_8hpp" startline="943">procs_per_node</references>
        <references refid="classlbann_1_1lbann__comm_1a10f13918019cd2e021768e3388355ba2" compoundref="comm_8cpp" startline="1058" endline="1062">reset_threads</references>
        <referencedby refid="classlbann_1_1lbann__comm_1a63eae73674cbadea2eff8b6595322336" compoundref="comm_8cpp" startline="56" endline="76">lbann_comm</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t * lbann::lbann_comm::get_collective_buffer</definition>
        <argsstring>(size_t size, size_t idx=0)</argsstring>
        <name>get_collective_buffer</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a buffer from collective_bufs, allocating it if needed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer (in bytes). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the buffer (default 0). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="1022" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="1064" bodyend="1084"/>
        <references refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" compoundref="comm_8hpp" startline="955">collective_bufs</references>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <referencedby refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" compoundref="comm_8cpp" startline="376" endline="431">recursive_doubling_allreduce_pow2</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" compoundref="comm_8cpp" startline="433" endline="651">pe_ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" compoundref="comm_8cpp" startline="653" endline="824">ring_allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" compoundref="comm_8cpp" startline="826" endline="1003">rabenseifner_allreduce</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Manage communication. This supports separate models, each of which are split over potentially several processes. Every model is split over the same number of processes. The corresponding processes between models are on the &quot;inter-model
communicator&quot;. You can also do point-to-point or broadcast communication to arbitrary sets of processes. </para>    </detaileddescription>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" line="90" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/comm.hpp" bodystart="90" bodyend="1024"/>
    <listofallmembers>
      <member refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>allreduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a12dd4f5476c54bdaf1ae2b348174b9fd" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>allreduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a14adb0771b966f40536bf0e92fb00ebb" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>allreduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1adaff1e6549a3fb902c85f1be2718c1ff" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>allreduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>allreduce_algorithm</name></member>
      <member refid="classlbann_1_1lbann__comm_1ad8a5790dfa9191d4b4f889e8707e57f1" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>am_model_master</name></member>
      <member refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>am_world_master</name></member>
      <member refid="classlbann_1_1lbann__comm_1afded6f478dc5021d1edec306dc6c528c" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_ag_bytes_received</name></member>
      <member refid="classlbann_1_1lbann__comm_1a2cfe1264a83865360692c48d7869fe67" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_ag_bytes_sent</name></member>
      <member refid="classlbann_1_1lbann__comm_1a1896c3ecd1d5b084497c6ed47c1c9bae" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_ag_recv_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a64cb0b86e9368c1d83370ba6cb0083ba" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_ag_send_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a48768342eb05c1c6cdaa52c3599b93c8" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_ag_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_bytes_received</name></member>
      <member refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_bytes_sent</name></member>
      <member refid="classlbann_1_1lbann__comm_1aa642b0ae2321fa464b0092da527f6375" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_recv_apply_transform_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_recv_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1adb393f47d60eaa59bace80d2d3dd3bf2" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_recv_transform_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a2c3e1db0f6d2345748132322b0555db7" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_rs_bytes_received</name></member>
      <member refid="classlbann_1_1lbann__comm_1ac74bcfb565c1bb6604f336c6d1b647cc" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_rs_bytes_sent</name></member>
      <member refid="classlbann_1_1lbann__comm_1adefa0ee8b0a6b74072448e20d40f502d" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_rs_recv_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1aaadab22d368e8004a9877828a3bc9e93" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_rs_send_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a85022d803e339eb14a15129a07876c2b" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_rs_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_send_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a4e3d35520a8f567579f9235e9808ba1c" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_send_transform_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1aa57d2fbeef85fd8a3c9f2a37ca7687c8" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ar_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a303c02c5a127f3ed21f12c9a71cc90a6" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>barrier</name></member>
      <member refid="classlbann_1_1lbann__comm_1af823b7ca3caccbd0710cd1435e60506b" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>broadcast</name></member>
      <member refid="classlbann_1_1lbann__comm_1a34bb0766e57fda27e6618c9e66fec269" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>broadcast</name></member>
      <member refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>bytes_received</name></member>
      <member refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>bytes_sent</name></member>
      <member refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>collective_bufs</name></member>
      <member refid="classlbann_1_1lbann__comm_1ac7731d6bcdb6775009467cf4138d4bab" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>default_allreduce_algo</name></member>
      <member refid="classlbann_1_1lbann__comm_1aa784298e6ed0f9f01a20b179d5110df9" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>gather</name></member>
      <member refid="classlbann_1_1lbann__comm_1ae4b572b9b6538ab148b3082f54514c19" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>gather</name></member>
      <member refid="classlbann_1_1lbann__comm_1a46a70202481a0b8bc5770f7174d8462f" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>gather</name></member>
      <member refid="classlbann_1_1lbann__comm_1a6d9e9a16e30045690ea416bf25b77148" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>gather</name></member>
      <member refid="classlbann_1_1lbann__comm_1a90680b777bcecb4d24392b3300919066" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>gather</name></member>
      <member refid="classlbann_1_1lbann__comm_1a7aaeb171cd6f08926a6919e9a7892a73" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_ag_bytes_received</name></member>
      <member refid="classlbann_1_1lbann__comm_1af745b91711014bf5a9f8d2466b5a6634" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_ag_bytes_sent</name></member>
      <member refid="classlbann_1_1lbann__comm_1a78820c4fbd15df596d41844276cc966a" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_ag_recv_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a4482ccdfe56837dd4152c3a33f523a1c" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_ag_send_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1aca331207a61bf11d8979c2c06e20b6be" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_ag_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a1b7c53c7c8e04543e1a262a01d847976" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_bytes_received</name></member>
      <member refid="classlbann_1_1lbann__comm_1ae0be48a03e4e8af43929c97a31a8f361" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_bytes_sent</name></member>
      <member refid="classlbann_1_1lbann__comm_1a893af1da4330be474871eeb8b2f9a7b5" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_recv_apply_transform_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a925aad805ceda573cd380b95b8c4a34a" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_recv_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1afa5144a3d7bd40e1d78193d9f299e8ec" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_recv_transform_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a4ed37b23401cd6df6502229bae0e5a1d" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_rs_bytes_received</name></member>
      <member refid="classlbann_1_1lbann__comm_1a7b9827e5f46d535c8ab2cf2f6c576291" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_rs_bytes_sent</name></member>
      <member refid="classlbann_1_1lbann__comm_1ab3474bd1c09ca432e302279acfd83307" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_rs_recv_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a7222cd0613d9a94eafc89c51bfeae20d" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_rs_send_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a3db95439bebabcc1648e50698d56dbaa" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_rs_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a2643a3713d7c2ed64851fc345ba2273f" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_send_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1aed5d56c2b7205009c67ab37ea1c1556f" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_send_transform_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1a29e966df9f8241bba47aa1663ce4151a" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_ar_time</name></member>
      <member refid="classlbann_1_1lbann__comm_1aadc407cd170fc9da46cdc4483f424b2a" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_bytes_received</name></member>
      <member refid="classlbann_1_1lbann__comm_1afe3d3d12c544b43c478b968ef4226561" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_bytes_sent</name></member>
      <member refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_collective_buffer</name></member>
      <member refid="classlbann_1_1lbann__comm_1aa1db618eb587ead21fb0420bf94bfd45" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_count</name></member>
      <member refid="classlbann_1_1lbann__comm_1a54544a1b1a691fa7b6314da5682f184c" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_count</name></member>
      <member refid="classlbann_1_1lbann__comm_1aafcb505629dd550ebd0b2c41792aca27" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_default_allreduce_algorithm</name></member>
      <member refid="classlbann_1_1lbann__comm_1a3c60c211a663801b57197dddf58356da" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_default_threads_per_proc</name></member>
      <member refid="classlbann_1_1lbann__comm_1a61d59b7dff63ece4c10cd3946b41cb39" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_intermodel_comm</name></member>
      <member refid="classlbann_1_1lbann__comm_1adbd99fe6c8df2689217c9ee16d6234d7" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_intermodel_master</name></member>
      <member refid="classlbann_1_1lbann__comm_1acc06dd4de92e45030d6fbe5984ae58d1" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_model_comm</name></member>
      <member refid="classlbann_1_1lbann__comm_1a483bf8a72d44a0e83da45f3d47bd20d4" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_model_grid</name></member>
      <member refid="classlbann_1_1lbann__comm_1a96d8d7a0ff8ee1511f8c8b8fa92628af" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_model_master</name></member>
      <member refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_model_rank</name></member>
      <member refid="classlbann_1_1lbann__comm_1ad5a4f05dc5a2c992ebb659650a7dc6ce" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_num_global_barriers</name></member>
      <member refid="classlbann_1_1lbann__comm_1a78ea2f289eb8de66edecb84b6cf48b84" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_num_intermodel_barriers</name></member>
      <member refid="classlbann_1_1lbann__comm_1ab07201c12c01f065acb151f2a3c32efa" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_num_model_barriers</name></member>
      <member refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_num_models</name></member>
      <member refid="classlbann_1_1lbann__comm_1a1eb92927a8f8bcbdd677ccecc1a33c59" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_procs_in_world</name></member>
      <member refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_procs_per_model</name></member>
      <member refid="classlbann_1_1lbann__comm_1ac5ccd63337b0cbb2fd730fddd9f8da3e" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_procs_per_node</name></member>
      <member refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_rank_in_model</name></member>
      <member refid="classlbann_1_1lbann__comm_1acebc5ff36fcb64c05f66757953aefb8c" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_rank_in_node</name></member>
      <member refid="classlbann_1_1lbann__comm_1a4519335d6772dab3c36517618260d48a" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_rank_in_world</name></member>
      <member refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_world_comm</name></member>
      <member refid="classlbann_1_1lbann__comm_1aa682313f366e0b7cf781bc1872911f65" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_world_master</name></member>
      <member refid="classlbann_1_1lbann__comm_1ab3b1ebe8b72575094405eb2e37bb447d" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>get_world_rank</name></member>
      <member refid="classlbann_1_1lbann__comm_1ae12af95f4826571efa03fb8520260daa" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>global_barrier</name></member>
      <member refid="classlbann_1_1lbann__comm_1a29fb31be115db3225b145f250a7778d9" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>grid</name></member>
      <member refid="classlbann_1_1lbann__comm_1a502bd724f9fb27f0e899306c69a3ec47" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_allreduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a34d5414f1ac4749e6f0937b638bb5cc6" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_allreduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a5834e95e066313d9328b22e4a0ec8663" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_barrier</name></member>
      <member refid="classlbann_1_1lbann__comm_1a158db6a85549d314be56806dcb442432" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_broadcast</name></member>
      <member refid="classlbann_1_1lbann__comm_1a4989229db1ee858c5a2170a989653d0b" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_broadcast_matrix</name></member>
      <member refid="classlbann_1_1lbann__comm_1a7fb6be066a634169cb41cef3f98032f0" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_broadcast_matrix</name></member>
      <member refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_comm</name></member>
      <member refid="classlbann_1_1lbann__comm_1a142c396a4d4a2c16ee234b813e7e45a6" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_gather</name></member>
      <member refid="classlbann_1_1lbann__comm_1aafaadde82ce60f467b5dcf014dc78481" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_gather</name></member>
      <member refid="classlbann_1_1lbann__comm_1a3fe4457945fb78769a69ac7f86e4bc11" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_gather</name></member>
      <member refid="classlbann_1_1lbann__comm_1a954d59f6574884b9a6c7d5228e9460d4" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_gather</name></member>
      <member refid="classlbann_1_1lbann__comm_1a485715aa8e0e05d9ced78346342692a5" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_reduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a4861b03da73bbc8fec61a10ebf129ee0" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_reduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a68b36ba64db34f33cb135bc64c4623e0" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_sum_matrix</name></member>
      <member refid="classlbann_1_1lbann__comm_1a55edcd98bf4903235ed11eb7c96f5eb4" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>intermodel_sum_matrix</name></member>
      <member refid="classlbann_1_1lbann__comm_1a5cdd318d1505ba0f31bf4fe9fadffacc" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>is_rank_node_local</name></member>
      <member refid="classlbann_1_1lbann__comm_1a4ba1b9a6b4eb986a348d85c2d80ca3eb" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>is_sendable</name></member>
      <member refid="classlbann_1_1lbann__comm_1ac6addefb7577f81fbc90da94d26991e4" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>is_sendable</name></member>
      <member refid="classlbann_1_1lbann__comm_1a17ef6771432c3e91cd7d404d182ed531" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>is_world_rank_on_node</name></member>
      <member refid="classlbann_1_1lbann__comm_1a63eae73674cbadea2eff8b6595322336" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>lbann_comm</name></member>
      <member refid="classlbann_1_1lbann__comm_1a198a6066e7908941898e07ebd62f8d18" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>lbann_comm</name></member>
      <member refid="classlbann_1_1lbann__comm_1aebb6290d1b618eace302404291c598a5" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_allreduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a6dce8c5dd188633e69e9d5c79e5ef1bd" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_allreduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a6086ced12c3eefeea6e2a78eff286983" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_barrier</name></member>
      <member refid="classlbann_1_1lbann__comm_1a929f44a9a9563ae9e4ffe7d44235a195" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_broadcast</name></member>
      <member refid="classlbann_1_1lbann__comm_1a58a75b76bd61ec8a26c1cbbec3dc2f45" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_comm</name></member>
      <member refid="classlbann_1_1lbann__comm_1ab7cdeca37f1fcd22a3b69f6134fb299f" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_gather</name></member>
      <member refid="classlbann_1_1lbann__comm_1a54ee25dd95d57c0781ac0aa84d30ab8b" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_gather</name></member>
      <member refid="classlbann_1_1lbann__comm_1ab3d868497325882372e1a8d9f878cd2f" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_gather</name></member>
      <member refid="classlbann_1_1lbann__comm_1adc1c96023f4546d57f0a85e905d070b4" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_gather</name></member>
      <member refid="classlbann_1_1lbann__comm_1a9d4eeae3b7ed19d48e95fc3f7138885b" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_gatherv</name></member>
      <member refid="classlbann_1_1lbann__comm_1a2752b91d60548d15320d5808d8c523d2" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_gatherv</name></member>
      <member refid="classlbann_1_1lbann__comm_1a1f3f90a996dbba4cd1cca60596933ea3" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_rank</name></member>
      <member refid="classlbann_1_1lbann__comm_1a4903dbabf8f649abc2734510d434eed2" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_reduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1aac992e520cfbfb5f7b403ee6c9334b0e" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_reduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1aa605a57eb9132fc575e90b1ac825cf0b" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_reduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1aba37a188f88277b23583aa8bea2e2f04" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>model_reduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a2a7bb6cf3707366fc0671d8894ca30ea" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_allreduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1afb144a99e0cd2241f5fb05cad68b1f08" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_allreduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1ad75e65db156edd86efa26ef1986668d0" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1a8f850662e84e3efab19244d1ef6752d7" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1abec714b3f80361f104eaa004d906798b" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1ad76ddffcad6e996b8da2ba7670d20b24" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1aec876be95ab91bfff6337f06adc6a797" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1a77c74bcc60e9946d45cf575234a7acc2" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1a4e703fa356dd7807fda82d1d1eb81e1d" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1a105c0fa7997f23637cbd03d566748bca" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1a70679ca6477c56972f9bc53d52e5ce21" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_send</name></member>
      <member refid="classlbann_1_1lbann__comm_1a6d9de11c64685e0983b196044856d281" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_send</name></member>
      <member refid="classlbann_1_1lbann__comm_1ae86cb0f65c8e11dec7a1cf0d3ce17cd2" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_send</name></member>
      <member refid="classlbann_1_1lbann__comm_1ad77344b63311b7ec57c63af67120c3e6" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_send</name></member>
      <member refid="classlbann_1_1lbann__comm_1a7d22130a7d24a710fe6b31c0ccec78b1" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_send</name></member>
      <member refid="classlbann_1_1lbann__comm_1a1144c161ccc147d879d088b5832d64a7" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>nb_send</name></member>
      <member refid="classlbann_1_1lbann__comm_1a8aeb530ae4cedfa4d1141bb9c4704e6c" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>node_comm</name></member>
      <member refid="classlbann_1_1lbann__comm_1a4f01e2f2d8220dc34cf39eb4a255cd7d" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>num_global_barriers</name></member>
      <member refid="classlbann_1_1lbann__comm_1a03d946ef5ea5d3b15351e78a2eed10fe" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>num_intermodel_barriers</name></member>
      <member refid="classlbann_1_1lbann__comm_1aa4f15459eca2a06174a877ba0c23feb7" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>num_model_barriers</name></member>
      <member refid="classlbann_1_1lbann__comm_1a256ff5a0bafb33f43784ffc8dd2d29cf" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>num_models</name></member>
      <member refid="classlbann_1_1lbann__comm_1ae5373895ee134866be9f2b042a1cef21" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>pe_ring_allreduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>procs_per_model</name></member>
      <member refid="classlbann_1_1lbann__comm_1a2ffc59f0c1d97df2ca6845312c8c8b3e" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>procs_per_node</name></member>
      <member refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>rabenseifner_allreduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a0dcccd57c2b591eb7682e192e0a09033" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>rank_in_model</name></member>
      <member refid="classlbann_1_1lbann__comm_1abb5c8b008b5cac11702bf1f991c78ab0" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>rank_in_node</name></member>
      <member refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>recursive_doubling_allreduce_pow2</name></member>
      <member refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1a7f2f06772bdee76b4d736c1d7ab84329" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1ac1ed8dd7b6f839b69bfb33f88728b18d" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1a1376b4f3c0941e19ff23a8baf30eb63d" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1a6b1ecfe900346c0996fb8066e4f76fe2" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1a018f0451e2a984d28b6a1f099cf9d421" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1ab96fe808a236d41ecd05c0cc2461dba0" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1a3d0cca55711c9c9913f3d940c5bba4eb" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1acc92b86b30287689870e018b062076f8" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>recv</name></member>
      <member refid="classlbann_1_1lbann__comm_1ab8a2261394c978aa7e4b74ecebc739a8" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>reduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a982adc23d7e6e6224f8bbd846672e429" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>reduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a5543241da0cf9193fd1f331bbad5dd70" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>reduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a476ad01cab90fd01228ec1273a8e389e" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>reduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1adb9afab1b8af03276e6e6347f8021ef5" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>reset_stats_counters</name></member>
      <member refid="classlbann_1_1lbann__comm_1a10f13918019cd2e021768e3388355ba2" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>reset_threads</name></member>
      <member refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>ring_allreduce</name></member>
      <member refid="classlbann_1_1lbann__comm_1a74b5c594bfa5aec03af9ad2bd8f5e979" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>scatter</name></member>
      <member refid="classlbann_1_1lbann__comm_1a4918100a99e03a6bca3ec304cb282172" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>scatter</name></member>
      <member refid="classlbann_1_1lbann__comm_1a086078b881e7250df140ac116adb1939" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>send</name></member>
      <member refid="classlbann_1_1lbann__comm_1a12ddcc441fa1073aff23797c3c923ef6" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>send</name></member>
      <member refid="classlbann_1_1lbann__comm_1ac3fa03c3ee8351daed6c7a5fd6f8535d" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>send</name></member>
      <member refid="classlbann_1_1lbann__comm_1ae6ad297cccfc9ed893b855046d60b34d" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>send</name></member>
      <member refid="classlbann_1_1lbann__comm_1a4dc53b43a36e597a0c11266ea3c6d7f7" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>send</name></member>
      <member refid="classlbann_1_1lbann__comm_1aeb76535e61e5bc669ebadad223e4add7" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>send</name></member>
      <member refid="classlbann_1_1lbann__comm_1a6314e3b07b21b8fb0cd2ebe1e49dddb9" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>sendrecv</name></member>
      <member refid="classlbann_1_1lbann__comm_1a61e8479f25d209be238f1b61115f7a0d" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>sendrecv</name></member>
      <member refid="classlbann_1_1lbann__comm_1aaae50e4643ca06671e7cb7872d455708" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>set_default_allreduce_algorithm</name></member>
      <member refid="classlbann_1_1lbann__comm_1a44bc6b8683f04c2a3fc2f01fc734a946" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>setup_node_comm</name></member>
      <member refid="classlbann_1_1lbann__comm_1a597189b10f61947580f97fb8d1da7355" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>setup_threads</name></member>
      <member refid="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>split_models</name></member>
      <member refid="classlbann_1_1lbann__comm_1a99303a11b939b4aba9d4a67dd0deef56" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>test</name></member>
      <member refid="classlbann_1_1lbann__comm_1a23ff8e3563e4472af29d15f6cb823bc1" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>threads_per_proc</name></member>
      <member refid="classlbann_1_1lbann__comm_1a30439f28cf615e1406090799c5499321" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>wait</name></member>
      <member refid="classlbann_1_1lbann__comm_1a91d09d595801f6228ee0aecf6dea25c7" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>wait</name></member>
      <member refid="classlbann_1_1lbann__comm_1a1fc59c935580eab2ce8e60464a45ef39" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>world_comm</name></member>
      <member refid="classlbann_1_1lbann__comm_1a3299a37fe7b0eae43a5c154148ab6dc2" prot="private" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>world_ranks_on_node</name></member>
      <member refid="classlbann_1_1lbann__comm_1af17b1093313c5e4223f9036798f9e12f" prot="public" virt="non-virtual"><scope>lbann::lbann_comm</scope><name>~lbann_comm</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
