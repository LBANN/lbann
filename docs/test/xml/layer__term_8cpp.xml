<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="layer__term_8cpp" kind="file" language="C++">
    <compoundname>layer_term.cpp</compoundname>
    <includes refid="layer__term_8hpp" local="yes">lbann/objective_functions/layer_term.hpp</includes>
    <incdepgraph>
      <node id="21894">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="21895" relation="include">
        </childnode>
        <childnode refid="21891" relation="include">
        </childnode>
        <childnode refid="21880" relation="include">
        </childnode>
        <childnode refid="21890" relation="include">
        </childnode>
      </node>
      <node id="21906">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="21880" relation="include">
        </childnode>
        <childnode refid="21881" relation="include">
        </childnode>
      </node>
      <node id="21881">
        <label>El.hpp</label>
      </node>
      <node id="21880">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="21881" relation="include">
        </childnode>
        <childnode refid="21882" relation="include">
        </childnode>
        <childnode refid="21883" relation="include">
        </childnode>
        <childnode refid="21888" relation="include">
        </childnode>
      </node>
      <node id="21895">
        <label>string</label>
      </node>
      <node id="21903">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="21891" relation="include">
        </childnode>
        <childnode refid="21880" relation="include">
        </childnode>
        <childnode refid="21890" relation="include">
        </childnode>
        <childnode refid="21898" relation="include">
        </childnode>
      </node>
      <node id="21878">
        <label>lbann/objective_functions/layer_term.hpp</label>
        <link refid="layer__term_8hpp"/>
        <childnode refid="21879" relation="include">
        </childnode>
        <childnode refid="21911" relation="include">
        </childnode>
      </node>
      <node id="21909">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="21910" relation="include">
        </childnode>
      </node>
      <node id="21892">
        <label>map</label>
      </node>
      <node id="21908">
        <label>unordered_set</label>
      </node>
      <node id="21902">
        <label>exception</label>
      </node>
      <node id="21912">
        <label>lbann/layers/transform/transform.hpp</label>
        <link refid="transform_8hpp"/>
        <childnode refid="21889" relation="include">
        </childnode>
      </node>
      <node id="21911">
        <label>lbann/layers/transform/evaluation.hpp</label>
        <link refid="evaluation_8hpp"/>
        <childnode refid="21912" relation="include">
        </childnode>
      </node>
      <node id="21877">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/layer_term.cpp</label>
        <link refid="layer__term_8cpp"/>
        <childnode refid="21878" relation="include">
        </childnode>
      </node>
      <node id="21905">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="21880" relation="include">
        </childnode>
        <childnode refid="21890" relation="include">
        </childnode>
        <childnode refid="21898" relation="include">
        </childnode>
        <childnode refid="21903" relation="include">
        </childnode>
      </node>
      <node id="21885">
        <label>cstdio</label>
      </node>
      <node id="21899">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="21900" relation="include">
        </childnode>
        <childnode refid="21895" relation="include">
        </childnode>
      </node>
      <node id="21887">
        <label>cxxabi.h</label>
      </node>
      <node id="21898">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="21880" relation="include">
        </childnode>
        <childnode refid="21890" relation="include">
        </childnode>
        <childnode refid="21899" relation="include">
        </childnode>
        <childnode refid="21901" relation="include">
        </childnode>
        <childnode refid="21902" relation="include">
        </childnode>
      </node>
      <node id="21891">
        <label>vector</label>
      </node>
      <node id="21890">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="21891" relation="include">
        </childnode>
        <childnode refid="21892" relation="include">
        </childnode>
        <childnode refid="21893" relation="include">
        </childnode>
        <childnode refid="21880" relation="include">
        </childnode>
      </node>
      <node id="21907">
        <label>lbann.pb.h</label>
      </node>
      <node id="21884">
        <label>cstdlib</label>
      </node>
      <node id="21901">
        <label>iostream</label>
      </node>
      <node id="21896">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="21897" relation="include">
        </childnode>
        <childnode refid="21880" relation="include">
        </childnode>
        <childnode refid="21890" relation="include">
        </childnode>
        <childnode refid="21898" relation="include">
        </childnode>
        <childnode refid="21903" relation="include">
        </childnode>
        <childnode refid="21904" relation="include">
        </childnode>
        <childnode refid="21895" relation="include">
        </childnode>
        <childnode refid="21908" relation="include">
        </childnode>
      </node>
      <node id="21889">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="21880" relation="include">
        </childnode>
        <childnode refid="21890" relation="include">
        </childnode>
        <childnode refid="21894" relation="include">
        </childnode>
        <childnode refid="21896" relation="include">
        </childnode>
        <childnode refid="21898" relation="include">
        </childnode>
        <childnode refid="21903" relation="include">
        </childnode>
        <childnode refid="21909" relation="include">
        </childnode>
        <childnode refid="21906" relation="include">
        </childnode>
        <childnode refid="21907" relation="include">
        </childnode>
        <childnode refid="21895" relation="include">
        </childnode>
        <childnode refid="21891" relation="include">
        </childnode>
      </node>
      <node id="21910">
        <label>chrono</label>
      </node>
      <node id="21879">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="21880" relation="include">
        </childnode>
        <childnode refid="21889" relation="include">
        </childnode>
        <childnode refid="21904" relation="include">
        </childnode>
      </node>
      <node id="21900">
        <label>csignal</label>
      </node>
      <node id="21904">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="21895" relation="include">
        </childnode>
        <childnode refid="21880" relation="include">
        </childnode>
        <childnode refid="21890" relation="include">
        </childnode>
        <childnode refid="21898" relation="include">
        </childnode>
        <childnode refid="21903" relation="include">
        </childnode>
        <childnode refid="21905" relation="include">
        </childnode>
        <childnode refid="21906" relation="include">
        </childnode>
        <childnode refid="21907" relation="include">
        </childnode>
      </node>
      <node id="21888">
        <label>lbann_config.hpp</label>
      </node>
      <node id="21897">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="21883">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="21884" relation="include">
        </childnode>
        <childnode refid="21885" relation="include">
        </childnode>
        <childnode refid="21886" relation="include">
        </childnode>
        <childnode refid="21887" relation="include">
        </childnode>
      </node>
      <node id="21882">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="21881" relation="include">
        </childnode>
      </node>
      <node id="21893">
        <label>typeindex</label>
      </node>
      <node id="21886">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="layer__term_8hpp" kindref="compound">lbann/objective_functions/layer_term.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classlbann_1_1layer__term_1a5c9eec2b5212adc5dc947ba2e9c88802" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1layer__term_1a5c9eec2b5212adc5dc947ba2e9c88802" kindref="member">layer_term::layer_term</ref>(<ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>scale_factor)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1objective__function__term" kindref="compound">objective_function_term</ref>(scale_factor)<sp/>{}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classlbann_1_1layer__term_1a04ca36543288fb9c55ab99cc0cc2a648" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1layer__term_1a04ca36543288fb9c55ab99cc0cc2a648" kindref="member">layer_term::set_evaluation_layer</ref>(<ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" kindref="member">m_layers</ref>.assign(1,<sp/>l);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classlbann_1_1layer__term_1ae6d84339fb80384ca2bf898fb854a7c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1layer__term_1ae6d84339fb80384ca2bf898fb854a7c9" kindref="member">layer_term::setup</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref>&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1objective__function__term_1a6c8dbdf18aac8676098189fb7b178e91" kindref="member">objective_function_term::setup</ref>(m);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>layer<sp/>term<sp/>points<sp/>to<sp/>an<sp/>evaluation<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" kindref="member">m_layers</ref>.size()<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;layer<sp/>term<sp/>in<sp/>objective<sp/>function<sp/>points<sp/>to<sp/>an<sp/>invalid<sp/>number<sp/>of<sp/>layers<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(expected<sp/>1,<sp/>found<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" kindref="member">m_layers</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(err.str());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" kindref="member">m_layers</ref>[0]<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;layer<sp/>term<sp/>in<sp/>objective<sp/>function<sp/>points<sp/>to<sp/>a<sp/>null<sp/>pointer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>eval<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1evaluation__layer" kindref="compound">evaluation_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" kindref="member">m_layers</ref>[0]);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eval<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;layer<sp/>term<sp/>in<sp/>objective<sp/>function<sp/>must<sp/>point<sp/>to<sp/>an<sp/>evaluation<sp/>layer,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;but<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" kindref="member">m_layers</ref>[0]-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" kindref="member">m_layers</ref>[0]-&gt;get_type();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(err.str());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>scaling<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>eval-&gt;set_scale(<ref refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" kindref="member">m_scale_factor</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classlbann_1_1layer__term_1ae2ab6b694701db724345573416ce0427" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1layer__term_1ae2ab6b694701db724345573416ce0427" kindref="member">layer_term::start_evaluation</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classlbann_1_1layer__term_1a2b0fdcf6a0dd7bea797b5ef1b4082f70" refkind="member"><highlight class="normal"><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/><ref refid="classlbann_1_1layer__term_1a2b0fdcf6a0dd7bea797b5ef1b4082f70" kindref="member">layer_term::finish_evaluation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" kindref="member">m_scale_factor</ref><sp/>==<sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0);<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>eval<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1evaluation__layer" kindref="compound">evaluation_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" kindref="member">m_layers</ref>[0]);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>eval-&gt;<ref refid="classlbann_1_1evaluation__layer_1a47fe13276e74f749f6fceebc25c63bcf" kindref="member">set_scale</ref>(<ref refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" kindref="member">m_scale_factor</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eval-&gt;get_value();</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classlbann_1_1layer__term_1a857df1636853ea9b805611c55ff791e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1layer__term_1a857df1636853ea9b805611c55ff791e3" kindref="member">layer_term::differentiate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>eval<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1evaluation__layer" kindref="compound">evaluation_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" kindref="member">m_layers</ref>[0]);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>eval-&gt;<ref refid="classlbann_1_1evaluation__layer_1a47fe13276e74f749f6fceebc25c63bcf" kindref="member">set_scale</ref>(<ref refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" kindref="member">m_scale_factor</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/layer_term.cpp"/>
  </compounddef>
</doxygen>
