<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1greedy__layerwise__autoencoder" kind="class" language="C++" prot="public">
    <compoundname>lbann::greedy_layerwise_autoencoder</compoundname>
    <basecompoundref refid="classlbann_1_1sequential__model" prot="public" virt="non-virtual">lbann::sequential_model</basecompoundref>
    <includes refid="greedy__layerwise__autoencoder_8hpp" local="no">greedy_layerwise_autoencoder.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::greedy_layerwise_autoencoder::m_phase</definition>
        <argsstring></argsstring>
        <name>m_phase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current training phase. If negative, the model is sequential. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="67" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" bodystart="67" bodyend="-1"/>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1adf8750be08e34891701a24678f703acd" compoundref="greedy__layerwise__autoencoder_8cpp" startline="42" endline="50">greedy_layerwise_autoencoder</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1ac5e2de693353966b7816ca10282068f5" compoundref="greedy__layerwise__autoencoder_8cpp" startline="52" endline="60">operator=</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" compoundref="greedy__layerwise__autoencoder_8cpp" startline="160" endline="212">set_phase</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" compoundref="greedy__layerwise__autoencoder_8cpp" startline="214" endline="244">restore_sequential_model</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" compoundref="greedy__layerwise__autoencoder_8cpp" startline="246" endline="292">forward_prop</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" compoundref="greedy__layerwise__autoencoder_8cpp" startline="294" endline="332">backward_prop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1greedy__layerwise__autoencoder_1a792010a00136ee1e024b6e5d38c77386" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::greedy_layerwise_autoencoder::m_num_phases</definition>
        <argsstring></argsstring>
        <name>m_num_phases</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of training phases. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="69" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" bodystart="69" bodyend="-1"/>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1ac5e2de693353966b7816ca10282068f5" compoundref="greedy__layerwise__autoencoder_8cpp" startline="52" endline="60">operator=</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a115607e435ae4685531a81852ce01fe7" compoundref="greedy__layerwise__autoencoder_8cpp" startline="66" endline="135">setup_layer_topology</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">train</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; lbann::greedy_layerwise_autoencoder::m_sections</definition>
        <argsstring></argsstring>
        <name>m_sections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> indices for the boundaries of model sections. The first half sections are considered as encoders and the second half as decoders. Each training phase consists of training an encoder and decoder while keeping the rest of the model frozen. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="76" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" bodystart="76" bodyend="-1"/>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1ac5e2de693353966b7816ca10282068f5" compoundref="greedy__layerwise__autoencoder_8cpp" startline="52" endline="60">operator=</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a115607e435ae4685531a81852ce01fe7" compoundref="greedy__layerwise__autoencoder_8cpp" startline="66" endline="135">setup_layer_topology</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" compoundref="greedy__layerwise__autoencoder_8cpp" startline="160" endline="212">set_phase</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" compoundref="greedy__layerwise__autoencoder_8cpp" startline="214" endline="244">restore_sequential_model</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" compoundref="greedy__layerwise__autoencoder_8cpp" startline="246" endline="292">forward_prop</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" compoundref="greedy__layerwise__autoencoder_8cpp" startline="294" endline="332">backward_prop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" prot="protected" static="no" mutable="no">
        <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer* lbann::greedy_layerwise_autoencoder::m_reconstruction</definition>
        <argsstring></argsstring>
        <name>m_reconstruction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reconstruction layer for training phases. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="78" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" bodystart="78" bodyend="-1"/>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a74aa0b263d78b6a7a8ac32cde6e05c4c" compoundref="greedy__layerwise__autoencoder_8cpp" startline="62" endline="64">~greedy_layerwise_autoencoder</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" compoundref="greedy__layerwise__autoencoder_8cpp" startline="160" endline="212">set_phase</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" compoundref="greedy__layerwise__autoencoder_8cpp" startline="214" endline="244">restore_sequential_model</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" compoundref="greedy__layerwise__autoencoder_8cpp" startline="246" endline="292">forward_prop</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" compoundref="greedy__layerwise__autoencoder_8cpp" startline="294" endline="332">backward_prop</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1greedy__layerwise__autoencoder_1a36dff325c3c756623b28cb056f91e058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::greedy_layerwise_autoencoder::greedy_layerwise_autoencoder</definition>
        <argsstring>(lbann_comm *comm, int mini_batch_size, objective_function *obj_fn, optimizer *default_optimizer)</argsstring>
        <name>greedy_layerwise_autoencoder</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mini_batch_size</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1objective__function" kindref="compound">objective_function</ref> *</type>
          <declname>obj_fn</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref> *</type>
          <declname>default_optimizer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="40" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp" bodystart="35" bodyend="40"/>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a435fa0830662ebde904b9e70902f7e16" compoundref="greedy__layerwise__autoencoder_8hpp" startline="52" endline="54">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1greedy__layerwise__autoencoder_1adf8750be08e34891701a24678f703acd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::greedy_layerwise_autoencoder::greedy_layerwise_autoencoder</definition>
        <argsstring>(const greedy_layerwise_autoencoder &amp;)</argsstring>
        <name>greedy_layerwise_autoencoder</name>
        <param>
          <type>const <ref refid="classlbann_1_1greedy__layerwise__autoencoder" kindref="compound">greedy_layerwise_autoencoder</ref> &amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="46" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp" bodystart="42" bodyend="50"/>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" compoundref="greedy__layerwise__autoencoder_8cpp" startline="160" endline="212">set_phase</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" compoundref="greedy__layerwise__autoencoder_8hpp" startline="67">m_phase</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1greedy__layerwise__autoencoder_1ac5e2de693353966b7816ca10282068f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1greedy__layerwise__autoencoder" kindref="compound">greedy_layerwise_autoencoder</ref> &amp;</type>
        <definition>greedy_layerwise_autoencoder &amp; lbann::greedy_layerwise_autoencoder::operator=</definition>
        <argsstring>(const greedy_layerwise_autoencoder &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1greedy__layerwise__autoencoder" kindref="compound">greedy_layerwise_autoencoder</ref> &amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy assignment operator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="48" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp" bodystart="52" bodyend="60"/>
        <references refid="classlbann_1_1sequential__model_1a9714c99522b90488c486b390c5a7b6f3">lbann::sequential_model::operator=</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a792010a00136ee1e024b6e5d38c77386" compoundref="greedy__layerwise__autoencoder_8hpp" startline="69">m_num_phases</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" compoundref="greedy__layerwise__autoencoder_8hpp" startline="76">m_sections</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" compoundref="greedy__layerwise__autoencoder_8hpp" startline="67">m_phase</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" compoundref="greedy__layerwise__autoencoder_8cpp" startline="160" endline="212">set_phase</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1greedy__layerwise__autoencoder_1a74aa0b263d78b6a7a8ac32cde6e05c4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::greedy_layerwise_autoencoder::~greedy_layerwise_autoencoder</definition>
        <argsstring>() override</argsstring>
        <name>~greedy_layerwise_autoencoder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="50" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp" bodystart="62" bodyend="64"/>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" compoundref="greedy__layerwise__autoencoder_8hpp" startline="78">m_reconstruction</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1greedy__layerwise__autoencoder_1a435fa0830662ebde904b9e70902f7e16" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1greedy__layerwise__autoencoder" kindref="compound">greedy_layerwise_autoencoder</ref> *</type>
        <definition>greedy_layerwise_autoencoder* lbann::greedy_layerwise_autoencoder::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1model_1aacd024c11f0897b33a7e7838b9433ba2">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create copy. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="52" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" bodystart="52" bodyend="54"/>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a36dff325c3c756623b28cb056f91e058" compoundref="greedy__layerwise__autoencoder_8cpp" startline="35" endline="40">greedy_layerwise_autoencoder</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1greedy__layerwise__autoencoder_1a975ea739b9a97e76fac46ce8191dea84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::greedy_layerwise_autoencoder::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classlbann_1_1model_1a7e471599eded909c4ce7178689dd13b6">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get model name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="57" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" bodystart="57" bodyend="57"/>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">train</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::greedy_layerwise_autoencoder::train</definition>
        <argsstring>(int num_epochs) override</argsstring>
        <name>train</name>
        <reimplements refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc">train</reimplements>
        <param>
          <type>int</type>
          <declname>num_epochs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Train greedy layerwise autoencoder. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="60" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp" bodystart="137" bodyend="158"/>
        <references refid="classlbann_1_1model_1a780395fa740102adda5537aa5d257698" compoundref="model_8cpp" startline="851" endline="855">lbann::model::do_train_begin_cbs</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a792010a00136ee1e024b6e5d38c77386" compoundref="greedy__layerwise__autoencoder_8hpp" startline="69">m_num_phases</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" compoundref="greedy__layerwise__autoencoder_8cpp" startline="160" endline="212">set_phase</references>
        <references refid="classlbann_1_1model_1a90363b6a20269cf7197701e49f1f52a3" compoundref="model_8hpp" startline="191" endline="193">lbann::model::get_terminate_training</references>
        <references refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" compoundref="model_8cpp" startline="705" endline="710">lbann::model::reset_mode_and_model</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1model_1a6f975af3ff4921d78a9eb1aca12eaf5e" compoundref="model_8cpp" startline="895" endline="899">lbann::model::do_epoch_begin_cbs</references>
        <references refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">lbann::model::train_mini_batch</references>
        <references refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" compoundref="model_8cpp" startline="643" endline="661">lbann::model::evaluate</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" compoundref="model_8hpp" startline="228">lbann::model::m_current_epoch</references>
        <references refid="classlbann_1_1model_1a93e43a6c5aaf8ad890ef50ff97dfa176" compoundref="model_8cpp" startline="901" endline="905">lbann::model::do_epoch_end_cbs</references>
        <references refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" compoundref="model_8cpp" startline="713" endline="718">lbann::model::reset_epoch_statistics</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" compoundref="greedy__layerwise__autoencoder_8cpp" startline="214" endline="244">restore_sequential_model</references>
        <references refid="classlbann_1_1model_1a13bb6edae42c719b78454a8af9549122" compoundref="model_8cpp" startline="857" endline="861">lbann::model::do_train_end_cbs</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a975ea739b9a97e76fac46ce8191dea84" compoundref="greedy__layerwise__autoencoder_8hpp" startline="57" endline="57">name</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classlbann_1_1greedy__layerwise__autoencoder_1a115607e435ae4685531a81852ce01fe7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::greedy_layerwise_autoencoder::setup_layer_topology</definition>
        <argsstring>() override</argsstring>
        <name>setup_layer_topology</name>
        <reimplements refid="classlbann_1_1sequential__model_1a3801a58530388fb6a8cb3e1c018e827d">setup_layer_topology</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set up topology of layer graph. Called in setup function. Determine model sections. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="83" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp" bodystart="66" bodyend="135"/>
        <references refid="classlbann_1_1sequential__model_1a3801a58530388fb6a8cb3e1c018e827d" compoundref="sequential_8cpp" startline="40" endline="65">lbann::sequential_model::setup_layer_topology</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">lbann::model::m_layers</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" compoundref="greedy__layerwise__autoencoder_8hpp" startline="76">m_sections</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a792010a00136ee1e024b6e5d38c77386" compoundref="greedy__layerwise__autoencoder_8hpp" startline="69">m_num_phases</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::greedy_layerwise_autoencoder::set_phase</definition>
        <argsstring>(int phase)</argsstring>
        <name>set_phase</name>
        <param>
          <type>int</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the greedy layerwise autoencoder to a training phase. During a phase, an encoder and decoder section of the model are trained while the rest of the model is frozen. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="89" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp" bodystart="160" bodyend="212"/>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" compoundref="greedy__layerwise__autoencoder_8cpp" startline="214" endline="244">restore_sequential_model</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" compoundref="greedy__layerwise__autoencoder_8hpp" startline="67">m_phase</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" compoundref="greedy__layerwise__autoencoder_8hpp" startline="76">m_sections</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">lbann::model::m_layers</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" compoundref="greedy__layerwise__autoencoder_8hpp" startline="78">m_reconstruction</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0">MODEL_PARALLEL</references>
        <references refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" compoundref="model_8hpp" startline="250">lbann::model::m_comm</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638">DATA_PARALLEL</references>
        <references refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">lbann::Layer::set_name</references>
        <references refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" compoundref="layer_8cpp" startline="1227" endline="1236">lbann::Layer::add_parent_layer</references>
        <references refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" compoundref="model_8hpp" startline="221">lbann::model::m_objective_function</references>
        <references refid="classlbann_1_1objective__function_1a510544e9e511be54a50efd39226de345" compoundref="objective__function_8hpp" startline="57" endline="57">lbann::objective_function::get_terms</references>
        <references refid="classlbann_1_1loss__function_1a9ef5356468c892c2c0221f8acd6b5471" compoundref="loss__function_8cpp" startline="60" endline="66">lbann::loss_function::set_target_layer</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1adf8750be08e34891701a24678f703acd" compoundref="greedy__layerwise__autoencoder_8cpp" startline="42" endline="50">greedy_layerwise_autoencoder</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1ac5e2de693353966b7816ca10282068f5" compoundref="greedy__layerwise__autoencoder_8cpp" startline="52" endline="60">operator=</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">train</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::greedy_layerwise_autoencoder::restore_sequential_model</definition>
        <argsstring>()</argsstring>
        <name>restore_sequential_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the greedy layerwise autoencover to a sequential model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="91" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp" bodystart="214" bodyend="244"/>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" compoundref="greedy__layerwise__autoencoder_8hpp" startline="67">m_phase</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" compoundref="greedy__layerwise__autoencoder_8hpp" startline="76">m_sections</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">lbann::model::m_layers</references>
        <references refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" compoundref="layer_8hpp" startline="264" endline="264">lbann::Layer::get_child_layers</references>
        <references refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" compoundref="layer_8hpp" startline="260" endline="260">lbann::Layer::get_parent_layers</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" compoundref="greedy__layerwise__autoencoder_8hpp" startline="78">m_reconstruction</references>
        <references refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" compoundref="model_8hpp" startline="221">lbann::model::m_objective_function</references>
        <references refid="classlbann_1_1objective__function_1a510544e9e511be54a50efd39226de345" compoundref="objective__function_8hpp" startline="57" endline="57">lbann::objective_function::get_terms</references>
        <references refid="classlbann_1_1loss__function_1a9ef5356468c892c2c0221f8acd6b5471" compoundref="loss__function_8cpp" startline="60" endline="66">lbann::loss_function::set_target_layer</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">train</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" compoundref="greedy__layerwise__autoencoder_8cpp" startline="160" endline="212">set_phase</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::greedy_layerwise_autoencoder::forward_prop</definition>
        <argsstring>(execution_mode mode) override</argsstring>
        <name>forward_prop</name>
        <reimplements refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484">forward_prop</reimplements>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forward prop step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="94" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp" bodystart="246" bodyend="292"/>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" compoundref="greedy__layerwise__autoencoder_8hpp" startline="67">m_phase</references>
        <references refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" compoundref="model_8cpp" startline="791" endline="799">lbann::model::forward_prop</references>
        <references refid="classlbann_1_1model_1af3c45642bbacf1bd07e8504d7e689ec0" compoundref="model_8cpp" startline="949" endline="968">lbann::model::do_model_forward_prop_begin_cbs</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" compoundref="greedy__layerwise__autoencoder_8hpp" startline="76">m_sections</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">lbann::model::m_layers</references>
        <references refid="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" compoundref="model_8cpp" startline="991" endline="1010">lbann::model::do_layer_forward_prop_begin_cbs</references>
        <references refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" compoundref="layer_8cpp" startline="247" endline="275">lbann::Layer::forward_prop</references>
        <references refid="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" compoundref="model_8cpp" startline="1012" endline="1031">lbann::model::do_layer_forward_prop_end_cbs</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" compoundref="greedy__layerwise__autoencoder_8hpp" startline="78">m_reconstruction</references>
        <references refid="classlbann_1_1model_1a9d67f4f3a027327d2db8767759f9c2bf" compoundref="model_8cpp" startline="970" endline="989">lbann::model::do_model_forward_prop_end_cbs</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::greedy_layerwise_autoencoder::backward_prop</definition>
        <argsstring>() override</argsstring>
        <name>backward_prop</name>
        <reimplements refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438">backward_prop</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Backward prop step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="96" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp" bodystart="294" bodyend="332"/>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" compoundref="greedy__layerwise__autoencoder_8hpp" startline="67">m_phase</references>
        <references refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" compoundref="model_8cpp" startline="801" endline="824">lbann::model::backward_prop</references>
        <references refid="classlbann_1_1model_1a8a60eee343381e657b2c042637e56751" compoundref="model_8cpp" startline="1033" endline="1039">lbann::model::do_model_backward_prop_begin_cbs</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" compoundref="greedy__layerwise__autoencoder_8hpp" startline="76">m_sections</references>
        <references refid="classlbann_1_1model_1a51dc59ea8dd4bc689854732269aaf001" compoundref="model_8cpp" startline="1049" endline="1055">lbann::model::do_layer_backward_prop_begin_cbs</references>
        <references refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" compoundref="greedy__layerwise__autoencoder_8hpp" startline="78">m_reconstruction</references>
        <references refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" compoundref="layer_8cpp" startline="277" endline="305">lbann::Layer::back_prop</references>
        <references refid="classlbann_1_1model_1ab0939d2668cca7efc2cc52355d34df3b" compoundref="model_8cpp" startline="1057" endline="1063">lbann::model::do_layer_backward_prop_end_cbs</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">lbann::model::m_layers</references>
        <references refid="classlbann_1_1model_1a737a0129eadf52be476034888b3eedc2" compoundref="model_8cpp" startline="1041" endline="1047">lbann::model::do_model_backward_prop_end_cbs</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Greedy layerwise autoencoder. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="969">
        <label>lbann::model</label>
        <link refid="classlbann_1_1model"/>
      </node>
      <node id="968">
        <label>lbann::sequential_model</label>
        <link refid="classlbann_1_1sequential__model"/>
        <childnode refid="969" relation="public-inheritance">
        </childnode>
      </node>
      <node id="967">
        <label>lbann::greedy_layerwise_autoencoder</label>
        <link refid="classlbann_1_1greedy__layerwise__autoencoder"/>
        <childnode refid="968" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="972">
        <label>lbann::model</label>
        <link refid="classlbann_1_1model"/>
        <childnode refid="973" relation="usage">
          <edgelabel>m_default_optimizer</edgelabel>
        </childnode>
        <childnode refid="974" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="979" relation="usage">
          <edgelabel>m_objective_function</edgelabel>
        </childnode>
      </node>
      <node id="973">
        <label>lbann::optimizer</label>
        <link refid="classlbann_1_1optimizer"/>
        <childnode refid="974" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="975" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
        <childnode refid="976" relation="usage">
          <edgelabel>m_gradient_allreduce_req</edgelabel>
        </childnode>
        <childnode refid="977" relation="usage">
          <edgelabel>m_weights</edgelabel>
        </childnode>
      </node>
      <node id="975">
        <label>lbann::cudnn::cudnn_manager</label>
        <link refid="classlbann_1_1cudnn_1_1cudnn__manager"/>
      </node>
      <node id="978">
        <label>lbann::weights_initializer</label>
        <link refid="classlbann_1_1weights__initializer"/>
        <childnode refid="974" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
      <node id="971">
        <label>lbann::sequential_model</label>
        <link refid="classlbann_1_1sequential__model"/>
        <childnode refid="972" relation="public-inheritance">
        </childnode>
      </node>
      <node id="970">
        <label>lbann::greedy_layerwise_autoencoder</label>
        <link refid="classlbann_1_1greedy__layerwise__autoencoder"/>
        <childnode refid="971" relation="public-inheritance">
        </childnode>
        <childnode refid="980" relation="usage">
          <edgelabel>m_reconstruction</edgelabel>
        </childnode>
      </node>
      <node id="980">
        <label>lbann::Layer</label>
        <link refid="classlbann_1_1Layer"/>
        <childnode refid="974" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="972" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
        <childnode refid="975" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="977">
        <label>lbann::weights</label>
        <link refid="classlbann_1_1weights"/>
        <childnode refid="973" relation="usage">
          <edgelabel>m_optimizer</edgelabel>
        </childnode>
        <childnode refid="974" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="978" relation="usage">
          <edgelabel>m_initializer</edgelabel>
        </childnode>
        <childnode refid="975" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="974">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="976">
        <label>lbann::Al::request</label>
        <link refid="structlbann_1_1Al_1_1request"/>
      </node>
      <node id="979">
        <label>lbann::objective_function</label>
        <link refid="classlbann_1_1objective__function"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" line="36" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/greedy_layerwise_autoencoder.hpp" bodystart="36" bodyend="98"/>
    <listofallmembers>
      <member refid="classlbann_1_1model_1a8f45cdca82dbc0cc1f519898474cc6ec" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>add_callback</name></member>
      <member refid="classlbann_1_1model_1a5dfa9895024f07d273062b67d7a0dc01" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>add_layer</name></member>
      <member refid="classlbann_1_1model_1a2ad536c9aeb5a1dfaa5a96107d62c4a4" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>add_metric</name></member>
      <member refid="classlbann_1_1model_1af35fca77e75eb6dd570e4727aa3d5b6b" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>add_weights</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>backward_prop</name></member>
      <member refid="classlbann_1_1model_1a43b3ed176749e0aab6065f274ec2a717" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>clear_error_signals</name></member>
      <member refid="classlbann_1_1model_1ae4ca41f514498a37503ecc6ba1600bab" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>clear_gradients</name></member>
      <member refid="classlbann_1_1model_1aa819e0d7c8bb178155e40e33037cf054" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>collect_indices</name></member>
      <member refid="classlbann_1_1model_1aef7a4775c70f96610bfc5a4605b946a5" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>construct_layer_graph</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1a435fa0830662ebde904b9e70902f7e16" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>copy</name></member>
      <member refid="classlbann_1_1model_1a0d2d5a1eac592e5721a81a9b9ea4b7f2" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>create_optimizer</name></member>
      <member refid="classlbann_1_1model_1a156acfa740b92322d44b6c477636eb26" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_batch_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1a3dc29e9751a53afda7e171aff335273e" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_batch_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a6f975af3ff4921d78a9eb1aca12eaf5e" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_epoch_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1a93e43a6c5aaf8ad890ef50ff97dfa176" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_epoch_end_cbs</name></member>
      <member refid="classlbann_1_1model_1ab14bedea05bd5ef549d95ceb2b57b7a4" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_evaluate_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1ab123ed691fb6e9f52d468914a1f4460c" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_evaluate_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a51dc59ea8dd4bc689854732269aaf001" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_layer_backward_prop_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1ab0939d2668cca7efc2cc52355d34df3b" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_layer_backward_prop_end_cbs</name></member>
      <member refid="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_layer_forward_prop_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_layer_forward_prop_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a8a60eee343381e657b2c042637e56751" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_model_backward_prop_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1a737a0129eadf52be476034888b3eedc2" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_model_backward_prop_end_cbs</name></member>
      <member refid="classlbann_1_1model_1af3c45642bbacf1bd07e8504d7e689ec0" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_model_forward_prop_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1a9d67f4f3a027327d2db8767759f9c2bf" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_model_forward_prop_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a19c96544ccf733646f3454be887f3a08" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_model_optimize_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1ac0b37e4f4881e274bd9c4889d4852fe8" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_model_optimize_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a780395fa740102adda5537aa5d257698" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_train_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1a13bb6edae42c719b78454a8af9549122" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_train_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a24b668fa62ce0215d3b1773636b7eced" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_weight_optimize_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1af1e22d2b06d0ca90ae79fd5cf1d82066" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>do_weight_optimize_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>evaluate</name></member>
      <member refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>evaluate_mini_batch</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>forward_prop</name></member>
      <member refid="classlbann_1_1model_1ad0131e36e763470a7bbf67e83b42cd14" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>freeze_layers_under_frozen_surface</name></member>
      <member refid="classlbann_1_1model_1a38c71a455870e087c4c07acb78e4477c" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_callbacks</name></member>
      <member refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_cur_epoch</name></member>
      <member refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_cur_step</name></member>
      <member refid="classlbann_1_1model_1a4040b1f06a2a5d5187a72c06060124c1" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_cur_testing_step</name></member>
      <member refid="classlbann_1_1model_1a680ef8ecf644dbc821b5e7488d3bd2c4" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_cur_validation_step</name></member>
      <member refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_current_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1afd569027be9b7a6adb08f486331384ac" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_current_phase</name></member>
      <member refid="classlbann_1_1model_1a2a9b4cfa1c8c91e4131908751f9c4a6a" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_effective_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_execution_mode</name></member>
      <member refid="classlbann_1_1model_1ae14f4b2cc8882b3739d4aeb25d9e73c9" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_layers</name></member>
      <member refid="classlbann_1_1model_1a8c311798ff4acaeafdfbf85162ba5084" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_max_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1a84c738fd219b8c2936e76a9360f68936" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_metrics</name></member>
      <member refid="classlbann_1_1model_1a32a189033b8ff92d233781b1039c70f1" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_num_iterations_per_epoch</name></member>
      <member refid="classlbann_1_1model_1aee5530467523924a662dec891b9a7993" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_objective_function</name></member>
      <member refid="classlbann_1_1model_1a90363b6a20269cf7197701e49f1f52a3" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_terminate_training</name></member>
      <member refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>get_weights</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1a36dff325c3c756623b28cb056f91e058" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>greedy_layerwise_autoencoder</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1adf8750be08e34891701a24678f703acd" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>greedy_layerwise_autoencoder</name></member>
      <member refid="classlbann_1_1model_1a2c82c9def03b1c60e48f52fca7708833" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>is_execution_mode_valid</name></member>
      <member refid="classlbann_1_1sequential__model_1aa405c653dae867e862475e13b9df1db0" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>load_from_checkpoint</name></member>
      <member refid="classlbann_1_1sequential__model_1aa52cca299012c67f88483206d50abb21" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_callbacks</name></member>
      <member refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_comm</name></member>
      <member refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_current_epoch</name></member>
      <member refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_current_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1a150ef033f81982936e007b10c421f488" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_current_phase</name></member>
      <member refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_current_step</name></member>
      <member refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_current_testing_step</name></member>
      <member refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_current_validation_step</name></member>
      <member refid="classlbann_1_1model_1a68df9efe547f53f7bf2a03ac64527990" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_default_optimizer</name></member>
      <member refid="classlbann_1_1model_1a4887fd2816e7c51b24cb8bf8e4a80a1c" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_effective_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_execution_mode</name></member>
      <member refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_layers</name></member>
      <member refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_max_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_metrics</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1a792010a00136ee1e024b6e5d38c77386" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_num_phases</name></member>
      <member refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_objective_function</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_phase</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_reconstruction</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_sections</name></member>
      <member refid="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_terminate_training</name></member>
      <member refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>m_weights</name></member>
      <member refid="classlbann_1_1model_1a6feaee921c434bbfc32451ed874cc051" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>model</name></member>
      <member refid="classlbann_1_1model_1a03fd1dc3edddb414b040bc009cf73371" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>model</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1a975ea739b9a97e76fac46ce8191dea84" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>name</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1ac5e2de693353966b7816ca10282068f5" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>operator=</name></member>
      <member refid="classlbann_1_1sequential__model_1a9714c99522b90488c486b390c5a7b6f3" prot="public" virt="non-virtual" ambiguityscope="lbann::sequential_model::"><scope>lbann::greedy_layerwise_autoencoder</scope><name>operator=</name></member>
      <member refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" prot="public" virt="non-virtual" ambiguityscope="lbann::model::"><scope>lbann::greedy_layerwise_autoencoder</scope><name>operator=</name></member>
      <member refid="classlbann_1_1model_1a31c281b63593a0ec7110664f7309b01a" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>permute_layers</name></member>
      <member refid="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>print_layer_description</name></member>
      <member refid="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>remap_pointers</name></member>
      <member refid="classlbann_1_1model_1aaed20219476dc1458bbd058be36de1ec" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>replace_weights</name></member>
      <member refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>reset_epoch_statistics</name></member>
      <member refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>reset_mode_and_model</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>restore_sequential_model</name></member>
      <member refid="classlbann_1_1sequential__model_1a51cd5ae859c66cfb36d25d968ef06203" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>save_to_checkpoint</name></member>
      <member refid="classlbann_1_1sequential__model_1a226032d9890b8770c6fca54bf70d69eb" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1sequential__model_1a269f246d881186f8e8608dc4758cc6a6" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>sequential_model</name></member>
      <member refid="classlbann_1_1sequential__model_1a03d6ed139f28f82411b5db7787c97ad2" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>sequential_model</name></member>
      <member refid="classlbann_1_1model_1a4f3cc91f8495870723389be15f77184a" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>set_current_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1aa64829cba8a84928a396893172a1d116" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>set_effective_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1a375372b5b864ffbc4eaa0963f6939f65" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>set_execution_mode</name></member>
      <member refid="classlbann_1_1model_1a95fb74f678f69b763d51b2ce987c8fde" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>set_layers</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" prot="protected" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>set_phase</name></member>
      <member refid="classlbann_1_1model_1a5bafc4e84671490c6118959becb22e16" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>set_terminate_training</name></member>
      <member refid="classlbann_1_1model_1afd9dbca79503a40b7aa5c78da4d6f391" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>setup</name></member>
      <member refid="classlbann_1_1model_1ab0e8af146d4121c1b8b04b4a3c2a455c" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>setup_layer_execution_order</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1a115607e435ae4685531a81852ce01fe7" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>setup_layer_topology</name></member>
      <member refid="classlbann_1_1model_1a989ab581e359f65c9238d627cce5b589" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>setup_layers</name></member>
      <member refid="classlbann_1_1model_1a582edc0f930e1594381ecc7922e91b08" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>setup_weights</name></member>
      <member refid="classlbann_1_1model_1a0824e757e4806fad77630d69926a8911" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>summarize_matrices</name></member>
      <member refid="classlbann_1_1model_1a1eb5efcc8f73ba9478b2ce1efb9f2d8c" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>summarize_stats</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>train</name></member>
      <member refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>train_mini_batch</name></member>
      <member refid="classlbann_1_1model_1a7518775e0fd29ed682319193e2d264cc" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>update_layers</name></member>
      <member refid="classlbann_1_1model_1a38d8924938fa69857d3f9ed83ac98ee9" prot="protected" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>update_weights</name></member>
      <member refid="classlbann_1_1sequential__model_1a53a83327a1115a53affa78c93344e641" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>write_proto</name></member>
      <member refid="classlbann_1_1greedy__layerwise__autoencoder_1a74aa0b263d78b6a7a8ac32cde6e05c4c" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>~greedy_layerwise_autoencoder</name></member>
      <member refid="classlbann_1_1model_1ae97a8048de182af3ed8a6fbd92212958" prot="public" virt="virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>~model</name></member>
      <member refid="classlbann_1_1sequential__model_1ab56d457c38e89f6ea1c030168a018938" prot="public" virt="non-virtual"><scope>lbann::greedy_layerwise_autoencoder</scope><name>~sequential_model</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
