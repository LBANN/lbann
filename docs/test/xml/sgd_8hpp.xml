<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sgd_8hpp" kind="file" language="C++">
    <compoundname>sgd.hpp</compoundname>
    <includes refid="optimizer_8hpp" local="yes">lbann/optimizers/optimizer.hpp</includes>
    <includedby refid="sgd_8cpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/src/optimizers/sgd.cpp</includedby>
    <includedby refid="lbann_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</includedby>
    <incdepgraph>
      <node id="12977">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="12955" relation="include">
        </childnode>
        <childnode refid="12956" relation="include">
        </childnode>
      </node>
      <node id="12956">
        <label>El.hpp</label>
      </node>
      <node id="12955">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="12956" relation="include">
        </childnode>
        <childnode refid="12957" relation="include">
        </childnode>
        <childnode refid="12958" relation="include">
        </childnode>
        <childnode refid="12963" relation="include">
        </childnode>
      </node>
      <node id="12971">
        <label>string</label>
      </node>
      <node id="12974">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="12965" relation="include">
        </childnode>
        <childnode refid="12955" relation="include">
        </childnode>
        <childnode refid="12964" relation="include">
        </childnode>
        <childnode refid="12968" relation="include">
        </childnode>
      </node>
      <node id="12966">
        <label>map</label>
      </node>
      <node id="12979">
        <label>unordered_set</label>
      </node>
      <node id="12973">
        <label>exception</label>
      </node>
      <node id="12976">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="12955" relation="include">
        </childnode>
        <childnode refid="12964" relation="include">
        </childnode>
        <childnode refid="12968" relation="include">
        </childnode>
        <childnode refid="12974" relation="include">
        </childnode>
      </node>
      <node id="12960">
        <label>cstdio</label>
      </node>
      <node id="12969">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="12970" relation="include">
        </childnode>
        <childnode refid="12971" relation="include">
        </childnode>
      </node>
      <node id="12962">
        <label>cxxabi.h</label>
      </node>
      <node id="12968">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="12955" relation="include">
        </childnode>
        <childnode refid="12964" relation="include">
        </childnode>
        <childnode refid="12969" relation="include">
        </childnode>
        <childnode refid="12972" relation="include">
        </childnode>
        <childnode refid="12973" relation="include">
        </childnode>
      </node>
      <node id="12965">
        <label>vector</label>
      </node>
      <node id="12964">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="12965" relation="include">
        </childnode>
        <childnode refid="12966" relation="include">
        </childnode>
        <childnode refid="12967" relation="include">
        </childnode>
        <childnode refid="12955" relation="include">
        </childnode>
      </node>
      <node id="12978">
        <label>lbann.pb.h</label>
      </node>
      <node id="12959">
        <label>cstdlib</label>
      </node>
      <node id="12972">
        <label>iostream</label>
      </node>
      <node id="12953">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="12954" relation="include">
        </childnode>
        <childnode refid="12955" relation="include">
        </childnode>
        <childnode refid="12964" relation="include">
        </childnode>
        <childnode refid="12968" relation="include">
        </childnode>
        <childnode refid="12974" relation="include">
        </childnode>
        <childnode refid="12975" relation="include">
        </childnode>
        <childnode refid="12971" relation="include">
        </childnode>
        <childnode refid="12979" relation="include">
        </childnode>
      </node>
      <node id="12970">
        <label>csignal</label>
      </node>
      <node id="12975">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="12971" relation="include">
        </childnode>
        <childnode refid="12955" relation="include">
        </childnode>
        <childnode refid="12964" relation="include">
        </childnode>
        <childnode refid="12968" relation="include">
        </childnode>
        <childnode refid="12974" relation="include">
        </childnode>
        <childnode refid="12976" relation="include">
        </childnode>
        <childnode refid="12977" relation="include">
        </childnode>
        <childnode refid="12978" relation="include">
        </childnode>
      </node>
      <node id="12963">
        <label>lbann_config.hpp</label>
      </node>
      <node id="12954">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="12958">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="12959" relation="include">
        </childnode>
        <childnode refid="12960" relation="include">
        </childnode>
        <childnode refid="12961" relation="include">
        </childnode>
        <childnode refid="12962" relation="include">
        </childnode>
      </node>
      <node id="12957">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="12956" relation="include">
        </childnode>
      </node>
      <node id="12952">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp</label>
        <link refid="sgd_8hpp"/>
        <childnode refid="12953" relation="include">
        </childnode>
      </node>
      <node id="12967">
        <label>typeindex</label>
      </node>
      <node id="12961">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12988">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="12989" relation="include">
        </childnode>
        <childnode refid="12990" relation="include">
        </childnode>
        <childnode refid="12991" relation="include">
        </childnode>
        <childnode refid="12992" relation="include">
        </childnode>
        <childnode refid="12993" relation="include">
        </childnode>
        <childnode refid="12994" relation="include">
        </childnode>
        <childnode refid="12995" relation="include">
        </childnode>
        <childnode refid="12996" relation="include">
        </childnode>
        <childnode refid="12986" relation="include">
        </childnode>
      </node>
      <node id="12993">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/model_factory.cpp</label>
        <link refid="model__factory_8cpp"/>
      </node>
      <node id="12985">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="12986">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="12983" relation="include">
        </childnode>
        <childnode refid="12987" relation="include">
        </childnode>
        <childnode refid="12988" relation="include">
        </childnode>
        <childnode refid="12997" relation="include">
        </childnode>
      </node>
      <node id="12984">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="12985" relation="include">
        </childnode>
        <childnode refid="12982" relation="include">
        </childnode>
      </node>
      <node id="12990">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp</label>
        <link refid="layer__factory_8cpp"/>
      </node>
      <node id="12987">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/utils/protobuf_utils.cpp</label>
        <link refid="protobuf__utils_8cpp"/>
      </node>
      <node id="12998">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/init_image_data_readers.cpp</label>
        <link refid="init__image__data__readers_8cpp"/>
      </node>
      <node id="12994">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/objective_function_factory.cpp</label>
        <link refid="objective__function__factory_8cpp"/>
      </node>
      <node id="12983">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp</label>
        <link refid="proto__common_8cpp"/>
      </node>
      <node id="12992">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/metric_factory.cpp</label>
        <link refid="metric__factory_8cpp"/>
      </node>
      <node id="12981">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/optimizers/sgd.cpp</label>
        <link refid="sgd_8cpp"/>
      </node>
      <node id="12982">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="12983" relation="include">
        </childnode>
        <childnode refid="12984" relation="include">
        </childnode>
        <childnode refid="12986" relation="include">
        </childnode>
        <childnode refid="12999" relation="include">
        </childnode>
      </node>
      <node id="12997">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/init_image_data_readers.hpp</label>
        <link refid="init__image__data__readers_8hpp"/>
        <childnode refid="12998" relation="include">
        </childnode>
        <childnode refid="12983" relation="include">
        </childnode>
      </node>
      <node id="12995">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/optimizer_factory.cpp</label>
        <link refid="optimizer__factory_8cpp"/>
      </node>
      <node id="12996">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/weights_factory.cpp</label>
        <link refid="weights__factory_8cpp"/>
      </node>
      <node id="12989">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp</label>
        <link refid="callback__factory_8cpp"/>
      </node>
      <node id="12999">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/protobuf_utils.hpp</label>
        <link refid="protobuf__utils_8hpp"/>
        <childnode refid="12987" relation="include">
        </childnode>
      </node>
      <node id="12991">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_graph_factory.cpp</label>
        <link refid="layer__graph__factory_8cpp"/>
      </node>
      <node id="12980">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp</label>
        <link refid="sgd_8hpp"/>
        <childnode refid="12981" relation="include">
        </childnode>
        <childnode refid="12982" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classlbann_1_1sgd" prot="public">lbann::sgd</innerclass>
    <innerclass refid="structlbann_1_1sgd_1_1packing__header" prot="private">lbann::sgd::packing_header</innerclass>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LBANN_OPTIMIZER_SGD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LBANN_OPTIMIZER_SGD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="optimizer_8hpp" kindref="compound">lbann/optimizers/optimizer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classlbann_1_1sgd" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1sgd" kindref="compound">sgd</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1sgd_1a73baa574a5129872fe25f2a419c86baa" kindref="member">sgd</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>learning_rate,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>momentum<sp/>=<sp/>DataType(0),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nesterov<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1sgd_1a73baa574a5129872fe25f2a419c86baa" kindref="member">sgd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1sgd" kindref="compound">sgd</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1sgd" kindref="compound">sgd</ref>&amp;<sp/><ref refid="classlbann_1_1sgd_1ad3949e74505cd25b267dbdd5b510a83f" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1sgd" kindref="compound">sgd</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1sgd_1a0d0410edb1ca4510509cc9a5de105b4f" kindref="member">~sgd</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54" refid="classlbann_1_1sgd_1a91572d383ad42584bf917e7d62bebe82" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1sgd" kindref="compound">sgd</ref>*<sp/><ref refid="classlbann_1_1sgd_1a91572d383ad42584bf917e7d62bebe82" kindref="member">copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1sgd_1a73baa574a5129872fe25f2a419c86baa" kindref="member">sgd</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classlbann_1_1sgd_1ad24efbeadae61890d07fa9e95aa91c61" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1sgd_1ad24efbeadae61890d07fa9e95aa91c61" kindref="member">get_type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;sgd&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1sgd_1a2022661b9ef83e418a0a980207cb231e" kindref="member">get_description</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1sgd_1a616c3cfd457ae1e771710b481b4c1bbb" kindref="member">setup</ref>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref>&amp;<sp/>w)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1sgd_1a083a44b456939b58f531cea1fde2378b" kindref="member">step_compute</ref>(<ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>values,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>gradient)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>step_compute_gpu(<ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref>&amp;<sp/>values_d,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref>&amp;<sp/>gradient_d)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classlbann_1_1sgd_1a2e56d66d350debcf0d2c3ad76c214074" refkind="member"><highlight class="normal"><sp/><sp/>DataType<sp/><ref refid="classlbann_1_1sgd_1a2e56d66d350debcf0d2c3ad76c214074" kindref="member">m_momentum</ref>;</highlight></codeline>
<codeline lineno="77" refid="classlbann_1_1sgd_1a82da488e5d1530f50f67cd4ea30909cb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1sgd_1a82da488e5d1530f50f67cd4ea30909cb" kindref="member">m_nesterov</ref>;</highlight></codeline>
<codeline lineno="79" refid="classlbann_1_1sgd_1a27f2d893014cef8357edffb63bf649f0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>*<sp/><ref refid="classlbann_1_1sgd_1a27f2d893014cef8357edffb63bf649f0" kindref="member">m_velocity</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Checkpointing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structlbann_1_1sgd_1_1packing__header" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlbann_1_1sgd_1_1packing__header" kindref="compound">packing_header</ref><sp/>{</highlight></codeline>
<codeline lineno="87" refid="structlbann_1_1sgd_1_1packing__header_1a76cff0164cd32346eac4036a8a643776" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType<sp/><ref refid="structlbann_1_1sgd_1_1packing__header_1a76cff0164cd32346eac4036a8a643776" kindref="member">momentum</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classlbann_1_1sgd_1ab95756a63ec3fa0100d436a5a9addfeb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1sgd_1ab95756a63ec3fa0100d436a5a9addfeb" kindref="member">pack_scalars</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1a5edc3f9cc3540b50d417993da2a6b5ce" kindref="member">write_datatype</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;momentum&quot;</highlight><highlight class="normal">,<sp/>m_momentum);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classlbann_1_1sgd_1a2b4a91cbb155ed94a185db79fdbf6284" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1sgd_1a2b4a91cbb155ed94a185db79fdbf6284" kindref="member">unpack_scalars</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1sgd_1_1packing__header" kindref="compound">packing_header</ref><sp/>*header){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1a1e84eff891affad6001f3c5fa803cae2" kindref="member">read_datatype</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;momentum&quot;</highlight><highlight class="normal">,<sp/><sp/>&amp;m_momentum);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(header<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structlbann_1_1sgd_1_1packing__header_1a76cff0164cd32346eac4036a8a643776" kindref="member">momentum</ref><sp/>=<sp/><ref refid="classlbann_1_1sgd_1a2e56d66d350debcf0d2c3ad76c214074" kindref="member">m_momentum</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="105" refid="classlbann_1_1sgd_1a3afe5aa1f1861c390472ff6f53093386" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1sgd_1a3afe5aa1f1861c390472ff6f53093386" kindref="member">unpack_header</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1sgd_1_1packing__header" kindref="compound">packing_header</ref>&amp;<sp/>header){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>m_momentum<sp/>=<sp/>header.<ref refid="structlbann_1_1sgd_1_1packing__header_1a76cff0164cd32346eac4036a8a643776" kindref="member">momentum</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1sgd_1a78ad11ca7424d50a9f2ba29e5f725e21" kindref="member">save_to_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p,<sp/>std::string<sp/>m_name)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1sgd_1aa3e3237a59b0593d7caf7357b7c181cf" kindref="member">load_from_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p,<sp/>std::string<sp/>m_name)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>std::vector&lt;DataType*&gt;<sp/>m_velocity_d;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_OPTIMIZER_SGD_HPP</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp"/>
  </compounddef>
</doxygen>
