<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1boolean__false__negatives__metric" kind="class" language="C++" prot="public">
    <compoundname>lbann::boolean_false_negatives_metric</compoundname>
    <basecompoundref refid="classlbann_1_1metric" prot="public" virt="non-virtual">lbann::metric</basecompoundref>
    <includes refid="boolean__false__negatives_8hpp" local="no">boolean_false_negatives.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1boolean__false__negatives__metric_1abb7220421c393713e5a79a3da3b4b79c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::boolean_false_negatives_metric::boolean_false_negatives_metric</definition>
        <argsstring>(lbann_comm *comm)</argsstring>
        <name>boolean_false_negatives_metric</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" line="43" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" bodystart="43" bodyend="43"/>
        <references refid="classlbann_1_1boolean__false__negatives__metric_1a3182852b817e1e4edc5593220ab84e58">operator=</references>
        <references refid="classlbann_1_1boolean__false__negatives__metric_1a85ce390a99cba31c006e148de4a9354c">~boolean_false_negatives_metric</references>
        <referencedby refid="classlbann_1_1boolean__false__negatives__metric_1abd0e7a6040232d5b6d8b10e79a3208c1" compoundref="boolean__false__negatives_8hpp" startline="49" endline="51">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1boolean__false__negatives__metric_1ad064e2cf0b555cb1e4d2fb18874e8c77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::boolean_false_negatives_metric::boolean_false_negatives_metric</definition>
        <argsstring>(const boolean_false_negatives_metric &amp;other)=default</argsstring>
        <name>boolean_false_negatives_metric</name>
        <param>
          <type>const <ref refid="classlbann_1_1boolean__false__negatives__metric" kindref="compound">boolean_false_negatives_metric</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1boolean__false__negatives__metric_1a3182852b817e1e4edc5593220ab84e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1boolean__false__negatives__metric" kindref="compound">boolean_false_negatives_metric</ref> &amp;</type>
        <definition>boolean_false_negatives_metric&amp; lbann::boolean_false_negatives_metric::operator=</definition>
        <argsstring>(const boolean_false_negatives_metric &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1boolean__false__negatives__metric" kindref="compound">boolean_false_negatives_metric</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" line="46" column="1"/>
        <referencedby refid="classlbann_1_1boolean__false__negatives__metric_1abb7220421c393713e5a79a3da3b4b79c" compoundref="boolean__false__negatives_8hpp" startline="43" endline="43">boolean_false_negatives_metric</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1boolean__false__negatives__metric_1a85ce390a99cba31c006e148de4a9354c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual lbann::boolean_false_negatives_metric::~boolean_false_negatives_metric</definition>
        <argsstring>()=default</argsstring>
        <name>~boolean_false_negatives_metric</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" line="48" column="1"/>
        <referencedby refid="classlbann_1_1boolean__false__negatives__metric_1abb7220421c393713e5a79a3da3b4b79c" compoundref="boolean__false__negatives_8hpp" startline="43" endline="43">boolean_false_negatives_metric</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1boolean__false__negatives__metric_1abd0e7a6040232d5b6d8b10e79a3208c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1boolean__false__negatives__metric" kindref="compound">boolean_false_negatives_metric</ref> *</type>
        <definition>boolean_false_negatives_metric* lbann::boolean_false_negatives_metric::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1metric_1a2a4498d41f77da8585552f485caab167">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" line="49" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" bodystart="49" bodyend="51"/>
        <references refid="classlbann_1_1boolean__false__negatives__metric_1abb7220421c393713e5a79a3da3b4b79c" compoundref="boolean__false__negatives_8hpp" startline="43" endline="43">boolean_false_negatives_metric</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1boolean__false__negatives__metric_1a7e7f60e7babfbaad2dce5def175a8fbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::boolean_false_negatives_metric::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classlbann_1_1metric_1af455d7b6874d3491bc04f0f2ebfcab51">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a string name for this metric. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" line="54" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1boolean__false__negatives__metric_1abe2bdb0c15ff481caa234e13fe7df2b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::boolean_false_negatives_metric::get_unit</definition>
        <argsstring>() const override</argsstring>
        <name>get_unit</name>
        <reimplements refid="classlbann_1_1metric_1a13fd302dec85190b877f7146529e516c">get_unit</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a display unit for this metric. Default is an empty string. This is overriden if the metric has units, e.g. &quot;%&quot; or &quot;sec&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" line="55" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" bodystart="55" bodyend="55"/>
        <references refid="classlbann_1_1boolean__false__negatives__metric_1a598dfc1ee40c4e11f001cbf8899e0e0a" compoundref="boolean__false__negatives_8cpp" startline="31" endline="53">evaluate_compute</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac41b9ec75e920b610e8907e066074b30">prediction</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classlbann_1_1boolean__false__negatives__metric_1a598dfc1ee40c4e11f001cbf8899e0e0a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
        <definition>EvalType lbann::boolean_false_negatives_metric::evaluate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth) override</argsstring>
        <name>evaluate_compute</name>
        <reimplements refid="classlbann_1_1metric_1aab79147ff480675db2e01d7a889a4296">evaluate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computation to evaluate the metric function. This returns the sum of metric values across the mini-batch, not the mean value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" line="62" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/metrics/boolean_false_negatives.cpp" bodystart="31" bodyend="53"/>
        <references refid="classlbann_1_1metric_1a464120720df6bfdf91bffe353e562964" compoundref="metric_8hpp" startline="171" endline="171">lbann::metric::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" compoundref="comm_8hpp" startline="419" endline="424">lbann::lbann_comm::allreduce</references>
        <referencedby refid="classlbann_1_1boolean__false__negatives__metric_1abe2bdb0c15ff481caa234e13fe7df2b9" compoundref="boolean__false__negatives_8hpp" startline="55" endline="55">get_unit</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Boolean false negatives metric. This thresholds predictions and ground truth to boolean values using 0.5 then checks for false negatives (i.e. prediction is false when ground truth is true). The reported false-negative percent is with respect to all values and not the errors. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="178">
        <label>lbann::metric</label>
        <link refid="classlbann_1_1metric"/>
      </node>
      <node id="177">
        <label>lbann::boolean_false_negatives_metric</label>
        <link refid="classlbann_1_1boolean__false__negatives__metric"/>
        <childnode refid="178" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="183">
        <label>lbann::io_layer</label>
        <link refid="classlbann_1_1io__layer"/>
        <childnode refid="184" relation="public-inheritance">
        </childnode>
      </node>
      <node id="195">
        <label>lbann::generic_input_layer</label>
        <link refid="classlbann_1_1generic__input__layer"/>
        <childnode refid="183" relation="public-inheritance">
        </childnode>
        <childnode refid="196" relation="usage">
          <edgelabel>m_training_dataset</edgelabel>
          <edgelabel>m_validation_dataset</edgelabel>
          <edgelabel>m_testing_dataset</edgelabel>
        </childnode>
        <childnode refid="192" relation="usage">
          <edgelabel>io_buffer</edgelabel>
        </childnode>
      </node>
      <node id="182">
        <label>lbann::generic_target_layer</label>
        <link refid="classlbann_1_1generic__target__layer"/>
        <childnode refid="183" relation="public-inheritance">
        </childnode>
        <childnode refid="192" relation="usage">
          <edgelabel>io_buffer</edgelabel>
        </childnode>
        <childnode refid="195" relation="usage">
          <edgelabel>m_paired_input_layer</edgelabel>
        </childnode>
      </node>
      <node id="185">
        <label>lbann::model</label>
        <link refid="classlbann_1_1model"/>
        <childnode refid="186" relation="usage">
          <edgelabel>m_default_optimizer</edgelabel>
        </childnode>
        <childnode refid="181" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="191" relation="usage">
          <edgelabel>m_objective_function</edgelabel>
        </childnode>
      </node>
      <node id="193">
        <label>lbann::fetch_data_functor</label>
        <link refid="classlbann_1_1fetch__data__functor"/>
      </node>
      <node id="180">
        <label>lbann::metric</label>
        <link refid="classlbann_1_1metric"/>
        <childnode refid="181" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="182" relation="usage">
          <edgelabel>m_target_layer</edgelabel>
        </childnode>
      </node>
      <node id="186">
        <label>lbann::optimizer</label>
        <link refid="classlbann_1_1optimizer"/>
        <childnode refid="181" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="187" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
        <childnode refid="188" relation="usage">
          <edgelabel>m_gradient_allreduce_req</edgelabel>
        </childnode>
        <childnode refid="189" relation="usage">
          <edgelabel>m_weights</edgelabel>
        </childnode>
      </node>
      <node id="179">
        <label>lbann::boolean_false_negatives_metric</label>
        <link refid="classlbann_1_1boolean__false__negatives__metric"/>
        <childnode refid="180" relation="public-inheritance">
        </childnode>
      </node>
      <node id="187">
        <label>lbann::cudnn::cudnn_manager</label>
        <link refid="classlbann_1_1cudnn_1_1cudnn__manager"/>
      </node>
      <node id="190">
        <label>lbann::weights_initializer</label>
        <link refid="classlbann_1_1weights__initializer"/>
        <childnode refid="181" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
      <node id="196">
        <label>lbann::dataset</label>
        <link refid="classlbann_1_1dataset"/>
      </node>
      <node id="192">
        <label>lbann::generic_io_buffer</label>
        <link refid="classlbann_1_1generic__io__buffer"/>
        <childnode refid="193" relation="usage">
          <edgelabel>fetch_data_fn</edgelabel>
        </childnode>
        <childnode refid="181" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="194" relation="usage">
          <edgelabel>update_data_reader_fn</edgelabel>
        </childnode>
      </node>
      <node id="184">
        <label>lbann::Layer</label>
        <link refid="classlbann_1_1Layer"/>
        <childnode refid="181" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="185" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
        <childnode refid="187" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="189">
        <label>lbann::weights</label>
        <link refid="classlbann_1_1weights"/>
        <childnode refid="186" relation="usage">
          <edgelabel>m_optimizer</edgelabel>
        </childnode>
        <childnode refid="181" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="190" relation="usage">
          <edgelabel>m_initializer</edgelabel>
        </childnode>
        <childnode refid="187" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="181">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="188">
        <label>lbann::Al::request</label>
        <link refid="structlbann_1_1Al_1_1request"/>
      </node>
      <node id="194">
        <label>lbann::update_data_reader_functor</label>
        <link refid="classlbann_1_1update__data__reader__functor"/>
      </node>
      <node id="191">
        <label>lbann::objective_function</label>
        <link refid="classlbann_1_1objective__function"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" line="40" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp" bodystart="40" bodyend="65"/>
    <listofallmembers>
      <member refid="classlbann_1_1boolean__false__negatives__metric_1abb7220421c393713e5a79a3da3b4b79c" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>boolean_false_negatives_metric</name></member>
      <member refid="classlbann_1_1boolean__false__negatives__metric_1ad064e2cf0b555cb1e4d2fb18874e8c77" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>boolean_false_negatives_metric</name></member>
      <member refid="classlbann_1_1boolean__false__negatives__metric_1abd0e7a6040232d5b6d8b10e79a3208c1" prot="public" virt="virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>copy</name></member>
      <member refid="classlbann_1_1metric_1ab4e14cb4296c7b47719071b210448dec" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>evaluate</name></member>
      <member refid="classlbann_1_1boolean__false__negatives__metric_1a598dfc1ee40c4e11f001cbf8899e0e0a" prot="protected" virt="virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>evaluate_compute</name></member>
      <member refid="classlbann_1_1metric_1a464120720df6bfdf91bffe353e562964" prot="protected" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1metric_1a686239cad1f25628c9b298f9233cc9f3" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>get_evaluate_time</name></member>
      <member refid="classlbann_1_1metric_1a7f97c998fa64475f9ef7f066237b0695" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>get_layer_pointers</name></member>
      <member refid="classlbann_1_1metric_1a2926c6b391dc8c3e3d13d0199317c570" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>get_mean_value</name></member>
      <member refid="classlbann_1_1metric_1a489feb28d318bd8405133f9f8c94cc10" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>get_statistics_num_samples</name></member>
      <member refid="classlbann_1_1metric_1aba7f7a12aeba6619f7b4330e9075f76e" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>get_target_layer</name></member>
      <member refid="classlbann_1_1boolean__false__negatives__metric_1abe2bdb0c15ff481caa234e13fe7df2b9" prot="public" virt="virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>get_unit</name></member>
      <member refid="classlbann_1_1metric_1ab3d1ec8247352467790be036a07cfc2b" prot="public" virt="virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1metric_1a3cd2d4f7dcbf94f70b3b8560a3171d9d" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>metric</name></member>
      <member refid="classlbann_1_1metric_1ac2fc993e31fed5298c4e321b315b77a0" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>metric</name></member>
      <member refid="classlbann_1_1boolean__false__negatives__metric_1a7e7f60e7babfbaad2dce5def175a8fbd" prot="public" virt="virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>name</name></member>
      <member refid="classlbann_1_1boolean__false__negatives__metric_1a3182852b817e1e4edc5593220ab84e58" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>operator=</name></member>
      <member refid="classlbann_1_1metric_1a4324342dab4892199a47df1d78b2cef5" prot="public" virt="non-virtual" ambiguityscope="lbann::metric::"><scope>lbann::boolean_false_negatives_metric</scope><name>operator=</name></member>
      <member refid="classlbann_1_1metric_1ab93708cd870277eb7865655e075620c9" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>reset_counters</name></member>
      <member refid="classlbann_1_1metric_1af7747feb8bc7a5ee039876a70fae1b0c" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>reset_statistics</name></member>
      <member refid="classlbann_1_1metric_1a27a3d8c073b85297b902ba35137926b4" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>reset_statistics</name></member>
      <member refid="classlbann_1_1metric_1a9728b02a240dfd9faa61b7dfeb3feede" prot="public" virt="virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1metric_1a5de0c336b93f2c03f37f38047d401f99" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>set_layer_pointers</name></member>
      <member refid="classlbann_1_1metric_1a8367719e2c7816a4c718c049ea97b709" prot="public" virt="non-virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>set_target_layer</name></member>
      <member refid="classlbann_1_1metric_1a898d23e410297378db2fe9f8d1754fe0" prot="public" virt="virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>setup</name></member>
      <member refid="classlbann_1_1boolean__false__negatives__metric_1a85ce390a99cba31c006e148de4a9354c" prot="public" virt="virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>~boolean_false_negatives_metric</name></member>
      <member refid="classlbann_1_1metric_1ae173eae981ed474f125a5462e734802b" prot="public" virt="virtual"><scope>lbann::boolean_false_negatives_metric</scope><name>~metric</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
