<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="comm_8cpp" kind="file" language="C++">
    <compoundname>comm.cpp</compoundname>
    <includes refid="comm_8hpp" local="yes">lbann/comm.hpp</includes>
    <includes refid="timer_8hpp" local="yes">lbann/utils/timer.hpp</includes>
    <includes refid="exception_8hpp" local="yes">lbann/utils/exception.hpp</includes>
    <includes local="yes">mpi.h</includes>
    <includes local="yes">omp.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">thread</includes>
    <incdepgraph>
      <node id="18682">
        <label>El.hpp</label>
      </node>
      <node id="18681">
        <label>base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="18682" relation="include">
        </childnode>
        <childnode refid="18683" relation="include">
        </childnode>
        <childnode refid="18684" relation="include">
        </childnode>
        <childnode refid="18689" relation="include">
        </childnode>
      </node>
      <node id="18695">
        <label>string</label>
      </node>
      <node id="18690">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="18691" relation="include">
        </childnode>
      </node>
      <node id="18679">
        <label>map</label>
      </node>
      <node id="18699">
        <label>omp.h</label>
      </node>
      <node id="18697">
        <label>exception</label>
      </node>
      <node id="18686">
        <label>cstdio</label>
      </node>
      <node id="18693">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="18694" relation="include">
        </childnode>
        <childnode refid="18695" relation="include">
        </childnode>
      </node>
      <node id="18688">
        <label>cxxabi.h</label>
      </node>
      <node id="18692">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="18681" relation="include">
        </childnode>
        <childnode refid="18677" relation="include">
        </childnode>
        <childnode refid="18693" relation="include">
        </childnode>
        <childnode refid="18696" relation="include">
        </childnode>
        <childnode refid="18697" relation="include">
        </childnode>
      </node>
      <node id="18678">
        <label>vector</label>
      </node>
      <node id="18677">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="18678" relation="include">
        </childnode>
        <childnode refid="18679" relation="include">
        </childnode>
        <childnode refid="18680" relation="include">
        </childnode>
        <childnode refid="18681" relation="include">
        </childnode>
      </node>
      <node id="18700">
        <label>sstream</label>
      </node>
      <node id="18685">
        <label>cstdlib</label>
      </node>
      <node id="18696">
        <label>iostream</label>
      </node>
      <node id="18691">
        <label>chrono</label>
      </node>
      <node id="18694">
        <label>csignal</label>
      </node>
      <node id="18698">
        <label>mpi.h</label>
      </node>
      <node id="18676">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp</label>
        <link refid="comm_8cpp"/>
        <childnode refid="18677" relation="include">
        </childnode>
        <childnode refid="18690" relation="include">
        </childnode>
        <childnode refid="18692" relation="include">
        </childnode>
        <childnode refid="18698" relation="include">
        </childnode>
        <childnode refid="18699" relation="include">
        </childnode>
        <childnode refid="18700" relation="include">
        </childnode>
        <childnode refid="18701" relation="include">
        </childnode>
      </node>
      <node id="18701">
        <label>thread</label>
      </node>
      <node id="18689">
        <label>lbann_config.hpp</label>
      </node>
      <node id="18684">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="18685" relation="include">
        </childnode>
        <childnode refid="18686" relation="include">
        </childnode>
        <childnode refid="18687" relation="include">
        </childnode>
        <childnode refid="18688" relation="include">
        </childnode>
      </node>
      <node id="18683">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="18682" relation="include">
        </childnode>
      </node>
      <node id="18680">
        <label>typeindex</label>
      </node>
      <node id="18687">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="comm_8cpp_1a7a92ceb4ddf57dc156d3a1b39f3ab962" prot="public" static="no">
        <name>checkMPI</name>
        <param><defname>status</defname></param>
        <initializer>status</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" line="53" column="10" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lbann_comm<sp/>.hpp<sp/>.cpp<sp/>-<sp/>LBANN<sp/>communication<sp/>utilities</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="comm_8hpp" kindref="compound">lbann/comm.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8hpp" kindref="compound">lbann/utils/timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">lbann/utils/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mpi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;omp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Error<sp/>utility<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>checkMPI(mpi_call)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>int<sp/>status<sp/>=<sp/>mpi_call;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if(status<sp/>!=<sp/>MPI_SUCCESS)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>error_string[MPI_MAX_ERROR_STRING];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>error_string_len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Error_string(status,<sp/>error_string,<sp/>&amp;error_string_len);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;MPI<sp/>error:<sp/>&quot;<sp/>&lt;&lt;<sp/>std::string(error_string,<sp/>error_string_len)<sp/>&lt;&lt;<sp/>&quot;\n&quot;;<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;Error<sp/>at<sp/>&quot;<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>&quot;\n&quot;;<sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>lbann_exception(&quot;MPI<sp/>error&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="comm_8cpp_1a7a92ceb4ddf57dc156d3a1b39f3ab962" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>checkMPI(status)<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>#ifdef<sp/>LBANN_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classlbann_1_1lbann__comm_1a63eae73674cbadea2eff8b6595322336" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1lbann__comm_1a63eae73674cbadea2eff8b6595322336" kindref="member">lbann_comm::lbann_comm</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ppm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::mpi::Comm<sp/>world)<sp/>:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>world_comm(world),<sp/>grid(nullptr),<sp/>procs_per_model(ppm),<sp/>num_model_barriers(0),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>num_intermodel_barriers(0),<sp/>num_global_barriers(0),<sp/>bytes_sent(0),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>bytes_received(0)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_ALUMINUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>have<sp/>argc/argv<sp/>here,<sp/>but<sp/>MPI<sp/>should<sp/>already<sp/>be<sp/>init&apos;d.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc_dummy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv_dummy<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>::Al::Initialize(argc_dummy,<sp/>argv_dummy);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>the<sp/>initial<sp/>model<sp/>split</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" kindref="member">split_models</ref>(<ref refid="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" kindref="member">procs_per_model</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>node<sp/>communicators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a44bc6b8683f04c2a3fc2f01fc734a946" kindref="member">setup_node_comm</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2ffc59f0c1d97df2ca6845312c8c8b3e" kindref="member">procs_per_node</ref><sp/>=<sp/>El::mpi::Size(<ref refid="classlbann_1_1lbann__comm_1a8aeb530ae4cedfa4d1141bb9c4704e6c" kindref="member">node_comm</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1abb5c8b008b5cac11702bf1f991c78ab0" kindref="member">rank_in_node</ref><sp/>=<sp/>El::mpi::Rank(<ref refid="classlbann_1_1lbann__comm_1a8aeb530ae4cedfa4d1141bb9c4704e6c" kindref="member">node_comm</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a597189b10f61947580f97fb8d1da7355" kindref="member">setup_threads</ref>();<sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classlbann_1_1lbann__comm_1af17b1093313c5e4223f9036798f9e12f" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1lbann__comm_1af17b1093313c5e4223f9036798f9e12f" kindref="member">lbann_comm::~lbann_comm</ref>()<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a29fb31be115db3225b145f250a7778d9" kindref="member">grid</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>El::mpi::Free(<ref refid="classlbann_1_1lbann__comm_1a58a75b76bd61ec8a26c1cbbec3dc2f45" kindref="member">model_comm</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>El::mpi::Free(<ref refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" kindref="member">intermodel_comm</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>El::mpi::Free(<ref refid="classlbann_1_1lbann__comm_1a8aeb530ae4cedfa4d1141bb9c4704e6c" kindref="member">node_comm</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>buf_vec<sp/>:<sp/><ref refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" kindref="member">collective_bufs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>buf<sp/>:<sp/>buf_vec.second)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_ALUMINUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>m_al_comms.clear();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>::Al::Finalize();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a0ae02c4083623d2e1381336a73fdb379" kindref="member">lbann_comm::split_models</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ppm)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>world_size<sp/>=<sp/>El::mpi::Size(<ref refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" kindref="member">get_world_comm</ref>());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" kindref="member">procs_per_model</ref><sp/>=<sp/>ppm;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ppm<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" kindref="member">procs_per_model</ref><sp/>=<sp/>world_size;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>parameters<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" kindref="member">procs_per_model</ref><sp/>&gt;<sp/>world_size)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>Not<sp/>enough<sp/>processes<sp/>to<sp/>create<sp/>one<sp/>model;<sp/>procs_per_model:<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(<ref refid="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" kindref="member">procs_per_model</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>larger<sp/>than<sp/>world_size:<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(world_size));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(world_size<sp/>%<sp/><ref refid="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" kindref="member">procs_per_model</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>Procs<sp/>per<sp/>model<sp/>does<sp/>not<sp/>divide<sp/>total<sp/>number<sp/>of<sp/>procs;<sp/>procs_per_model:<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(<ref refid="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" kindref="member">procs_per_model</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>total<sp/>number<sp/>of<sp/>procs<sp/>(world<sp/>size):<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(world_size));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a256ff5a0bafb33f43784ffc8dd2d29cf" kindref="member">num_models</ref><sp/>=<sp/>world_size<sp/>/<sp/><ref refid="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" kindref="member">procs_per_model</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a1f3f90a996dbba4cd1cca60596933ea3" kindref="member">model_rank</ref><sp/>=<sp/>El::mpi::Rank(<ref refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" kindref="member">get_world_comm</ref>())<sp/>/<sp/><ref refid="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" kindref="member">procs_per_model</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a0dcccd57c2b591eb7682e192e0a09033" kindref="member">rank_in_model</ref><sp/>=<sp/>El::mpi::Rank(<ref refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" kindref="member">get_world_comm</ref>())<sp/>%<sp/><ref refid="classlbann_1_1lbann__comm_1a7cb55d127259d7ed9f07ccde6f4ebd8c" kindref="member">procs_per_model</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>model<sp/>and<sp/>intermodel<sp/>communicators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>El::mpi::Split(<ref refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" kindref="member">get_world_comm</ref>(),<sp/><ref refid="classlbann_1_1lbann__comm_1a1f3f90a996dbba4cd1cca60596933ea3" kindref="member">model_rank</ref>,<sp/><ref refid="classlbann_1_1lbann__comm_1a0dcccd57c2b591eb7682e192e0a09033" kindref="member">rank_in_model</ref>,<sp/><ref refid="classlbann_1_1lbann__comm_1a58a75b76bd61ec8a26c1cbbec3dc2f45" kindref="member">model_comm</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>El::mpi::Split(<ref refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" kindref="member">get_world_comm</ref>(),<sp/><ref refid="classlbann_1_1lbann__comm_1a0dcccd57c2b591eb7682e192e0a09033" kindref="member">rank_in_model</ref>,<sp/><ref refid="classlbann_1_1lbann__comm_1a1f3f90a996dbba4cd1cca60596933ea3" kindref="member">model_rank</ref>,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" kindref="member">intermodel_comm</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>Elemental<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__comm_1a29fb31be115db3225b145f250a7778d9" kindref="member">grid</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a29fb31be115db3225b145f250a7778d9" kindref="member">grid</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a29fb31be115db3225b145f250a7778d9" kindref="member">grid</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9951bb1719d534e0401b1f06cad19eab" kindref="member">Grid</ref>(<ref refid="classlbann_1_1lbann__comm_1a58a75b76bd61ec8a26c1cbbec3dc2f45" kindref="member">model_comm</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classlbann_1_1lbann__comm_1a68b36ba64db34f33cb135bc64c4623e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a68b36ba64db34f33cb135bc64c4623e0" kindref="member">lbann_comm::intermodel_sum_matrix</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" kindref="member">bytes_sent</ref><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>mat.Height()<sp/>*<sp/>mat.Width();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>El::AllReduce(mat,<sp/><ref refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" kindref="member">intermodel_comm</ref>,<sp/>El::mpi::SUM);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" kindref="member">bytes_received</ref><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>mat.Height()<sp/>*<sp/>mat.Width();</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classlbann_1_1lbann__comm_1a55edcd98bf4903235ed11eb7c96f5eb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a68b36ba64db34f33cb135bc64c4623e0" kindref="member">lbann_comm::intermodel_sum_matrix</ref>(<ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>mat)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" kindref="member">allreduce</ref>(mat,<sp/><ref refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" kindref="member">intermodel_comm</ref>,<sp/>El::mpi::SUM);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classlbann_1_1lbann__comm_1adaff1e6549a3fb902c85f1be2718c1ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" kindref="member">lbann_comm::allreduce</ref>(<ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>m,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::mpi::Comm<sp/>c,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::Op<sp/>op,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_index<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_size<sp/>=<sp/>m.LocalHeight()<sp/>*<sp/>m.LocalWidth();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" kindref="member">bytes_sent</ref><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>local_size;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_ALUMINUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.LocalHeight()<sp/>!=<sp/>m.LDim())<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;Aluminum<sp/>does<sp/>not<sp/>support<sp/>allreduces<sp/>on&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>non-contiguous<sp/>matrices&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref><sp/>=<sp/>get_al_comm(c,<sp/>t);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/>std::type_index(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(::Al::MPIBackend)))<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>::Al::Allreduce&lt;::Al::MPIBackend&gt;(</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.Buffer(),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>local_size,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mpi_op_to_al_op(op),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_NCCL2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/>std::type_index(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(::Al::NCCLBackend)))<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>::Al::Allreduce&lt;::Al::NCCLBackend&gt;(</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.Buffer(),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>local_size,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mpi_op_to_al_op(op),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">::Al::NCCLCommunicator*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_NCCL2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>El::AllReduce(m,<sp/>c,<sp/>op);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" kindref="member">bytes_received</ref><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>local_size<sp/>*<sp/>(El::mpi::Size(c)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classlbann_1_1lbann__comm_1a2a7bb6cf3707366fc0671d8894ca30ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a2a7bb6cf3707366fc0671d8894ca30ea" kindref="member">lbann_comm::nb_allreduce</ref>(<ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>m,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::mpi::Comm<sp/>c,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlbann_1_1Al_1_1request" kindref="compound">Al::request</ref>&amp;<sp/>req,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::Op<sp/>op,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_index<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_ALUMINUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_size<sp/>=<sp/>m.LocalHeight()<sp/>*<sp/>m.LocalWidth();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" kindref="member">bytes_sent</ref><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>local_size;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.LocalHeight()<sp/>!=<sp/>m.LDim())<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;Aluminum<sp/>does<sp/>not<sp/>support<sp/>allreduces<sp/>on&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>non-contiguous<sp/>matrices&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref><sp/>=<sp/>get_al_comm(c,<sp/>t);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/>std::type_index(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(::Al::MPIBackend)))<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>::Al::NonblockingAllreduce&lt;::Al::MPIBackend&gt;(</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.Buffer(),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>local_size,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mpi_op_to_al_op(op),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>req.<ref refid="structlbann_1_1Al_1_1request_1ac244ce26cf8ea6ebad799efa6ca39ba3" kindref="member">mpi_req</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_NCCL2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/>std::type_index(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(::Al::NCCLBackend)))<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>::Al::NonblockingAllreduce&lt;::Al::NCCLBackend&gt;(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.Buffer(),</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>local_size,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mpi_op_to_al_op(op),</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">::Al::NCCLCommunicator*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>req.nccl_req);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_NCCL2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" kindref="member">bytes_received</ref><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>local_size<sp/>*<sp/>(El::mpi::Size(c)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" kindref="member">allreduce</ref>(m,<sp/>c,<sp/>op);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_ALUMINUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classlbann_1_1lbann__comm_1a91d09d595801f6228ee0aecf6dea25c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a30439f28cf615e1406090799c5499321" kindref="member">lbann_comm::wait</ref>(<ref refid="structlbann_1_1Al_1_1request" kindref="compound">Al::request</ref>&amp;<sp/>req)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_ALUMINUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req.<ref refid="structlbann_1_1Al_1_1request_1ac244ce26cf8ea6ebad799efa6ca39ba3" kindref="member">mpi_req</ref><sp/>!=<sp/><ref refid="classlbann_1_1Al_1_1dummy__backend_1a458ac4eb9f62b06984b4ef1b1eeb5851" kindref="member">Al::mpi_backend::null_req</ref>)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>::Al::Wait&lt;::Al::MPIBackend&gt;(req.<ref refid="structlbann_1_1Al_1_1request_1ac244ce26cf8ea6ebad799efa6ca39ba3" kindref="member">mpi_req</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_NCCL2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req.nccl_req<sp/>!=<sp/><ref refid="classlbann_1_1Al_1_1dummy__backend_1a458ac4eb9f62b06984b4ef1b1eeb5851" kindref="member">Al::nccl_backend::null_req</ref>)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>::Al::Wait&lt;::Al::NCCLBackend&gt;(req.nccl_req);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_NCCL2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_ALUMINUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classlbann_1_1lbann__comm_1a99303a11b939b4aba9d4a67dd0deef56" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a99303a11b939b4aba9d4a67dd0deef56" kindref="member">lbann_comm::test</ref>(<ref refid="structlbann_1_1Al_1_1request" kindref="compound">Al::request</ref>&amp;<sp/>req)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>req_test<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_ALUMINUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req.<ref refid="structlbann_1_1Al_1_1request_1ac244ce26cf8ea6ebad799efa6ca39ba3" kindref="member">mpi_req</ref><sp/>!=<sp/><ref refid="classlbann_1_1Al_1_1dummy__backend_1a458ac4eb9f62b06984b4ef1b1eeb5851" kindref="member">Al::mpi_backend::null_req</ref>)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>req_test<sp/>=<sp/>req_test<sp/>&amp;&amp;<sp/>::Al::Test&lt;::Al::MPIBackend&gt;(req.<ref refid="structlbann_1_1Al_1_1request_1ac244ce26cf8ea6ebad799efa6ca39ba3" kindref="member">mpi_req</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_NCCL2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req.nccl_req<sp/>!=<sp/><ref refid="classlbann_1_1Al_1_1dummy__backend_1a458ac4eb9f62b06984b4ef1b1eeb5851" kindref="member">Al::nccl_backend::null_req</ref>)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>req_test<sp/>=<sp/>req_test<sp/>&amp;&amp;<sp/>::Al::Test&lt;::Al::NCCLBackend&gt;(req.nccl_req);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_NCCL2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_ALUMINUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>req_test;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classlbann_1_1lbann__comm_1a4989229db1ee858c5a2170a989653d0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a4989229db1ee858c5a2170a989653d0b" kindref="member">lbann_comm::intermodel_broadcast_matrix</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>El::Broadcast(mat,<sp/><ref refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" kindref="member">intermodel_comm</ref>,<sp/>root);</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classlbann_1_1lbann__comm_1a7fb6be066a634169cb41cef3f98032f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a4989229db1ee858c5a2170a989653d0b" kindref="member">lbann_comm::intermodel_broadcast_matrix</ref>(<ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>El::Broadcast(mat,<sp/><ref refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" kindref="member">intermodel_comm</ref>,<sp/>root);</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="classlbann_1_1lbann__comm_1a5834e95e066313d9328b22e4a0ec8663" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a5834e95e066313d9328b22e4a0ec8663" kindref="member">lbann_comm::intermodel_barrier</ref>()<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>++<ref refid="classlbann_1_1lbann__comm_1a03d946ef5ea5d3b15351e78a2eed10fe" kindref="member">num_intermodel_barriers</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a303c02c5a127f3ed21f12c9a71cc90a6" kindref="member">barrier</ref>(<ref refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" kindref="member">intermodel_comm</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="classlbann_1_1lbann__comm_1a6086ced12c3eefeea6e2a78eff286983" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a6086ced12c3eefeea6e2a78eff286983" kindref="member">lbann_comm::model_barrier</ref>()<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>++<ref refid="classlbann_1_1lbann__comm_1aa4f15459eca2a06174a877ba0c23feb7" kindref="member">num_model_barriers</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a303c02c5a127f3ed21f12c9a71cc90a6" kindref="member">barrier</ref>(<ref refid="classlbann_1_1lbann__comm_1a58a75b76bd61ec8a26c1cbbec3dc2f45" kindref="member">model_comm</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="classlbann_1_1lbann__comm_1ae12af95f4826571efa03fb8520260daa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1ae12af95f4826571efa03fb8520260daa" kindref="member">lbann_comm::global_barrier</ref>()<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>++<ref refid="classlbann_1_1lbann__comm_1a4f01e2f2d8220dc34cf39eb4a255cd7d" kindref="member">num_global_barriers</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a303c02c5a127f3ed21f12c9a71cc90a6" kindref="member">barrier</ref>(<ref refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" kindref="member">get_world_comm</ref>());</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="classlbann_1_1lbann__comm_1a303c02c5a127f3ed21f12c9a71cc90a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a303c02c5a127f3ed21f12c9a71cc90a6" kindref="member">lbann_comm::barrier</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::mpi::Comm<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>El::mpi::Barrier(c);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="classlbann_1_1lbann__comm_1ac3fa03c3ee8351daed6c7a5fd6f8535d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a086078b881e7250df140ac116adb1939" kindref="member">lbann_comm::send</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a086078b881e7250df140ac116adb1939" kindref="member">send</ref>(mat.LockedBuffer(),<sp/>mat.Height()<sp/>*<sp/>mat.Width(),<sp/><ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c" kindref="member">model</ref>,<sp/>rank);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classlbann_1_1lbann__comm_1ae6ad297cccfc9ed893b855046d60b34d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a086078b881e7250df140ac116adb1939" kindref="member">lbann_comm::send</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a086078b881e7250df140ac116adb1939" kindref="member">send</ref>(mat.LockedBuffer(),<sp/>mat.LocalHeight()<sp/>*<sp/>mat.LocalWidth(),<sp/><ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c" kindref="member">model</ref>,<sp/>rank);</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="classlbann_1_1lbann__comm_1ae86cb0f65c8e11dec7a1cf0d3ce17cd2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a70679ca6477c56972f9bc53d52e5ce21" kindref="member">lbann_comm::nb_send</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::Request&lt;DataType&gt;&amp;<sp/>req)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a70679ca6477c56972f9bc53d52e5ce21" kindref="member">nb_send</ref>(mat.LockedBuffer(),<sp/>mat.Height()<sp/>*<sp/>mat.Width(),<sp/><ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c" kindref="member">model</ref>,<sp/>rank,<sp/>req);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="classlbann_1_1lbann__comm_1ad77344b63311b7ec57c63af67120c3e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a70679ca6477c56972f9bc53d52e5ce21" kindref="member">lbann_comm::nb_send</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::Request&lt;DataType&gt;&amp;<sp/>req)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a70679ca6477c56972f9bc53d52e5ce21" kindref="member">nb_send</ref>(mat.LockedBuffer(),<sp/>mat.LocalHeight()<sp/>*<sp/>mat.LocalWidth(),<sp/><ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c" kindref="member">model</ref>,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank,<sp/>req);</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classlbann_1_1lbann__comm_1ac1ed8dd7b6f839b69bfb33f88728b18d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" kindref="member">lbann_comm::recv</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" kindref="member">recv</ref>(mat.Buffer(),<sp/>mat.Height()<sp/>*<sp/>mat.Width(),<sp/><ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c" kindref="member">model</ref>,<sp/>rank);</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="classlbann_1_1lbann__comm_1a1376b4f3c0941e19ff23a8baf30eb63d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" kindref="member">lbann_comm::recv</ref>(<ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" kindref="member">recv</ref>(mat.Buffer(),<sp/>mat.LocalHeight()<sp/>*<sp/>mat.LocalWidth(),<sp/><ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c" kindref="member">model</ref>,<sp/>rank);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="classlbann_1_1lbann__comm_1a3d0cca55711c9c9913f3d940c5bba4eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" kindref="member">lbann_comm::recv</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" kindref="member">recv</ref>(mat.Buffer(),<sp/>mat.Height()<sp/>*<sp/>mat.Width());</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="classlbann_1_1lbann__comm_1acc92b86b30287689870e018b062076f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" kindref="member">lbann_comm::recv</ref>(<ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" kindref="member">recv</ref>(mat.Buffer(),<sp/>mat.LocalHeight()<sp/>*<sp/>mat.LocalWidth());</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="classlbann_1_1lbann__comm_1a8f850662e84e3efab19244d1ef6752d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" kindref="member">lbann_comm::nb_recv</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::Request&lt;DataType&gt;&amp;<sp/>req)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" kindref="member">nb_recv</ref>(mat.Buffer(),<sp/>mat.Height()<sp/>*<sp/>mat.Width(),<sp/><ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c" kindref="member">model</ref>,<sp/>rank,<sp/>req);</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="classlbann_1_1lbann__comm_1abec714b3f80361f104eaa004d906798b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" kindref="member">lbann_comm::nb_recv</ref>(<ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::Request&lt;DataType&gt;&amp;<sp/>req)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" kindref="member">nb_recv</ref>(mat.Buffer(),<sp/>mat.LocalHeight()<sp/>*<sp/>mat.LocalWidth(),<sp/><ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c" kindref="member">model</ref>,<sp/>rank,<sp/>req);</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="classlbann_1_1lbann__comm_1a4e703fa356dd7807fda82d1d1eb81e1d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" kindref="member">lbann_comm::nb_recv</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/>El::mpi::Request&lt;DataType&gt;&amp;<sp/>req)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" kindref="member">nb_recv</ref>(mat.Buffer(),<sp/>mat.Height()<sp/>*<sp/>mat.Width(),<sp/>req);</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="classlbann_1_1lbann__comm_1a105c0fa7997f23637cbd03d566748bca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" kindref="member">lbann_comm::nb_recv</ref>(<ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat,<sp/>El::mpi::Request&lt;DataType&gt;&amp;<sp/>req)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aac24e8802602c73efddb455274e158f4" kindref="member">nb_recv</ref>(mat.Buffer(),<sp/>mat.LocalHeight()<sp/>*<sp/>mat.LocalWidth(),<sp/>req);</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="classlbann_1_1lbann__comm_1a34d5414f1ac4749e6f0937b638bb5cc6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a502bd724f9fb27f0e899306c69a3ec47" kindref="member">lbann_comm::intermodel_allreduce</ref>(</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_recv_count,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>std::function&lt;uint8_t<sp/>*(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;,<sp/>El::IR,<sp/>El::IR,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&gt;<sp/>send_transform,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(uint8_t<sp/>*,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;)&gt;<sp/>recv_transform,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(uint8_t<sp/>*,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)&gt;<sp/>recv_apply_transform,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1lbann__comm_1_1allreduce__options" kindref="compound">lbann_comm::allreduce_options</ref><sp/>opts)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>which<sp/>algorithm<sp/>to<sp/>actually<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019" kindref="member">lbann_comm::allreduce_algorithm</ref><sp/>algo<sp/>=<sp/>opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a8cb30eb49f6556debf08291056d036e9" kindref="member">algo</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(algo<sp/>==<sp/><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019a5b39c8b553c821e7cddc6da64b5bd2ee" kindref="member">allreduce_algorithm::DEFAULT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>algo<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1aafcb505629dd550ebd0b2c41792aca27" kindref="member">get_default_allreduce_algorithm</ref>();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nprocs<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" kindref="member">get_num_models</ref>();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>small_message_threshold<sp/>=<sp/>64*64;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(algo<sp/>==<sp/><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019a0fcc90da4811c877ba9f9c12f7d60bc9" kindref="member">allreduce_algorithm::DYNAMIC</ref>)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>small<sp/>messages<sp/>and<sp/>power-of-2<sp/>number<sp/>of<sp/>processes,<sp/>use<sp/>RD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(nprocs<sp/>&amp;<sp/>(nprocs<sp/>-<sp/>1))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat.Height()<sp/>*<sp/>mat.Width()<sp/>&lt;=<sp/>small_message_threshold)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>algo<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019a5a99a7b378e450d9e91b10b1f0085274" kindref="member">allreduce_algorithm::RECURSIVE_DOUBLING</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>algo<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019ae97d669b6498b36d1ce07b3d2c544fee" kindref="member">allreduce_algorithm::PAIRWISE_EXCHANGE_RING</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(algo)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019a5a99a7b378e450d9e91b10b1f0085274" kindref="member">allreduce_algorithm::RECURSIVE_DOUBLING</ref>:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" kindref="member">recursive_doubling_allreduce_pow2</ref>(</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" kindref="member">intermodel_comm</ref>,<sp/>mat,<sp/>max_recv_count,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_transform,<sp/>recv_apply_transform,<sp/>opts);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019ae97d669b6498b36d1ce07b3d2c544fee" kindref="member">allreduce_algorithm::PAIRWISE_EXCHANGE_RING</ref>:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" kindref="member">pe_ring_allreduce</ref>(</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" kindref="member">intermodel_comm</ref>,<sp/>mat,<sp/>max_recv_count,<sp/>send_transform,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_transform,<sp/>recv_apply_transform,<sp/>opts);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019ae69b8a2544417fb71e2767e95d7ac8f3" kindref="member">allreduce_algorithm::RING</ref>:</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" kindref="member">ring_allreduce</ref>(</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" kindref="member">intermodel_comm</ref>,<sp/>mat,<sp/>max_recv_count,<sp/>send_transform,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_transform,<sp/>recv_apply_transform,<sp/>opts);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019aecfb3869b05d9c2103f98c386a9e8a41" kindref="member">allreduce_algorithm::RABENSEIFNER</ref>:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" kindref="member">rabenseifner_allreduce</ref>(</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2c51c5d8faf4f0ab4f43b892c55e597b" kindref="member">intermodel_comm</ref>,<sp/>mat,<sp/>max_recv_count,<sp/>send_transform,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_transform,<sp/>recv_apply_transform,<sp/>opts);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019a5b39c8b553c821e7cddc6da64b5bd2ee" kindref="member">allreduce_algorithm::DEFAULT</ref>:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a02a03227cc27e3516f0d9f9812f32019a0fcc90da4811c877ba9f9c12f7d60bc9" kindref="member">allreduce_algorithm::DYNAMIC</ref>:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;intermodel_allreduce:<sp/>bad<sp/>algorithm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a99bc2f8128f0b0e2ebdf876a3a343635" kindref="member">lbann_comm::recursive_doubling_allreduce_pow2</ref>(</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::mpi::Comm<sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_recv_count,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>std::function&lt;uint8_t<sp/>*(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;,<sp/>El::IR,<sp/>El::IR,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&gt;<sp/>send_transform,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(uint8_t<sp/>*,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)&gt;<sp/>recv_apply_transform,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1lbann__comm_1_1allreduce__options" kindref="compound">lbann_comm::allreduce_options</ref><sp/>opts)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ar_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>El::mpi::Rank(comm);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nprocs<sp/>=<sp/>El::mpi::Size(comm);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nprocs<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>implementation<sp/>requires<sp/>a<sp/>power-of-2<sp/>number<sp/>of<sp/>processes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nprocs<sp/>&amp;<sp/>(nprocs<sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;lbann_comm:<sp/>recursive<sp/>doubling<sp/>allreduce<sp/>requires&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>a<sp/>power-of-2<sp/>number<sp/>of<sp/>participating<sp/>processes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*max_recv_buf<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" kindref="member">get_collective_buffer</ref>(max_recv_count);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*recv_buf<sp/>=<sp/>max_recv_buf;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mask<sp/>&lt;<sp/>nprocs)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partner<sp/>=<sp/>rank<sp/>^<sp/>mask;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rank<sp/>we<sp/>exchange<sp/>with<sp/>this<sp/>step.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_local<sp/>=<sp/>opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1ad9890ae127412ee65a98cbdb02a4b143" kindref="member">no_local_trans</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a5cdd318d1505ba0f31bf4fe9fadffacc" kindref="member">is_rank_node_local</ref>(partner,<sp/>comm);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>the<sp/>data<sp/>we<sp/>want<sp/>to<sp/>send.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>send_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>send_size;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_size<sp/>=<sp/>max_recv_count;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*send_buf<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_local)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_buf<sp/>=<sp/>(uint8_t<sp/>*)<sp/>mat.Buffer();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>mat.Height()<sp/>*<sp/>mat.Width();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/>send_size;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" kindref="member">get_collective_buffer</ref>(recv_size);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_buf<sp/>=<sp/>send_transform(mat,<sp/>El::ALL,<sp/>El::ALL,<sp/>send_size,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf<sp/>=<sp/>max_recv_buf;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4e3d35520a8f567579f9235e9808ba1c" kindref="member">ar_send_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>send_trans_start;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" kindref="member">bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" kindref="member">ar_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>El::mpi::SendRecv(send_buf,<sp/>send_size,<sp/>partner,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf,<sp/>recv_size,<sp/>partner,<sp/>comm);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_tot<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>sendrecv_start;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" kindref="member">ar_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" kindref="member">ar_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>and<sp/>reduce<sp/>the<sp/>received<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recv_apply_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/>recv_apply_transform(recv_buf,<sp/>mat,<sp/>is_local);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa642b0ae2321fa464b0092da527f6375" kindref="member">ar_recv_apply_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>recv_apply_trans_start;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" kindref="member">bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" kindref="member">ar_bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>mask<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa57d2fbeef85fd8a3c9f2a37ca7687c8" kindref="member">ar_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>ar_start;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1ac294fe5fa47f283aba31fa1abfa99438" kindref="member">lbann_comm::pe_ring_allreduce</ref>(</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::mpi::Comm<sp/>comm,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_recv_count,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>std::function&lt;uint8_t<sp/>*(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;,<sp/>El::IR,<sp/>El::IR,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&gt;<sp/>send_transform,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(uint8_t<sp/>*,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;)&gt;<sp/>recv_transform,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(uint8_t<sp/>*,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)&gt;<sp/>recv_apply_transform,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1lbann__comm_1_1allreduce__options" kindref="compound">lbann_comm::allreduce_options</ref><sp/>opts)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ar_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>El::mpi::Rank(comm);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nprocs<sp/>=<sp/>El::mpi::Size(comm);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nprocs<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>number<sp/>of<sp/>columns<sp/>each<sp/>processor<sp/>sends.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>doesn&apos;t<sp/>divide<sp/>evenly,<sp/>give<sp/>one<sp/>extra<sp/>to<sp/>the<sp/>earlier<sp/>ranks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>cols_per_proc<sp/>=<sp/>mat.Width()<sp/>/<sp/>nprocs;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>cols_remainder<sp/>=<sp/>mat.Width()<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>lengths/ends<sp/>of<sp/>the<sp/>slices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>std::vector&lt;El::Int&gt;<sp/>slice_lengths(nprocs,<sp/>cols_per_proc);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cols_remainder;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>slice_lengths[i]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>std::vector&lt;El::Int&gt;<sp/>slice_ends(nprocs);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>std::partial_sum(slice_lengths.begin(),<sp/>slice_lengths.end(),</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends.begin());</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>std::vector&lt;uint8_t<sp/>*&gt;<sp/>max_recv_buffers(opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a4b3cd4eb74dd5a49ee3ffafa2edc1607" kindref="member">max_reduces</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>max_recv_buffers.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>max_recv_buffers[i]<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" kindref="member">get_collective_buffer</ref>(max_recv_count,<sp/>i);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Local<sp/>slice<sp/>of<sp/>our<sp/>accumulated<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>accum_view<sp/>=<sp/>mat(El::ALL,<sp/>El::IR(slice_ends[rank]<sp/>-<sp/>slice_lengths[rank],</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[rank]));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>pairwise-exchange<sp/>reduce-scatter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outer_step<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_step<sp/>&lt;<sp/>nprocs;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_step<sp/>+=<sp/>opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a4b3cd4eb74dd5a49ee3ffafa2edc1607" kindref="member">max_reduces</ref>)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reduces_this_step<sp/>=<sp/>std::min(opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a4b3cd4eb74dd5a49ee3ffafa2edc1607" kindref="member">max_reduces</ref>,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nprocs<sp/>-<sp/>outer_step);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;El::mpi::Request&lt;uint8_t&gt;&gt;<sp/>send_reqs(reduces_this_step);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;El::mpi::Request&lt;uint8_t&gt;&gt;<sp/>recv_reqs(reduces_this_step);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t<sp/>*&gt;<sp/>recv_buffers(max_recv_buffers);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_local_recvs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;<sp/>local_recvs(reduces_this_step,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>outer_step;<sp/>step<sp/>&lt;<sp/>outer_step<sp/>+<sp/>reduces_this_step;<sp/>++step)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reduce_idx<sp/>=<sp/>step<sp/>-<sp/>outer_step;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>where<sp/>we<sp/>send<sp/>to/receive<sp/>from.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst<sp/>=<sp/>(rank<sp/>+<sp/>step)<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src<sp/>=<sp/>(rank<sp/>-<sp/>step<sp/>+<sp/>nprocs)<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_send_local<sp/>=<sp/>opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1ad9890ae127412ee65a98cbdb02a4b143" kindref="member">no_local_trans</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a5cdd318d1505ba0f31bf4fe9fadffacc" kindref="member">is_rank_node_local</ref>(dst,<sp/>comm);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_recv_local<sp/>=<sp/>opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1ad9890ae127412ee65a98cbdb02a4b143" kindref="member">no_local_trans</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a5cdd318d1505ba0f31bf4fe9fadffacc" kindref="member">is_rank_node_local</ref>(src,<sp/>comm);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Post<sp/>the<sp/>receive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recv_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_size<sp/>=<sp/>max_recv_count;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_recv_local)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>accum_view.Height()<sp/>*<sp/>accum_view.Width();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_buffers[reduce_idx]<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" kindref="member">get_collective_buffer</ref>(recv_size,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_local_recvs);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_local_recvs;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_recvs[reduce_idx]<sp/>=<sp/>is_recv_local;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::IRecv(recv_buffers[reduce_idx],<sp/>recv_size,<sp/>src,<sp/>comm,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_reqs[reduce_idx]);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recv_tot<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>recv_start;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" kindref="member">ar_recv_time</ref><sp/>+=<sp/>recv_tot;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1adefa0ee8b0a6b74072448e20d40f502d" kindref="member">ar_rs_recv_time</ref><sp/>+=<sp/>recv_tot;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>the<sp/>data<sp/>we<sp/>send.<sp/>We<sp/>do<sp/>not<sp/>look<sp/>at<sp/>the<sp/>same<sp/>chunk<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>twice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>send_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>send_size;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*send_buf<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_send_local)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>send_view<sp/>=<sp/>mat(El::ALL,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::IR(slice_ends[dst]<sp/>-<sp/>slice_lengths[dst],<sp/>slice_ends[dst]));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_buf<sp/>=<sp/>(uint8_t<sp/>*)<sp/>send_view.Buffer();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>send_view.Height()<sp/>*<sp/>send_view.Width();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_buf<sp/>=<sp/>send_transform(</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat,<sp/>El::ALL,<sp/>El::IR(slice_ends[dst]<sp/>-<sp/>slice_lengths[dst],<sp/>slice_ends[dst]),</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_size,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>reduce_idx);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4e3d35520a8f567579f9235e9808ba1c" kindref="member">ar_send_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>send_trans_start;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" kindref="member">bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" kindref="member">ar_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ac74bcfb565c1bb6604f336c6d1b647cc" kindref="member">ar_rs_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Post<sp/>the<sp/>send.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>send_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::ISend(send_buf,<sp/>send_size,<sp/>dst,<sp/>comm,<sp/>send_reqs[reduce_idx]);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>send_tot<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>send_start;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" kindref="member">ar_send_time</ref><sp/>+=<sp/>send_tot;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aaadab22d368e8004a9877828a3bc9e93" kindref="member">ar_rs_send_time</ref><sp/>+=<sp/>send_tot;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Complete<sp/>the<sp/>receives<sp/>(in<sp/>any<sp/>order).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>extract<sp/>the<sp/>raw<sp/>MPI_Request<sp/>because<sp/>Elemental<sp/>does<sp/>not<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MPI_Waitany.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;MPI_Request&gt;<sp/>raw_reqs(reduces_this_step);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>reduces_this_step;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>raw_reqs[i]<sp/>=<sp/>recv_reqs[i].backend;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>reduces_this_step;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>completed_idx;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recv_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Waitany(reduces_this_step,<sp/>raw_reqs.data(),<sp/>&amp;completed_idx,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_STATUS_IGNORE);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recv_tot<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>recv_start;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" kindref="member">ar_recv_time</ref><sp/>+=<sp/>recv_tot;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1adefa0ee8b0a6b74072448e20d40f502d" kindref="member">ar_rs_recv_time</ref><sp/>+=<sp/>recv_tot;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recv_apply_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_size<sp/>=<sp/>recv_apply_transform(</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_buffers[completed_idx],<sp/>accum_view,<sp/>local_recvs[completed_idx]);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa642b0ae2321fa464b0092da527f6375" kindref="member">ar_recv_apply_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>recv_apply_trans_start;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" kindref="member">bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" kindref="member">ar_bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2c3e1db0f6d2345748132322b0555db7" kindref="member">ar_rs_bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Complete<sp/>all<sp/>the<sp/>sends.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>send_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>El::mpi::WaitAll(reduces_this_step,<sp/>send_reqs.data(),<sp/>MPI_STATUSES_IGNORE);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>send_tot<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>send_start;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" kindref="member">ar_send_time</ref><sp/>+=<sp/>send_tot;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aaadab22d368e8004a9877828a3bc9e93" kindref="member">ar_rs_send_time</ref><sp/>+=<sp/>send_tot;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*recv_buf<sp/>=<sp/>max_recv_buffers[0];<sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>regular<sp/>recv<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a85022d803e339eb14a15129a07876c2b" kindref="member">ar_rs_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>rs_start;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>ring<sp/>allgather.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ag_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src<sp/>=<sp/>(rank<sp/>-<sp/>1<sp/>+<sp/>nprocs)<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst<sp/>=<sp/>(rank<sp/>+<sp/>1)<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>the<sp/>transform<sp/>to<sp/>our<sp/>locally-accumulated<sp/>slice<sp/>of<sp/>the<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>the<sp/>same<sp/>data<sp/>is<sp/>cycled<sp/>to<sp/>every<sp/>process,<sp/>we<sp/>do<sp/>not<sp/>do<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>no_local_trans<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>send_size;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>first<sp/>step<sp/>where<sp/>we<sp/>forward<sp/>our<sp/>local<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>send_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*send_buf<sp/>=<sp/>send_transform(</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat,<sp/>El::ALL,<sp/>El::IR(slice_ends[rank]<sp/>-<sp/>slice_lengths[rank],<sp/>slice_ends[rank]),</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_size,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4e3d35520a8f567579f9235e9808ba1c" kindref="member">ar_send_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>send_trans_start;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_src<sp/>=<sp/>(rank<sp/>-<sp/>1<sp/>+<sp/>nprocs)<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" kindref="member">bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" kindref="member">ar_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2cfe1264a83865360692c48d7869fe67" kindref="member">ar_ag_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>recv_view<sp/>=<sp/>mat(El::ALL,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::IR(slice_ends[data_src]<sp/>-<sp/>slice_lengths[data_src],</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[data_src]));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>can,<sp/>receive<sp/>directly<sp/>into<sp/>the<sp/>destination<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" kindref="member">id_recv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf<sp/>=<sp/>(uint8_t<sp/>*)<sp/>recv_view.Buffer();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_recv_count<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>recv_view.Height()<sp/>*<sp/>recv_view.Width();</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>El::mpi::SendRecv(send_buf,<sp/>send_size,<sp/>dst,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf,<sp/>max_recv_count,<sp/>src,<sp/>comm);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_tot<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>sendrecv_start;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" kindref="member">ar_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" kindref="member">ar_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a64cb0b86e9368c1d83370ba6cb0083ba" kindref="member">ar_ag_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a1896c3ecd1d5b084497c6ed47c1c9bae" kindref="member">ar_ag_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recv_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" kindref="member">id_recv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>recv_view.Height()<sp/>*<sp/>recv_view.Width();</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/>recv_transform(recv_buf,<sp/>recv_view);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1adb393f47d60eaa59bace80d2d3dd3bf2" kindref="member">ar_recv_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>recv_trans_start;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" kindref="member">bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" kindref="member">ar_bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afded6f478dc5021d1edec306dc6c528c" kindref="member">ar_ag_bytes_received</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>send_size<sp/>=<sp/>recv_size;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>do<sp/>the<sp/>remaining<sp/>nprocs<sp/>-<sp/>2<sp/>steps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>always<sp/>send<sp/>from<sp/>recv_buf<sp/>and<sp/>receive<sp/>to<sp/>recv_buf2,<sp/>swapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pointers<sp/>to<sp/>avoid<sp/>copying.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*recv_buf2<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" kindref="member">id_recv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>recv_buf2<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" kindref="member">get_collective_buffer</ref>(max_recv_count,<sp/>1);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>1;<sp/>step<sp/>&lt;<sp/>nprocs<sp/>-<sp/>1;<sp/>++step)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>where<sp/>the<sp/>data<sp/>we<sp/>get<sp/>is<sp/>coming<sp/>from.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_src<sp/>=<sp/>(rank<sp/>-<sp/>step<sp/>-<sp/>1<sp/>+<sp/>nprocs)<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>recv_view<sp/>=<sp/>mat(El::ALL,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::IR(slice_ends[data_src]<sp/>-<sp/>slice_lengths[data_src],</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[data_src]));</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" kindref="member">id_recv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf2<sp/>=<sp/>(uint8_t<sp/>*)<sp/>recv_view.Buffer();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_recv_count<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>recv_view.Height()<sp/>*<sp/>recv_view.Width();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" kindref="member">bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" kindref="member">ar_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2cfe1264a83865360692c48d7869fe67" kindref="member">ar_ag_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>El::mpi::SendRecv(recv_buf,<sp/>send_size,<sp/>dst,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf2,<sp/>max_recv_count,<sp/>src,<sp/>comm);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_tot<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>sendrecv_start;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" kindref="member">ar_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" kindref="member">ar_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a64cb0b86e9368c1d83370ba6cb0083ba" kindref="member">ar_ag_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a1896c3ecd1d5b084497c6ed47c1c9bae" kindref="member">ar_ag_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recv_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" kindref="member">id_recv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>recv_view.Height()<sp/>*<sp/>recv_view.Width();</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/>recv_transform(recv_buf2,<sp/>recv_view);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1adb393f47d60eaa59bace80d2d3dd3bf2" kindref="member">ar_recv_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>recv_trans_start;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" kindref="member">bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>the<sp/>send<sp/>and<sp/>receive<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(recv_buf,<sp/>recv_buf2);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>send_size<sp/>=<sp/>recv_size;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" kindref="member">ar_bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afded6f478dc5021d1edec306dc6c528c" kindref="member">ar_ag_bytes_received</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a48768342eb05c1c6cdaa52c3599b93c8" kindref="member">ar_ag_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>ag_start;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa57d2fbeef85fd8a3c9f2a37ca7687c8" kindref="member">ar_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>ar_start;</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a88162511dc2733dccd9c245e6c7ba53b" kindref="member">lbann_comm::ring_allreduce</ref>(</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::mpi::Comm<sp/>comm,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_recv_count,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>std::function&lt;uint8_t<sp/>*(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;,<sp/>El::IR,<sp/>El::IR,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&gt;<sp/>send_transform,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(uint8_t<sp/>*,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;)&gt;<sp/>recv_transform,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(uint8_t<sp/>*,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)&gt;<sp/>recv_apply_transform,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1lbann__comm_1_1allreduce__options" kindref="compound">lbann_comm::allreduce_options</ref><sp/>opts)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ar_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>El::mpi::Rank(comm);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nprocs<sp/>=<sp/>El::mpi::Size(comm);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nprocs<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>number<sp/>of<sp/>columns<sp/>each<sp/>processor<sp/>sends.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>cols_per_proc<sp/>=<sp/>mat.Width()<sp/>/<sp/>nprocs;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>cols_remainder<sp/>=<sp/>mat.Width()<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>lengths/ends<sp/>of<sp/>the<sp/>slices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>std::vector&lt;El::Int&gt;<sp/>slice_lengths(nprocs,<sp/>cols_per_proc);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cols_remainder;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>slice_lengths[i]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>std::vector&lt;El::Int&gt;<sp/>slice_ends(nprocs);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>std::partial_sum(slice_lengths.begin(),<sp/>slice_lengths.end(),</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends.begin());</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*max_recv_buf<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" kindref="member">get_collective_buffer</ref>(max_recv_count);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*recv_buf<sp/>=<sp/>max_recv_buf;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>source/destination<sp/>in<sp/>the<sp/>ring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src<sp/>=<sp/>(rank<sp/>-<sp/>1<sp/>+<sp/>nprocs)<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst<sp/>=<sp/>(rank<sp/>+<sp/>1)<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_send_local<sp/>=<sp/>opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1ad9890ae127412ee65a98cbdb02a4b143" kindref="member">no_local_trans</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a5cdd318d1505ba0f31bf4fe9fadffacc" kindref="member">is_rank_node_local</ref>(dst,<sp/>comm);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_recv_local<sp/>=<sp/>opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1ad9890ae127412ee65a98cbdb02a4b143" kindref="member">no_local_trans</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a5cdd318d1505ba0f31bf4fe9fadffacc" kindref="member">is_rank_node_local</ref>(src,<sp/>comm);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>ring-based<sp/>reduce-scatter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>like<sp/>the<sp/>pairwise-exchange<sp/>reduce-scatter<sp/>except<sp/>instead<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>i<sp/>accumulating<sp/>only<sp/>slice<sp/>i,<sp/>the<sp/>slices<sp/>are<sp/>cycled<sp/>around<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>node<sp/>accumulates<sp/>its<sp/>portion<sp/>into<sp/>the<sp/>slice<sp/>when<sp/>it<sp/>passes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>through.<sp/>After<sp/>the<sp/>nprocs-1<sp/>steps<sp/>slice<sp/>k<sp/>will<sp/>be<sp/>on<sp/>rank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(k<sp/>+<sp/>nprocs<sp/>-<sp/>1)<sp/>%<sp/>nprocs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>0;<sp/>step<sp/>&lt;<sp/>nprocs<sp/>-<sp/>1;<sp/>++step)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>slices<sp/>to<sp/>send/recv.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>send_slice<sp/>=<sp/>(rank<sp/>-<sp/>step<sp/>+<sp/>nprocs)<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_slice<sp/>=<sp/>(rank<sp/>-<sp/>step<sp/>-<sp/>1<sp/>+<sp/>nprocs)<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>the<sp/>data<sp/>to<sp/>send.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>send_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>send_size;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_size<sp/>=<sp/>max_recv_count;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*send_buf<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_send_local)<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>send_view<sp/>=<sp/>mat(El::ALL,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::IR(slice_ends[dst]<sp/>-<sp/>slice_lengths[dst],<sp/>slice_ends[dst]));</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_buf<sp/>=<sp/>(uint8_t<sp/>*)<sp/>send_view.Buffer();</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>send_view.Height()<sp/>*<sp/>send_view.Width();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_buf<sp/>=<sp/>send_transform(mat,<sp/>El::ALL,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::IR(slice_ends[send_slice]<sp/>-<sp/>slice_lengths[send_slice],</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[send_slice]),<sp/>send_size,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>recv_view<sp/>=<sp/>mat(El::ALL,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::IR(slice_ends[recv_slice]<sp/>-<sp/>slice_lengths[recv_slice],<sp/>slice_ends[recv_slice]));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_recv_local)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>recv_view.Height()<sp/>*<sp/>recv_view.Width();</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" kindref="member">get_collective_buffer</ref>(recv_size);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf<sp/>=<sp/>max_recv_buf;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4e3d35520a8f567579f9235e9808ba1c" kindref="member">ar_send_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>send_trans_start;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" kindref="member">bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" kindref="member">ar_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ac74bcfb565c1bb6604f336c6d1b647cc" kindref="member">ar_rs_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>El::mpi::SendRecv(send_buf,<sp/>send_size,<sp/>dst,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf,<sp/>recv_size,<sp/>src,<sp/>comm);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_tot<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>sendrecv_start;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" kindref="member">ar_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" kindref="member">ar_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aaadab22d368e8004a9877828a3bc9e93" kindref="member">ar_rs_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1adefa0ee8b0a6b74072448e20d40f502d" kindref="member">ar_rs_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recv_apply_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/>recv_apply_transform(recv_buf,<sp/>recv_view,<sp/>is_recv_local);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa642b0ae2321fa464b0092da527f6375" kindref="member">ar_recv_apply_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>recv_apply_trans_start;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" kindref="member">bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" kindref="member">ar_bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2c3e1db0f6d2345748132322b0555db7" kindref="member">ar_rs_bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>recv_buf<sp/>=<sp/>max_recv_buf;<sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>we&apos;re<sp/>back<sp/>to<sp/>the<sp/>original.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a85022d803e339eb14a15129a07876c2b" kindref="member">ar_rs_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>rs_start;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>ring<sp/>allgather,<sp/>first<sp/>applying<sp/>the<sp/>transform<sp/>to<sp/>local<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ag_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>send_size;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>send_slice<sp/>=<sp/>(rank<sp/>+<sp/>1)<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_slice<sp/>=<sp/>rank;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>send_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*send_buf<sp/>=<sp/>send_transform(</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat,<sp/>El::ALL,<sp/>El::IR(slice_ends[send_slice]<sp/>-<sp/>slice_lengths[send_slice],</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[send_slice]),<sp/>send_size,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4e3d35520a8f567579f9235e9808ba1c" kindref="member">ar_send_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>send_trans_start;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" kindref="member">bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" kindref="member">ar_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2cfe1264a83865360692c48d7869fe67" kindref="member">ar_ag_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>recv_view<sp/>=<sp/>mat(El::ALL,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::IR(slice_ends[recv_slice]<sp/>-<sp/>slice_lengths[recv_slice],</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[recv_slice]));</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>can,<sp/>receive<sp/>directly<sp/>into<sp/>the<sp/>destination<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" kindref="member">id_recv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf<sp/>=<sp/>(uint8_t<sp/>*)<sp/>recv_view.Buffer();</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_recv_count<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>recv_view.Height()<sp/>*<sp/>recv_view.Width();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>El::mpi::SendRecv(send_buf,<sp/>send_size,<sp/>dst,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf,<sp/>max_recv_count,<sp/>src,<sp/>comm);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_tot<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>sendrecv_start;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" kindref="member">ar_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" kindref="member">ar_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a64cb0b86e9368c1d83370ba6cb0083ba" kindref="member">ar_ag_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a1896c3ecd1d5b084497c6ed47c1c9bae" kindref="member">ar_ag_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recv_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" kindref="member">id_recv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>recv_view.Height()<sp/>*<sp/>recv_view.Width();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/>recv_transform(recv_buf,<sp/>recv_view);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1adb393f47d60eaa59bace80d2d3dd3bf2" kindref="member">ar_recv_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>recv_trans_start;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>send_size<sp/>=<sp/>recv_size;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" kindref="member">bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" kindref="member">ar_bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afded6f478dc5021d1edec306dc6c528c" kindref="member">ar_ag_bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*recv_buf2<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" kindref="member">id_recv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>recv_buf2<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" kindref="member">get_collective_buffer</ref>(max_recv_count,<sp/>1);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>1;<sp/>step<sp/>&lt;<sp/>nprocs<sp/>-<sp/>1;<sp/>++step)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_slice<sp/>=<sp/>(rank<sp/>-<sp/>step<sp/>+<sp/>nprocs)<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>recv_view<sp/>=<sp/>mat(El::ALL,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::IR(slice_ends[recv_slice]<sp/>-<sp/>slice_lengths[recv_slice],</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[recv_slice]));</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" kindref="member">id_recv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf2<sp/>=<sp/>(uint8_t<sp/>*)<sp/>recv_view.Buffer();</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_recv_count<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>recv_view.Height()<sp/>*<sp/>recv_view.Width();</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" kindref="member">bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" kindref="member">ar_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2cfe1264a83865360692c48d7869fe67" kindref="member">ar_ag_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>El::mpi::SendRecv(recv_buf,<sp/>send_size,<sp/>dst,</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf2,<sp/>max_recv_count,<sp/>src,<sp/>comm);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_tot<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>sendrecv_start;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" kindref="member">ar_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" kindref="member">ar_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a64cb0b86e9368c1d83370ba6cb0083ba" kindref="member">ar_ag_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a1896c3ecd1d5b084497c6ed47c1c9bae" kindref="member">ar_ag_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recv_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" kindref="member">id_recv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>recv_view.Height()<sp/>*<sp/>recv_view.Width();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/>recv_transform(recv_buf2,<sp/>recv_view);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1adb393f47d60eaa59bace80d2d3dd3bf2" kindref="member">ar_recv_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>recv_trans_start;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>the<sp/>send<sp/>and<sp/>receive<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(recv_buf,<sp/>recv_buf2);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>send_size<sp/>=<sp/>recv_size;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" kindref="member">bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" kindref="member">ar_bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afded6f478dc5021d1edec306dc6c528c" kindref="member">ar_ag_bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a48768342eb05c1c6cdaa52c3599b93c8" kindref="member">ar_ag_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>ag_start;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa57d2fbeef85fd8a3c9f2a37ca7687c8" kindref="member">ar_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>ar_start;</highlight></codeline>
<codeline lineno="824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826" refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a925fcf1c15cb8ff10daed1dc1faed9ac" kindref="member">lbann_comm::rabenseifner_allreduce</ref>(</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::mpi::Comm<sp/>comm,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_recv_count,</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>std::function&lt;uint8_t<sp/>*(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;,<sp/>El::IR,<sp/>El::IR,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&gt;<sp/>send_transform,</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(uint8_t<sp/>*,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;)&gt;<sp/>recv_transform,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(uint8_t<sp/>*,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)&gt;<sp/>recv_apply_transform,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1lbann__comm_1_1allreduce__options" kindref="compound">lbann_comm::allreduce_options</ref><sp/>opts)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ar_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>El::mpi::Rank(comm);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nprocs<sp/>=<sp/>El::mpi::Size(comm);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nprocs<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>implementation<sp/>requires<sp/>a<sp/>power-of-2<sp/>number<sp/>of<sp/>processes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nprocs<sp/>&amp;<sp/>(nprocs<sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;lbann_comm:<sp/>Rabenseifner<sp/>allreduce<sp/>requires&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>a<sp/>power-of-2<sp/>number<sp/>of<sp/>participating<sp/>processes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>slices<sp/>on<sp/>each<sp/>processor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>cols_per_proc<sp/>=<sp/>mat.Width()<sp/>/<sp/>nprocs;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>cols_remainder<sp/>=<sp/>mat.Width()<sp/>%<sp/>nprocs;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>lengths/ends<sp/>of<sp/>the<sp/>slices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>std::vector&lt;El::Int&gt;<sp/>slice_lengths(nprocs,<sp/>cols_per_proc);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cols_remainder;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>slice_lengths[i]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>std::vector&lt;El::Int&gt;<sp/>slice_ends(nprocs);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>std::partial_sum(slice_lengths.begin(),<sp/>slice_lengths.end(),</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends.begin());</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>recursive-halving<sp/>reduce-scatter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>each<sp/>step<sp/>here<sp/>a<sp/>process<sp/>sends<sp/>all<sp/>the<sp/>data<sp/>needed<sp/>for<sp/>the<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;half&quot;<sp/>of<sp/>the<sp/>processes.<sp/>i.e.<sp/>each<sp/>process<sp/>sends<sp/>half<sp/>their<sp/>data<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>step,<sp/>a<sp/>quarter<sp/>in<sp/>the<sp/>second<sp/>step,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partner_mask<sp/>=<sp/>nprocs<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slice_mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>send_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_idx<sp/>=<sp/>nprocs;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*recv_buf<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" kindref="member">get_collective_buffer</ref>(max_recv_count);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(partner_mask<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partner<sp/>=<sp/>rank<sp/>^<sp/>partner_mask;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rank<sp/>we<sp/>exchange<sp/>with<sp/>this<sp/>step.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_local<sp/>=<sp/>opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1ad9890ae127412ee65a98cbdb02a4b143" kindref="member">no_local_trans</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a5cdd318d1505ba0f31bf4fe9fadffacc" kindref="member">is_rank_node_local</ref>(partner,<sp/>comm);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>range<sp/>of<sp/>data<sp/>to<sp/>send/recv.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>El::IR<sp/>send_range,<sp/>recv_range;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rank<sp/>&lt;<sp/>partner)<sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_idx<sp/>=<sp/>recv_idx<sp/>+<sp/>nprocs<sp/>/<sp/>(slice_mask*2);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_range<sp/>=<sp/>El::IR(slice_ends[send_idx]<sp/>-<sp/>slice_lengths[send_idx],</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[last_idx-1]);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_range<sp/>=<sp/>El::IR(slice_ends[recv_idx]<sp/>-<sp/>slice_lengths[recv_idx],</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[send_idx-1]);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_idx<sp/>=<sp/>send_idx<sp/>+<sp/>nprocs<sp/>/<sp/>(slice_mask*2);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_range<sp/>=<sp/>El::IR(slice_ends[send_idx]<sp/>-<sp/>slice_lengths[send_idx],</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[recv_idx-1]);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_range<sp/>=<sp/>El::IR(slice_ends[recv_idx]<sp/>-<sp/>slice_lengths[recv_idx],</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[last_idx-1]);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>recv_view<sp/>=<sp/>mat(El::ALL,<sp/>recv_range);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>the<sp/>data<sp/>to<sp/>send.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>send_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>send_size;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_size<sp/>=<sp/>max_recv_count;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*send_buf<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_local)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>send_view<sp/>=<sp/>mat(El::ALL,<sp/>send_range);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_buf<sp/>=<sp/>(uint8_t<sp/>*)<sp/>send_view.Buffer();</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>send_view.Height()<sp/>*<sp/>send_view.Width();</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>recv_view.Height()<sp/>*<sp/>recv_view.Width();</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_buf<sp/>=<sp/>send_transform(mat,<sp/>El::ALL,<sp/>send_range,<sp/>send_size,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4e3d35520a8f567579f9235e9808ba1c" kindref="member">ar_send_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>send_trans_start;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" kindref="member">bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" kindref="member">ar_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ac74bcfb565c1bb6604f336c6d1b647cc" kindref="member">ar_rs_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>El::mpi::SendRecv(send_buf,<sp/>send_size,<sp/>partner,</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf,<sp/>recv_size,<sp/>partner,<sp/>comm);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_tot<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>sendrecv_start;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" kindref="member">ar_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" kindref="member">ar_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aaadab22d368e8004a9877828a3bc9e93" kindref="member">ar_rs_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1adefa0ee8b0a6b74072448e20d40f502d" kindref="member">ar_rs_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>the<sp/>received<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recv_apply_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/>recv_apply_transform(recv_buf,<sp/>recv_view,<sp/>is_local);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa642b0ae2321fa464b0092da527f6375" kindref="member">ar_recv_apply_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>recv_apply_trans_start;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" kindref="member">bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" kindref="member">ar_bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2c3e1db0f6d2345748132322b0555db7" kindref="member">ar_rs_bytes_received</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>info<sp/>for<sp/>next<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Except<sp/>last_idx<sp/>when<sp/>needed<sp/>for<sp/>the<sp/>allgather.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>send_idx<sp/>=<sp/>recv_idx;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>partner_mask<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>slice_mask<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner_mask<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_idx<sp/>=<sp/>recv_idx<sp/>+<sp/>nprocs<sp/>/<sp/>(slice_mask);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a85022d803e339eb14a15129a07876c2b" kindref="member">ar_rs_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>rs_start;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>recursive-doubling<sp/>algather.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ag_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>slice_mask<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>partner_mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>do<sp/>the<sp/>remaining<sp/>steps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(partner_mask<sp/>&lt;<sp/>nprocs)<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partner<sp/>=<sp/>rank<sp/>^<sp/>partner_mask;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_local<sp/>=<sp/>opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1ad9890ae127412ee65a98cbdb02a4b143" kindref="member">no_local_trans</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a5cdd318d1505ba0f31bf4fe9fadffacc" kindref="member">is_rank_node_local</ref>(partner,<sp/>comm);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>range<sp/>to<sp/>send/recv.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>El::IR<sp/>send_range,<sp/>recv_range;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rank<sp/>&lt;<sp/>partner)<sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slice_mask<sp/>!=<sp/>nprocs<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_idx<sp/>=<sp/>last_idx<sp/>+<sp/>nprocs<sp/>/<sp/>(slice_mask*2);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_idx<sp/>=<sp/>send_idx<sp/>+<sp/>nprocs<sp/>/<sp/>(slice_mask*2);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_range<sp/>=<sp/>El::IR(slice_ends[send_idx]<sp/>-<sp/>slice_lengths[send_idx],</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[recv_idx-1]);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_range<sp/>=<sp/>El::IR(slice_ends[recv_idx]<sp/>-<sp/>slice_lengths[recv_idx],</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[last_idx-1]);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_idx<sp/>=<sp/>send_idx<sp/>-<sp/>nprocs<sp/>/<sp/>(slice_mask*2);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_range<sp/>=<sp/>El::IR(slice_ends[send_idx]<sp/>-<sp/>slice_lengths[send_idx],</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[last_idx-1]);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_range<sp/>=<sp/>El::IR(slice_ends[recv_idx]<sp/>-<sp/>slice_lengths[recv_idx],</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ends[send_idx-1]);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>recv_view<sp/>=<sp/>mat(El::ALL,<sp/>recv_range);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>the<sp/>data<sp/>to<sp/>send.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>send_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>send_size;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_size<sp/>=<sp/>max_recv_count;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*send_buf<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_local)<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>send_view<sp/>=<sp/>mat(El::ALL,<sp/>send_range);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_buf<sp/>=<sp/>(uint8_t<sp/>*)<sp/>send_view.Buffer();</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>send_view.Height()<sp/>*<sp/>send_view.Width();</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>recv_view.Height()<sp/>*<sp/>recv_view.Width();</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_buf<sp/>=<sp/>send_transform(mat,<sp/>El::ALL,<sp/>send_range,<sp/>send_size,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4e3d35520a8f567579f9235e9808ba1c" kindref="member">ar_send_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>send_trans_start;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" kindref="member">id_recv</ref><sp/>||<sp/>is_local)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf<sp/>=<sp/>(uint8_t<sp/>*)<sp/>recv_view.Buffer();</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>recv_view.Height()<sp/>*<sp/>recv_view.Width();</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1ad1f146ae7337ece6266fd307944928e0" kindref="member">bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa520c16eafde742b70daf60866afc6a8" kindref="member">ar_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a2cfe1264a83865360692c48d7869fe67" kindref="member">ar_ag_bytes_sent</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>El::mpi::SendRecv(send_buf,<sp/>send_size,<sp/>partner,</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_buf,<sp/>recv_size,<sp/>partner,<sp/>comm);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sendrecv_tot<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>sendrecv_start;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a60a664f47efb52d9936b72d34059d1ef" kindref="member">ar_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a4c9323938961c3524dc67f4b7b47e3ae" kindref="member">ar_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a64cb0b86e9368c1d83370ba6cb0083ba" kindref="member">ar_ag_send_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a1896c3ecd1d5b084497c6ed47c1c9bae" kindref="member">ar_ag_recv_time</ref><sp/>+=<sp/>sendrecv_tot;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recv_trans_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts.<ref refid="structlbann_1_1lbann__comm_1_1allreduce__options_1a91ab3b21e8345915d3a8eedb65c2f52e" kindref="member">id_recv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>recv_view.Height()<sp/>*<sp/>recv_view.Width();</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_size<sp/>=<sp/>recv_transform(recv_buf,<sp/>recv_view);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1adb393f47d60eaa59bace80d2d3dd3bf2" kindref="member">ar_recv_transform_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>recv_trans_start;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afb99f57f7eafc0695bf28e6c26a8120f" kindref="member">bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa5f3c53358bf9002b9fab41918b0c8c1" kindref="member">ar_bytes_received</ref><sp/>+=<sp/>recv_size;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1afded6f478dc5021d1edec306dc6c528c" kindref="member">ar_ag_bytes_received</ref><sp/>+=<sp/>send_size;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>for<sp/>the<sp/>next<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rank<sp/>&gt;<sp/>partner)<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_idx<sp/>=<sp/>recv_idx;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>partner_mask<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>slice_mask<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a48768342eb05c1c6cdaa52c3599b93c8" kindref="member">ar_ag_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>ag_start;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1aa57d2fbeef85fd8a3c9f2a37ca7687c8" kindref="member">ar_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>ar_start;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005" refid="classlbann_1_1lbann__comm_1a44bc6b8683f04c2a3fc2f01fc734a946" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a44bc6b8683f04c2a3fc2f01fc734a946" kindref="member">lbann_comm::setup_node_comm</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>string<sp/>specifying<sp/>compute<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>node_name[MPI_MAX_PROCESSOR_NAME];</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_name_len;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><ref refid="comm_8cpp_1a7a92ceb4ddf57dc156d3a1b39f3ab962" kindref="member">checkMPI</ref>(MPI_Get_processor_name(node_name,<sp/>&amp;node_name_len));</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>node_string(node_name);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Hash<sp/>node<sp/>names<sp/>and<sp/>split<sp/>MPI<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>std::hash&lt;std::string&gt;()(node_string);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>hash<sp/>=<sp/>hash<sp/>&gt;=<sp/>0<sp/>?<sp/>hash<sp/>:<sp/>-hash;<sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>hash<sp/>is<sp/>non-negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/>El::mpi::Comm<sp/>hash_comm;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>El::mpi::Split(<ref refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" kindref="member">get_world_comm</ref>(),<sp/>hash,</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::Rank(<ref refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" kindref="member">get_world_comm</ref>()),<sp/>hash_comm);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash_comm_size<sp/>=<sp/>El::mpi::Size(hash_comm);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>node<sp/>names<sp/>and<sp/>split<sp/>MPI<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*node_name_list<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[hash_comm_size*MPI_MAX_PROCESSOR_NAME];</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><ref refid="comm_8cpp_1a7a92ceb4ddf57dc156d3a1b39f3ab962" kindref="member">checkMPI</ref>(MPI_Allgather(node_name,<sp/>MPI_MAX_PROCESSOR_NAME,<sp/>MPI_CHAR,</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_name_list,<sp/>MPI_MAX_PROCESSOR_NAME,<sp/>MPI_CHAR,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash_comm.comm));</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_num<sp/>=<sp/>El::mpi::Rank(hash_comm);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;hash_comm_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>other_node_string(node_name_list<sp/>+<sp/>i*MPI_MAX_PROCESSOR_NAME);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(node_string<sp/>==<sp/>other_node_string)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node_num<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>node_name_list;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>El::mpi::Split(hash_comm,<sp/>node_num,<sp/>El::mpi::Rank(<ref refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" kindref="member">get_world_comm</ref>()),</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a8aeb530ae4cedfa4d1141bb9c4704e6c" kindref="member">node_comm</ref>);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/>El::mpi::Free(hash_comm);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>list<sp/>of<sp/>ranks<sp/>that<sp/>are<sp/>local.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_comm_size<sp/>=<sp/>El::mpi::Size(<ref refid="classlbann_1_1lbann__comm_1a8aeb530ae4cedfa4d1141bb9c4704e6c" kindref="member">node_comm</ref>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>node_comm_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a3299a37fe7b0eae43a5c154148ab6dc2" kindref="member">world_ranks_on_node</ref>.push_back(</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::Translate(<ref refid="classlbann_1_1lbann__comm_1a8aeb530ae4cedfa4d1141bb9c4704e6c" kindref="member">node_comm</ref>,<sp/>i,<sp/><ref refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" kindref="member">get_world_comm</ref>()));</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047" refid="classlbann_1_1lbann__comm_1a597189b10f61947580f97fb8d1da7355" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a597189b10f61947580f97fb8d1da7355" kindref="member">lbann_comm::setup_threads</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>env_num_threads<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;OMP_NUM_THREADS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env_num_threads<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a23ff8e3563e4472af29d15f6cb823bc1" kindref="member">threads_per_proc</ref><sp/>=<sp/>std::atoi(env_num_threads);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a23ff8e3563e4472af29d15f6cb823bc1" kindref="member">threads_per_proc</ref><sp/>=<sp/>std::thread::hardware_concurrency()<sp/>/<sp/><ref refid="classlbann_1_1lbann__comm_1a2ffc59f0c1d97df2ca6845312c8c8b3e" kindref="member">procs_per_node</ref>;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a10f13918019cd2e021768e3388355ba2" kindref="member">reset_threads</ref>();</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058" refid="classlbann_1_1lbann__comm_1a10f13918019cd2e021768e3388355ba2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a10f13918019cd2e021768e3388355ba2" kindref="member">lbann_comm::reset_threads</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__comm_1a23ff8e3563e4472af29d15f6cb823bc1" kindref="member">threads_per_proc</ref><sp/>!=<sp/>omp_get_max_threads())<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>omp_set_num_threads(<ref refid="classlbann_1_1lbann__comm_1a23ff8e3563e4472af29d15f6cb823bc1" kindref="member">threads_per_proc</ref>);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064" refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" refkind="member"><highlight class="normal">uint8_t<sp/>*<ref refid="classlbann_1_1lbann__comm_1ae925ac5eaf2895717c709b252961b3bf" kindref="member">lbann_comm::get_collective_buffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buf_iter<sp/>=<sp/><ref refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" kindref="member">collective_bufs</ref>.find(size);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf_iter<sp/>==<sp/><ref refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" kindref="member">collective_bufs</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;get_collective_buffer:<sp/>non-contiguous<sp/>index&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" kindref="member">collective_bufs</ref>.emplace(std::make_pair(size,<sp/>std::vector&lt;uint8_t<sp/>*&gt;()));</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" kindref="member">collective_bufs</ref>[size].push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>uint8_t[size]);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" kindref="member">collective_bufs</ref>[size][0];</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" kindref="member">collective_bufs</ref>[size].size()<sp/>&gt;<sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" kindref="member">collective_bufs</ref>[size][idx];</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" kindref="member">collective_bufs</ref>[size].size()<sp/>!=<sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;get_collective_buffer:<sp/>non-contiguous<sp/>index&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" kindref="member">collective_bufs</ref>[size].push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>uint8_t[size]);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__comm_1a9ada8c5daf902f43b599234c7519a765" kindref="member">collective_bufs</ref>[size][idx];</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_ALUMINUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal">::Al::MPICommunicator*<sp/>lbann_comm::get_al_comm(El::mpi::Comm<sp/>c,</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_index<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>Aluminum<sp/>communicator<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>al_comms_key_type<sp/>key(c.comm,<sp/>t);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_al_comms.count(key)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/>std::type_index(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(::Al::MPIBackend)))<sp/>{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_al_comms[key]<sp/>=<sp/>al_comms_val_type(new<sp/>::Al::MPICommunicator(c.comm));</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>LBANN_HAS_NCCL2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/>std::type_index(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(::Al::NCCLBackend)))<sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>val<sp/>=<sp/>new<sp/>::Al::NCCLCommunicator(c.comm,<sp/>get_gpus());</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_al_comms[key]<sp/>=<sp/>al_comms_val_type(val);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_NCCL2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>Aluminum<sp/>communicator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>comm<sp/>=<sp/>m_al_comms[key].get();</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>Aluminum<sp/>communicator&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal">::Al::ReductionOperator<sp/>lbann_comm::mpi_op_to_al_op(El::mpi::Op<sp/>op)<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/>El::mpi::SUM)<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::Al::ReductionOperator::sum;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/>El::mpi::PROD)<sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::Al::ReductionOperator::prod;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/>El::mpi::MIN)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::Al::ReductionOperator::min;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/>El::mpi::MAX)<sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::Al::ReductionOperator::max;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;Reduction<sp/>operator<sp/>not<sp/>supported<sp/>in<sp/>Aluminum&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/comm.cpp"/>
  </compounddef>
</doxygen>
