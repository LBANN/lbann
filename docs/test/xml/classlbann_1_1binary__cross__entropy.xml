<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1binary__cross__entropy" kind="class" language="C++" prot="public">
    <compoundname>lbann::binary_cross_entropy</compoundname>
    <basecompoundref refid="classlbann_1_1loss__function" prot="public" virt="non-virtual">lbann::loss_function</basecompoundref>
    <includes refid="binary__cross__entropy_8hpp" local="no">binary_cross_entropy.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1binary__cross__entropy_1ad142f09272d2572c34812dc6bbc54434" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::binary_cross_entropy::binary_cross_entropy</definition>
        <argsstring>(EvalType scale_factor=EvalType(1))</argsstring>
        <name>binary_cross_entropy</name>
        <param>
          <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
          <declname>scale_factor</declname>
          <defval><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(1)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" line="38" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" bodystart="38" bodyend="39"/>
        <references refid="classlbann_1_1binary__cross__entropy_1aff599d9d615b2c7ffa66b0dbc9555c0f">operator=</references>
        <references refid="classlbann_1_1binary__cross__entropy_1a2d3758e81b02ffdd2f57e8aae621169c">~binary_cross_entropy</references>
        <referencedby refid="classlbann_1_1binary__cross__entropy_1a5183da69553c71cb3fffc765e95c623f" compoundref="binary__cross__entropy_8hpp" startline="48" endline="48">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1binary__cross__entropy_1a2afe78604e320beef2af10bcdb95a02a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::binary_cross_entropy::binary_cross_entropy</definition>
        <argsstring>(const binary_cross_entropy &amp;other)=default</argsstring>
        <name>binary_cross_entropy</name>
        <param>
          <type>const <ref refid="classlbann_1_1binary__cross__entropy" kindref="compound">binary_cross_entropy</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1binary__cross__entropy_1aff599d9d615b2c7ffa66b0dbc9555c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1binary__cross__entropy" kindref="compound">binary_cross_entropy</ref> &amp;</type>
        <definition>binary_cross_entropy&amp; lbann::binary_cross_entropy::operator=</definition>
        <argsstring>(const binary_cross_entropy &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1binary__cross__entropy" kindref="compound">binary_cross_entropy</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy assignment operator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" line="44" column="1"/>
        <referencedby refid="classlbann_1_1binary__cross__entropy_1ad142f09272d2572c34812dc6bbc54434" compoundref="binary__cross__entropy_8hpp" startline="38" endline="39">binary_cross_entropy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1binary__cross__entropy_1a2d3758e81b02ffdd2f57e8aae621169c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::binary_cross_entropy::~binary_cross_entropy</definition>
        <argsstring>() override=default</argsstring>
        <name>~binary_cross_entropy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" line="46" column="1"/>
        <referencedby refid="classlbann_1_1binary__cross__entropy_1ad142f09272d2572c34812dc6bbc54434" compoundref="binary__cross__entropy_8hpp" startline="38" endline="39">binary_cross_entropy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1binary__cross__entropy_1a5183da69553c71cb3fffc765e95c623f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1binary__cross__entropy" kindref="compound">binary_cross_entropy</ref> *</type>
        <definition>binary_cross_entropy* lbann::binary_cross_entropy::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1objective__function__term_1ae98a4ec173a602ad55d1df20dadd4cb9">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" line="48" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" bodystart="48" bodyend="48"/>
        <references refid="classlbann_1_1binary__cross__entropy_1ad142f09272d2572c34812dc6bbc54434" compoundref="binary__cross__entropy_8hpp" startline="38" endline="39">binary_cross_entropy</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1binary__cross__entropy_1a6a068d51808a54a2a6dd913650f60569" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::binary_cross_entropy::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classlbann_1_1objective__function__term_1a964fbfad3dd0434aa8f32c5fedf1079a">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the objective function term. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" line="51" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1binary__cross__entropy_1a4acaf96a18b00b38adae375a69740071" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::binary_cross_entropy::start_evaluate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth) override</argsstring>
        <name>start_evaluate_compute</name>
        <reimplements refid="classlbann_1_1loss__function_1a0bbe41060d788dc7a29f3737761a6f7d">start_evaluate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the binary cross entropy objective function. Given a prediction <formula id="0">$\hat{y}$</formula> and ground truth </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" line="62" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" bodystart="62" bodyend="63"/>
        <references refid="classlbann_1_1binary__cross__entropy_1acedb440a94926866c4de4fdeeb5165bd" compoundref="binary__cross__entropy_8cpp" startline="71" endline="108">finish_evaluate_compute</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac41b9ec75e920b610e8907e066074b30">prediction</references>
        <references refid="classlbann_1_1binary__cross__entropy_1aeb1d10100a565e1c92a4f75fb7f58829" compoundref="binary__cross__entropy_8cpp" startline="110" endline="146">differentiate_compute</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1binary__cross__entropy_1acedb440a94926866c4de4fdeeb5165bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
        <definition>EvalType lbann::binary_cross_entropy::finish_evaluate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth) override</argsstring>
        <name>finish_evaluate_compute</name>
        <reimplements refid="classlbann_1_1loss__function_1a3ea8553a4e9c75477d7d4fc533c4d4fd">finish_evaluate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish evaluation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" line="66" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/binary_cross_entropy.cpp" bodystart="71" bodyend="108"/>
        <referencedby refid="classlbann_1_1binary__cross__entropy_1a4acaf96a18b00b38adae375a69740071" compoundref="binary__cross__entropy_8hpp" startline="62" endline="63">start_evaluate_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1binary__cross__entropy_1aeb1d10100a565e1c92a4f75fb7f58829" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::binary_cross_entropy::differentiate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth, AbsDistMat &amp;gradient) override</argsstring>
        <name>differentiate_compute</name>
        <reimplements refid="classlbann_1_1loss__function_1aefccc2b4f5a02664002d12630cf369e7">differentiate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>gradient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the gradient of the binary cross entropy objective function. Given a prediction <formula id="0">$\hat{y}$</formula> and ground truth <formula id="1">$y$</formula>, the gradient of the binary cross entropy is <formula id="2">\[ \nabla_{\hat{y}} CE(\hat{y}, y) = -y/\hat{y} + (1-y)/(1-\hat{y}) \]</formula> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" line="76" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/binary_cross_entropy.cpp" bodystart="110" bodyend="146"/>
        <referencedby refid="classlbann_1_1binary__cross__entropy_1a4acaf96a18b00b38adae375a69740071" compoundref="binary__cross__entropy_8hpp" startline="62" endline="63">start_evaluate_compute</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Binary cross entropy loss function. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="150">
        <label>lbann::binary_cross_entropy</label>
        <link refid="classlbann_1_1binary__cross__entropy"/>
        <childnode refid="151" relation="public-inheritance">
        </childnode>
      </node>
      <node id="151">
        <label>lbann::loss_function</label>
        <link refid="classlbann_1_1loss__function"/>
        <childnode refid="152" relation="public-inheritance">
        </childnode>
      </node>
      <node id="152">
        <label>lbann::objective_function_term</label>
        <link refid="classlbann_1_1objective__function__term"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="153">
        <label>lbann::binary_cross_entropy</label>
        <link refid="classlbann_1_1binary__cross__entropy"/>
        <childnode refid="154" relation="public-inheritance">
        </childnode>
      </node>
      <node id="154">
        <label>lbann::loss_function</label>
        <link refid="classlbann_1_1loss__function"/>
        <childnode refid="155" relation="public-inheritance">
        </childnode>
      </node>
      <node id="156">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="155">
        <label>lbann::objective_function_term</label>
        <link refid="classlbann_1_1objective__function__term"/>
        <childnode refid="156" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" line="35" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp" bodystart="35" bodyend="80"/>
    <listofallmembers>
      <member refid="classlbann_1_1binary__cross__entropy_1ad142f09272d2572c34812dc6bbc54434" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>binary_cross_entropy</name></member>
      <member refid="classlbann_1_1binary__cross__entropy_1a2afe78604e320beef2af10bcdb95a02a" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>binary_cross_entropy</name></member>
      <member refid="classlbann_1_1loss__function_1acd6e3bdcf33235208db03ab7af88e961" prot="public" virt="virtual"><scope>lbann::binary_cross_entropy</scope><name>compute_weight_regularization</name></member>
      <member refid="classlbann_1_1binary__cross__entropy_1a5183da69553c71cb3fffc765e95c623f" prot="public" virt="virtual"><scope>lbann::binary_cross_entropy</scope><name>copy</name></member>
      <member refid="classlbann_1_1loss__function_1adbd03ef952ee1055e3dd98f06d33324f" prot="public" virt="virtual"><scope>lbann::binary_cross_entropy</scope><name>differentiate</name></member>
      <member refid="classlbann_1_1binary__cross__entropy_1aeb1d10100a565e1c92a4f75fb7f58829" prot="public" virt="virtual"><scope>lbann::binary_cross_entropy</scope><name>differentiate_compute</name></member>
      <member refid="classlbann_1_1binary__cross__entropy_1acedb440a94926866c4de4fdeeb5165bd" prot="public" virt="virtual"><scope>lbann::binary_cross_entropy</scope><name>finish_evaluate_compute</name></member>
      <member refid="classlbann_1_1loss__function_1a5264d3e71125b7ce8694f73bf25662f7" prot="public" virt="virtual"><scope>lbann::binary_cross_entropy</scope><name>finish_evaluation</name></member>
      <member refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" prot="protected" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1objective__function__term_1aeeb85314738bec6e15877f68b3d422a0" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>get_layer_pointers</name></member>
      <member refid="classlbann_1_1objective__function__term_1aea73505aed191bfb9336d9d46a69d586" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>get_weights_pointers</name></member>
      <member refid="classlbann_1_1loss__function_1ae948babd62a110e2407271f24dcaec1b" prot="public" virt="virtual"><scope>lbann::binary_cross_entropy</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1loss__function_1a0c5745e661c59e3e5496888d233c07cf" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>loss_function</name></member>
      <member refid="classlbann_1_1loss__function_1aaebcff849004392decc9850c4c75ead5" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>loss_function</name></member>
      <member refid="classlbann_1_1loss__function_1ac6ac9f8f2cef7a4daa1b282dba914975" prot="protected" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>m_gradient</name></member>
      <member refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" prot="protected" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>m_layers</name></member>
      <member refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" prot="protected" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>m_scale_factor</name></member>
      <member refid="classlbann_1_1objective__function__term_1a1d601c29153ae9cb54c585887608f2bf" prot="protected" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>m_weights</name></member>
      <member refid="classlbann_1_1binary__cross__entropy_1a6a068d51808a54a2a6dd913650f60569" prot="public" virt="virtual"><scope>lbann::binary_cross_entropy</scope><name>name</name></member>
      <member refid="classlbann_1_1objective__function__term_1a8c019e3c880f38dc20275e395acaeca1" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>objective_function_term</name></member>
      <member refid="classlbann_1_1objective__function__term_1a791a33056717d8b3f5ca2288145d86c8" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>objective_function_term</name></member>
      <member refid="classlbann_1_1binary__cross__entropy_1aff599d9d615b2c7ffa66b0dbc9555c0f" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>operator=</name></member>
      <member refid="classlbann_1_1loss__function_1ab882c642619ea4285b61e735d84e401c" prot="public" virt="non-virtual" ambiguityscope="lbann::loss_function::"><scope>lbann::binary_cross_entropy</scope><name>operator=</name></member>
      <member refid="classlbann_1_1objective__function__term_1a8bbac194d96a854d5841817b67b63334" prot="public" virt="non-virtual" ambiguityscope="lbann::objective_function_term::"><scope>lbann::binary_cross_entropy</scope><name>operator=</name></member>
      <member refid="classlbann_1_1loss__function_1ac44929838f3c3f0a34e1532530422dad" prot="public" virt="virtual"><scope>lbann::binary_cross_entropy</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1objective__function__term_1a82656dfd81bf6b818b38d041d341bc3b" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>set_layer_pointers</name></member>
      <member refid="classlbann_1_1loss__function_1a9ef5356468c892c2c0221f8acd6b5471" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>set_target_layer</name></member>
      <member refid="classlbann_1_1objective__function__term_1aa8adaf01dd8bc535dd86f27fc53c276a" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>set_weights_pointers</name></member>
      <member refid="classlbann_1_1loss__function_1a17a3629e8519c4215ad776a0c7b522ae" prot="public" virt="virtual"><scope>lbann::binary_cross_entropy</scope><name>setup</name></member>
      <member refid="classlbann_1_1binary__cross__entropy_1a4acaf96a18b00b38adae375a69740071" prot="public" virt="virtual"><scope>lbann::binary_cross_entropy</scope><name>start_evaluate_compute</name></member>
      <member refid="classlbann_1_1loss__function_1a90f4126b0b4d47838ef3cc154c6d9705" prot="public" virt="virtual"><scope>lbann::binary_cross_entropy</scope><name>start_evaluation</name></member>
      <member refid="classlbann_1_1binary__cross__entropy_1a2d3758e81b02ffdd2f57e8aae621169c" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>~binary_cross_entropy</name></member>
      <member refid="classlbann_1_1loss__function_1a21c59d9c3db798c330ff8297f6374747" prot="public" virt="non-virtual"><scope>lbann::binary_cross_entropy</scope><name>~loss_function</name></member>
      <member refid="classlbann_1_1objective__function__term_1ad95920d424b3c248a2124827971451df" prot="public" virt="virtual"><scope>lbann::binary_cross_entropy</scope><name>~objective_function_term</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
