<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="profiler_8cpp" kind="file" language="C++">
    <compoundname>profiler.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes refid="profiler_8hpp" local="yes">lbann/callbacks/profiler.hpp</includes>
    <incdepgraph>
      <node id="18668">
        <label>sys/stat.h</label>
      </node>
      <node id="18642">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="18643" relation="include">
        </childnode>
        <childnode refid="18644" relation="include">
        </childnode>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18645" relation="include">
        </childnode>
      </node>
      <node id="18660">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18634" relation="include">
        </childnode>
      </node>
      <node id="18634">
        <label>El.hpp</label>
      </node>
      <node id="18629">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/profiler.cpp</label>
        <link refid="profiler_8cpp"/>
        <childnode refid="18630" relation="include">
        </childnode>
        <childnode refid="18631" relation="include">
        </childnode>
      </node>
      <node id="18633">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="18634" relation="include">
        </childnode>
        <childnode refid="18635" relation="include">
        </childnode>
        <childnode refid="18636" relation="include">
        </childnode>
        <childnode refid="18641" relation="include">
        </childnode>
      </node>
      <node id="18670">
        <label>fcntl.h</label>
      </node>
      <node id="18673">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18645" relation="include">
        </childnode>
        <childnode refid="18652" relation="include">
        </childnode>
        <childnode refid="18660" relation="include">
        </childnode>
      </node>
      <node id="18643">
        <label>string</label>
      </node>
      <node id="18657">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="18644" relation="include">
        </childnode>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18645" relation="include">
        </childnode>
        <childnode refid="18652" relation="include">
        </childnode>
      </node>
      <node id="18663">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="18664" relation="include">
        </childnode>
      </node>
      <node id="18646">
        <label>map</label>
      </node>
      <node id="18662">
        <label>unordered_set</label>
      </node>
      <node id="18656">
        <label>exception</label>
      </node>
      <node id="18659">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18645" relation="include">
        </childnode>
        <childnode refid="18652" relation="include">
        </childnode>
        <childnode refid="18657" relation="include">
        </childnode>
      </node>
      <node id="18669">
        <label>sys/types.h</label>
      </node>
      <node id="18632">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18642" relation="include">
        </childnode>
        <childnode refid="18648" relation="include">
        </childnode>
        <childnode refid="18649" relation="include">
        </childnode>
      </node>
      <node id="18665">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="18655" relation="include">
        </childnode>
        <childnode refid="18644" relation="include">
        </childnode>
        <childnode refid="18666" relation="include">
        </childnode>
        <childnode refid="18646" relation="include">
        </childnode>
      </node>
      <node id="18638">
        <label>cstdio</label>
      </node>
      <node id="18653">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="18654" relation="include">
        </childnode>
        <childnode refid="18643" relation="include">
        </childnode>
      </node>
      <node id="18640">
        <label>cxxabi.h</label>
      </node>
      <node id="18652">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18645" relation="include">
        </childnode>
        <childnode refid="18653" relation="include">
        </childnode>
        <childnode refid="18655" relation="include">
        </childnode>
        <childnode refid="18656" relation="include">
        </childnode>
      </node>
      <node id="18644">
        <label>vector</label>
      </node>
      <node id="18645">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="18644" relation="include">
        </childnode>
        <childnode refid="18646" relation="include">
        </childnode>
        <childnode refid="18647" relation="include">
        </childnode>
        <childnode refid="18633" relation="include">
        </childnode>
      </node>
      <node id="18671">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="18672" relation="include">
        </childnode>
        <childnode refid="18673" relation="include">
        </childnode>
      </node>
      <node id="18667">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="18668" relation="include">
        </childnode>
        <childnode refid="18669" relation="include">
        </childnode>
        <childnode refid="18670" relation="include">
        </childnode>
      </node>
      <node id="18661">
        <label>lbann.pb.h</label>
      </node>
      <node id="18637">
        <label>cstdlib</label>
      </node>
      <node id="18631">
        <label>lbann/callbacks/profiler.hpp</label>
        <link refid="profiler_8hpp"/>
        <childnode refid="18632" relation="include">
        </childnode>
      </node>
      <node id="18655">
        <label>iostream</label>
      </node>
      <node id="18650">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="18651" relation="include">
        </childnode>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18645" relation="include">
        </childnode>
        <childnode refid="18652" relation="include">
        </childnode>
        <childnode refid="18657" relation="include">
        </childnode>
        <childnode refid="18658" relation="include">
        </childnode>
        <childnode refid="18643" relation="include">
        </childnode>
        <childnode refid="18662" relation="include">
        </childnode>
      </node>
      <node id="18674">
        <label>unordered_map</label>
      </node>
      <node id="18649">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18645" relation="include">
        </childnode>
        <childnode refid="18642" relation="include">
        </childnode>
        <childnode refid="18650" relation="include">
        </childnode>
        <childnode refid="18652" relation="include">
        </childnode>
        <childnode refid="18657" relation="include">
        </childnode>
        <childnode refid="18663" relation="include">
        </childnode>
        <childnode refid="18660" relation="include">
        </childnode>
        <childnode refid="18661" relation="include">
        </childnode>
        <childnode refid="18643" relation="include">
        </childnode>
        <childnode refid="18644" relation="include">
        </childnode>
      </node>
      <node id="18664">
        <label>chrono</label>
      </node>
      <node id="18672">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18649" relation="include">
        </childnode>
        <childnode refid="18658" relation="include">
        </childnode>
      </node>
      <node id="18654">
        <label>csignal</label>
      </node>
      <node id="18658">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="18643" relation="include">
        </childnode>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18645" relation="include">
        </childnode>
        <childnode refid="18652" relation="include">
        </childnode>
        <childnode refid="18657" relation="include">
        </childnode>
        <childnode refid="18659" relation="include">
        </childnode>
        <childnode refid="18660" relation="include">
        </childnode>
        <childnode refid="18661" relation="include">
        </childnode>
      </node>
      <node id="18641">
        <label>lbann_config.hpp</label>
      </node>
      <node id="18666">
        <label>set</label>
      </node>
      <node id="18648">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18645" relation="include">
        </childnode>
        <childnode refid="18649" relation="include">
        </childnode>
        <childnode refid="18642" relation="include">
        </childnode>
        <childnode refid="18665" relation="include">
        </childnode>
        <childnode refid="18667" relation="include">
        </childnode>
        <childnode refid="18660" relation="include">
        </childnode>
        <childnode refid="18671" relation="include">
        </childnode>
        <childnode refid="18673" relation="include">
        </childnode>
        <childnode refid="18658" relation="include">
        </childnode>
        <childnode refid="18650" relation="include">
        </childnode>
        <childnode refid="18661" relation="include">
        </childnode>
        <childnode refid="18644" relation="include">
        </childnode>
        <childnode refid="18643" relation="include">
        </childnode>
        <childnode refid="18674" relation="include">
        </childnode>
      </node>
      <node id="18651">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="18630">
        <label>algorithm</label>
      </node>
      <node id="18636">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="18637" relation="include">
        </childnode>
        <childnode refid="18638" relation="include">
        </childnode>
        <childnode refid="18639" relation="include">
        </childnode>
        <childnode refid="18640" relation="include">
        </childnode>
      </node>
      <node id="18635">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="18634" relation="include">
        </childnode>
      </node>
      <node id="18647">
        <label>typeindex</label>
      </node>
      <node id="18639">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceanonymous__namespace_02profiler_8cpp_03">anonymous_namespace{profiler.cpp}</innernamespace>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lbann_callback_timer<sp/>.hpp<sp/>.cpp<sp/>-<sp/>Callback<sp/>hooks<sp/>to<sp/>time<sp/>training</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="profiler_8hpp" kindref="compound">lbann/callbacks/profiler.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LBANN_SCOREP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;scorep/SCOREP_User.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(LBANN_NVPROF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nvToolsExt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cuda_runtime.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespaceanonymous__namespace_02profiler_8cpp_03" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LBANN_SCOREP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1ad2ea0278cd1f25dc30ddd76194ace64b" kindref="member">prof_region_begin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>SCOREP_USER_REGION_BY_NAME_BEGIN(s,<sp/>SCOREP_USER_REGION_TYPE_COMMON);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1a7984c26fb186307873a2f83f91715a99" kindref="member">prof_region_end</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>SCOREP_USER_REGION_BY_NAME_END(s);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(LBANN_NVPROF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>synchronize_all_devices()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>cudaGetDeviceCount(&amp;count);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaSetDevice(i);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaDeviceSynchronize();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1ad2ea0278cd1f25dc30ddd76194ace64b" kindref="member">prof_region_begin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>synchronize_all_devices();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Doesn&apos;t<sp/>work<sp/>with<sp/>gcc<sp/>4.9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>nvtxEventAttributes_t<sp/>ev<sp/>=<sp/>{0};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>nvtxEventAttributes_t<sp/>ev;<sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>memset(&amp;ev,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(nvtxEventAttributes_t));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>ev.version<sp/>=<sp/>NVTX_VERSION;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>ev.size<sp/>=<sp/>NVTX_EVENT_ATTRIB_STRUCT_SIZE;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>ev.colorType<sp/>=<sp/>NVTX_COLOR_ARGB;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>ev.color<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>ev.messageType<sp/>=<sp/>NVTX_MESSAGE_TYPE_ASCII;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>ev.message.ascii<sp/>=<sp/>s;<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>nvtxRangePushEx(&amp;ev);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1a7984c26fb186307873a2f83f91715a99" kindref="member">prof_region_end</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>synchronize_all_devices();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>nvtxRangePop();</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="namespaceanonymous__namespace_02profiler_8cpp_03_1ad2ea0278cd1f25dc30ddd76194ace64b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1ad2ea0278cd1f25dc30ddd76194ace64b" kindref="member">prof_region_begin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81" refid="namespaceanonymous__namespace_02profiler_8cpp_03_1a7984c26fb186307873a2f83f91715a99" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1a7984c26fb186307873a2f83f91715a99" kindref="member">prof_region_end</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classlbann_1_1lbann__callback__profiler_1abd30d11df631eea086cdf213c9f0f4f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1abd30d11df631eea086cdf213c9f0f4f9" kindref="member">lbann_callback_profiler::on_epoch_begin</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1ad2ea0278cd1f25dc30ddd76194ace64b" kindref="member">prof_region_begin</ref>(</highlight><highlight class="stringliteral">&quot;epoch&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlbann_1_1lbann__callback__profiler_1addf3323ce665956dc4988e3850bceb30" kindref="member">colors</ref>[0]);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classlbann_1_1lbann__callback__profiler_1a86e0fbe550ff42660766977604d9d5a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1a86e0fbe550ff42660766977604d9d5a6" kindref="member">lbann_callback_profiler::on_epoch_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1a7984c26fb186307873a2f83f91715a99" kindref="member">prof_region_end</ref>(</highlight><highlight class="stringliteral">&quot;epoch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classlbann_1_1lbann__callback__profiler_1a4a60f7470bf36c6833862d47d1a7ce01" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1a4a60f7470bf36c6833862d47d1a7ce01" kindref="member">lbann_callback_profiler::on_batch_begin</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1ad2ea0278cd1f25dc30ddd76194ace64b" kindref="member">prof_region_begin</ref>(</highlight><highlight class="stringliteral">&quot;batch&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlbann_1_1lbann__callback__profiler_1addf3323ce665956dc4988e3850bceb30" kindref="member">colors</ref>[1]);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classlbann_1_1lbann__callback__profiler_1ad7db0233f3a0c91c10a15d0951bb1747" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1ad7db0233f3a0c91c10a15d0951bb1747" kindref="member">lbann_callback_profiler::on_batch_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1a7984c26fb186307873a2f83f91715a99" kindref="member">prof_region_end</ref>(</highlight><highlight class="stringliteral">&quot;batch&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classlbann_1_1lbann__callback__profiler_1a027fe89a27c52ae80a1982f96dd62455" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1a027fe89a27c52ae80a1982f96dd62455" kindref="member">lbann_callback_profiler::on_forward_prop_begin</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1ad2ea0278cd1f25dc30ddd76194ace64b" kindref="member">prof_region_begin</ref>(</highlight><highlight class="stringliteral">&quot;forward&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlbann_1_1lbann__callback__profiler_1addf3323ce665956dc4988e3850bceb30" kindref="member">colors</ref>[2]);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classlbann_1_1lbann__callback__profiler_1a63e3ad301cf8529acda00ac8f2531c93" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1a63e3ad301cf8529acda00ac8f2531c93" kindref="member">lbann_callback_profiler::on_forward_prop_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1a7984c26fb186307873a2f83f91715a99" kindref="member">prof_region_end</ref>(</highlight><highlight class="stringliteral">&quot;forward&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classlbann_1_1lbann__callback__profiler_1a7905ac8f79a71731c8e388cdb4385023" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1a7905ac8f79a71731c8e388cdb4385023" kindref="member">lbann_callback_profiler::on_backward_prop_begin</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1ad2ea0278cd1f25dc30ddd76194ace64b" kindref="member">prof_region_begin</ref>(</highlight><highlight class="stringliteral">&quot;backward&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlbann_1_1lbann__callback__profiler_1addf3323ce665956dc4988e3850bceb30" kindref="member">colors</ref>[3]);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classlbann_1_1lbann__callback__profiler_1a8a4ba2640d128992a519ab4a2b7c44aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1a8a4ba2640d128992a519ab4a2b7c44aa" kindref="member">lbann_callback_profiler::on_backward_prop_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1a7984c26fb186307873a2f83f91715a99" kindref="member">prof_region_end</ref>(</highlight><highlight class="stringliteral">&quot;backward&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classlbann_1_1lbann__callback__profiler_1af78237a67eaacf2508f31ad72b8ff8a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1af78237a67eaacf2508f31ad72b8ff8a7" kindref="member">lbann_callback_profiler::get_color</ref>(<ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;lname<sp/>=<sp/>l-&gt;<ref refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239" kindref="member">get_type</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lname<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;fully_connected&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lname<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;convolution&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lname<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;pooling_layer&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lname<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;input_layer_distributed_minibatch_parallel_io&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1addf3323ce665956dc4988e3850bceb30" kindref="member">colors</ref>[idx<sp/>%<sp/><ref refid="classlbann_1_1lbann__callback__profiler_1a48e38406712543f839dd7e5e840694e2" kindref="member">num_colors</ref>];</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classlbann_1_1lbann__callback__profiler_1adc7cf77381bec8ab1cc5ba5e554ec268" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1a027fe89a27c52ae80a1982f96dd62455" kindref="member">lbann_callback_profiler::on_forward_prop_begin</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m,<sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1ad2ea0278cd1f25dc30ddd76194ace64b" kindref="member">prof_region_begin</ref>((</highlight><highlight class="stringliteral">&quot;fw<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>l-&gt;<ref refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239" kindref="member">get_type</ref>()).c_str(),<sp/><ref refid="classlbann_1_1lbann__callback__profiler_1af78237a67eaacf2508f31ad72b8ff8a7" kindref="member">get_color</ref>(l));<sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classlbann_1_1lbann__callback__profiler_1a6cfc4cf84fe4229f627d18ad19eaa415" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1a63e3ad301cf8529acda00ac8f2531c93" kindref="member">lbann_callback_profiler::on_forward_prop_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m,<sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1a7984c26fb186307873a2f83f91715a99" kindref="member">prof_region_end</ref>((</highlight><highlight class="stringliteral">&quot;fw<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>l-&gt;<ref refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239" kindref="member">get_type</ref>()).c_str());<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classlbann_1_1lbann__callback__profiler_1a158d8d47bd7a2e38a1f5589030fa523b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1a7905ac8f79a71731c8e388cdb4385023" kindref="member">lbann_callback_profiler::on_backward_prop_begin</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m,<sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1ad2ea0278cd1f25dc30ddd76194ace64b" kindref="member">prof_region_begin</ref>((</highlight><highlight class="stringliteral">&quot;bw<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>l-&gt;<ref refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239" kindref="member">get_type</ref>()).c_str(),<sp/><ref refid="classlbann_1_1lbann__callback__profiler_1af78237a67eaacf2508f31ad72b8ff8a7" kindref="member">get_color</ref>(l));<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classlbann_1_1lbann__callback__profiler_1a3fe2bc2b07b2e8e5873c9afb94cebe93" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler_1a8a4ba2640d128992a519ab4a2b7c44aa" kindref="member">lbann_callback_profiler::on_backward_prop_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m,<sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02profiler_8cpp_03_1a7984c26fb186307873a2f83f91715a99" kindref="member">prof_region_end</ref>((</highlight><highlight class="stringliteral">&quot;bw<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>l-&gt;<ref refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239" kindref="member">get_type</ref>()).c_str());</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/profiler.cpp"/>
  </compounddef>
</doxygen>
