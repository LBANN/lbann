<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="callback__learning__rate_8hpp" kind="file" language="C++">
    <compoundname>callback_learning_rate.hpp</compoundname>
    <includes local="no">unordered_set</includes>
    <includes local="no">unordered_map</includes>
    <includes refid="callback_8hpp" local="yes">lbann/callbacks/callback.hpp</includes>
    <includedby refid="callback__learning__rate_8cpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_learning_rate.cpp</includedby>
    <includedby refid="lbann_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</includedby>
    <incdepgraph>
      <node id="1690">
        <label>sys/stat.h</label>
      </node>
      <node id="1665">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="1666" relation="include">
        </childnode>
        <childnode refid="1667" relation="include">
        </childnode>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
      </node>
      <node id="1683">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1657" relation="include">
        </childnode>
      </node>
      <node id="1657">
        <label>El.hpp</label>
      </node>
      <node id="1656">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="1657" relation="include">
        </childnode>
        <childnode refid="1658" relation="include">
        </childnode>
        <childnode refid="1659" relation="include">
        </childnode>
        <childnode refid="1664" relation="include">
        </childnode>
      </node>
      <node id="1652">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp</label>
        <link refid="callback__learning__rate_8hpp"/>
        <childnode refid="1653" relation="include">
        </childnode>
        <childnode refid="1654" relation="include">
        </childnode>
        <childnode refid="1655" relation="include">
        </childnode>
      </node>
      <node id="1692">
        <label>fcntl.h</label>
      </node>
      <node id="1695">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1683" relation="include">
        </childnode>
      </node>
      <node id="1666">
        <label>string</label>
      </node>
      <node id="1680">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="1667" relation="include">
        </childnode>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
      </node>
      <node id="1685">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="1686" relation="include">
        </childnode>
      </node>
      <node id="1669">
        <label>map</label>
      </node>
      <node id="1653">
        <label>unordered_set</label>
      </node>
      <node id="1679">
        <label>exception</label>
      </node>
      <node id="1682">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
      </node>
      <node id="1691">
        <label>sys/types.h</label>
      </node>
      <node id="1655">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1665" relation="include">
        </childnode>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
      </node>
      <node id="1687">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1667" relation="include">
        </childnode>
        <childnode refid="1688" relation="include">
        </childnode>
        <childnode refid="1669" relation="include">
        </childnode>
      </node>
      <node id="1661">
        <label>cstdio</label>
      </node>
      <node id="1676">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="1677" relation="include">
        </childnode>
        <childnode refid="1666" relation="include">
        </childnode>
      </node>
      <node id="1663">
        <label>cxxabi.h</label>
      </node>
      <node id="1675">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
      </node>
      <node id="1667">
        <label>vector</label>
      </node>
      <node id="1668">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="1667" relation="include">
        </childnode>
        <childnode refid="1669" relation="include">
        </childnode>
        <childnode refid="1670" relation="include">
        </childnode>
        <childnode refid="1656" relation="include">
        </childnode>
      </node>
      <node id="1693">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="1694" relation="include">
        </childnode>
        <childnode refid="1695" relation="include">
        </childnode>
      </node>
      <node id="1689">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="1690" relation="include">
        </childnode>
        <childnode refid="1691" relation="include">
        </childnode>
        <childnode refid="1692" relation="include">
        </childnode>
      </node>
      <node id="1684">
        <label>lbann.pb.h</label>
      </node>
      <node id="1660">
        <label>cstdlib</label>
      </node>
      <node id="1678">
        <label>iostream</label>
      </node>
      <node id="1673">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="1674" relation="include">
        </childnode>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1666" relation="include">
        </childnode>
        <childnode refid="1653" relation="include">
        </childnode>
      </node>
      <node id="1654">
        <label>unordered_map</label>
      </node>
      <node id="1672">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1665" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1683" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1666" relation="include">
        </childnode>
        <childnode refid="1667" relation="include">
        </childnode>
      </node>
      <node id="1686">
        <label>chrono</label>
      </node>
      <node id="1694">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
      </node>
      <node id="1677">
        <label>csignal</label>
      </node>
      <node id="1681">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="1666" relation="include">
        </childnode>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
        <childnode refid="1682" relation="include">
        </childnode>
        <childnode refid="1683" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
      </node>
      <node id="1664">
        <label>lbann_config.hpp</label>
      </node>
      <node id="1688">
        <label>set</label>
      </node>
      <node id="1671">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1665" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
        <childnode refid="1689" relation="include">
        </childnode>
        <childnode refid="1683" relation="include">
        </childnode>
        <childnode refid="1693" relation="include">
        </childnode>
        <childnode refid="1695" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1667" relation="include">
        </childnode>
        <childnode refid="1666" relation="include">
        </childnode>
        <childnode refid="1654" relation="include">
        </childnode>
      </node>
      <node id="1674">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="1659">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="1660" relation="include">
        </childnode>
        <childnode refid="1661" relation="include">
        </childnode>
        <childnode refid="1662" relation="include">
        </childnode>
        <childnode refid="1663" relation="include">
        </childnode>
      </node>
      <node id="1658">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="1657" relation="include">
        </childnode>
      </node>
      <node id="1670">
        <label>typeindex</label>
      </node>
      <node id="1662">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1704">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="1705" relation="include">
        </childnode>
        <childnode refid="1706" relation="include">
        </childnode>
        <childnode refid="1707" relation="include">
        </childnode>
        <childnode refid="1708" relation="include">
        </childnode>
        <childnode refid="1709" relation="include">
        </childnode>
        <childnode refid="1710" relation="include">
        </childnode>
        <childnode refid="1711" relation="include">
        </childnode>
        <childnode refid="1712" relation="include">
        </childnode>
        <childnode refid="1702" relation="include">
        </childnode>
      </node>
      <node id="1709">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/model_factory.cpp</label>
        <link refid="model__factory_8cpp"/>
      </node>
      <node id="1701">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="1702">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="1699" relation="include">
        </childnode>
        <childnode refid="1703" relation="include">
        </childnode>
        <childnode refid="1704" relation="include">
        </childnode>
        <childnode refid="1713" relation="include">
        </childnode>
      </node>
      <node id="1696">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp</label>
        <link refid="callback__learning__rate_8hpp"/>
        <childnode refid="1697" relation="include">
        </childnode>
        <childnode refid="1698" relation="include">
        </childnode>
      </node>
      <node id="1700">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="1701" relation="include">
        </childnode>
        <childnode refid="1698" relation="include">
        </childnode>
      </node>
      <node id="1706">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp</label>
        <link refid="layer__factory_8cpp"/>
      </node>
      <node id="1703">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/utils/protobuf_utils.cpp</label>
        <link refid="protobuf__utils_8cpp"/>
      </node>
      <node id="1697">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_learning_rate.cpp</label>
        <link refid="callback__learning__rate_8cpp"/>
      </node>
      <node id="1714">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/init_image_data_readers.cpp</label>
        <link refid="init__image__data__readers_8cpp"/>
      </node>
      <node id="1710">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/objective_function_factory.cpp</label>
        <link refid="objective__function__factory_8cpp"/>
      </node>
      <node id="1699">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp</label>
        <link refid="proto__common_8cpp"/>
      </node>
      <node id="1708">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/metric_factory.cpp</label>
        <link refid="metric__factory_8cpp"/>
      </node>
      <node id="1698">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="1699" relation="include">
        </childnode>
        <childnode refid="1700" relation="include">
        </childnode>
        <childnode refid="1702" relation="include">
        </childnode>
        <childnode refid="1715" relation="include">
        </childnode>
      </node>
      <node id="1713">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/init_image_data_readers.hpp</label>
        <link refid="init__image__data__readers_8hpp"/>
        <childnode refid="1714" relation="include">
        </childnode>
        <childnode refid="1699" relation="include">
        </childnode>
      </node>
      <node id="1711">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/optimizer_factory.cpp</label>
        <link refid="optimizer__factory_8cpp"/>
      </node>
      <node id="1712">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/weights_factory.cpp</label>
        <link refid="weights__factory_8cpp"/>
      </node>
      <node id="1705">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp</label>
        <link refid="callback__factory_8cpp"/>
      </node>
      <node id="1715">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/protobuf_utils.hpp</label>
        <link refid="protobuf__utils_8hpp"/>
        <childnode refid="1703" relation="include">
        </childnode>
      </node>
      <node id="1707">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_graph_factory.cpp</label>
        <link refid="layer__graph__factory_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlbann_1_1lbann__callback__learning__rate" prot="public">lbann::lbann_callback_learning_rate</innerclass>
    <innerclass refid="classlbann_1_1lbann__callback__step__learning__rate" prot="public">lbann::lbann_callback_step_learning_rate</innerclass>
    <innerclass refid="classlbann_1_1lbann__callback__adaptive__learning__rate" prot="public">lbann::lbann_callback_adaptive_learning_rate</innerclass>
    <innerclass refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate" prot="public">lbann::lbann_callback_drop_fixed_learning_rate</innerclass>
    <innerclass refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" prot="public">lbann::lbann_callback_linear_growth_learning_rate</innerclass>
    <innerclass refid="classlbann_1_1lbann__callback__poly__learning__rate" prot="public">lbann::lbann_callback_poly_learning_rate</innerclass>
    <innerclass refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate" prot="public">lbann::lbann_callback_optimizerwise_adaptive_learning_rate</innerclass>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lbann_learning_rate<sp/>.hpp<sp/>.cpp<sp/>-<sp/>Callback<sp/>hooks<sp/>for<sp/>learning<sp/>rate<sp/>schedules</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LBANN_CALLBACKS_LEARNING_RATE_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LBANN_CALLBACKS_LEARNING_RATE_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callback_8hpp" kindref="compound">lbann/callbacks/callback.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Different<sp/>schedules<sp/>should<sp/>inherit<sp/>from<sp/>lbann_callback_learning_rate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classlbann_1_1lbann__callback__learning__rate" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1lbann__callback__learning__rate" kindref="compound">lbann_callback_learning_rate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback" kindref="compound">lbann_callback</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a69687cd55f4d09c480e08e18488519fe" kindref="member">lbann_callback_learning_rate</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a69687cd55f4d09c480e08e18488519fe" kindref="member">lbann_callback_learning_rate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate" kindref="compound">lbann_callback_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate" kindref="compound">lbann_callback_learning_rate</ref>&amp;<sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a80b82eebf8e38cbe0a484aea43644705" kindref="member">operator=</ref>(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate" kindref="compound">lbann_callback_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a69687cd55f4d09c480e08e18488519fe" kindref="member">lbann_callback_learning_rate</ref>(std::unordered_set&lt;weights<sp/>*&gt;<sp/>weights_list);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a501f31a6b8fde1282a60e4b347e8d9d3" kindref="member">setup</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1ab8eb509bdbea501882d6b248a814bb28" kindref="member">on_epoch_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback_1af183624e63ba65e0003fa988f53dee0c" kindref="member">lbann_callback::on_backward_prop_end</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1ab6aa0530604e32a1be2b37f3933f6bf6" kindref="member">on_backward_prop_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68" refid="classlbann_1_1lbann__callback__learning__rate_1a7869b93e5963d6f76da68d8c8137b979" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a7869b93e5963d6f76da68d8c8137b979" kindref="member">global_schedule</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a97194f282c29a748c915d9811a8a99fb" kindref="member">m_cur_global_lr</ref>;<sp/>}</highlight></codeline>
<codeline lineno="74" refid="classlbann_1_1lbann__callback__learning__rate_1acf7f3921a68e7f1f772106e18c545345" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1acf7f3921a68e7f1f772106e18c545345" kindref="member">optimizer_schedule</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m,<sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref><sp/>&amp;opt)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>opt.<ref refid="classlbann_1_1optimizer_1ac52867427b0d28ec6888b6344104791d" kindref="member">get_learning_rate</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classlbann_1_1lbann__callback__learning__rate_1a0b02e82190e04a22ab26d858041915d7" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_set&lt;weights<sp/>*&gt;<sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a0b02e82190e04a22ab26d858041915d7" kindref="member">m_weights</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classlbann_1_1lbann__callback__learning__rate_1a97194f282c29a748c915d9811a8a99fb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a97194f282c29a748c915d9811a8a99fb" kindref="member">m_cur_global_lr</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classlbann_1_1lbann__callback__step__learning__rate" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1lbann__callback__step__learning__rate" kindref="compound">lbann_callback_step_learning_rate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate" kindref="compound">lbann_callback_learning_rate</ref><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__step__learning__rate" kindref="compound">lbann_callback_step_learning_rate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amt);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__step__learning__rate" kindref="compound">lbann_callback_step_learning_rate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amt,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_set&lt;weights<sp/>*&gt;<sp/>weights_list);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__step__learning__rate" kindref="compound">lbann_callback_step_learning_rate</ref>(</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__step__learning__rate" kindref="compound">lbann_callback_step_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__step__learning__rate" kindref="compound">lbann_callback_step_learning_rate</ref>&amp;<sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a80b82eebf8e38cbe0a484aea43644705" kindref="member">operator=</ref>(</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__step__learning__rate" kindref="compound">lbann_callback_step_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103" refid="classlbann_1_1lbann__callback__step__learning__rate_1aa4848d45df5b6ab58456374ce966b374" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__step__learning__rate" kindref="compound">lbann_callback_step_learning_rate</ref>*<sp/><ref refid="classlbann_1_1lbann__callback__step__learning__rate_1aa4848d45df5b6ab58456374ce966b374" kindref="member">copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__step__learning__rate" kindref="compound">lbann_callback_step_learning_rate</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106" refid="classlbann_1_1lbann__callback__step__learning__rate_1a0332449e3d03aac46e0562cede85a5ed" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1lbann__callback__step__learning__rate_1a0332449e3d03aac46e0562cede85a5ed" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;step<sp/>learning<sp/>rate&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a7869b93e5963d6f76da68d8c8137b979" kindref="member">global_schedule</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111" refid="classlbann_1_1lbann__callback__step__learning__rate_1a804bffdc6bcc1e1f43dc068db852b993" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__step__learning__rate_1a804bffdc6bcc1e1f43dc068db852b993" kindref="member">m_step</ref>;</highlight></codeline>
<codeline lineno="113" refid="classlbann_1_1lbann__callback__step__learning__rate_1ab6f5430cf862ec67392dc0f69ced81e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__step__learning__rate_1ab6f5430cf862ec67392dc0f69ced81e6" kindref="member">m_amt</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classlbann_1_1lbann__callback__adaptive__learning__rate" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate" kindref="compound">lbann_callback_adaptive_learning_rate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate" kindref="compound">lbann_callback_learning_rate</ref><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate" kindref="compound">lbann_callback_adaptive_learning_rate</ref>(int64_t<sp/>patience,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amt);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate" kindref="compound">lbann_callback_adaptive_learning_rate</ref>(int64_t<sp/>patience,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amt,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_set&lt;weights<sp/>*&gt;<sp/>weights_list);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate" kindref="compound">lbann_callback_adaptive_learning_rate</ref>(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate" kindref="compound">lbann_callback_adaptive_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate" kindref="compound">lbann_callback_adaptive_learning_rate</ref>&amp;<sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a80b82eebf8e38cbe0a484aea43644705" kindref="member">operator=</ref>(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate" kindref="compound">lbann_callback_adaptive_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133" refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1ad5f290b78276fc9c7fd54a67c4a7e6eb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate" kindref="compound">lbann_callback_adaptive_learning_rate</ref>*<sp/><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1ad5f290b78276fc9c7fd54a67c4a7e6eb" kindref="member">copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate" kindref="compound">lbann_callback_adaptive_learning_rate</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136" refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1ab7292639822b95f3907d1aaf88410b1c" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1ab7292639822b95f3907d1aaf88410b1c" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;adaptive<sp/>learning<sp/>rate&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a7869b93e5963d6f76da68d8c8137b979" kindref="member">global_schedule</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141" refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1ac3ac3c4d34d62608c54dfa3a41691217" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1ac3ac3c4d34d62608c54dfa3a41691217" kindref="member">m_patience</ref>;</highlight></codeline>
<codeline lineno="143" refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1ab9c76371184664ccd8e240e3b16a9736" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1ab9c76371184664ccd8e240e3b16a9736" kindref="member">m_amt</ref>;</highlight></codeline>
<codeline lineno="145" refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1a740b8b3bbb47312b48322f440f703222" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_cur_epoch<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="147" refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1a7aa8aeed3df9cca131ace1ea9fbf1cd3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>m_last_score<sp/>=<sp/>std::numeric_limits&lt;EvalType&gt;::max();</highlight></codeline>
<codeline lineno="149" refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1aecfb70e4a366762305a2dbd8248471de" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/>m_wait<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151" refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1aa3de3b7d67b5295058e9c2175d06212d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_adjust_learning_rate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate" kindref="compound">lbann_callback_drop_fixed_learning_rate</ref><sp/>:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate" kindref="compound">lbann_callback_learning_rate</ref><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate" kindref="compound">lbann_callback_drop_fixed_learning_rate</ref>(</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>drop_epochs,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amt);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate" kindref="compound">lbann_callback_drop_fixed_learning_rate</ref>(</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>drop_epochs,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amt,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_set&lt;weights<sp/>*&gt;<sp/>weights_list);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate" kindref="compound">lbann_callback_drop_fixed_learning_rate</ref>(</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate" kindref="compound">lbann_callback_drop_fixed_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate" kindref="compound">lbann_callback_drop_fixed_learning_rate</ref>&amp;<sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a80b82eebf8e38cbe0a484aea43644705" kindref="member">operator=</ref>(</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate" kindref="compound">lbann_callback_drop_fixed_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173" refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate_1aad86be992434394974b50d1f1c303bbf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate" kindref="compound">lbann_callback_drop_fixed_learning_rate</ref>*<sp/><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate_1aad86be992434394974b50d1f1c303bbf" kindref="member">copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate" kindref="compound">lbann_callback_drop_fixed_learning_rate</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176" refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate_1a715d550fb9ec99e32861f91299669c35" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate_1a715d550fb9ec99e32861f91299669c35" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;drop<sp/>fixed<sp/>learning<sp/>rate&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a7869b93e5963d6f76da68d8c8137b979" kindref="member">global_schedule</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181" refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate_1a3e38dc2b7dc92d29567091395de22546" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate_1a3e38dc2b7dc92d29567091395de22546" kindref="member">m_amt</ref>;</highlight></codeline>
<codeline lineno="186" refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate_1afc99419c3d818fe86d5865c8f7beae49" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate_1afc99419c3d818fe86d5865c8f7beae49" kindref="member">m_drop_epochs</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref><sp/>:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate" kindref="compound">lbann_callback_learning_rate</ref><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref>(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>target,<sp/>int64_t<sp/>num_epochs);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref>(</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>target,<sp/>int64_t<sp/>num_epochs,<sp/>int64_t<sp/>delay);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref>(</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>target,<sp/>int64_t<sp/>num_epochs,<sp/>int64_t<sp/>delay,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_set&lt;weights<sp/>*&gt;<sp/>weights_list);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref>(</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref>&amp;<sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a80b82eebf8e38cbe0a484aea43644705" kindref="member">operator=</ref>(</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213" refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1aadb1266a360c5442e094113b919f6c13" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref>*<sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1aadb1266a360c5442e094113b919f6c13" kindref="member">copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a501f31a6b8fde1282a60e4b347e8d9d3" kindref="member">setup</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216" refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a6080051bd4de75dc1ca3d927414d2455" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a6080051bd4de75dc1ca3d927414d2455" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;linear<sp/>growth<sp/>learning<sp/>rate&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a7869b93e5963d6f76da68d8c8137b979" kindref="member">global_schedule</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221" refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a2fe23a59744da5c0c737eb9d301bc23b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a2fe23a59744da5c0c737eb9d301bc23b" kindref="member">m_base_lr</ref>;</highlight></codeline>
<codeline lineno="223" refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a56cc1954ef76d494c4b5d5074c326fca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a56cc1954ef76d494c4b5d5074c326fca" kindref="member">m_target</ref>;</highlight></codeline>
<codeline lineno="225" refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ad68e1fbbe86eb692cf26d0d4a452c469" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ad68e1fbbe86eb692cf26d0d4a452c469" kindref="member">m_inc</ref>;</highlight></codeline>
<codeline lineno="227" refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ac583819b3ee7fad93b9b96b44dfb4307" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ac583819b3ee7fad93b9b96b44dfb4307" kindref="member">m_num_epochs</ref>;</highlight></codeline>
<codeline lineno="229" refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a0a0a9c7f9964e3f8693706800fcdf06a" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a0a0a9c7f9964e3f8693706800fcdf06a" kindref="member">m_delay</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classlbann_1_1lbann__callback__poly__learning__rate" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1lbann__callback__poly__learning__rate" kindref="compound">lbann_callback_poly_learning_rate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate" kindref="compound">lbann_callback_learning_rate</ref><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate" kindref="compound">lbann_callback_poly_learning_rate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p,<sp/>uint64_t<sp/>n_epochs,<sp/>uint64_t<sp/>max_iter);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate" kindref="compound">lbann_callback_poly_learning_rate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p,<sp/>uint64_t<sp/>n_epochs,<sp/>uint64_t<sp/>max_iter,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_set&lt;weights<sp/>*&gt;<sp/>weights_list);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate" kindref="compound">lbann_callback_poly_learning_rate</ref>(</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate" kindref="compound">lbann_callback_poly_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate" kindref="compound">lbann_callback_poly_learning_rate</ref>&amp;<sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a80b82eebf8e38cbe0a484aea43644705" kindref="member">operator=</ref>(</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate" kindref="compound">lbann_callback_poly_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247" refid="classlbann_1_1lbann__callback__poly__learning__rate_1aea01c416903c421cf6dce1a7f320c94b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate" kindref="compound">lbann_callback_poly_learning_rate</ref>*<sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate_1aea01c416903c421cf6dce1a7f320c94b" kindref="member">copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate" kindref="compound">lbann_callback_poly_learning_rate</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a501f31a6b8fde1282a60e4b347e8d9d3" kindref="member">setup</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251" refid="classlbann_1_1lbann__callback__poly__learning__rate_1a755be6dc66e1c403edc69db11592a4ea" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate_1a755be6dc66e1c403edc69db11592a4ea" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;poly<sp/>learning<sp/>rate&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a7869b93e5963d6f76da68d8c8137b979" kindref="member">global_schedule</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1acf7f3921a68e7f1f772106e18c545345" kindref="member">optimizer_schedule</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m,<sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref><sp/>&amp;opt)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="257" refid="classlbann_1_1lbann__callback__poly__learning__rate_1a03c8c9a738036f9b778f11416112fd80" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate_1a03c8c9a738036f9b778f11416112fd80" kindref="member">m_p</ref>;</highlight></codeline>
<codeline lineno="259" refid="classlbann_1_1lbann__callback__poly__learning__rate_1a493de3bbdea4bed802e663af9b81af8e" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate_1a493de3bbdea4bed802e663af9b81af8e" kindref="member">m_num_epochs</ref>;</highlight></codeline>
<codeline lineno="261" refid="classlbann_1_1lbann__callback__poly__learning__rate_1a43c06187577baff885bda6177fe56c3f" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate_1a43c06187577baff885bda6177fe56c3f" kindref="member">m_max_iter</ref>;</highlight></codeline>
<codeline lineno="263" refid="classlbann_1_1lbann__callback__poly__learning__rate_1a02cb265abba03e10fcba2be3cbbafce4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate_1a02cb265abba03e10fcba2be3cbbafce4" kindref="member">m_lr</ref>;</highlight></codeline>
<codeline lineno="265" refid="classlbann_1_1lbann__callback__poly__learning__rate_1aad95c34cfb705392bf38ecbb0dc97b32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate_1aad95c34cfb705392bf38ecbb0dc97b32" kindref="member">m_last_epoch_lr</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate" kindref="compound">lbann_callback_optimizerwise_adaptive_learning_rate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate" kindref="compound">lbann_callback_learning_rate</ref><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate" kindref="compound">lbann_callback_optimizerwise_adaptive_learning_rate</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate" kindref="compound">lbann_callback_optimizerwise_adaptive_learning_rate</ref>(</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale,<sp/>std::unordered_set&lt;weights<sp/>*&gt;<sp/>weights_list);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate" kindref="compound">lbann_callback_optimizerwise_adaptive_learning_rate</ref>(</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate" kindref="compound">lbann_callback_optimizerwise_adaptive_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate" kindref="compound">lbann_callback_optimizerwise_adaptive_learning_rate</ref>&amp;<sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1a80b82eebf8e38cbe0a484aea43644705" kindref="member">operator=</ref>(</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate" kindref="compound">lbann_callback_optimizerwise_adaptive_learning_rate</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284" refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate_1aa28bce451c8f1fa3b273218be976b923" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate" kindref="compound">lbann_callback_optimizerwise_adaptive_learning_rate</ref>*<sp/><ref refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate_1aa28bce451c8f1fa3b273218be976b923" kindref="member">copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate" kindref="compound">lbann_callback_optimizerwise_adaptive_learning_rate</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="286" refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate_1a31120725bd22d1ce783a6edba9c5fb5d" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate_1a31120725bd22d1ce783a6edba9c5fb5d" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;optimizerwise<sp/>adaptive<sp/>learning<sp/>rate&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__learning__rate_1acf7f3921a68e7f1f772106e18c545345" kindref="member">optimizer_schedule</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m,<sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref><sp/>&amp;opt)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290" refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate_1a332beb0eb4464929248f56e1815d4e69" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate_1a332beb0eb4464929248f56e1815d4e69" kindref="member">m_scale</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">};</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>LBANN_CALLBACKS_LEARNING_RATE_HPP_INCLUDED</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp"/>
  </compounddef>
</doxygen>
