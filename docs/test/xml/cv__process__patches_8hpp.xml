<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cv__process__patches_8hpp" kind="file" language="C++">
    <compoundname>cv_process_patches.hpp</compoundname>
    <includes refid="cv__process_8hpp" local="yes">cv_process.hpp</includes>
    <includes refid="patchworks__patch__descriptor_8hpp" local="yes">patchworks/patchworks_patch_descriptor.hpp</includes>
    <includes local="no">limits</includes>
    <includedby refid="cv__process__patches_8cpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_process_patches.cpp</includedby>
    <includedby refid="data__reader__imagenet__patches_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_imagenet_patches.hpp</includedby>
    <incdepgraph>
      <node id="3110">
        <label>cv_process.hpp</label>
        <link refid="cv__process_8hpp"/>
        <childnode refid="3111" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3127" relation="include">
        </childnode>
        <childnode refid="3128" relation="include">
        </childnode>
        <childnode refid="3132" relation="include">
        </childnode>
        <childnode refid="3133" relation="include">
        </childnode>
        <childnode refid="3134" relation="include">
        </childnode>
        <childnode refid="3136" relation="include">
        </childnode>
        <childnode refid="3138" relation="include">
        </childnode>
        <childnode refid="3139" relation="include">
        </childnode>
      </node>
      <node id="3136">
        <label>cv_mean_extractor.hpp</label>
        <link refid="cv__mean__extractor_8hpp"/>
        <childnode refid="3111" relation="include">
        </childnode>
        <childnode refid="3137" relation="include">
        </childnode>
      </node>
      <node id="3139">
        <label>limits</label>
      </node>
      <node id="3140">
        <label>patchworks/patchworks_patch_descriptor.hpp</label>
        <link refid="patchworks__patch__descriptor_8hpp"/>
        <childnode refid="3113" relation="include">
        </childnode>
      </node>
      <node id="3118">
        <label>El.hpp</label>
      </node>
      <node id="3125">
        <label>lbann/utils/mild_exception.hpp</label>
        <link refid="mild__exception_8hpp"/>
        <childnode refid="3126" relation="include">
        </childnode>
      </node>
      <node id="3117">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="3118" relation="include">
        </childnode>
        <childnode refid="3119" relation="include">
        </childnode>
        <childnode refid="3120" relation="include">
        </childnode>
        <childnode refid="3113" relation="include">
        </childnode>
      </node>
      <node id="3114">
        <label>opencv_extensions.hpp</label>
        <link refid="opencv__extensions_8hpp"/>
      </node>
      <node id="3132">
        <label>cv_colorizer.hpp</label>
        <link refid="cv__colorizer_8hpp"/>
        <childnode refid="3111" relation="include">
        </childnode>
      </node>
      <node id="3131">
        <label>string</label>
      </node>
      <node id="3127">
        <label>cv_subtractor.hpp</label>
        <link refid="cv__subtractor_8hpp"/>
        <childnode refid="3111" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
      </node>
      <node id="3129">
        <label>ostream</label>
      </node>
      <node id="3116">
        <label>typeinfo</label>
      </node>
      <node id="3122">
        <label>cstdio</label>
      </node>
      <node id="3133">
        <label>cv_decolorizer.hpp</label>
        <link refid="cv__decolorizer_8hpp"/>
        <childnode refid="3113" relation="include">
        </childnode>
        <childnode refid="3111" relation="include">
        </childnode>
      </node>
      <node id="3124">
        <label>cxxabi.h</label>
      </node>
      <node id="3135">
        <label>utility</label>
      </node>
      <node id="3121">
        <label>cstdlib</label>
      </node>
      <node id="3112">
        <label>opencv.hpp</label>
        <link refid="opencv_8hpp"/>
        <childnode refid="3113" relation="include">
        </childnode>
      </node>
      <node id="3126">
        <label>iostream</label>
      </node>
      <node id="3109">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_process_patches.hpp</label>
        <link refid="cv__process__patches_8hpp"/>
        <childnode refid="3110" relation="include">
        </childnode>
        <childnode refid="3140" relation="include">
        </childnode>
        <childnode refid="3139" relation="include">
        </childnode>
      </node>
      <node id="3115">
        <label>cv_normalizer.hpp</label>
        <link refid="cv__normalizer_8hpp"/>
        <childnode refid="3116" relation="include">
        </childnode>
        <childnode refid="3111" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
      </node>
      <node id="3111">
        <label>cv_transform.hpp</label>
        <link refid="cv__transform_8hpp"/>
        <childnode refid="3112" relation="include">
        </childnode>
        <childnode refid="3114" relation="include">
        </childnode>
      </node>
      <node id="3128">
        <label>cv_augmenter.hpp</label>
        <link refid="cv__augmenter_8hpp"/>
        <childnode refid="3111" relation="include">
        </childnode>
        <childnode refid="3126" relation="include">
        </childnode>
        <childnode refid="3129" relation="include">
        </childnode>
        <childnode refid="3130" relation="include">
        </childnode>
        <childnode refid="3131" relation="include">
        </childnode>
      </node>
      <node id="3134">
        <label>cv_cropper.hpp</label>
        <link refid="cv__cropper_8hpp"/>
        <childnode refid="3111" relation="include">
        </childnode>
        <childnode refid="3135" relation="include">
        </childnode>
        <childnode refid="3129" relation="include">
        </childnode>
      </node>
      <node id="3113">
        <label>lbann_config.hpp</label>
      </node>
      <node id="3137">
        <label>type_traits</label>
      </node>
      <node id="3120">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="3121" relation="include">
        </childnode>
        <childnode refid="3122" relation="include">
        </childnode>
        <childnode refid="3123" relation="include">
        </childnode>
        <childnode refid="3124" relation="include">
        </childnode>
      </node>
      <node id="3130">
        <label>cstring</label>
      </node>
      <node id="3119">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="3118" relation="include">
        </childnode>
      </node>
      <node id="3138">
        <label>memory</label>
      </node>
      <node id="3123">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3152">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="3153" relation="include">
        </childnode>
        <childnode refid="3154" relation="include">
        </childnode>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3156" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
        <childnode refid="3158" relation="include">
        </childnode>
        <childnode refid="3159" relation="include">
        </childnode>
        <childnode refid="3160" relation="include">
        </childnode>
        <childnode refid="3150" relation="include">
        </childnode>
      </node>
      <node id="3145">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_store/data_store_imagenet_patches.cpp</label>
        <link refid="data__store__imagenet__patches_8cpp"/>
      </node>
      <node id="3157">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/model_factory.cpp</label>
        <link refid="model__factory_8cpp"/>
      </node>
      <node id="3149">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="3150">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="3147" relation="include">
        </childnode>
        <childnode refid="3151" relation="include">
        </childnode>
        <childnode refid="3152" relation="include">
        </childnode>
        <childnode refid="3161" relation="include">
        </childnode>
      </node>
      <node id="3148">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="3149" relation="include">
        </childnode>
        <childnode refid="3146" relation="include">
        </childnode>
      </node>
      <node id="3154">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp</label>
        <link refid="layer__factory_8cpp"/>
      </node>
      <node id="3151">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/utils/protobuf_utils.cpp</label>
        <link refid="protobuf__utils_8cpp"/>
      </node>
      <node id="3162">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/init_image_data_readers.cpp</label>
        <link refid="init__image__data__readers_8cpp"/>
      </node>
      <node id="3158">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/objective_function_factory.cpp</label>
        <link refid="objective__function__factory_8cpp"/>
      </node>
      <node id="3142">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_process_patches.cpp</label>
        <link refid="cv__process__patches_8cpp"/>
      </node>
      <node id="3143">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_imagenet_patches.hpp</label>
        <link refid="data__reader__imagenet__patches_8hpp"/>
        <childnode refid="3144" relation="include">
        </childnode>
        <childnode refid="3145" relation="include">
        </childnode>
        <childnode refid="3146" relation="include">
        </childnode>
      </node>
      <node id="3147">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp</label>
        <link refid="proto__common_8cpp"/>
      </node>
      <node id="3156">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/metric_factory.cpp</label>
        <link refid="metric__factory_8cpp"/>
      </node>
      <node id="3146">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="3147" relation="include">
        </childnode>
        <childnode refid="3148" relation="include">
        </childnode>
        <childnode refid="3150" relation="include">
        </childnode>
        <childnode refid="3163" relation="include">
        </childnode>
      </node>
      <node id="3144">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_imagenet_patches.cpp</label>
        <link refid="data__reader__imagenet__patches_8cpp"/>
      </node>
      <node id="3161">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/init_image_data_readers.hpp</label>
        <link refid="init__image__data__readers_8hpp"/>
        <childnode refid="3162" relation="include">
        </childnode>
        <childnode refid="3147" relation="include">
        </childnode>
      </node>
      <node id="3141">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_process_patches.hpp</label>
        <link refid="cv__process__patches_8hpp"/>
        <childnode refid="3142" relation="include">
        </childnode>
        <childnode refid="3143" relation="include">
        </childnode>
      </node>
      <node id="3159">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/optimizer_factory.cpp</label>
        <link refid="optimizer__factory_8cpp"/>
      </node>
      <node id="3160">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/weights_factory.cpp</label>
        <link refid="weights__factory_8cpp"/>
      </node>
      <node id="3153">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp</label>
        <link refid="callback__factory_8cpp"/>
      </node>
      <node id="3163">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/protobuf_utils.hpp</label>
        <link refid="protobuf__utils_8hpp"/>
        <childnode refid="3151" relation="include">
        </childnode>
      </node>
      <node id="3155">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_graph_factory.cpp</label>
        <link refid="layer__graph__factory_8cpp"/>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cv_process_patches<sp/>.cpp<sp/>.hpp<sp/>-<sp/>structure<sp/>that<sp/>defines<sp/>the<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>patches<sp/>extracted<sp/>from<sp/>an<sp/>image<sp/>in<sp/>the<sp/>opencv<sp/>format</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LBANN_CV_PROCESS_PATCHES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LBANN_CV_PROCESS_PATCHES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cv__process_8hpp" kindref="compound">cv_process.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="patchworks__patch__descriptor_8hpp" kindref="compound">patchworks/patchworks_patch_descriptor.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>std::numeric_limits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_OPENCV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="keyword">class<sp/></highlight><highlight class="normal">cv_process_patches<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>cv_process<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>patchworks::patch_descriptor<sp/>m_pd;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_self_label;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_when_to_extract;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>cv_process_patches();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>cv_process_patches(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>self_label);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>cv_process_patches(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv_process_patches&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>cv_process_patches(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv_transform::cv_flipping<sp/>flip_code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tosplit);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>cv_process_patches&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv_process_patches&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>~cv_process_patches()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_patch_descriptor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>patchworks::patch_descriptor&amp;<sp/>pd,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>when_to_extract<sp/>=</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::numeric_limits&lt;unsigned<sp/>int&gt;::max());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>patchworks::patch_descriptor&amp;<sp/>patch_descriptor()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pd;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>patchworks::patch_descriptor&amp;<sp/>patch_descriptor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pd;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_when_to_extract()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_when_to_extract;<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_self_labeling()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_self_label;<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_num_labels()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pd.get_num_labels();<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_patch_label()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pd.get_last_label();<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_num_patches()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pd.get_num_patches();<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>get_data_dims()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{m_pd.get_num_patches(),<sp/>m_pd.get_patch_width(),<sp/>m_pd.get_patch_height()};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preprocess(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">cv::Mat</ref>&amp;<sp/>image,<sp/>std::vector&lt;cv::Mat&gt;&amp;<sp/>patches);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>std::string<sp/>get_type()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;cv_process_patches&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>std::string<sp/>get_description()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_OPENCV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_CV_PROCESS_PATCHES_HPP</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_process_patches.hpp"/>
  </compounddef>
</doxygen>
