<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classoptions" kind="class" language="C++" prot="public">
    <compoundname>options</compoundname>
    <includes refid="options_8hpp" local="no">options.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classoptions_1a01020aa5bd82bcff1b1c950b20578883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool options::has_int</definition>
        <argsstring>(std::string option)</argsstring>
        <name>has_int</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the database contains the option </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="34" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="245" bodyend="250"/>
        <references refid="classoptions_1ad9b4461e633b73acc2fde7752ef60d41" compoundref="options_8cpp" startline="196" endline="218">m_test_int</references>
        <referencedby refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" compoundref="options_8hpp" startline="20" endline="22">get</referencedby>
        <referencedby refid="proto__common_8hpp_1a46fd41f635ff8f352065adc85eb3d1df" compoundref="proto__common_8cpp" startline="386" endline="539">get_cmdline_overrides</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1aafb1d2a7ccde0b1bf786230ba4080ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool options::has_bool</definition>
        <argsstring>(std::string option)</argsstring>
        <name>has_bool</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="35" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="252" bodyend="257"/>
        <references refid="classoptions_1ad9b4461e633b73acc2fde7752ef60d41" compoundref="options_8cpp" startline="196" endline="218">m_test_int</references>
        <referencedby refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" compoundref="options_8hpp" startline="20" endline="22">get</referencedby>
        <referencedby refid="classlbann_1_1pilot2__molecular__reader_1a1b5160021a532f5f19897bd2250e3a46" compoundref="data__reader__pilot2__molecular_8cpp" startline="39" endline="155">lbann::pilot2_molecular_reader::load</referencedby>
        <referencedby refid="classlbann_1_1data__store__imagenet_1a611aa1734a491c443396a077b49fe4fe" compoundref="data__store__imagenet_8cpp" startline="36" endline="82">lbann::data_store_imagenet::setup</referencedby>
        <referencedby refid="classlbann_1_1generic__data__store_1acbcd88161c06f4bb9a70bbae857d4ee0" compoundref="generic__data__store_8cpp" startline="39" endline="65">lbann::generic_data_store::generic_data_store</referencedby>
        <referencedby refid="proto__common_8hpp_1a46fd41f635ff8f352065adc85eb3d1df" compoundref="proto__common_8cpp" startline="386" endline="539">get_cmdline_overrides</referencedby>
        <referencedby refid="classlbann_1_1stack__profiler_1a5c8e2ec1f36d36ff8211ec8910063777" compoundref="stack__profiler_8cpp" startline="82" endline="101">lbann::stack_profiler::activate</referencedby>
        <referencedby refid="namespacelbann_1_1stack__trace_1aa071d75a81128e2a8100d66529482842" compoundref="stack__trace_8cpp" startline="55" endline="74">lbann::stack_trace::open_output_file</referencedby>
        <referencedby refid="namespacelbann_1_1stack__trace_1a12c3aa60ec15015b925249fc61352f07" compoundref="stack__trace_8cpp" startline="227" endline="238">lbann::stack_trace::register_handler</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool options::has_string</definition>
        <argsstring>(std::string option)</argsstring>
        <name>has_string</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="36" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="259" bodyend="263"/>
        <references refid="classoptions_1a8286a8617eec86a3d4cf678bd17739ba" compoundref="options_8cpp" startline="238" endline="243">m_test_string</references>
        <referencedby refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" compoundref="options_8hpp" startline="20" endline="22">get</referencedby>
        <referencedby refid="proto__common_8cpp_1a2b1366b9ab5913e4db6afc8833ca4054" compoundref="proto__common_8cpp" startline="332" endline="366">set_data_readers_filenames</referencedby>
        <referencedby refid="proto__common_8hpp_1a46fd41f635ff8f352065adc85eb3d1df" compoundref="proto__common_8cpp" startline="386" endline="539">get_cmdline_overrides</referencedby>
        <referencedby refid="proto__common_8hpp_1a4f1af470c45e9ed06039685e5f72ea4a" compoundref="proto__common_8cpp" startline="695" endline="779">save_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool options::has_float</definition>
        <argsstring>(std::string option)</argsstring>
        <name>has_float</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="37" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="37" bodyend="37"/>
        <references refid="classoptions_1ab66aae6c79cdde8dd38d0d3fc8aa3de5" compoundref="options_8cpp" startline="265" endline="270">has_double</references>
        <references refid="classoptions_1a3c23831e4218f9a88cddc81337518046" compoundref="options_8cpp" startline="273" endline="275">set_option</references>
        <references refid="classoptions_1a797bc1915004bdbc34c5eea3fe488952" compoundref="options_8cpp" startline="138" endline="149">get_int</references>
        <references refid="classoptions_1a99aa190102de33e2aed39723929f9fad" compoundref="options_8cpp" startline="111" endline="126">get_bool</references>
        <references refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" compoundref="options_8cpp" startline="182" endline="192">get_string</references>
        <referencedby refid="proto__common_8hpp_1a46fd41f635ff8f352065adc85eb3d1df" compoundref="proto__common_8cpp" startline="386" endline="539">get_cmdline_overrides</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1ab66aae6c79cdde8dd38d0d3fc8aa3de5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool options::has_double</definition>
        <argsstring>(std::string option)</argsstring>
        <name>has_double</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="38" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="265" bodyend="270"/>
        <references refid="classoptions_1a0eebdb8dbce454720ef9251fcd7abf24" compoundref="options_8cpp" startline="220" endline="236">m_test_double</references>
        <referencedby refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" compoundref="options_8hpp" startline="37" endline="37">has_float</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classoptions_1a3c23831e4218f9a88cddc81337518046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void options::set_option</definition>
        <argsstring>(std::string name, int value)</argsstring>
        <name>set_option</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert option in database; if option already exists it&apos;s value will changed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="43" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="273" bodyend="275"/>
        <references refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" compoundref="options_8hpp" startline="86">m_opts</references>
        <referencedby refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" compoundref="options_8hpp" startline="37" endline="37">has_float</referencedby>
        <referencedby refid="classlbann_1_1data__store__imagenet_1a611aa1734a491c443396a077b49fe4fe" compoundref="data__store__imagenet_8cpp" startline="36" endline="82">lbann::data_store_imagenet::setup</referencedby>
        <referencedby refid="classoptions_1a9ce5a1af62eeb42a88a1b47f5891e247" compoundref="options_8cpp" startline="101" endline="109">get_bool</referencedby>
        <referencedby refid="classoptions_1a0a17d018f4b64f85091f3ec21de029f0" compoundref="options_8cpp" startline="128" endline="136">get_int</referencedby>
        <referencedby refid="classoptions_1aa78e7d95dc59a2d25987546cdbab7872" compoundref="options_8cpp" startline="151" endline="158">get_double</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1ad2b98890aee35b50534117b34617a43f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void options::set_option</definition>
        <argsstring>(std::string name, bool value)</argsstring>
        <name>set_option</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="44" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="277" bodyend="279"/>
        <references refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" compoundref="options_8hpp" startline="86">m_opts</references>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a6f76ed6506014e816802739221cfbc20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void options::set_option</definition>
        <argsstring>(std::string name, std::string value)</argsstring>
        <name>set_option</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="45" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="281" bodyend="283"/>
        <references refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" compoundref="options_8hpp" startline="86">m_opts</references>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a076c522b99fc0816c695c7405e1ae9b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void options::set_option</definition>
        <argsstring>(std::string name, float value)</argsstring>
        <name>set_option</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="46" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="285" bodyend="287"/>
        <references refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" compoundref="options_8hpp" startline="86">m_opts</references>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a42eb183c3fd8156c226559663893bb92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void options::set_option</definition>
        <argsstring>(std::string name, double value)</argsstring>
        <name>set_option</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="47" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="289" bodyend="291"/>
        <references refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" compoundref="options_8hpp" startline="86">m_opts</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classoptions_1a797bc1915004bdbc34c5eea3fe488952" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int options::get_int</definition>
        <argsstring>(std::string option)</argsstring>
        <name>get_int</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the value of the option; throws exception if option doesn&apos;t exist, or if it&apos;s associated value (which is stored internally as a string) cannot be cast to the specified return type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="55" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="138" bodyend="149"/>
        <references refid="classoptions_1ad9b4461e633b73acc2fde7752ef60d41" compoundref="options_8cpp" startline="196" endline="218">m_test_int</references>
        <referencedby refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" compoundref="options_8hpp" startline="37" endline="37">has_float</referencedby>
        <referencedby refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" compoundref="options_8hpp" startline="58" endline="58">get_float</referencedby>
        <referencedby refid="proto__common_8hpp_1a46fd41f635ff8f352065adc85eb3d1df" compoundref="proto__common_8cpp" startline="386" endline="539">get_cmdline_overrides</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a99aa190102de33e2aed39723929f9fad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool options::get_bool</definition>
        <argsstring>(std::string option)</argsstring>
        <name>get_bool</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="56" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="111" bodyend="126"/>
        <references refid="classoptions_1ad9b4461e633b73acc2fde7752ef60d41" compoundref="options_8cpp" startline="196" endline="218">m_test_int</references>
        <referencedby refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" compoundref="options_8hpp" startline="37" endline="37">has_float</referencedby>
        <referencedby refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" compoundref="options_8hpp" startline="58" endline="58">get_float</referencedby>
        <referencedby refid="classlbann_1_1pilot2__molecular__reader_1a1b5160021a532f5f19897bd2250e3a46" compoundref="data__reader__pilot2__molecular_8cpp" startline="39" endline="155">lbann::pilot2_molecular_reader::load</referencedby>
        <referencedby refid="classlbann_1_1data__store__imagenet_1a611aa1734a491c443396a077b49fe4fe" compoundref="data__store__imagenet_8cpp" startline="36" endline="82">lbann::data_store_imagenet::setup</referencedby>
        <referencedby refid="classlbann_1_1generic__data__store_1acbcd88161c06f4bb9a70bbae857d4ee0" compoundref="generic__data__store_8cpp" startline="39" endline="65">lbann::generic_data_store::generic_data_store</referencedby>
        <referencedby refid="proto__common_8hpp_1a46fd41f635ff8f352065adc85eb3d1df" compoundref="proto__common_8cpp" startline="386" endline="539">get_cmdline_overrides</referencedby>
        <referencedby refid="classlbann_1_1stack__profiler_1a5c8e2ec1f36d36ff8211ec8910063777" compoundref="stack__profiler_8cpp" startline="82" endline="101">lbann::stack_profiler::activate</referencedby>
        <referencedby refid="namespacelbann_1_1stack__trace_1aa071d75a81128e2a8100d66529482842" compoundref="stack__trace_8cpp" startline="55" endline="74">lbann::stack_trace::open_output_file</referencedby>
        <referencedby refid="namespacelbann_1_1stack__trace_1a12c3aa60ec15015b925249fc61352f07" compoundref="stack__trace_8cpp" startline="227" endline="238">lbann::stack_trace::register_handler</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string options::get_string</definition>
        <argsstring>(std::string option)</argsstring>
        <name>get_string</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="57" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="182" bodyend="192"/>
        <references refid="classoptions_1a8286a8617eec86a3d4cf678bd17739ba" compoundref="options_8cpp" startline="238" endline="243">m_test_string</references>
        <referencedby refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" compoundref="options_8hpp" startline="37" endline="37">has_float</referencedby>
        <referencedby refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" compoundref="options_8hpp" startline="58" endline="58">get_float</referencedby>
        <referencedby refid="proto__common_8cpp_1a2b1366b9ab5913e4db6afc8833ca4054" compoundref="proto__common_8cpp" startline="332" endline="366">set_data_readers_filenames</referencedby>
        <referencedby refid="proto__common_8hpp_1a46fd41f635ff8f352065adc85eb3d1df" compoundref="proto__common_8cpp" startline="386" endline="539">get_cmdline_overrides</referencedby>
        <referencedby refid="proto__common_8hpp_1a4f1af470c45e9ed06039685e5f72ea4a" compoundref="proto__common_8cpp" startline="695" endline="779">save_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float options::get_float</definition>
        <argsstring>(std::string option)</argsstring>
        <name>get_float</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="58" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="58" bodyend="58"/>
        <references refid="classoptions_1a0e8ff0d44b9192754451f9dcd47cd559" compoundref="options_8cpp" startline="160" endline="171">get_double</references>
        <references refid="classoptions_1a797bc1915004bdbc34c5eea3fe488952" compoundref="options_8cpp" startline="138" endline="149">get_int</references>
        <references refid="classoptions_1a99aa190102de33e2aed39723929f9fad" compoundref="options_8cpp" startline="111" endline="126">get_bool</references>
        <references refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" compoundref="options_8cpp" startline="182" endline="192">get_string</references>
        <referencedby refid="proto__common_8cpp_1a900e005e45b3debc2444ded1c3ff6e1f" compoundref="proto__common_8cpp" startline="368" endline="384">set_data_readers_percent</referencedby>
        <referencedby refid="proto__common_8hpp_1a46fd41f635ff8f352065adc85eb3d1df" compoundref="proto__common_8cpp" startline="386" endline="539">get_cmdline_overrides</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a0e8ff0d44b9192754451f9dcd47cd559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double options::get_double</definition>
        <argsstring>(std::string option)</argsstring>
        <name>get_double</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="59" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="160" bodyend="171"/>
        <references refid="classoptions_1a0eebdb8dbce454720ef9251fcd7abf24" compoundref="options_8cpp" startline="220" endline="236">m_test_double</references>
        <referencedby refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" compoundref="options_8hpp" startline="58" endline="58">get_float</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classoptions_1a0a17d018f4b64f85091f3ec21de029f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int options::get_int</definition>
        <argsstring>(std::string option, int the_default)</argsstring>
        <name>get_int</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <param>
          <type>int</type>
          <declname>the_default</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the value of the option; if option isn&apos;t found, inserts the option in the internal db, with the specified default value, and returns the the_default </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="67" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="128" bodyend="136"/>
        <references refid="classoptions_1ad9b4461e633b73acc2fde7752ef60d41" compoundref="options_8cpp" startline="196" endline="218">m_test_int</references>
        <references refid="classoptions_1a3c23831e4218f9a88cddc81337518046" compoundref="options_8cpp" startline="273" endline="275">set_option</references>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a9ce5a1af62eeb42a88a1b47f5891e247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool options::get_bool</definition>
        <argsstring>(std::string option, bool the_default)</argsstring>
        <name>get_bool</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>the_default</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="68" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="101" bodyend="109"/>
        <references refid="classoptions_1ad9b4461e633b73acc2fde7752ef60d41" compoundref="options_8cpp" startline="196" endline="218">m_test_int</references>
        <references refid="classoptions_1a3c23831e4218f9a88cddc81337518046" compoundref="options_8cpp" startline="273" endline="275">set_option</references>
      </memberdef>
      <memberdef kind="function" id="classoptions_1ae03327a8846e4acb3986b5a6d79b3790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string options::get_string</definition>
        <argsstring>(std::string option, std::string the_default)</argsstring>
        <name>get_string</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>the_default</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="69" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="173" bodyend="180"/>
        <references refid="classoptions_1a8286a8617eec86a3d4cf678bd17739ba" compoundref="options_8cpp" startline="238" endline="243">m_test_string</references>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a113445829763eaa7b86cdc40c2d66e25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float options::get_float</definition>
        <argsstring>(std::string option, float the_default)</argsstring>
        <name>get_float</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <param>
          <type>float</type>
          <declname>the_default</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="70" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="70" bodyend="70"/>
        <references refid="classoptions_1a0e8ff0d44b9192754451f9dcd47cd559" compoundref="options_8cpp" startline="160" endline="171">get_double</references>
      </memberdef>
      <memberdef kind="function" id="classoptions_1aa78e7d95dc59a2d25987546cdbab7872" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double options::get_double</definition>
        <argsstring>(std::string option, double the_default)</argsstring>
        <name>get_double</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <param>
          <type>double</type>
          <declname>the_default</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="71" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="151" bodyend="158"/>
        <references refid="classoptions_1a0eebdb8dbce454720ef9251fcd7abf24" compoundref="options_8cpp" startline="220" endline="236">m_test_double</references>
        <references refid="classoptions_1a3c23831e4218f9a88cddc81337518046" compoundref="options_8cpp" startline="273" endline="275">set_option</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classoptions_1a3171bb61cdfcc5a6a899ad6fe9b56f9d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int options::m_rank</definition>
        <argsstring></argsstring>
        <name>m_rank</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="75" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="75" bodyend="-1"/>
        <referencedby refid="classoptions_1a6d909eacd89dee5f0b153430985f9822" compoundref="options_8cpp" startline="39" endline="67">init</referencedby>
        <referencedby refid="classoptions_1abeab2c3e2cf5c1809e09601a3835d967" compoundref="options_8cpp" startline="295" endline="327">m_parse_file</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; options::m_opts</definition>
        <argsstring></argsstring>
        <name>m_opts</name>
        <briefdescription>
<para>the &quot;database;&quot; all options are stored as strings, and may be cast to int, etc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="86" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="86" bodyend="-1"/>
        <referencedby refid="classoptions_1a6d909eacd89dee5f0b153430985f9822" compoundref="options_8cpp" startline="39" endline="67">init</referencedby>
        <referencedby refid="classoptions_1a99183ba43c8d7b35dbfa1bea0f43db48" compoundref="options_8cpp" startline="93" endline="99">m_has_opt</referencedby>
        <referencedby refid="classoptions_1ad9b4461e633b73acc2fde7752ef60d41" compoundref="options_8cpp" startline="196" endline="218">m_test_int</referencedby>
        <referencedby refid="classoptions_1a0eebdb8dbce454720ef9251fcd7abf24" compoundref="options_8cpp" startline="220" endline="236">m_test_double</referencedby>
        <referencedby refid="classoptions_1a8286a8617eec86a3d4cf678bd17739ba" compoundref="options_8cpp" startline="238" endline="243">m_test_string</referencedby>
        <referencedby refid="classoptions_1a3c23831e4218f9a88cddc81337518046" compoundref="options_8cpp" startline="273" endline="275">set_option</referencedby>
        <referencedby refid="classoptions_1abeab2c3e2cf5c1809e09601a3835d967" compoundref="options_8cpp" startline="295" endline="327">m_parse_file</referencedby>
        <referencedby refid="classoptions_1a441540f2a8990edaa17fe95b013f9168" compoundref="options_8cpp" startline="330" endline="339">m_parse_cmd_line</referencedby>
        <referencedby refid="classoptions_1a6fd8a97883eaecb722e5c6b120d8f9be" compoundref="options_8cpp" startline="341" endline="347">print</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classoptions_1a64ad628e508d5d71a117909e44f68350" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; options::m_cmd_line</definition>
        <argsstring></argsstring>
        <name>m_cmd_line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="97" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="97" bodyend="-1"/>
        <referencedby refid="classoptions_1a6d909eacd89dee5f0b153430985f9822" compoundref="options_8cpp" startline="39" endline="67">init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classoptions_1a5df2188c2d1bb81cbebef4b2e80a926f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int options::m_argc</definition>
        <argsstring></argsstring>
        <name>m_argc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="99" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="99" bodyend="-1"/>
        <referencedby refid="classoptions_1a6d909eacd89dee5f0b153430985f9822" compoundref="options_8cpp" startline="39" endline="67">init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classoptions_1a376f7dcfec6a2ff75835c3c3d732bdea" prot="private" static="no" mutable="no">
        <type>char **</type>
        <definition>char** options::m_argv</definition>
        <argsstring></argsstring>
        <name>m_argv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="100" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="100" bodyend="-1"/>
        <referencedby refid="classoptions_1a6d909eacd89dee5f0b153430985f9822" compoundref="options_8cpp" startline="39" endline="67">init</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classoptions_1ab10ed8295e9333b025619195d156a9ed" prot="private" static="yes" mutable="no">
        <type><ref refid="classoptions" kindref="compound">options</ref> *</type>
        <definition>options * options::s_instance</definition>
        <argsstring></argsstring>
        <name>s_instance</name>
        <initializer>= new <ref refid="classoptions" kindref="compound">options</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="83" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="83" bodyend="-1"/>
        <referencedby refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" compoundref="options_8hpp" startline="20" endline="22">get</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classoptions" kindref="compound">options</ref> *</type>
        <definition>static options* options::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
<para>returns a pointer to the Options singleton </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="20" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="20" bodyend="22"/>
        <references refid="classoptions_1ab10ed8295e9333b025619195d156a9ed" compoundref="options_8hpp" startline="83">s_instance</references>
        <references refid="classoptions_1a6d909eacd89dee5f0b153430985f9822" compoundref="options_8cpp" startline="39" endline="67">init</references>
        <references refid="classoptions_1a6fd8a97883eaecb722e5c6b120d8f9be" compoundref="options_8cpp" startline="341" endline="347">print</references>
        <references refid="classoptions_1a01020aa5bd82bcff1b1c950b20578883" compoundref="options_8cpp" startline="245" endline="250">has_int</references>
        <references refid="classoptions_1aafb1d2a7ccde0b1bf786230ba4080ecd" compoundref="options_8cpp" startline="252" endline="257">has_bool</references>
        <references refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" compoundref="options_8cpp" startline="259" endline="263">has_string</references>
        <referencedby refid="classlbann_1_1data__reader__merge__samples_1ab3554341417f5eba95b9c1098af40410" compoundref="data__reader__merge__samples_8cpp" startline="131" endline="151">lbann::data_reader_merge_samples::load</referencedby>
        <referencedby refid="classlbann_1_1pilot2__molecular__reader_1a1b5160021a532f5f19897bd2250e3a46" compoundref="data__reader__pilot2__molecular_8cpp" startline="39" endline="155">lbann::pilot2_molecular_reader::load</referencedby>
        <referencedby refid="classlbann_1_1data__store__imagenet_1a611aa1734a491c443396a077b49fe4fe" compoundref="data__store__imagenet_8cpp" startline="36" endline="82">lbann::data_store_imagenet::setup</referencedby>
        <referencedby refid="classlbann_1_1generic__data__store_1acbcd88161c06f4bb9a70bbae857d4ee0" compoundref="generic__data__store_8cpp" startline="39" endline="65">lbann::generic_data_store::generic_data_store</referencedby>
        <referencedby refid="proto__common_8cpp_1a2b1366b9ab5913e4db6afc8833ca4054" compoundref="proto__common_8cpp" startline="332" endline="366">set_data_readers_filenames</referencedby>
        <referencedby refid="proto__common_8cpp_1a900e005e45b3debc2444ded1c3ff6e1f" compoundref="proto__common_8cpp" startline="368" endline="384">set_data_readers_percent</referencedby>
        <referencedby refid="proto__common_8hpp_1a46fd41f635ff8f352065adc85eb3d1df" compoundref="proto__common_8cpp" startline="386" endline="539">get_cmdline_overrides</referencedby>
        <referencedby refid="proto__common_8hpp_1a4f1af470c45e9ed06039685e5f72ea4a" compoundref="proto__common_8cpp" startline="695" endline="779">save_session</referencedby>
        <referencedby refid="classlbann_1_1stack__profiler_1a5c8e2ec1f36d36ff8211ec8910063777" compoundref="stack__profiler_8cpp" startline="82" endline="101">lbann::stack_profiler::activate</referencedby>
        <referencedby refid="namespacelbann_1_1stack__trace_1aa071d75a81128e2a8100d66529482842" compoundref="stack__trace_8cpp" startline="55" endline="74">lbann::stack_trace::open_output_file</referencedby>
        <referencedby refid="namespacelbann_1_1stack__trace_1a12c3aa60ec15015b925249fc61352f07" compoundref="stack__trace_8cpp" startline="227" endline="238">lbann::stack_trace::register_handler</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classoptions_1a6d909eacd89dee5f0b153430985f9822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void options::init</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>init</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>if cmd line contains &quot;--loadme=&lt;string&gt;&quot; then initialize options database from that file. Next, intialize from all other options on cmd line. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="27" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="39" bodyend="67"/>
        <references refid="classoptions_1a3171bb61cdfcc5a6a899ad6fe9b56f9d" compoundref="options_8hpp" startline="75">m_rank</references>
        <references refid="classoptions_1a5df2188c2d1bb81cbebef4b2e80a926f" compoundref="options_8hpp" startline="99">m_argc</references>
        <references refid="classoptions_1a376f7dcfec6a2ff75835c3c3d732bdea" compoundref="options_8hpp" startline="100">m_argv</references>
        <references refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" compoundref="options_8hpp" startline="86">m_opts</references>
        <references refid="classoptions_1a64ad628e508d5d71a117909e44f68350" compoundref="options_8hpp" startline="97">m_cmd_line</references>
        <references refid="options_8cpp_1a18f37a1b6f36c00656e52d130c2132d2" compoundref="options_8cpp" startline="17" endline="37">m_parse_opt</references>
        <references refid="classoptions_1abeab2c3e2cf5c1809e09601a3835d967" compoundref="options_8cpp" startline="295" endline="327">m_parse_file</references>
        <references refid="classoptions_1a441540f2a8990edaa17fe95b013f9168" compoundref="options_8cpp" startline="330" endline="339">m_parse_cmd_line</references>
        <referencedby refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" compoundref="options_8hpp" startline="20" endline="22">get</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a6fd8a97883eaecb722e5c6b120d8f9be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void options::print</definition>
        <argsstring>(std::ostream &amp;out=std::cout)</argsstring>
        <name>print</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
          <defval>std::cout</defval>
        </param>
        <briefdescription>
<para>prints all registered options to &apos;out&apos; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="30" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="341" bodyend="347"/>
        <references refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" compoundref="options_8hpp" startline="86">m_opts</references>
        <referencedby refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" compoundref="options_8hpp" startline="20" endline="22">get</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classoptions_1a41a256b4ba3b2d68a2d72b9245aa0c4d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>options::options</definition>
        <argsstring>()</argsstring>
        <name>options</name>
        <briefdescription>
<para>private constructor to ensure this class is a singleton </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="78" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a561b67397b31bd4ec2c058ad54ab2daa" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>options::options</definition>
        <argsstring>(options &amp;)</argsstring>
        <name>options</name>
        <param>
          <type><ref refid="classoptions" kindref="compound">options</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="79" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classoptions_1ad3323d598a23707733c16be8a575c270" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classoptions" kindref="compound">options</ref> &amp;</type>
        <definition>options&amp; options::operator=</definition>
        <argsstring>(options const &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classoptions" kindref="compound">options</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="80" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classoptions_1abeab2c3e2cf5c1809e09601a3835d967" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void options::m_parse_file</definition>
        <argsstring>(std::string fn)</argsstring>
        <name>m_parse_file</name>
        <param>
          <type>std::string</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="88" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="295" bodyend="327"/>
        <references refid="classoptions_1a3171bb61cdfcc5a6a899ad6fe9b56f9d" compoundref="options_8hpp" startline="75">m_rank</references>
        <references refid="options_8cpp_1a18f37a1b6f36c00656e52d130c2132d2" compoundref="options_8cpp" startline="17" endline="37">m_parse_opt</references>
        <references refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" compoundref="options_8hpp" startline="86">m_opts</references>
        <referencedby refid="classoptions_1a6d909eacd89dee5f0b153430985f9822" compoundref="options_8cpp" startline="39" endline="67">init</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a99183ba43c8d7b35dbfa1bea0f43db48" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool options::m_has_opt</definition>
        <argsstring>(std::string option)</argsstring>
        <name>m_has_opt</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="90" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="93" bodyend="99"/>
        <references refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" compoundref="options_8hpp" startline="86">m_opts</references>
        <referencedby refid="classoptions_1ad9b4461e633b73acc2fde7752ef60d41" compoundref="options_8cpp" startline="196" endline="218">m_test_int</referencedby>
        <referencedby refid="classoptions_1a0eebdb8dbce454720ef9251fcd7abf24" compoundref="options_8cpp" startline="220" endline="236">m_test_double</referencedby>
        <referencedby refid="classoptions_1a8286a8617eec86a3d4cf678bd17739ba" compoundref="options_8cpp" startline="238" endline="243">m_test_string</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1ad9b4461e633b73acc2fde7752ef60d41" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool options::m_test_int</definition>
        <argsstring>(std::string option, int &amp;out)</argsstring>
        <name>m_test_int</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="91" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="196" bodyend="218"/>
        <references refid="classoptions_1a99183ba43c8d7b35dbfa1bea0f43db48" compoundref="options_8cpp" startline="93" endline="99">m_has_opt</references>
        <references refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" compoundref="options_8hpp" startline="86">m_opts</references>
        <referencedby refid="classoptions_1a9ce5a1af62eeb42a88a1b47f5891e247" compoundref="options_8cpp" startline="101" endline="109">get_bool</referencedby>
        <referencedby refid="classoptions_1a0a17d018f4b64f85091f3ec21de029f0" compoundref="options_8cpp" startline="128" endline="136">get_int</referencedby>
        <referencedby refid="classoptions_1a01020aa5bd82bcff1b1c950b20578883" compoundref="options_8cpp" startline="245" endline="250">has_int</referencedby>
        <referencedby refid="classoptions_1aafb1d2a7ccde0b1bf786230ba4080ecd" compoundref="options_8cpp" startline="252" endline="257">has_bool</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a0eebdb8dbce454720ef9251fcd7abf24" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool options::m_test_double</definition>
        <argsstring>(std::string option, double &amp;out)</argsstring>
        <name>m_test_double</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="92" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="220" bodyend="236"/>
        <references refid="classoptions_1a99183ba43c8d7b35dbfa1bea0f43db48" compoundref="options_8cpp" startline="93" endline="99">m_has_opt</references>
        <references refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" compoundref="options_8hpp" startline="86">m_opts</references>
        <references refid="options_8cpp_1a7a1c169fc6503243e8670fd2b30b06f1" compoundref="options_8cpp" startline="71" endline="78">lower</references>
        <referencedby refid="classoptions_1aa78e7d95dc59a2d25987546cdbab7872" compoundref="options_8cpp" startline="151" endline="158">get_double</referencedby>
        <referencedby refid="classoptions_1ab66aae6c79cdde8dd38d0d3fc8aa3de5" compoundref="options_8cpp" startline="265" endline="270">has_double</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a8286a8617eec86a3d4cf678bd17739ba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool options::m_test_string</definition>
        <argsstring>(std::string option, std::string &amp;out)</argsstring>
        <name>m_test_string</name>
        <param>
          <type>std::string</type>
          <declname>option</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="93" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="238" bodyend="243"/>
        <references refid="classoptions_1a99183ba43c8d7b35dbfa1bea0f43db48" compoundref="options_8cpp" startline="93" endline="99">m_has_opt</references>
        <references refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" compoundref="options_8hpp" startline="86">m_opts</references>
        <referencedby refid="classoptions_1ae03327a8846e4acb3986b5a6d79b3790" compoundref="options_8cpp" startline="173" endline="180">get_string</referencedby>
        <referencedby refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" compoundref="options_8cpp" startline="259" endline="263">has_string</referencedby>
      </memberdef>
      <memberdef kind="function" id="classoptions_1a441540f2a8990edaa17fe95b013f9168" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void options::m_parse_cmd_line</definition>
        <argsstring>(int arg, char **argv)</argsstring>
        <name>m_parse_cmd_line</name>
        <param>
          <type>int</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="95" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/options.cpp" bodystart="330" bodyend="339"/>
        <references refid="options_8cpp_1a18f37a1b6f36c00656e52d130c2132d2" compoundref="options_8cpp" startline="17" endline="37">m_parse_opt</references>
        <references refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" compoundref="options_8hpp" startline="86">m_opts</references>
        <referencedby refid="classoptions_1a6d909eacd89dee5f0b153430985f9822" compoundref="options_8cpp" startline="39" endline="67">init</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2383">
        <label>options</label>
        <link refid="classoptions"/>
        <childnode refid="2383" relation="usage">
          <edgelabel>s_instance</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" line="16" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/options.hpp" bodystart="15" bodyend="101"/>
    <listofallmembers>
      <member refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" prot="public" virt="non-virtual"><scope>options</scope><name>get</name></member>
      <member refid="classoptions_1a99aa190102de33e2aed39723929f9fad" prot="public" virt="non-virtual"><scope>options</scope><name>get_bool</name></member>
      <member refid="classoptions_1a9ce5a1af62eeb42a88a1b47f5891e247" prot="public" virt="non-virtual"><scope>options</scope><name>get_bool</name></member>
      <member refid="classoptions_1a0e8ff0d44b9192754451f9dcd47cd559" prot="public" virt="non-virtual"><scope>options</scope><name>get_double</name></member>
      <member refid="classoptions_1aa78e7d95dc59a2d25987546cdbab7872" prot="public" virt="non-virtual"><scope>options</scope><name>get_double</name></member>
      <member refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" prot="public" virt="non-virtual"><scope>options</scope><name>get_float</name></member>
      <member refid="classoptions_1a113445829763eaa7b86cdc40c2d66e25" prot="public" virt="non-virtual"><scope>options</scope><name>get_float</name></member>
      <member refid="classoptions_1a797bc1915004bdbc34c5eea3fe488952" prot="public" virt="non-virtual"><scope>options</scope><name>get_int</name></member>
      <member refid="classoptions_1a0a17d018f4b64f85091f3ec21de029f0" prot="public" virt="non-virtual"><scope>options</scope><name>get_int</name></member>
      <member refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" prot="public" virt="non-virtual"><scope>options</scope><name>get_string</name></member>
      <member refid="classoptions_1ae03327a8846e4acb3986b5a6d79b3790" prot="public" virt="non-virtual"><scope>options</scope><name>get_string</name></member>
      <member refid="classoptions_1aafb1d2a7ccde0b1bf786230ba4080ecd" prot="public" virt="non-virtual"><scope>options</scope><name>has_bool</name></member>
      <member refid="classoptions_1ab66aae6c79cdde8dd38d0d3fc8aa3de5" prot="public" virt="non-virtual"><scope>options</scope><name>has_double</name></member>
      <member refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" prot="public" virt="non-virtual"><scope>options</scope><name>has_float</name></member>
      <member refid="classoptions_1a01020aa5bd82bcff1b1c950b20578883" prot="public" virt="non-virtual"><scope>options</scope><name>has_int</name></member>
      <member refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" prot="public" virt="non-virtual"><scope>options</scope><name>has_string</name></member>
      <member refid="classoptions_1a6d909eacd89dee5f0b153430985f9822" prot="public" virt="non-virtual"><scope>options</scope><name>init</name></member>
      <member refid="classoptions_1a5df2188c2d1bb81cbebef4b2e80a926f" prot="private" virt="non-virtual"><scope>options</scope><name>m_argc</name></member>
      <member refid="classoptions_1a376f7dcfec6a2ff75835c3c3d732bdea" prot="private" virt="non-virtual"><scope>options</scope><name>m_argv</name></member>
      <member refid="classoptions_1a64ad628e508d5d71a117909e44f68350" prot="private" virt="non-virtual"><scope>options</scope><name>m_cmd_line</name></member>
      <member refid="classoptions_1a99183ba43c8d7b35dbfa1bea0f43db48" prot="private" virt="non-virtual"><scope>options</scope><name>m_has_opt</name></member>
      <member refid="classoptions_1ac73507ca925d98ee5ff6f04937dff5c3" prot="private" virt="non-virtual"><scope>options</scope><name>m_opts</name></member>
      <member refid="classoptions_1a441540f2a8990edaa17fe95b013f9168" prot="private" virt="non-virtual"><scope>options</scope><name>m_parse_cmd_line</name></member>
      <member refid="classoptions_1abeab2c3e2cf5c1809e09601a3835d967" prot="private" virt="non-virtual"><scope>options</scope><name>m_parse_file</name></member>
      <member refid="classoptions_1a3171bb61cdfcc5a6a899ad6fe9b56f9d" prot="private" virt="non-virtual"><scope>options</scope><name>m_rank</name></member>
      <member refid="classoptions_1a0eebdb8dbce454720ef9251fcd7abf24" prot="private" virt="non-virtual"><scope>options</scope><name>m_test_double</name></member>
      <member refid="classoptions_1ad9b4461e633b73acc2fde7752ef60d41" prot="private" virt="non-virtual"><scope>options</scope><name>m_test_int</name></member>
      <member refid="classoptions_1a8286a8617eec86a3d4cf678bd17739ba" prot="private" virt="non-virtual"><scope>options</scope><name>m_test_string</name></member>
      <member refid="classoptions_1ad3323d598a23707733c16be8a575c270" prot="private" virt="non-virtual"><scope>options</scope><name>operator=</name></member>
      <member refid="classoptions_1a41a256b4ba3b2d68a2d72b9245aa0c4d" prot="private" virt="non-virtual"><scope>options</scope><name>options</name></member>
      <member refid="classoptions_1a561b67397b31bd4ec2c058ad54ab2daa" prot="private" virt="non-virtual"><scope>options</scope><name>options</name></member>
      <member refid="classoptions_1a6fd8a97883eaecb722e5c6b120d8f9be" prot="public" virt="non-virtual"><scope>options</scope><name>print</name></member>
      <member refid="classoptions_1ab10ed8295e9333b025619195d156a9ed" prot="private" virt="non-virtual"><scope>options</scope><name>s_instance</name></member>
      <member refid="classoptions_1a3c23831e4218f9a88cddc81337518046" prot="public" virt="non-virtual"><scope>options</scope><name>set_option</name></member>
      <member refid="classoptions_1ad2b98890aee35b50534117b34617a43f" prot="public" virt="non-virtual"><scope>options</scope><name>set_option</name></member>
      <member refid="classoptions_1a6f76ed6506014e816802739221cfbc20" prot="public" virt="non-virtual"><scope>options</scope><name>set_option</name></member>
      <member refid="classoptions_1a076c522b99fc0816c695c7405e1ae9b9" prot="public" virt="non-virtual"><scope>options</scope><name>set_option</name></member>
      <member refid="classoptions_1a42eb183c3fd8156c226559663893bb92" prot="public" virt="non-virtual"><scope>options</scope><name>set_option</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
