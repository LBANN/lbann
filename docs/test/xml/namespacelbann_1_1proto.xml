<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacelbann_1_1proto" kind="namespace" language="C++">
    <compoundname>lbann::proto</compoundname>
    <innernamespace refid="namespacelbann_1_1proto_1_1anonymous__namespace_02callback__factory_8cpp_03">lbann::proto::anonymous_namespace{callback_factory.cpp}</innernamespace>
    <innernamespace refid="namespacelbann_1_1proto_1_1anonymous__namespace_02layer__graph__factory_8cpp_03">lbann::proto::anonymous_namespace{layer_graph_factory.cpp}</innernamespace>
    <innernamespace refid="namespacelbann_1_1proto_1_1anonymous__namespace_02model__factory_8cpp_03">lbann::proto::anonymous_namespace{model_factory.cpp}</innernamespace>
    <innernamespace refid="namespacelbann_1_1proto_1_1anonymous__namespace_02weights__factory_8cpp_03">lbann::proto::anonymous_namespace{weights_factory.cpp}</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacelbann_1_1proto_1a00597c8b7450c389847980cf6934a619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1lbann__callback" kindref="compound">lbann_callback</ref> *</type>
        <definition>lbann_callback * lbann::proto::construct_callback</definition>
        <argsstring>(lbann_comm *comm, const lbann_data::Callback &amp;proto_cb, std::map&lt; execution_mode, generic_data_reader *&gt; &amp;data_readers, std::vector&lt; Layer *&gt; layer_list, std::vector&lt; weights *&gt; weights_list, lbann_summary *summarizer)</argsstring>
        <name>construct_callback</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>const lbann_data::Callback &amp;</type>
          <declname>proto_cb</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>, <ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> * &gt; &amp;</type>
          <declname>data_readers</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> * &gt;</type>
          <declname>layer_list</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> * &gt;</type>
          <declname>weights_list</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref> *</type>
          <declname>summarizer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a callback specified with prototext. </para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000004"><xreftitle>Todo</xreftitle><xrefdescription></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000005"><xreftitle>Todo</xreftitle><xrefdescription><para>Initialize weights </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp" line="54" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp" bodystart="54" bodyend="312"/>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" compoundref="base_8hpp" startline="154">LBANN_ERROR</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <referencedby refid="namespacelbann_1_1proto_1a6c051439c9c5cbbfb1a2387d5a3fc902" compoundref="model__factory_8cpp" startline="154" endline="203">construct_model</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1proto_1abf0988db9cd58f9ef013588b440c14bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref> *</type>
        <definition>lbann_summary * lbann::proto::construct_summarizer</definition>
        <argsstring>(lbann_comm *comm, const lbann_data::Model &amp;m)</argsstring>
        <name>construct_summarizer</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>const lbann_data::Model &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a summarizer specified with prototext. The summarizer is only constructed if the summarizer callback is enabled. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp" line="314" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp" bodystart="314" bodyend="340"/>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <referencedby refid="namespacelbann_1_1proto_1a6c051439c9c5cbbfb1a2387d5a3fc902" compoundref="model__factory_8cpp" startline="154" endline="203">construct_model</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1proto_1a7e4b0a66836712b1713ae4a121453cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08db" kindref="member">data_layout</ref></type>
            <declname>layout</declname>
            <defname>layout</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer * lbann::proto::construct_layer</definition>
        <argsstring>(lbann_comm *comm, std::map&lt; execution_mode, generic_data_reader *&gt; &amp;data_readers, int num_parallel_readers, cudnn::cudnn_manager *cudnn, const lbann_data::Layer &amp;proto_layer)</argsstring>
        <name>construct_layer</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>, <ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> * &gt; &amp;</type>
          <declname>data_readers</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_parallel_readers</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref> *</type>
          <declname>cudnn</declname>
        </param>
        <param>
          <type>const lbann_data::Layer &amp;</type>
          <declname>proto_layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a layer specified with prototext. </para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000006"><xreftitle>Todo</xreftitle><xrefdescription><para>Support for GPU model-parallel layers </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp" line="33" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp" bodystart="33" bodyend="374"/>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0">MODEL_PARALLEL</references>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <references refid="classlbann_1_1generic__input__layer_1a9dfe8b9afaebc7a5bcb0177ee2ab428f" compoundref="generic__input__layer_8hpp" startline="42">lbann::generic_input_layer::io_buffer</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1generic__target__layer_1a26376bcc04f9c8ec35ff99bd71de43d9" compoundref="generic__target__layer_8hpp" startline="262" endline="264">lbann::generic_target_layer::get_linearized_data_size</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638">DATA_PARALLEL</references>
        <references refid="base_8hpp_1ac47a6ee5278a53898222a48639a2bf39afedb2d84cafe20862cb4399751a8a7e3">invalid</references>
        <references refid="base_8hpp_1ac47a6ee5278a53898222a48639a2bf39a2ffe4e77325d9a7152f7086ea7aa5114">max</references>
        <references refid="base_8hpp_1ac47a6ee5278a53898222a48639a2bf39a6927a3a7218a3195858411433ec20a21">average</references>
        <references refid="base_8hpp_1ac47a6ee5278a53898222a48639a2bf39ad91c68878ae16f6dfcd4e1551c33cdd1">average_no_pad</references>
        <references refid="namespacelbann_1a5975e1fb530a267728bfb01dc5c1be9baccc0377a8afbf50e7094f5c23a8af223">lbann::INVALID</references>
        <references refid="namespacelbann_1a5975e1fb530a267728bfb01dc5c1be9ba6970bdc2201030b9c03fbdcf3973858a">lbann::SUM</references>
        <references refid="namespacelbann_1a5975e1fb530a267728bfb01dc5c1be9ba16de38737a9f8366e9b2042b4e9b6290">lbann::AVERAGE</references>
        <references refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" compoundref="base_8hpp" startline="154">LBANN_ERROR</references>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1proto_1a258c17f551e470e3bcab9f5fa7cf0950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>template Layer* lbann::proto::construct_layer&lt; data_layout::DATA_PARALLEL &gt;</definition>
        <argsstring>(lbann_comm *comm, std::map&lt; execution_mode, generic_data_reader *&gt; &amp;data_readers, int num_parallel_readers, cudnn::cudnn_manager *cudnn, const lbann_data::Layer &amp;proto_layer)</argsstring>
        <name>construct_layer&lt; data_layout::DATA_PARALLEL &gt;</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>, <ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *&gt; &amp;</type>
          <declname>data_readers</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_parallel_readers</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref> *</type>
          <declname>cudnn</declname>
        </param>
        <param>
          <type>const lbann_data::Layer &amp;</type>
          <declname>proto_layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp" line="377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1proto_1a36c1ccd8022c3a9708ea8e17f8ec2ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>template Layer* lbann::proto::construct_layer&lt; data_layout::MODEL_PARALLEL &gt;</definition>
        <argsstring>(lbann_comm *comm, std::map&lt; execution_mode, generic_data_reader *&gt; &amp;data_readers, int num_parallel_readers, cudnn::cudnn_manager *cudnn, const lbann_data::Layer &amp;proto_layer)</argsstring>
        <name>construct_layer&lt; data_layout::MODEL_PARALLEL &gt;</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>, <ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *&gt; &amp;</type>
          <declname>data_readers</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_parallel_readers</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref> *</type>
          <declname>cudnn</declname>
        </param>
        <param>
          <type>const lbann_data::Layer &amp;</type>
          <declname>proto_layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1proto_1a99e65cd4abb769d020ab76ff20c39d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> * &gt;</type>
        <definition>std::vector&lt; Layer * &gt; lbann::proto::construct_layer_graph</definition>
        <argsstring>(lbann_comm *comm, std::map&lt; execution_mode, generic_data_reader *&gt; &amp;data_readers, cudnn::cudnn_manager *cudnn, const lbann_data::Model &amp;proto_model)</argsstring>
        <name>construct_layer_graph</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>, <ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> * &gt; &amp;</type>
          <declname>data_readers</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref> *</type>
          <declname>cudnn</declname>
        </param>
        <param>
          <type>const lbann_data::Model &amp;</type>
          <declname>proto_model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a layer graph specified with a prototext. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_graph_factory.cpp" line="156" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_graph_factory.cpp" bodystart="156" bodyend="260"/>
        <references refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" compoundref="base_8hpp" startline="154">LBANN_ERROR</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbafedb2d84cafe20862cb4399751a8a7e3">invalid</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638">DATA_PARALLEL</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0">MODEL_PARALLEL</references>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <references refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">lbann::Layer::set_name</references>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">lbann::Layer::get_name</references>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <references refid="classlbann_1_1Layer_1ad55c455dbae0d082cedfa68511709aae" compoundref="layer_8cpp" startline="478" endline="483">lbann::Layer::freeze</references>
        <references refid="namespacelbann_1_1proto_1_1anonymous__namespace_02layer__graph__factory_8cpp_03_1abbebb0b2e6ba1befb14b0b790eac96a0" compoundref="layer__graph__factory_8cpp" startline="35" endline="61">lbann::proto::anonymous_namespace{layer_graph_factory.cpp}::setup_parents_and_children</references>
        <references refid="namespacelbann_1_1proto_1_1anonymous__namespace_02layer__graph__factory_8cpp_03_1a049fcca970d819d3c08bfdf71883de5c" compoundref="layer__graph__factory_8cpp" startline="64" endline="96">lbann::proto::anonymous_namespace{layer_graph_factory.cpp}::setup_target_pointers</references>
        <references refid="namespacelbann_1_1proto_1_1anonymous__namespace_02layer__graph__factory_8cpp_03_1ac0c3ac49d16d6926308c336149a2f039" compoundref="layer__graph__factory_8cpp" startline="99" endline="129">lbann::proto::anonymous_namespace{layer_graph_factory.cpp}::setup_reconstruction_pointers</references>
        <references refid="namespacelbann_1_1proto_1_1anonymous__namespace_02layer__graph__factory_8cpp_03_1a68f963a80592c01832cacf2acd4bacc1" compoundref="layer__graph__factory_8cpp" startline="132" endline="152">lbann::proto::anonymous_namespace{layer_graph_factory.cpp}::setup_unpooling_pointers</references>
        <referencedby refid="namespacelbann_1_1proto_1a6c051439c9c5cbbfb1a2387d5a3fc902" compoundref="model__factory_8cpp" startline="154" endline="203">construct_model</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1proto_1a5b2f4094ce02245e778cfd2fa254d7b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1metric" kindref="compound">metric</ref> *</type>
        <definition>metric * lbann::proto::construct_metric</definition>
        <argsstring>(lbann_comm *comm, const lbann_data::Metric &amp;proto_metric)</argsstring>
        <name>construct_metric</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>const lbann_data::Metric &amp;</type>
          <declname>proto_metric</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a metric specified with prototext. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/metric_factory.cpp" line="32" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/metric_factory.cpp" bodystart="32" bodyend="68"/>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <referencedby refid="namespacelbann_1_1proto_1a6c051439c9c5cbbfb1a2387d5a3fc902" compoundref="model__factory_8cpp" startline="154" endline="203">construct_model</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1proto_1a6c051439c9c5cbbfb1a2387d5a3fc902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
        <definition>model * lbann::proto::construct_model</definition>
        <argsstring>(lbann_comm *comm, cudnn::cudnn_manager *cudnn, std::map&lt; execution_mode, generic_data_reader *&gt; &amp;data_readers, const lbann_data::Optimizer &amp;proto_opt, const lbann_data::Model &amp;proto_model)</argsstring>
        <name>construct_model</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref> *</type>
          <declname>cudnn</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>, <ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> * &gt; &amp;</type>
          <declname>data_readers</declname>
        </param>
        <param>
          <type>const lbann_data::Optimizer &amp;</type>
          <declname>proto_opt</declname>
        </param>
        <param>
          <type>const lbann_data::Model &amp;</type>
          <declname>proto_model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a model specified with a prototext. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/model_factory.cpp" line="154" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/model_factory.cpp" bodystart="154" bodyend="203"/>
        <references refid="namespacelbann_1_1proto_1a99e65cd4abb769d020ab76ff20c39d0b" compoundref="layer__graph__factory_8cpp" startline="156" endline="260">construct_layer_graph</references>
        <references refid="namespacelbann_1_1proto_1a2b55ede441a057291e047cf4e7352481" compoundref="objective__function__factory_8cpp" startline="32" endline="104">construct_objective_function</references>
        <references refid="namespacelbann_1_1proto_1_1anonymous__namespace_02model__factory_8cpp_03_1a3406a809935f319486cf8fd017b58417" compoundref="model__factory_8cpp" startline="78" endline="116">lbann::proto::anonymous_namespace{model_factory.cpp}::assign_layers_to_objective_function</references>
        <references refid="namespacelbann_1_1proto_1_1anonymous__namespace_02model__factory_8cpp_03_1a6a08f0b26d015824ef28ddbb66b6d4c0" compoundref="model__factory_8cpp" startline="36" endline="76">lbann::proto::anonymous_namespace{model_factory.cpp}::instantiate_model</references>
        <references refid="namespacelbann_1_1proto_1a1e95259d3e7fd20a9c361850940a398a" compoundref="weights__factory_8cpp" startline="83" endline="114">construct_weights</references>
        <references refid="namespacelbann_1_1proto_1_1anonymous__namespace_02model__factory_8cpp_03_1a19d0eaf0259647155039ed45eb980b05" compoundref="model__factory_8cpp" startline="119" endline="150">lbann::proto::anonymous_namespace{model_factory.cpp}::assign_weights_to_layers</references>
        <references refid="namespacelbann_1_1proto_1a5b2f4094ce02245e778cfd2fa254d7b4" compoundref="metric__factory_8cpp" startline="32" endline="68">construct_metric</references>
        <references refid="namespacelbann_1_1proto_1abf0988db9cd58f9ef013588b440c14bd" compoundref="callback__factory_8cpp" startline="314" endline="340">construct_summarizer</references>
        <references refid="namespacelbann_1_1proto_1a00597c8b7450c389847980cf6934a619" compoundref="callback__factory_8cpp" startline="54" endline="312">construct_callback</references>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1proto_1a2b55ede441a057291e047cf4e7352481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1objective__function" kindref="compound">objective_function</ref> *</type>
        <definition>objective_function * lbann::proto::construct_objective_function</definition>
        <argsstring>(const lbann_data::ObjectiveFunction &amp;proto_obj)</argsstring>
        <name>construct_objective_function</name>
        <param>
          <type>const lbann_data::ObjectiveFunction &amp;</type>
          <declname>proto_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct an objective function specified with prototext. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/objective_function_factory.cpp" line="32" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/objective_function_factory.cpp" bodystart="32" bodyend="104"/>
        <references refid="classlbann_1_1objective__function_1a98ba95d702f542ed99ccbf9e5cdde21d" compoundref="objective__function_8hpp" startline="55" endline="55">lbann::objective_function::add_term</references>
        <referencedby refid="namespacelbann_1_1proto_1a6c051439c9c5cbbfb1a2387d5a3fc902" compoundref="model__factory_8cpp" startline="154" endline="203">construct_model</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1proto_1af85d2b9f1e986bbab4feccfaa19c9960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref> *</type>
        <definition>optimizer * lbann::proto::construct_optimizer</definition>
        <argsstring>(lbann_comm *comm, const lbann_data::Optimizer &amp;proto_opt)</argsstring>
        <name>construct_optimizer</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>const lbann_data::Optimizer &amp;</type>
          <declname>proto_opt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct an optimizer specified with prototext. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/optimizer_factory.cpp" line="32" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/optimizer_factory.cpp" bodystart="32" bodyend="83"/>
        <referencedby refid="namespacelbann_1_1proto_1_1anonymous__namespace_02model__factory_8cpp_03_1a6a08f0b26d015824ef28ddbb66b6d4c0" compoundref="model__factory_8cpp" startline="36" endline="76">lbann::proto::anonymous_namespace{model_factory.cpp}::instantiate_model</referencedby>
        <referencedby refid="namespacelbann_1_1proto_1a1e95259d3e7fd20a9c361850940a398a" compoundref="weights__factory_8cpp" startline="83" endline="114">construct_weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1proto_1a1e95259d3e7fd20a9c361850940a398a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1weights" kindref="compound">weights</ref> *</type>
        <definition>weights * lbann::proto::construct_weights</definition>
        <argsstring>(lbann_comm *comm, cudnn::cudnn_manager *cudnn, const lbann_data::Optimizer &amp;proto_opt, const lbann_data::Weights &amp;proto_weights)</argsstring>
        <name>construct_weights</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref> *</type>
          <declname>cudnn</declname>
        </param>
        <param>
          <type>const lbann_data::Optimizer &amp;</type>
          <declname>proto_opt</declname>
        </param>
        <param>
          <type>const lbann_data::Weights &amp;</type>
          <declname>proto_weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct weights specified with prototext. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/weights_factory.cpp" line="83" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/weights_factory.cpp" bodystart="83" bodyend="114"/>
        <references refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" compoundref="base_8hpp" startline="154">LBANN_ERROR</references>
        <references refid="classlbann_1_1weights_1ab886e4d3ff62b62a7ac6c52e391666f2" compoundref="weights_8hpp" startline="72" endline="72">lbann::weights::set_name</references>
        <references refid="classlbann_1_1weights_1a71e56d32d8e9c0e3ddf0ec2d0cd3924d" compoundref="weights_8cpp" startline="260" endline="263">lbann::weights::set_initializer</references>
        <references refid="namespacelbann_1_1proto_1_1anonymous__namespace_02weights__factory_8cpp_03_1a2bbaafd93915c6f2334e16f0afcd4ee5" compoundref="weights__factory_8cpp" startline="35" endline="79">lbann::proto::anonymous_namespace{weights_factory.cpp}::construct_initializer</references>
        <references refid="classlbann_1_1weights_1ab641f66c09c8b5d491c0f262e8cb55e6" compoundref="weights_8cpp" startline="265" endline="268">lbann::weights::set_optimizer</references>
        <references refid="namespacelbann_1_1proto_1af85d2b9f1e986bbab4feccfaa19c9960" compoundref="optimizer__factory_8cpp" startline="32" endline="83">construct_optimizer</references>
        <referencedby refid="namespacelbann_1_1proto_1a6c051439c9c5cbbfb1a2387d5a3fc902" compoundref="model__factory_8cpp" startline="154" endline="203">construct_model</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1proto_1a6c6742da9015768123b7cddd74d17399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>std::string</defval>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; lbann::proto::parse_list</definition>
        <argsstring>(std::string str)</argsstring>
        <name>parse_list</name>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse a space-separated list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/factories.hpp" line="90" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/factories.hpp" bodystart="90" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp" line="30" column="1"/>
  </compounddef>
</doxygen>
