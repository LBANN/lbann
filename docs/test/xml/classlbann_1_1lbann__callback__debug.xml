<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1lbann__callback__debug" kind="class" language="C++" prot="public">
    <compoundname>lbann::lbann_callback_debug</compoundname>
    <basecompoundref refid="classlbann_1_1lbann__callback" prot="public" virt="non-virtual">lbann::lbann_callback</basecompoundref>
    <includes refid="callback__debug_8hpp" local="no">callback_debug.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlbann_1_1lbann__callback__debug_1acc66ab699534e42aa958148f1fb3fd6f" prot="private" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
        <definition>execution_mode lbann::lbann_callback_debug::m_debug_phase</definition>
        <argsstring></argsstring>
        <name>m_debug_phase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The phase to debug. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="82" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" bodystart="82" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1abab8f3b9c1db3d0ef3a715afc7b880db" compoundref="callback__debug_8cpp" startline="31" endline="35">on_batch_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac3e88ef582a7e3949b6e016ca2b17459" compoundref="callback__debug_8cpp" startline="37" endline="41">on_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1acb3d05be6c600f4d61957ccf10606ddc" compoundref="callback__debug_8cpp" startline="43" endline="47">on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1adaf60c995d2638a40d9c87a923c53865" compoundref="callback__debug_8cpp" startline="49" endline="53">on_backward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19a8ec63f55fc86024c9ab8fe0836500" compoundref="callback__debug_8cpp" startline="55" endline="59">on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac364fb6e77dc163e146af77bb670d74b" compoundref="callback__debug_8cpp" startline="64" endline="79">on_batch_evaluate_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a07a02eb525ebe9c06b361c48fc2977c8" compoundref="callback__debug_8cpp" startline="81" endline="96">on_batch_evaluate_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a83fe16882119a54afe59ba616fe1722a" compoundref="callback__debug_8cpp" startline="98" endline="113">on_evaluate_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19639823e288e7599947c0abfaa6d1f4" compoundref="callback__debug_8cpp" startline="115" endline="130">on_evaluate_forward_prop_end</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1a775f2f407573526795a9b7ffc7bd3ded" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_callback_debug::lbann_callback_debug</definition>
        <argsstring>(execution_mode phase=execution_mode::invalid, lbann_summary *summarizer=nullptr)</argsstring>
        <name>lbann_callback_debug</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>phase</declname>
          <defval><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8afedb2d84cafe20862cb4399751a8a7e3" kindref="member">execution_mode::invalid</ref></defval>
        </param>
        <param>
          <type><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref> *</type>
          <declname>summarizer</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Debug a particular phase; use invalid to debug every phase. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="53" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" bodystart="53" bodyend="55"/>
        <references refid="classlbann_1_1lbann__callback__debug_1ad30a57ba6ec0b7e479345647651a8e83">operator=</references>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a76ffcfb7aca5ccce132ceae60e267472" compoundref="callback__debug_8hpp" startline="59" endline="59">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1a124703602aab20bcfabfca697e3a9ff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_callback_debug::lbann_callback_debug</definition>
        <argsstring>(const lbann_callback_debug &amp;)=default</argsstring>
        <name>lbann_callback_debug</name>
        <param>
          <type>const <ref refid="classlbann_1_1lbann__callback__debug" kindref="compound">lbann_callback_debug</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1ad30a57ba6ec0b7e479345647651a8e83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1lbann__callback__debug" kindref="compound">lbann_callback_debug</ref> &amp;</type>
        <definition>lbann_callback_debug&amp; lbann::lbann_callback_debug::operator=</definition>
        <argsstring>(const lbann_callback_debug &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1lbann__callback__debug" kindref="compound">lbann_callback_debug</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="57" column="1"/>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a775f2f407573526795a9b7ffc7bd3ded" compoundref="callback__debug_8hpp" startline="53" endline="55">lbann_callback_debug</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1a76ffcfb7aca5ccce132ceae60e267472" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1lbann__callback__debug" kindref="compound">lbann_callback_debug</ref> *</type>
        <definition>lbann_callback_debug* lbann::lbann_callback_debug::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a9f545d1269a8c7af335625d049691f26">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="59" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" bodystart="59" bodyend="59"/>
        <references refid="classlbann_1_1lbann__callback__debug_1a775f2f407573526795a9b7ffc7bd3ded" compoundref="callback__debug_8hpp" startline="53" endline="55">lbann_callback_debug</references>
        <references refid="classlbann_1_1lbann__callback__debug_1abab8f3b9c1db3d0ef3a715afc7b880db" compoundref="callback__debug_8cpp" startline="31" endline="35">on_batch_begin</references>
        <references refid="classlbann_1_1lbann__callback__debug_1ac3e88ef582a7e3949b6e016ca2b17459" compoundref="callback__debug_8cpp" startline="37" endline="41">on_forward_prop_begin</references>
        <references refid="classlbann_1_1lbann__callback__debug_1acb3d05be6c600f4d61957ccf10606ddc" compoundref="callback__debug_8cpp" startline="43" endline="47">on_forward_prop_end</references>
        <references refid="classlbann_1_1lbann__callback__debug_1adaf60c995d2638a40d9c87a923c53865" compoundref="callback__debug_8cpp" startline="49" endline="53">on_backward_prop_begin</references>
        <references refid="classlbann_1_1lbann__callback__debug_1a19a8ec63f55fc86024c9ab8fe0836500" compoundref="callback__debug_8cpp" startline="55" endline="59">on_backward_prop_end</references>
        <references refid="classlbann_1_1lbann__callback__debug_1ac364fb6e77dc163e146af77bb670d74b" compoundref="callback__debug_8cpp" startline="64" endline="79">on_batch_evaluate_begin</references>
        <references refid="classlbann_1_1lbann__callback__debug_1a07a02eb525ebe9c06b361c48fc2977c8" compoundref="callback__debug_8cpp" startline="81" endline="96">on_batch_evaluate_end</references>
        <references refid="classlbann_1_1lbann__callback__debug_1a83fe16882119a54afe59ba616fe1722a" compoundref="callback__debug_8cpp" startline="98" endline="113">on_evaluate_forward_prop_begin</references>
        <references refid="classlbann_1_1lbann__callback__debug_1a19639823e288e7599947c0abfaa6d1f4" compoundref="callback__debug_8cpp" startline="115" endline="130">on_evaluate_forward_prop_end</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1abab8f3b9c1db3d0ef3a715afc7b880db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_debug::on_batch_begin</definition>
        <argsstring>(model *m) override</argsstring>
        <name>on_batch_begin</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a9ecf4e44cd4021cdd687de14c850cc83">on_batch_begin</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print that a batch is being started. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="61" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_debug.cpp" bodystart="31" bodyend="35"/>
        <references refid="classlbann_1_1lbann__callback__debug_1acc66ab699534e42aa958148f1fb3fd6f" compoundref="callback__debug_8hpp" startline="82">m_debug_phase</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8afedb2d84cafe20862cb4399751a8a7e3">invalid</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="base_8hpp_1adeeaddd10bd31df0cae7cb0fcae45d5c" compoundref="base_8hpp" startline="88" endline="103">_to_string</references>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a76ffcfb7aca5ccce132ceae60e267472" compoundref="callback__debug_8hpp" startline="59" endline="59">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1ac3e88ef582a7e3949b6e016ca2b17459" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_debug::on_forward_prop_begin</definition>
        <argsstring>(model *m, Layer *l) override</argsstring>
        <name>on_forward_prop_begin</name>
        <reimplements refid="classlbann_1_1lbann__callback_1ab96adb1d77180e00fdd668cd381323fd">on_forward_prop_begin</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print that forward prop for a layer is beginning. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="63" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_debug.cpp" bodystart="37" bodyend="41"/>
        <references refid="classlbann_1_1lbann__callback__debug_1acc66ab699534e42aa958148f1fb3fd6f" compoundref="callback__debug_8hpp" startline="82">m_debug_phase</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8afedb2d84cafe20862cb4399751a8a7e3">invalid</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" compoundref="model_8hpp" startline="123" endline="125">lbann::model::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" compoundref="comm_8hpp" startline="112" endline="114">lbann::lbann_comm::get_model_rank</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" compoundref="model_8hpp" startline="128" endline="130">lbann::model::get_cur_epoch</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">lbann::model::get_cur_step</references>
        <references refid="base_8hpp_1adeeaddd10bd31df0cae7cb0fcae45d5c" compoundref="base_8hpp" startline="88" endline="103">_to_string</references>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">lbann::Layer::get_name</references>
        <references refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239">lbann::Layer::get_type</references>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a76ffcfb7aca5ccce132ceae60e267472" compoundref="callback__debug_8hpp" startline="59" endline="59">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1acb3d05be6c600f4d61957ccf10606ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_debug::on_forward_prop_end</definition>
        <argsstring>(model *m, Layer *l) override</argsstring>
        <name>on_forward_prop_end</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a5eff0a59fbce98a981d9cdd0547a3ad5">on_forward_prop_end</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print that forward prop for a layer has completed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="65" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_debug.cpp" bodystart="43" bodyend="47"/>
        <references refid="classlbann_1_1lbann__callback__debug_1acc66ab699534e42aa958148f1fb3fd6f" compoundref="callback__debug_8hpp" startline="82">m_debug_phase</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8afedb2d84cafe20862cb4399751a8a7e3">invalid</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" compoundref="model_8hpp" startline="123" endline="125">lbann::model::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" compoundref="comm_8hpp" startline="112" endline="114">lbann::lbann_comm::get_model_rank</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" compoundref="model_8hpp" startline="128" endline="130">lbann::model::get_cur_epoch</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">lbann::model::get_cur_step</references>
        <references refid="base_8hpp_1adeeaddd10bd31df0cae7cb0fcae45d5c" compoundref="base_8hpp" startline="88" endline="103">_to_string</references>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">lbann::Layer::get_name</references>
        <references refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239">lbann::Layer::get_type</references>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a76ffcfb7aca5ccce132ceae60e267472" compoundref="callback__debug_8hpp" startline="59" endline="59">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1adaf60c995d2638a40d9c87a923c53865" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_debug::on_backward_prop_begin</definition>
        <argsstring>(model *m, Layer *l) override</argsstring>
        <name>on_backward_prop_begin</name>
        <reimplements refid="classlbann_1_1lbann__callback_1abeb1e486e259fd358332abf1e952f630">on_backward_prop_begin</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print that backward prop for a layer is beginning. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="67" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_debug.cpp" bodystart="49" bodyend="53"/>
        <references refid="classlbann_1_1lbann__callback__debug_1acc66ab699534e42aa958148f1fb3fd6f" compoundref="callback__debug_8hpp" startline="82">m_debug_phase</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8afedb2d84cafe20862cb4399751a8a7e3">invalid</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" compoundref="model_8hpp" startline="123" endline="125">lbann::model::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" compoundref="comm_8hpp" startline="112" endline="114">lbann::lbann_comm::get_model_rank</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" compoundref="model_8hpp" startline="128" endline="130">lbann::model::get_cur_epoch</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">lbann::model::get_cur_step</references>
        <references refid="base_8hpp_1adeeaddd10bd31df0cae7cb0fcae45d5c" compoundref="base_8hpp" startline="88" endline="103">_to_string</references>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">lbann::Layer::get_name</references>
        <references refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239">lbann::Layer::get_type</references>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a76ffcfb7aca5ccce132ceae60e267472" compoundref="callback__debug_8hpp" startline="59" endline="59">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1a19a8ec63f55fc86024c9ab8fe0836500" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_debug::on_backward_prop_end</definition>
        <argsstring>(model *m, Layer *l) override</argsstring>
        <name>on_backward_prop_end</name>
        <reimplements refid="classlbann_1_1lbann__callback_1aba03b59c056ace8094095c08e39b9ac4">on_backward_prop_end</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print that backward prop for a layer has completed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="69" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_debug.cpp" bodystart="55" bodyend="59"/>
        <references refid="classlbann_1_1lbann__callback__debug_1acc66ab699534e42aa958148f1fb3fd6f" compoundref="callback__debug_8hpp" startline="82">m_debug_phase</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8afedb2d84cafe20862cb4399751a8a7e3">invalid</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" compoundref="model_8hpp" startline="123" endline="125">lbann::model::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" compoundref="comm_8hpp" startline="112" endline="114">lbann::lbann_comm::get_model_rank</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" compoundref="model_8hpp" startline="128" endline="130">lbann::model::get_cur_epoch</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">lbann::model::get_cur_step</references>
        <references refid="base_8hpp_1adeeaddd10bd31df0cae7cb0fcae45d5c" compoundref="base_8hpp" startline="88" endline="103">_to_string</references>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">lbann::Layer::get_name</references>
        <references refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239">lbann::Layer::get_type</references>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a76ffcfb7aca5ccce132ceae60e267472" compoundref="callback__debug_8hpp" startline="59" endline="59">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1ac364fb6e77dc163e146af77bb670d74b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_debug::on_batch_evaluate_begin</definition>
        <argsstring>(model *m) override</argsstring>
        <name>on_batch_evaluate_begin</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a3462e54126adbd0082c22c98d8de5468">on_batch_evaluate_begin</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print that an evaluation batch is being started. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="72" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_debug.cpp" bodystart="64" bodyend="79"/>
        <references refid="classlbann_1_1lbann__callback__debug_1acc66ab699534e42aa958148f1fb3fd6f" compoundref="callback__debug_8hpp" startline="82">m_debug_phase</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8afedb2d84cafe20862cb4399751a8a7e3">invalid</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="classlbann_1_1model_1a680ef8ecf644dbc821b5e7488d3bd2c4" compoundref="model_8hpp" startline="137" endline="139">lbann::model::get_cur_validation_step</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <references refid="classlbann_1_1model_1a4040b1f06a2a5d5187a72c06060124c1" compoundref="model_8hpp" startline="141" endline="143">lbann::model::get_cur_testing_step</references>
        <references refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" compoundref="model_8hpp" startline="123" endline="125">lbann::model::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" compoundref="comm_8hpp" startline="112" endline="114">lbann::lbann_comm::get_model_rank</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="base_8hpp_1adeeaddd10bd31df0cae7cb0fcae45d5c" compoundref="base_8hpp" startline="88" endline="103">_to_string</references>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a76ffcfb7aca5ccce132ceae60e267472" compoundref="callback__debug_8hpp" startline="59" endline="59">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1a07a02eb525ebe9c06b361c48fc2977c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_debug::on_batch_evaluate_end</definition>
        <argsstring>(model *m) override</argsstring>
        <name>on_batch_evaluate_end</name>
        <reimplements refid="classlbann_1_1lbann__callback_1ad10891b8ab3de74ee1a70e6255e7d58a">on_batch_evaluate_end</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print that an evaluation batch has completed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="74" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_debug.cpp" bodystart="81" bodyend="96"/>
        <references refid="classlbann_1_1lbann__callback__debug_1acc66ab699534e42aa958148f1fb3fd6f" compoundref="callback__debug_8hpp" startline="82">m_debug_phase</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8afedb2d84cafe20862cb4399751a8a7e3">invalid</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="classlbann_1_1model_1a680ef8ecf644dbc821b5e7488d3bd2c4" compoundref="model_8hpp" startline="137" endline="139">lbann::model::get_cur_validation_step</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <references refid="classlbann_1_1model_1a4040b1f06a2a5d5187a72c06060124c1" compoundref="model_8hpp" startline="141" endline="143">lbann::model::get_cur_testing_step</references>
        <references refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" compoundref="model_8hpp" startline="123" endline="125">lbann::model::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" compoundref="comm_8hpp" startline="112" endline="114">lbann::lbann_comm::get_model_rank</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="base_8hpp_1adeeaddd10bd31df0cae7cb0fcae45d5c" compoundref="base_8hpp" startline="88" endline="103">_to_string</references>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a76ffcfb7aca5ccce132ceae60e267472" compoundref="callback__debug_8hpp" startline="59" endline="59">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1a83fe16882119a54afe59ba616fe1722a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_debug::on_evaluate_forward_prop_begin</definition>
        <argsstring>(model *m, Layer *l) override</argsstring>
        <name>on_evaluate_forward_prop_begin</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a044174864e4981a1dac093d58e8c4d6c">on_evaluate_forward_prop_begin</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print that an evaluation forward prop is beginning. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="76" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_debug.cpp" bodystart="98" bodyend="113"/>
        <references refid="classlbann_1_1lbann__callback__debug_1acc66ab699534e42aa958148f1fb3fd6f" compoundref="callback__debug_8hpp" startline="82">m_debug_phase</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8afedb2d84cafe20862cb4399751a8a7e3">invalid</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="classlbann_1_1model_1a680ef8ecf644dbc821b5e7488d3bd2c4" compoundref="model_8hpp" startline="137" endline="139">lbann::model::get_cur_validation_step</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <references refid="classlbann_1_1model_1a4040b1f06a2a5d5187a72c06060124c1" compoundref="model_8hpp" startline="141" endline="143">lbann::model::get_cur_testing_step</references>
        <references refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" compoundref="model_8hpp" startline="123" endline="125">lbann::model::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" compoundref="comm_8hpp" startline="112" endline="114">lbann::lbann_comm::get_model_rank</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="base_8hpp_1adeeaddd10bd31df0cae7cb0fcae45d5c" compoundref="base_8hpp" startline="88" endline="103">_to_string</references>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">lbann::Layer::get_name</references>
        <references refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239">lbann::Layer::get_type</references>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a76ffcfb7aca5ccce132ceae60e267472" compoundref="callback__debug_8hpp" startline="59" endline="59">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1a19639823e288e7599947c0abfaa6d1f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_debug::on_evaluate_forward_prop_end</definition>
        <argsstring>(model *m, Layer *l) override</argsstring>
        <name>on_evaluate_forward_prop_end</name>
        <reimplements refid="classlbann_1_1lbann__callback_1ae23c5a61b81dbdfbd79736ac2b6035aa">on_evaluate_forward_prop_end</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print that an evaluation forward prop has completed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="78" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_debug.cpp" bodystart="115" bodyend="130"/>
        <references refid="classlbann_1_1lbann__callback__debug_1acc66ab699534e42aa958148f1fb3fd6f" compoundref="callback__debug_8hpp" startline="82">m_debug_phase</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8afedb2d84cafe20862cb4399751a8a7e3">invalid</references>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="classlbann_1_1model_1a680ef8ecf644dbc821b5e7488d3bd2c4" compoundref="model_8hpp" startline="137" endline="139">lbann::model::get_cur_validation_step</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <references refid="classlbann_1_1model_1a4040b1f06a2a5d5187a72c06060124c1" compoundref="model_8hpp" startline="141" endline="143">lbann::model::get_cur_testing_step</references>
        <references refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" compoundref="model_8hpp" startline="123" endline="125">lbann::model::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" compoundref="comm_8hpp" startline="112" endline="114">lbann::lbann_comm::get_model_rank</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="base_8hpp_1adeeaddd10bd31df0cae7cb0fcae45d5c" compoundref="base_8hpp" startline="88" endline="103">_to_string</references>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">lbann::Layer::get_name</references>
        <references refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239">lbann::Layer::get_type</references>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a76ffcfb7aca5ccce132ceae60e267472" compoundref="callback__debug_8hpp" startline="59" endline="59">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__debug_1ae9e892671f4959cfc915e1662afd6d60" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::lbann_callback_debug::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a7522c7a14f1d6a1ea762cc2d7248eb3a">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return this callback&apos;s name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="79" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Print status updates on where training is. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1338">
        <label>lbann::lbann_callback</label>
        <link refid="classlbann_1_1lbann__callback"/>
      </node>
      <node id="1337">
        <label>lbann::lbann_callback_debug</label>
        <link refid="classlbann_1_1lbann__callback__debug"/>
        <childnode refid="1338" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1340">
        <label>lbann::lbann_callback</label>
        <link refid="classlbann_1_1lbann__callback"/>
        <childnode refid="1341" relation="usage">
          <edgelabel>m_summarizer</edgelabel>
        </childnode>
      </node>
      <node id="1341">
        <label>lbann::lbann_summary</label>
        <link refid="classlbann_1_1lbann__summary"/>
      </node>
      <node id="1339">
        <label>lbann::lbann_callback_debug</label>
        <link refid="classlbann_1_1lbann__callback__debug"/>
        <childnode refid="1340" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" line="41" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug.hpp" bodystart="41" bodyend="83"/>
    <listofallmembers>
      <member refid="classlbann_1_1lbann__callback__debug_1a76ffcfb7aca5ccce132ceae60e267472" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>copy</name></member>
      <member refid="classlbann_1_1lbann__callback_1acec888932129f93ba2a0077192467c9e" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_debug</scope><name>get_batch_interval</name></member>
      <member refid="classlbann_1_1lbann__callback_1a679057298a41ddd47f08c157f756c584" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_debug</scope><name>lbann_callback</name></member>
      <member refid="classlbann_1_1lbann__callback_1a91d994616b8bf98685ac32939228f96a" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_debug</scope><name>lbann_callback</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1a775f2f407573526795a9b7ffc7bd3ded" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_debug</scope><name>lbann_callback_debug</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1a124703602aab20bcfabfca697e3a9ff1" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_debug</scope><name>lbann_callback_debug</name></member>
      <member refid="classlbann_1_1lbann__callback_1a6126e310e9924398c18ccf76bb91c705" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_debug</scope><name>m_batch_interval</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1acc66ab699534e42aa958148f1fb3fd6f" prot="private" virt="non-virtual"><scope>lbann::lbann_callback_debug</scope><name>m_debug_phase</name></member>
      <member refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_debug</scope><name>m_summarizer</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1ae9e892671f4959cfc915e1662afd6d60" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>name</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1adaf60c995d2638a40d9c87a923c53865" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_backward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a2c0709a26179d115ff85b7561786ee27" prot="public" virt="virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_debug</scope><name>on_backward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1a19a8ec63f55fc86024c9ab8fe0836500" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_backward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1af183624e63ba65e0003fa988f53dee0c" prot="public" virt="virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_debug</scope><name>on_backward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1abab8f3b9c1db3d0ef3a715afc7b880db" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_batch_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a895ca577e358601fcae5c04749f60535" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_batch_end</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1ac364fb6e77dc163e146af77bb670d74b" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_batch_evaluate_begin</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1a07a02eb525ebe9c06b361c48fc2977c8" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_batch_evaluate_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4ed9498763412a55953fff71ee3a9456" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_epoch_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a1fc71110e7f754bf73c9e0f344a448a5" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_epoch_end</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1a83fe16882119a54afe59ba616fe1722a" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_evaluate_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4a2cff48a688bb56ed14b8b53344f945" prot="public" virt="virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_debug</scope><name>on_evaluate_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1a19639823e288e7599947c0abfaa6d1f4" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_evaluate_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a0794f3fb88db6fef53f0e2f235f94424" prot="public" virt="virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_debug</scope><name>on_evaluate_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1ac3e88ef582a7e3949b6e016ca2b17459" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a22ed977371173105b4aad3a20b9c59dc" prot="public" virt="virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_debug</scope><name>on_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1acb3d05be6c600f4d61957ccf10606ddc" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a79a0bb407852d7b330b74373647ffe46" prot="public" virt="virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_debug</scope><name>on_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a1a9248b305f06419889c1b3b0f0893d8" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_optimize_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a497e750da160e0071ce8864ccc3a1344" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_optimize_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a235195d5fa4461835b861a03a5c0278f" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_optimize_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4653e2903bfd3903709a81eaf7eabc1a" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_optimize_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1ace7452239c9ad7aa6247e9496adbcffe" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_phase_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a716bff45bdc5a88eed09c2231f5bc93a" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_test_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1accbad4dd004c1ced33642db6398b2efe" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_test_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a7c8f0d211967ccc5219144e92571ab26" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_train_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1af28078b0ddaef45124465bef01eefedf" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_train_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a2bde303671110519388d9962bc3e5583" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_validation_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1adc16e42e5064dc2dc8d84dfbfc1325eb" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>on_validation_end</name></member>
      <member refid="classlbann_1_1lbann__callback__debug_1ad30a57ba6ec0b7e479345647651a8e83" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_debug</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__callback_1a66b0a8c00a273669fa782ece59e8898b" prot="public" virt="non-virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_debug</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__callback_1a02d924df2f8ca851578dc76d9015e48d" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_debug</scope><name>set_summarizer</name></member>
      <member refid="classlbann_1_1lbann__callback_1aab5086e27d9bb0a7c7ee8ffc1bc58671" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>setup</name></member>
      <member refid="classlbann_1_1lbann__callback_1ac91abaec389f8d2547512c45ae587304" prot="public" virt="virtual"><scope>lbann::lbann_callback_debug</scope><name>~lbann_callback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
