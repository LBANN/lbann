<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="categorical__accuracy_8cpp" kind="file" language="C++">
    <compoundname>categorical_accuracy.cpp</compoundname>
    <includes refid="categorical__accuracy_8hpp" local="yes">lbann/metrics/categorical_accuracy.hpp</includes>
    <includes refid="generic__target__layer_8hpp" local="yes">lbann/layers/io/target/generic_target_layer.hpp</includes>
    <incdepgraph>
      <node id="21070">
        <label>sys/stat.h</label>
      </node>
      <node id="21056">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="21049" relation="include">
        </childnode>
        <childnode refid="21043" relation="include">
        </childnode>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
      </node>
      <node id="21090">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="21087" relation="include">
        </childnode>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
        <childnode refid="21064" relation="include">
        </childnode>
        <childnode refid="21046" relation="include">
        </childnode>
        <childnode refid="21091" relation="include">
        </childnode>
        <childnode refid="21092" relation="include">
        </childnode>
      </node>
      <node id="21073">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="21041" relation="include">
        </childnode>
        <childnode refid="21033" relation="include">
        </childnode>
      </node>
      <node id="21052">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21034" relation="include">
        </childnode>
      </node>
      <node id="21034">
        <label>El.hpp</label>
      </node>
      <node id="21033">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="21034" relation="include">
        </childnode>
        <childnode refid="21035" relation="include">
        </childnode>
        <childnode refid="21036" relation="include">
        </childnode>
        <childnode refid="21041" relation="include">
        </childnode>
      </node>
      <node id="21081">
        <label>lbann/io/data_buffers/distributed_io_buffer.hpp</label>
        <link refid="distributed__io__buffer_8hpp"/>
        <childnode refid="21079" relation="include">
        </childnode>
      </node>
      <node id="21088">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="21043" relation="include">
        </childnode>
        <childnode refid="21063" relation="include">
        </childnode>
        <childnode refid="21087" relation="include">
        </childnode>
        <childnode refid="21089" relation="include">
        </childnode>
        <childnode refid="21090" relation="include">
        </childnode>
      </node>
      <node id="21074">
        <label>cassert</label>
      </node>
      <node id="21072">
        <label>fcntl.h</label>
      </node>
      <node id="21032">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
        <childnode refid="21046" relation="include">
        </childnode>
        <childnode refid="21052" relation="include">
        </childnode>
      </node>
      <node id="21054">
        <label>lbann/layers/io/io_layer.hpp</label>
        <link refid="io__layer_8hpp"/>
        <childnode refid="21055" relation="include">
        </childnode>
        <childnode refid="21066" relation="include">
        </childnode>
        <childnode refid="21077" relation="include">
        </childnode>
        <childnode refid="21052" relation="include">
        </childnode>
        <childnode refid="21046" relation="include">
        </childnode>
        <childnode refid="21049" relation="include">
        </childnode>
        <childnode refid="21071" relation="include">
        </childnode>
        <childnode refid="21070" relation="include">
        </childnode>
        <childnode refid="21076" relation="include">
        </childnode>
        <childnode refid="21038" relation="include">
        </childnode>
      </node>
      <node id="21049">
        <label>string</label>
      </node>
      <node id="21079">
        <label>lbann/io/data_buffers/generic_io_buffer.hpp</label>
        <link refid="generic__io__buffer_8hpp"/>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
        <childnode refid="21066" relation="include">
        </childnode>
      </node>
      <node id="21059">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="21043" relation="include">
        </childnode>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
        <childnode refid="21046" relation="include">
        </childnode>
      </node>
      <node id="21064">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="21065" relation="include">
        </childnode>
      </node>
      <node id="21044">
        <label>map</label>
      </node>
      <node id="21063">
        <label>unordered_set</label>
      </node>
      <node id="21091">
        <label>omp.h</label>
      </node>
      <node id="21051">
        <label>exception</label>
      </node>
      <node id="21068">
        <label>random</label>
      </node>
      <node id="21061">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
        <childnode refid="21046" relation="include">
        </childnode>
        <childnode refid="21059" relation="include">
        </childnode>
      </node>
      <node id="21031">
        <label>lbann/metrics/categorical_accuracy.hpp</label>
        <link refid="categorical__accuracy_8hpp"/>
        <childnode refid="21032" relation="include">
        </childnode>
      </node>
      <node id="21071">
        <label>sys/types.h</label>
      </node>
      <node id="21089">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21056" relation="include">
        </childnode>
        <childnode refid="21082" relation="include">
        </childnode>
        <childnode refid="21055" relation="include">
        </childnode>
      </node>
      <node id="21083">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="21050" relation="include">
        </childnode>
        <childnode refid="21043" relation="include">
        </childnode>
        <childnode refid="21084" relation="include">
        </childnode>
        <childnode refid="21044" relation="include">
        </childnode>
      </node>
      <node id="21038">
        <label>cstdio</label>
      </node>
      <node id="21080">
        <label>lbann/io/data_buffers/partitioned_io_buffer.hpp</label>
        <link refid="partitioned__io__buffer_8hpp"/>
        <childnode refid="21079" relation="include">
        </childnode>
      </node>
      <node id="21047">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="21048" relation="include">
        </childnode>
        <childnode refid="21049" relation="include">
        </childnode>
      </node>
      <node id="21040">
        <label>cxxabi.h</label>
      </node>
      <node id="21046">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
        <childnode refid="21047" relation="include">
        </childnode>
        <childnode refid="21050" relation="include">
        </childnode>
        <childnode refid="21051" relation="include">
        </childnode>
      </node>
      <node id="21076">
        <label>unistd.h</label>
      </node>
      <node id="21043">
        <label>vector</label>
      </node>
      <node id="21042">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="21043" relation="include">
        </childnode>
        <childnode refid="21044" relation="include">
        </childnode>
        <childnode refid="21045" relation="include">
        </childnode>
        <childnode refid="21033" relation="include">
        </childnode>
      </node>
      <node id="21085">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="21086" relation="include">
        </childnode>
        <childnode refid="21032" relation="include">
        </childnode>
      </node>
      <node id="21069">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="21070" relation="include">
        </childnode>
        <childnode refid="21071" relation="include">
        </childnode>
        <childnode refid="21072" relation="include">
        </childnode>
      </node>
      <node id="21062">
        <label>lbann.pb.h</label>
      </node>
      <node id="21037">
        <label>cstdlib</label>
      </node>
      <node id="21078">
        <label>lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="21054" relation="include">
        </childnode>
        <childnode refid="21079" relation="include">
        </childnode>
        <childnode refid="21080" relation="include">
        </childnode>
        <childnode refid="21081" relation="include">
        </childnode>
        <childnode refid="21082" relation="include">
        </childnode>
        <childnode refid="21088" relation="include">
        </childnode>
      </node>
      <node id="21050">
        <label>iostream</label>
      </node>
      <node id="21030">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/metrics/categorical_accuracy.cpp</label>
        <link refid="categorical__accuracy_8cpp"/>
        <childnode refid="21031" relation="include">
        </childnode>
        <childnode refid="21053" relation="include">
        </childnode>
      </node>
      <node id="21057">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="21058" relation="include">
        </childnode>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
        <childnode refid="21046" relation="include">
        </childnode>
        <childnode refid="21059" relation="include">
        </childnode>
        <childnode refid="21060" relation="include">
        </childnode>
        <childnode refid="21049" relation="include">
        </childnode>
        <childnode refid="21063" relation="include">
        </childnode>
      </node>
      <node id="21087">
        <label>unordered_map</label>
      </node>
      <node id="21067">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
        <childnode refid="21052" relation="include">
        </childnode>
        <childnode refid="21068" relation="include">
        </childnode>
      </node>
      <node id="21055">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
        <childnode refid="21056" relation="include">
        </childnode>
        <childnode refid="21057" relation="include">
        </childnode>
        <childnode refid="21046" relation="include">
        </childnode>
        <childnode refid="21059" relation="include">
        </childnode>
        <childnode refid="21064" relation="include">
        </childnode>
        <childnode refid="21052" relation="include">
        </childnode>
        <childnode refid="21062" relation="include">
        </childnode>
        <childnode refid="21049" relation="include">
        </childnode>
        <childnode refid="21043" relation="include">
        </childnode>
      </node>
      <node id="21065">
        <label>chrono</label>
      </node>
      <node id="21086">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21055" relation="include">
        </childnode>
        <childnode refid="21060" relation="include">
        </childnode>
      </node>
      <node id="21048">
        <label>csignal</label>
      </node>
      <node id="21077">
        <label>lbann/utils/dataset.hpp</label>
        <link refid="dataset_8hpp"/>
        <childnode refid="21066" relation="include">
        </childnode>
      </node>
      <node id="21060">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="21049" relation="include">
        </childnode>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
        <childnode refid="21046" relation="include">
        </childnode>
        <childnode refid="21059" relation="include">
        </childnode>
        <childnode refid="21061" relation="include">
        </childnode>
        <childnode refid="21052" relation="include">
        </childnode>
        <childnode refid="21062" relation="include">
        </childnode>
      </node>
      <node id="21066">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21067" relation="include">
        </childnode>
        <childnode refid="21046" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
        <childnode refid="21069" relation="include">
        </childnode>
        <childnode refid="21052" relation="include">
        </childnode>
        <childnode refid="21073" relation="include">
        </childnode>
        <childnode refid="21074" relation="include">
        </childnode>
        <childnode refid="21075" relation="include">
        </childnode>
        <childnode refid="21049" relation="include">
        </childnode>
        <childnode refid="21043" relation="include">
        </childnode>
        <childnode refid="21076" relation="include">
        </childnode>
      </node>
      <node id="21041">
        <label>lbann_config.hpp</label>
      </node>
      <node id="21084">
        <label>set</label>
      </node>
      <node id="21082">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
        <childnode refid="21055" relation="include">
        </childnode>
        <childnode refid="21056" relation="include">
        </childnode>
        <childnode refid="21083" relation="include">
        </childnode>
        <childnode refid="21069" relation="include">
        </childnode>
        <childnode refid="21052" relation="include">
        </childnode>
        <childnode refid="21085" relation="include">
        </childnode>
        <childnode refid="21032" relation="include">
        </childnode>
        <childnode refid="21060" relation="include">
        </childnode>
        <childnode refid="21057" relation="include">
        </childnode>
        <childnode refid="21062" relation="include">
        </childnode>
        <childnode refid="21043" relation="include">
        </childnode>
        <childnode refid="21049" relation="include">
        </childnode>
        <childnode refid="21087" relation="include">
        </childnode>
      </node>
      <node id="21058">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="21075">
        <label>algorithm</label>
      </node>
      <node id="21036">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="21037" relation="include">
        </childnode>
        <childnode refid="21038" relation="include">
        </childnode>
        <childnode refid="21039" relation="include">
        </childnode>
        <childnode refid="21040" relation="include">
        </childnode>
      </node>
      <node id="21035">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="21034" relation="include">
        </childnode>
      </node>
      <node id="21053">
        <label>lbann/layers/io/target/generic_target_layer.hpp</label>
        <link refid="generic__target__layer_8hpp"/>
        <childnode refid="21054" relation="include">
        </childnode>
        <childnode refid="21078" relation="include">
        </childnode>
        <childnode refid="21080" relation="include">
        </childnode>
        <childnode refid="21081" relation="include">
        </childnode>
        <childnode refid="21046" relation="include">
        </childnode>
        <childnode refid="21082" relation="include">
        </childnode>
        <childnode refid="21049" relation="include">
        </childnode>
        <childnode refid="21071" relation="include">
        </childnode>
        <childnode refid="21070" relation="include">
        </childnode>
        <childnode refid="21076" relation="include">
        </childnode>
      </node>
      <node id="21092">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="21091" relation="include">
        </childnode>
      </node>
      <node id="21045">
        <label>typeindex</label>
      </node>
      <node id="21039">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="categorical__accuracy_8hpp" kindref="compound">lbann/metrics/categorical_accuracy.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="generic__target__layer_8hpp" kindref="compound">lbann/layers/io/target/generic_target_layer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classlbann_1_1categorical__accuracy__metric_1ae7ea6f472bd6375780c49277742af9dc" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1categorical__accuracy__metric_1ae7ea6f472bd6375780c49277742af9dc" kindref="member">categorical_accuracy_metric::categorical_accuracy_metric</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1metric" kindref="compound">metric</ref>(comm),<sp/>m_prediction_values(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classlbann_1_1categorical__accuracy__metric_1a42d38fbdadc86de653cb5b251cf01eb7" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1categorical__accuracy__metric_1ae7ea6f472bd6375780c49277742af9dc" kindref="member">categorical_accuracy_metric::categorical_accuracy_metric</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1categorical__accuracy__metric" kindref="compound">categorical_accuracy_metric</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1metric" kindref="compound">metric</ref>(other),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>(other.<ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a369a86a91f08f3ad3b12b870ccf2e427" kindref="member">m_prediction_indices</ref>(other.<ref refid="classlbann_1_1categorical__accuracy__metric_1a369a86a91f08f3ad3b12b870ccf2e427" kindref="member">m_prediction_indices</ref>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref><sp/>=<sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classlbann_1_1categorical__accuracy__metric_1a859f8e13d7222c92e32b6751b194ef47" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1categorical__accuracy__metric" kindref="compound">categorical_accuracy_metric</ref>&amp;<sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a859f8e13d7222c92e32b6751b194ef47" kindref="member">categorical_accuracy_metric::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1categorical__accuracy__metric" kindref="compound">categorical_accuracy_metric</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1metric_1a4324342dab4892199a47df1d78b2cef5" kindref="member">metric::operator=</ref>(other);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref><sp/>=<sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a369a86a91f08f3ad3b12b870ccf2e427" kindref="member">m_prediction_indices</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1categorical__accuracy__metric_1a369a86a91f08f3ad3b12b870ccf2e427" kindref="member">m_prediction_indices</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classlbann_1_1categorical__accuracy__metric_1ade4c5123c0f6f979308dd012f8adc615" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1categorical__accuracy__metric_1ade4c5123c0f6f979308dd012f8adc615" kindref="member">categorical_accuracy_metric::~categorical_accuracy_metric</ref>()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classlbann_1_1categorical__accuracy__metric_1a328a63ccc21c31efd511445f5b060960" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a328a63ccc21c31efd511445f5b060960" kindref="member">categorical_accuracy_metric::setup</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref>&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1metric_1a898d23e410297378db2fe9f8d1754fe0" kindref="member">metric::setup</ref>(m);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::DistData<sp/>dist_data(<ref refid="classlbann_1_1metric_1aba7f7a12aeba6619f7b4330e9075f76e" kindref="member">get_target_layer</ref>().get_prediction());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist_data.colDist<sp/>==<sp/>El::MC</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>dist_data.rowDist<sp/>==<sp/>El::MR)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a638c3ca7c22f916d23415b234420b9f1" kindref="member">StarMRMat</ref>(*dist_data.grid,<sp/>dist_data.root);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist_data.colDist<sp/>==<sp/>El::STAR</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>dist_data.rowDist<sp/>==<sp/>El::VC)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1aa4ec814c4a8f15b4ea2b24b3af94ef23" kindref="member">StarVCMat</ref>(*dist_data.grid,<sp/>dist_data.root);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;prediction<sp/>matrix<sp/>has<sp/>invalid<sp/>distribution<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(colDist=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dist_data.colDist<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;rowDist=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dist_data.rowDist<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>-&gt;Resize(1,<sp/>m.<ref refid="classlbann_1_1model_1a8c311798ff4acaeafdfbf85162ba5084" kindref="member">get_max_mini_batch_size</ref>());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a369a86a91f08f3ad3b12b870ccf2e427" kindref="member">m_prediction_indices</ref>.resize(<ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>-&gt;LocalWidth());</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classlbann_1_1categorical__accuracy__metric_1a0ec8c3254569c9f9855675243ac51612" refkind="member"><highlight class="normal"><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a0ec8c3254569c9f9855675243ac51612" kindref="member">categorical_accuracy_metric::evaluate_compute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>prediction,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>ground_truth)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>matrix<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>prediction.Height();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>prediction.Width();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_height<sp/>=<sp/>prediction.LocalHeight();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_width<sp/>=<sp/>prediction.LocalWidth();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>local<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>prediction_local<sp/>=<sp/>prediction.LockedMatrix();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>ground_truth_local<sp/>=<sp/>ground_truth.LockedMatrix();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>workspace<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>-&gt;Resize(1,<sp/>width);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>prediction_values_local<sp/>=<sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>-&gt;Matrix();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a369a86a91f08f3ad3b12b870ccf2e427" kindref="member">m_prediction_indices</ref>.resize(local_width);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>largest<sp/>value<sp/>in<sp/>each<sp/>column<sp/>of<sp/>prediction<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType<sp/>max_val;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_index;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(local_height<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_val<sp/>=<sp/>prediction_local(0,<sp/>col);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_val<sp/>=<sp/>std::numeric_limits&lt;DataType&gt;::lowest();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>1;<sp/>row<sp/>&lt;<sp/>local_height;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>pred_val<sp/>=<sp/>prediction_local(row,<sp/>col);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pred_val<sp/>&gt;<sp/>max_val)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_val<sp/>=<sp/>pred_val;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_index<sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>prediction_values_local(0,<sp/>col)<sp/>=<sp/>max_val;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a369a86a91f08f3ad3b12b870ccf2e427" kindref="member">m_prediction_indices</ref>[col]<sp/>=<sp/>max_index;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1metric_1a464120720df6bfdf91bffe353e562964" kindref="member">get_comm</ref>().<ref refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" kindref="member">allreduce</ref>(*<ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>-&gt;RedundantComm(),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::MAX);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>first<sp/>index<sp/>corresponding<sp/>to<sp/>maximum<sp/>prediction<sp/>matrix<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a369a86a91f08f3ad3b12b870ccf2e427" kindref="member">m_prediction_indices</ref>[col];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(local_height<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>prediction_local(row,<sp/>col)<sp/>&gt;=<sp/>prediction_values_local(0,<sp/>col))<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a369a86a91f08f3ad3b12b870ccf2e427" kindref="member">m_prediction_indices</ref>[col]<sp/>=<sp/>prediction.GlobalRow(row);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a369a86a91f08f3ad3b12b870ccf2e427" kindref="member">m_prediction_indices</ref>[col]<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1metric_1a464120720df6bfdf91bffe353e562964" kindref="member">get_comm</ref>().<ref refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" kindref="member">allreduce</ref>(<ref refid="classlbann_1_1categorical__accuracy__metric_1a369a86a91f08f3ad3b12b870ccf2e427" kindref="member">m_prediction_indices</ref>.data(),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_width,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a796e50da721050d30e0cea709484154e" kindref="member">m_prediction_values</ref>-&gt;RedundantComm(),</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::MIN);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>number<sp/>of<sp/>correct<sp/>predictions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>correct_predictions<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>global_row<sp/>=<sp/><ref refid="classlbann_1_1categorical__accuracy__metric_1a369a86a91f08f3ad3b12b870ccf2e427" kindref="member">m_prediction_indices</ref>[col];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ground_truth.IsLocalRow(global_row))<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>ground_truth.LocalRow(global_row);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ground_truth_local(row,<sp/>col)<sp/>!=<sp/>DataType(0))<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++correct_predictions;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>correct_predictions<sp/>=<sp/><ref refid="classlbann_1_1metric_1a464120720df6bfdf91bffe353e562964" kindref="member">get_comm</ref>().<ref refid="classlbann_1_1lbann__comm_1aebb6290d1b618eace302404291c598a5" kindref="member">model_allreduce</ref>(correct_predictions);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>percentage<sp/>of<sp/>correct<sp/>predictions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(100)<sp/>*<sp/>correct_predictions;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/metrics/categorical_accuracy.cpp"/>
  </compounddef>
</doxygen>
