<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1input__layer" kind="class" language="C++" prot="public">
    <compoundname>lbann::input_layer</compoundname>
    <basecompoundref refid="classlbann_1_1generic__input__layer" prot="public" virt="non-virtual">lbann::generic_input_layer</basecompoundref>
    <includes refid="input__layer_8hpp" local="no">input_layer.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T_io_buffer</declname>
        <defname>T_io_buffer</defname>
      </param>
      <param>
        <type><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08db" kindref="member">data_layout</ref></type>
        <declname>T_layout</declname>
        <defname>T_layout</defname>
        <defval><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1input__layer_1aad8b042899d86f5b7904d9d2653b5181" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::input_layer&lt; T_io_buffer, T_layout &gt;::input_layer</definition>
        <argsstring>(lbann_comm *comm, int num_parallel_readers, std::map&lt; execution_mode, generic_data_reader *&gt; data_readers, bool data_set_spans_models=true, bool for_regression=false)</argsstring>
        <name>input_layer</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_parallel_readers</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>, <ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *&gt;</type>
          <declname>data_readers</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>data_set_spans_models</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>for_regression</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000021"><xreftitle>Todo</xreftitle><xrefdescription><para>make the map and vector references </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" line="45" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" bodystart="45" bodyend="52"/>
        <references refid="classlbann_1_1input__layer_1ae3c46c7e4d99b736ce8a3261abeac3e7">lbann::input_layer&lt; T_io_buffer, T_layout &gt;::validate_data_layout</references>
        <references refid="classlbann_1_1input__layer_1a645fce2e882892ac0ad8c9b06ea6ed09" compoundref="input__layer_8hpp" startline="67" endline="69">lbann::input_layer&lt; T_io_buffer, T_layout &gt;::initialize_io_buffer</references>
        <references refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" compoundref="layer_8hpp" startline="357">lbann::Layer::m_comm</references>
        <references refid="classlbann_1_1generic__input__layer_1a9dfe8b9afaebc7a5bcb0177ee2ab428f" compoundref="generic__input__layer_8hpp" startline="42">lbann::generic_input_layer::io_buffer</references>
        <references refid="classlbann_1_1generic__io__buffer_1a267170b4fd11dc60c782a9cb2b7b06cc" compoundref="generic__io__buffer_8hpp" startline="106">lbann::generic_io_buffer::fetch_data_fn</references>
        <references refid="classlbann_1_1generic__io__buffer_1a031eda7559a9e241afb3958b56088560" compoundref="generic__io__buffer_8hpp" startline="107">lbann::generic_io_buffer::update_data_reader_fn</references>
        <references refid="classlbann_1_1input__layer_1a8b00d107daef436d141344277526b682">lbann::input_layer&lt; T_io_buffer, T_layout &gt;::operator=</references>
        <referencedby refid="classlbann_1_1input__layer_1a02eb5e9b97c1da48997995cb89d297ec" compoundref="input__layer_8hpp" startline="55" endline="57">lbann::input_layer&lt; T_io_buffer, T_layout &gt;::copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1input__layer_1a5f009de9aa2d51c78cf28068218d8bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::input_layer&lt; T_io_buffer, T_layout &gt;::input_layer</definition>
        <argsstring>(const input_layer &amp;)=default</argsstring>
        <name>input_layer</name>
        <param>
          <type>const <ref refid="classlbann_1_1input__layer" kindref="compound">input_layer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1input__layer_1a8b00d107daef436d141344277526b682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1input__layer" kindref="compound">input_layer</ref> &amp;</type>
        <definition>input_layer&amp; lbann::input_layer&lt; T_io_buffer, T_layout &gt;::operator=</definition>
        <argsstring>(const input_layer &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1input__layer" kindref="compound">input_layer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" line="54" column="1"/>
        <referencedby refid="classlbann_1_1input__layer_1aad8b042899d86f5b7904d9d2653b5181" compoundref="input__layer_8hpp" startline="45" endline="52">lbann::input_layer&lt; T_io_buffer, T_layout &gt;::input_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1input__layer_1a02eb5e9b97c1da48997995cb89d297ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1input__layer" kindref="compound">input_layer</ref> *</type>
        <definition>input_layer* lbann::input_layer&lt; T_io_buffer, T_layout &gt;::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1Layer_1af420f22bbac801c85483ade84588a23f">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy function. This function dynamically allocates memory for a layer instance and instantiates a copy. The caller is responsible for deallocating the instance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" line="55" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" bodystart="55" bodyend="57"/>
        <references refid="classlbann_1_1input__layer_1aad8b042899d86f5b7904d9d2653b5181" compoundref="input__layer_8hpp" startline="45" endline="52">lbann::input_layer&lt; T_io_buffer, T_layout &gt;::input_layer</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1input__layer_1af596126d1b2d1604743906d04d32419b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::input_layer&lt; T_io_buffer, T_layout &gt;::get_type</definition>
        <argsstring>() const override</argsstring>
        <name>get_type</name>
        <reimplements refid="classlbann_1_1generic__input__layer_1a5392ea11b5eb98a8040bf5b5deed836a">get_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the layer type&apos;s name. A layer type name should be brief, human-readable description of the layer&apos;s mathematical operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" line="59" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" bodystart="59" bodyend="63"/>
        <references refid="classlbann_1_1generic__input__layer_1a9dfe8b9afaebc7a5bcb0177ee2ab428f" compoundref="generic__input__layer_8hpp" startline="42">lbann::generic_input_layer::io_buffer</references>
        <references refid="classlbann_1_1generic__io__buffer_1adc77c0a280f8a200a8d8495c3a371ebb">lbann::generic_io_buffer::get_type</references>
        <references refid="classlbann_1_1input__layer_1ae3c46c7e4d99b736ce8a3261abeac3e7">lbann::input_layer&lt; T_io_buffer, T_layout &gt;::validate_data_layout</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1input__layer_1ae3c46c7e4d99b736ce8a3261abeac3e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::input_layer&lt; T_io_buffer, T_layout &gt;::validate_data_layout</definition>
        <argsstring>()</argsstring>
        <name>validate_data_layout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" line="65" column="1"/>
        <referencedby refid="classlbann_1_1input__layer_1aad8b042899d86f5b7904d9d2653b5181" compoundref="input__layer_8hpp" startline="45" endline="52">lbann::input_layer&lt; T_io_buffer, T_layout &gt;::input_layer</referencedby>
        <referencedby refid="classlbann_1_1input__layer_1af596126d1b2d1604743906d04d32419b" compoundref="input__layer_8hpp" startline="59" endline="63">lbann::input_layer&lt; T_io_buffer, T_layout &gt;::get_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1input__layer_1a645fce2e882892ac0ad8c9b06ea6ed09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::input_layer&lt; T_io_buffer, T_layout &gt;::initialize_io_buffer</definition>
        <argsstring>(lbann_comm *comm, int num_parallel_readers, std::map&lt; execution_mode, generic_data_reader *&gt; data_readers)</argsstring>
        <name>initialize_io_buffer</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_parallel_readers</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>, <ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *&gt;</type>
          <declname>data_readers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" line="67" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" bodystart="67" bodyend="69"/>
        <references refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" compoundref="file__io_8cpp" startline="44">comm</references>
        <referencedby refid="classlbann_1_1input__layer_1aad8b042899d86f5b7904d9d2653b5181" compoundref="input__layer_8hpp" startline="45" endline="52">lbann::input_layer&lt; T_io_buffer, T_layout &gt;::input_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1input__layer_1ae8556702a6c04aeeec8d5eea2d0e90e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08db" kindref="member">data_layout</ref></type>
        <definition>data_layout lbann::input_layer&lt; T_io_buffer, T_layout &gt;::get_data_layout</definition>
        <argsstring>() const override</argsstring>
        <name>get_data_layout</name>
        <reimplements refid="classlbann_1_1Layer_1a5dfb66e81fc085997402a5e2241316bd">get_data_layout</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get data layout of the data tensors. We assume that the data layouts of the previous activations, activations, previous error signals, and error signals are the same. Each concrete layer that is templated on its data layout should override this function to return its template parameter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" line="71" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1input__layer_1a002a1f299fd8e63c13c4e27a61e86d61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::input_layer&lt; partitioned_io_buffer, data_layout::MODEL_PARALLEL &gt;::validate_data_layout</definition>
        <argsstring>()</argsstring>
        <name>validate_data_layout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" line="76" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1input__layer_1a129f797705ae7584d6bc612b15aeb294" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::input_layer&lt; partitioned_io_buffer, data_layout::DATA_PARALLEL &gt;::validate_data_layout</definition>
        <argsstring>()</argsstring>
        <name>validate_data_layout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" line="81" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1input__layer_1a4335c1d23efe251f7d7164d907a11d65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::input_layer&lt; distributed_io_buffer, data_layout::MODEL_PARALLEL &gt;::validate_data_layout</definition>
        <argsstring>()</argsstring>
        <name>validate_data_layout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" line="84" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1input__layer_1a26ae8f3e7a583bda6ead168b2be77fa1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::input_layer&lt; distributed_io_buffer, data_layout::DATA_PARALLEL &gt;::validate_data_layout</definition>
        <argsstring>()</argsstring>
        <name>validate_data_layout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" line="87" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1139">
        <label>lbann::io_layer</label>
        <link refid="classlbann_1_1io__layer"/>
        <childnode refid="1140" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1138">
        <label>lbann::generic_input_layer</label>
        <link refid="classlbann_1_1generic__input__layer"/>
        <childnode refid="1139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1137">
        <label>lbann::input_layer&lt; T_io_buffer, T_layout &gt;</label>
        <link refid="classlbann_1_1input__layer"/>
        <childnode refid="1138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1140">
        <label>lbann::Layer</label>
        <link refid="classlbann_1_1Layer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1143">
        <label>lbann::io_layer</label>
        <link refid="classlbann_1_1io__layer"/>
        <childnode refid="1144" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1142">
        <label>lbann::generic_input_layer</label>
        <link refid="classlbann_1_1generic__input__layer"/>
        <childnode refid="1143" relation="public-inheritance">
        </childnode>
        <childnode refid="1153" relation="usage">
          <edgelabel>m_training_dataset</edgelabel>
          <edgelabel>m_validation_dataset</edgelabel>
          <edgelabel>m_testing_dataset</edgelabel>
        </childnode>
        <childnode refid="1154" relation="usage">
          <edgelabel>io_buffer</edgelabel>
        </childnode>
      </node>
      <node id="1146">
        <label>lbann::model</label>
        <link refid="classlbann_1_1model"/>
        <childnode refid="1147" relation="usage">
          <edgelabel>m_default_optimizer</edgelabel>
        </childnode>
        <childnode refid="1145" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1152" relation="usage">
          <edgelabel>m_objective_function</edgelabel>
        </childnode>
      </node>
      <node id="1155">
        <label>lbann::fetch_data_functor</label>
        <link refid="classlbann_1_1fetch__data__functor"/>
      </node>
      <node id="1147">
        <label>lbann::optimizer</label>
        <link refid="classlbann_1_1optimizer"/>
        <childnode refid="1145" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1148" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
        <childnode refid="1149" relation="usage">
          <edgelabel>m_gradient_allreduce_req</edgelabel>
        </childnode>
        <childnode refid="1150" relation="usage">
          <edgelabel>m_weights</edgelabel>
        </childnode>
      </node>
      <node id="1148">
        <label>lbann::cudnn::cudnn_manager</label>
        <link refid="classlbann_1_1cudnn_1_1cudnn__manager"/>
      </node>
      <node id="1151">
        <label>lbann::weights_initializer</label>
        <link refid="classlbann_1_1weights__initializer"/>
        <childnode refid="1145" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
      <node id="1141">
        <label>lbann::input_layer&lt; T_io_buffer, T_layout &gt;</label>
        <link refid="classlbann_1_1input__layer"/>
        <childnode refid="1142" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1153">
        <label>lbann::dataset</label>
        <link refid="classlbann_1_1dataset"/>
      </node>
      <node id="1154">
        <label>lbann::generic_io_buffer</label>
        <link refid="classlbann_1_1generic__io__buffer"/>
        <childnode refid="1155" relation="usage">
          <edgelabel>fetch_data_fn</edgelabel>
        </childnode>
        <childnode refid="1145" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1156" relation="usage">
          <edgelabel>update_data_reader_fn</edgelabel>
        </childnode>
      </node>
      <node id="1144">
        <label>lbann::Layer</label>
        <link refid="classlbann_1_1Layer"/>
        <childnode refid="1145" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1146" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
        <childnode refid="1148" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="1150">
        <label>lbann::weights</label>
        <link refid="classlbann_1_1weights"/>
        <childnode refid="1147" relation="usage">
          <edgelabel>m_optimizer</edgelabel>
        </childnode>
        <childnode refid="1145" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1151" relation="usage">
          <edgelabel>m_initializer</edgelabel>
        </childnode>
        <childnode refid="1148" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="1145">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="1149">
        <label>lbann::Al::request</label>
        <link refid="structlbann_1_1Al_1_1request"/>
      </node>
      <node id="1156">
        <label>lbann::update_data_reader_functor</label>
        <link refid="classlbann_1_1update__data__reader__functor"/>
      </node>
      <node id="1152">
        <label>lbann::objective_function</label>
        <link refid="classlbann_1_1objective__function"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" line="41" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp" bodystart="41" bodyend="73"/>
    <listofallmembers>
      <member refid="classlbann_1_1Layer_1ace0346ac56fd7ce7b6b44f27f224f35e" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>add_child_layer</name></member>
      <member refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>add_parent_layer</name></member>
      <member refid="classlbann_1_1Layer_1a8d942eb2cd37c346edc5ff473e0494a2" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>add_to_error_signal</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a8b375ab97f38166872e4aa9baeca0715" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>at_new_epoch</name></member>
      <member refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>back_prop</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a36787a3caf2ef236747c6150edad82ea" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>bp_compute</name></member>
      <member refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" prot="protected" virt="virtual"><scope>lbann::input_layer</scope><name>bp_setup_data</name></member>
      <member refid="classlbann_1_1generic__input__layer_1af108a5dc05276bc6bc57b306204b12e4" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>calculate_num_iterations_per_epoch_training_spans_models</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a0f09422a09e76da77ac42b3037173041" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>calculate_num_iterations_per_epoch_training_unique_per_models</name></member>
      <member refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>check_setup</name></member>
      <member refid="classlbann_1_1Layer_1a040bf53e261b1ef796739c09b3362a3a" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>clear_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>clear_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a7336909c78e438ba5332c6c1bddeadd2" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>clear_parent_layers</name></member>
      <member refid="classlbann_1_1input__layer_1a02eb5e9b97c1da48997995cb89d297ec" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>copy</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a6c3b901ea25ff3bba052cb3e14df4f83" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>data_reader_map_t</name></member>
      <member refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>forward_prop</name></member>
      <member refid="classlbann_1_1generic__input__layer_1ae74c8c5a7e14b4fdd4902554bbc7bcef" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>fp_compute</name></member>
      <member refid="classlbann_1_1Layer_1a22d31298912405660ebb210c0d7c5373" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>fp_output_dims</name></member>
      <member refid="classlbann_1_1generic__input__layer_1ad0b8ea79bc508bd227e08124359531c8" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>fp_setup_data</name></member>
      <member refid="classlbann_1_1Layer_1ad55c455dbae0d082cedfa68511709aae" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>freeze</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a0c7ce1625cd2be2368822c2662346538" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>generic_input_layer</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a5447106074487e60d69add9cab511319" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>generic_input_layer</name></member>
      <member refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_activations</name></member>
      <member refid="classlbann_1_1Layer_1af69a4773804c6982e8acaf5810eaa150" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_activations</name></member>
      <member refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_bp_output</name></member>
      <member refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a0ad6c5253a4545a7322766d586a4bd33" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1afc7bf4e2a61a6f47f9e1f185bf92439a" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_child_names</name></member>
      <member refid="classlbann_1_1Layer_1a1b528e5872357a82176ee487596b363c" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_cudnn_manager</name></member>
      <member refid="classlbann_1_1generic__input__layer_1ae8252d343e2f287dd7cece935ea5a075" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_current_global_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__input__layer_1aaaa60fb7b94353fccaff25e6a862d833" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_current_global_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__input__layer_1aad7e5f1c51037a175c6bc9abaccdc7d6" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_current_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a41d278999fbd10d2cd95b9af04925cf7" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_current_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__input__layer_1abad654f945f62d4610f8afa597777713" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_current_step_in_epoch</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a660d82888a5c1eb72c2906d6367cbc35" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_current_step_in_epoch</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a8c3bf45beb91622d56f0dec89cba8e9a" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_current_world_master_mini_batch_adjustment</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a6c14ea2a50c7e7989e8e394671e4531a" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_current_world_master_mini_batch_adjustment</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a6008b13521d27d6139201fa374b088eb" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_data_dims</name></member>
      <member refid="classlbann_1_1input__layer_1ae8556702a6c04aeeec8d5eea2d0e90e6" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_data_layout</name></member>
      <member refid="classlbann_1_1Layer_1ae3f4a5602df821f4221614b1e3782dc1" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_data_layout_string</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a5715a966647e8cc92489f9e1950b2d28" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_data_reader</name></member>
      <member refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_data_reader</name></member>
      <member refid="classlbann_1_1generic__input__layer_1af5699540797c22d8846028e578a6fc59" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_dataset</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a909cf972d13a305a16daba9664180262" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_dataset</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a8ffe91a3d5b6f37d2dc17e657898dcc8" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_description</name></member>
      <member refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ae09bc5a240e9042371203ba5ff19990c" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1aaeef8c7631204fc415a94dcdfbcfe93d" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_expected_num_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa30dbf20929aaa58b5be98b98217ca88" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_expected_num_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1ac6b43c63399f717cc1a4a0a2007350f2" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_fp_output</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a7ccb2e0dd8a9d9ab60e1e9d04bb80f2d" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_global_last_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__input__layer_1ac07b58c08183995852889dacfc69e459" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_global_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a5e3c66c5726ab4a00d75bdcd2c07b640" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_last_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__input__layer_1aebca4bd6660ee5b7f99129bd84ed4f8d" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_last_mini_batch_size</name></member>
      <member refid="classlbann_1_1Layer_1af4a093d91552cf079217eb346bbb847f" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_layer_names</name></member>
      <member refid="classlbann_1_1Layer_1a9f94210cbb973f1df89ef649899094a1" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_layer_pointers</name></member>
      <member refid="classlbann_1_1generic__input__layer_1aca46cbf29ad2762e9329b46ab2ad1ae7" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_linearized_data_size</name></member>
      <member refid="classlbann_1_1generic__input__layer_1ab6c24db7e2b8e73e7d7894e51246dc5e" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_linearized_label_size</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a6e5e587aa5b32bdfd2dd579a2746885d" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_linearized_response_size</name></member>
      <member refid="classlbann_1_1Layer_1a4248f27acebf72b7b7b3ee39c8bcb62a" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_local_activations</name></member>
      <member refid="classlbann_1_1Layer_1aadbc466c72f455c10b53bf45dca56332" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_local_activations</name></member>
      <member refid="classlbann_1_1Layer_1af178d00b9d878aa7d87754bff2a91f3a" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_local_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1acf76bc7fba1e8ab74947ef83a3c8a141" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_local_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a35397843bb0c84030000c7d872229acb" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_local_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1ab0f7b4d0fdb06004dfde5358781eeece" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_local_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a82827edc5e869960144f3ccb2172bfcd" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_local_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1af3490fe9011ef620b827970bc5dcc7a7" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_local_prev_error_signals</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a8af40ec1991900bf23b78e6429256b9c" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_mini_batch_size</name></member>
      <member refid="classlbann_1_1Layer_1afcfb6f55d12c728a59d107fe2d2fff0d" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_model</name></member>
      <member refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_name</name></member>
      <member refid="classlbann_1_1Layer_1a54f53393fadbfdc73b4e72489c868433" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_num_children</name></member>
      <member refid="classlbann_1_1generic__input__layer_1aa0fa6597ffce537f7cfba29dcc754ee1" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_num_iterations_per_epoch</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a82bd22c834c5ef526e0c740c80451e1b" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_num_iterations_per_epoch</name></member>
      <member refid="classlbann_1_1Layer_1aa35561e662de84deae26045ccb53d862" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_num_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_num_neurons</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a8a85d3e1bdd31082ca22535939596acb" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_num_parallel_readers</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a5ed2e13553574ba9ff54565ebc049982" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_num_parallel_readers</name></member>
      <member refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_num_parents</name></member>
      <member refid="classlbann_1_1Layer_1ace32c7df942a8d97d7a25cb8ff8ce71d" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_num_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_num_prev_neurons</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a68b162bcc5fdfe2bb7279eb5d83cf884" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_num_samples_tested</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a95a7a5ad2a6089ffb9197632015e6062" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_num_samples_trained</name></member>
      <member refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1a233ceaf4e6c6b5c24dd097ffff511579" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1afdf36947beec676a71ecd6167c3bb724" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_parent_names</name></member>
      <member refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1afc0611b7c3b1537914f25a538486a8cd" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1aff2c8983548364c978acb09ddf58a6fc" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a1acc0fa44acdeffbac158fdac3467973" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a749741781204b17c8ca172a9a405a90e" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_sample_indices_per_mb</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a36d9962105ca89889e3f38f1c1801560" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_topo_description</name></member>
      <member refid="classlbann_1_1generic__input__layer_1ab5b5318cf000fbdaf35a3545335b60b2" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_total_num_testing_samples</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a5fc757d16e26739cd10e5eabafa6a32b" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_total_num_training_samples</name></member>
      <member refid="classlbann_1_1input__layer_1af596126d1b2d1604743906d04d32419b" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_type</name></member>
      <member refid="classlbann_1_1Layer_1a4ee78d42284421519dd18d27b4da0957" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_weights</name></member>
      <member refid="classlbann_1_1Layer_1ab9fe05ad8d21ba5d6dd4d22ee2e0dca0" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>get_weights</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a1c2a503d4009b6360d96db128796983c" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_world_master_mini_batch_adjustment</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a111abcde5f53746dfd6c5fe18187ee57" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>get_world_master_mini_batch_adjustment</name></member>
      <member refid="classlbann_1_1input__layer_1a645fce2e882892ac0ad8c9b06ea6ed09" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>initialize_io_buffer</name></member>
      <member refid="classlbann_1_1input__layer_1aad8b042899d86f5b7904d9d2653b5181" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>input_layer</name></member>
      <member refid="classlbann_1_1input__layer_1a5f009de9aa2d51c78cf28068218d8bb9" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>input_layer</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a9dfe8b9afaebc7a5bcb0177ee2ab428f" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>io_buffer</name></member>
      <member refid="classlbann_1_1io__layer_1ab2b5002dfeb0806062ecf3d9fefb9948" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>io_layer</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a31082076a8aad937eef3cadc0b5e1b27" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>is_execution_mode_valid</name></member>
      <member refid="classlbann_1_1io__layer_1a61f2e00334c820235795154492876476" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>is_for_regression</name></member>
      <member refid="classlbann_1_1Layer_1af3c0f9f32eb631f4fdf34ad040ef8637" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>is_frozen</name></member>
      <member refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>Layer</name></member>
      <member refid="classlbann_1_1Layer_1a247cc68c730284f10a2cb42985fe5f3a" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>Layer</name></member>
      <member refid="classlbann_1_1generic__input__layer_1ae5a542333eaf447a05fc586848e7c94c" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1Layer_1a7ac9335d75d817fc2d5cf171da9b7e22" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>loadFromCheckpoint</name></member>
      <member refid="classlbann_1_1Layer_1a1ae0e6015dd427c63236a07f8cbd3878" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>loadFromFile</name></member>
      <member refid="classlbann_1_1Layer_1a7caf08e938141d1584e6939cefa4baed" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_activations</name></member>
      <member refid="classlbann_1_1Layer_1ae28626457a58943b25e7a2920fc271f0" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_bp_compute_time</name></member>
      <member refid="classlbann_1_1Layer_1aa60fc41627bcaa9c345775bf5737bb45" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_bp_time</name></member>
      <member refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_comm</name></member>
      <member refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_cudnn</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a6bc18860c02beed0252ea3cc87bc48d2" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_data_readers</name></member>
      <member refid="classlbann_1_1io__layer_1a05c9d6e6cb12e8eb345ac6f5cb95644b" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_data_set_spans_models</name></member>
      <member refid="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ac08f133dddd150319650e220ab9a523a" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_expected_num_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a841b96b25555247f52921c7f13ae1dfa" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_expected_num_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa4e439c1d6a656e709dc4736c9380476" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_fp_compute_time</name></member>
      <member refid="classlbann_1_1Layer_1ab1bd9ab0a6f9e554f4dc936d8316028e" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_fp_time</name></member>
      <member refid="classlbann_1_1Layer_1afdc60df9731a3ecdeeeb8175fa483676" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_frozen</name></member>
      <member refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_model</name></member>
      <member refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_name</name></member>
      <member refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_num_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_num_neurons</name></member>
      <member refid="classlbann_1_1Layer_1adc052afb38f170e839db00d3c8151d1e" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_num_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_num_prev_neurons</name></member>
      <member refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1a52314601c3458268f56e017dc2ade357" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a6fdcbf884150d0b20cffe678fefd7caa" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a66b9ec6b393695232bd98edc62fc1348" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_testing_dataset</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a23716635b1062bfe57f7fcf75140a63a" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_training_dataset</name></member>
      <member refid="classlbann_1_1Layer_1ab7d84533662b02d01ba6685ad6f20935" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_update_time</name></member>
      <member refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_using_gpus</name></member>
      <member refid="classlbann_1_1generic__input__layer_1abd70adf607d1cef87fb6641af77e816d" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_validation_dataset</name></member>
      <member refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" prot="protected" virt="non-virtual"><scope>lbann::input_layer</scope><name>m_weights</name></member>
      <member refid="classlbann_1_1input__layer_1a8b00d107daef436d141344277526b682" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>operator=</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a76d36777d01144cafe7b33ab5ce739d2" prot="public" virt="non-virtual" ambiguityscope="lbann::generic_input_layer::"><scope>lbann::input_layer</scope><name>operator=</name></member>
      <member refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" prot="public" virt="non-virtual" ambiguityscope="lbann::io_layer::"><scope>lbann::input_layer</scope><name>operator=</name></member>
      <member refid="classlbann_1_1Layer_1ae9df4e0b0fe7c276c79575f9e11c53af" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>replace_weights</name></member>
      <member refid="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>reset_counters</name></member>
      <member refid="classlbann_1_1generic__input__layer_1abae61e13f47205491a43e4842808945d" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1Layer_1a994a4beabbace598193b1611eb06b07e" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>saveToCheckpoint</name></member>
      <member refid="classlbann_1_1Layer_1a131876b692c0e68c95d9ae1a86c446df" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>saveToFile</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a9783805369ec7cfe5ce61c81baa5d2e2" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>select_data_reader</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a654365ee97a64c75a547cfb7ef329304" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>select_dataset</name></member>
      <member refid="classlbann_1_1generic__input__layer_1ab8468d077867b03098bbc71a38edaa15" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>select_dataset</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a777aa11816a518098212408b569b6fb8" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>select_first_valid_dataset</name></member>
      <member refid="classlbann_1_1Layer_1a001ea76cdd05e2d0d475f408f24702ee" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>set_layer_pointers</name></member>
      <member refid="classlbann_1_1Layer_1a8eed87b25ea902b223c6b7a23abf78b3" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>set_model</name></member>
      <member refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>set_name</name></member>
      <member refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>set_weights</name></member>
      <member refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>setup</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a8ca316b0369689949f3f4106920ec28f" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>setup_data</name></member>
      <member refid="classlbann_1_1generic__input__layer_1ad117da4e6155159439826bba6657cf05" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>setup_dims</name></member>
      <member refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" prot="protected" virt="virtual"><scope>lbann::input_layer</scope><name>setup_gpu</name></member>
      <member refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e" prot="protected" virt="virtual"><scope>lbann::input_layer</scope><name>setup_matrices</name></member>
      <member refid="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" prot="protected" virt="virtual"><scope>lbann::input_layer</scope><name>setup_pointers</name></member>
      <member refid="classlbann_1_1Layer_1af7e50932bb60d4cab3b21ab3fb0707ea" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>summarize_matrices</name></member>
      <member refid="classlbann_1_1Layer_1a7f3f26e2ae0497f9a00fd6bc56b50543" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>summarize_stats</name></member>
      <member refid="classlbann_1_1Layer_1aa43ecf9fc67eb1d596c1a69cf35d1245" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>unfreeze</name></member>
      <member refid="classlbann_1_1Layer_1ae4a050e51e3a9bec431cf8b7a5660f2c" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>update</name></member>
      <member refid="classlbann_1_1generic__input__layer_1aaf9ac19f7dd725230bde87d859ec0f35" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>update_compute</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a0c2f123432ec6af168012cc8699a1d3f" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>update_num_samples_processed</name></member>
      <member refid="classlbann_1_1Layer_1a6a75532bdaa2ca3879034f2a76085a06" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>using_gpus</name></member>
      <member refid="classlbann_1_1input__layer_1ae3c46c7e4d99b736ce8a3261abeac3e7" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>validate_data_layout</name></member>
      <member refid="classlbann_1_1input__layer_1a002a1f299fd8e63c13c4e27a61e86d61" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>validate_data_layout</name></member>
      <member refid="classlbann_1_1input__layer_1a129f797705ae7584d6bc612b15aeb294" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>validate_data_layout</name></member>
      <member refid="classlbann_1_1input__layer_1a4335c1d23efe251f7d7164d907a11d65" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>validate_data_layout</name></member>
      <member refid="classlbann_1_1input__layer_1a26ae8f3e7a583bda6ead168b2be77fa1" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>validate_data_layout</name></member>
      <member refid="classlbann_1_1Layer_1ab94eb4ac28bac0c472a1da83ade4adf1" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>write_proto</name></member>
      <member refid="classlbann_1_1generic__input__layer_1a09575a4120064a6882883b3a0ee11b7e" prot="public" virt="non-virtual"><scope>lbann::input_layer</scope><name>~generic_input_layer</name></member>
      <member refid="classlbann_1_1Layer_1a68c3f57587956da938406812f13ecb78" prot="public" virt="virtual"><scope>lbann::input_layer</scope><name>~Layer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
