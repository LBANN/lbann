<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1weights" kind="class" language="C++" prot="public">
    <compoundname>lbann::weights</compoundname>
    <includes refid="weights_8hpp" local="no">weights.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classlbann_1_1weights_1afe38b5936c7fe885023474dd92c72c67" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class optimizer</definition>
        <argsstring></argsstring>
        <name>optimizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="59" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string lbann::weights::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Weights name. See get_name function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="206" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="206" bodyend="-1"/>
        <referencedby refid="classlbann_1_1weights_1ab886e4d3ff62b62a7ac6c52e391666f2" compoundref="weights_8hpp" startline="72" endline="72">set_name</referencedby>
        <referencedby refid="classlbann_1_1weights_1a272f80766f31a5add7a970e5e8fcc352" compoundref="weights_8hpp" startline="74" endline="74">get_name</referencedby>
        <referencedby refid="classlbann_1_1weights_1a21a3a3f1806197d10619a1450871e066" compoundref="weights_8cpp" startline="35" endline="49">weights</referencedby>
        <referencedby refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" compoundref="weights_8cpp" startline="81" endline="112">operator=</referencedby>
        <referencedby refid="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" compoundref="weights_8cpp" startline="137" endline="203">setup</referencedby>
        <referencedby refid="classlbann_1_1weights_1a48dd6b3d37668bf2ab5abafdf9dabde4" compoundref="weights_8cpp" startline="457" endline="470">save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1weights_1a1a2631987f38d32a90fbee61053a04cc" compoundref="weights_8cpp" startline="472" endline="505">write_proto</referencedby>
        <referencedby refid="classlbann_1_1weights_1ad41cac4b516d83f086cdfbcdfaa8223c" compoundref="weights_8cpp" startline="507" endline="521">load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1weights_1a223e8907034888392548ae901222b39c" prot="private" static="no" mutable="no">
        <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
        <definition>lbann_comm* lbann::weights::m_comm</definition>
        <argsstring></argsstring>
        <name>m_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reference to LBANN communicator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="209" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="209" bodyend="-1"/>
        <referencedby refid="classlbann_1_1weights_1a21a3a3f1806197d10619a1450871e066" compoundref="weights_8cpp" startline="35" endline="49">weights</referencedby>
        <referencedby refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" compoundref="weights_8cpp" startline="81" endline="112">operator=</referencedby>
        <referencedby refid="classlbann_1_1weights_1a1a2631987f38d32a90fbee61053a04cc" compoundref="weights_8cpp" startline="472" endline="505">write_proto</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" prot="private" static="no" mutable="no">
        <type><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref> *</type>
        <definition>cudnn::cudnn_manager* lbann::weights::m_cudnn</definition>
        <argsstring></argsstring>
        <name>m_cudnn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reference to cuDNN manager. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="211" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="211" bodyend="-1"/>
        <referencedby refid="classlbann_1_1weights_1ab8c007f217040d2c4a99acc1977d9d54" compoundref="weights_8hpp" startline="147" endline="147">get_cudnn_manager</referencedby>
        <referencedby refid="classlbann_1_1optimizer_1a7641a88b3c166df2d974a298622b992b" compoundref="optimizer_8cpp" startline="414" endline="442">lbann::optimizer::setup</referencedby>
        <referencedby refid="classlbann_1_1weights_1ab7cca67d4459f3ba6a72dae4bb8d5cc6" compoundref="weights_8cpp" startline="51" endline="79">weights</referencedby>
        <referencedby refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" compoundref="weights_8cpp" startline="81" endline="112">operator=</referencedby>
        <referencedby refid="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" compoundref="weights_8cpp" startline="137" endline="203">setup</referencedby>
        <referencedby refid="classlbann_1_1weights_1a7137725a835a37ded1a5ad7f739224a7" compoundref="weights_8cpp" startline="205" endline="236">setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1weights_1a09fa4082be905c0c124dde3033e2461b" compoundref="weights_8cpp" startline="270" endline="289">get_values</referencedby>
        <referencedby refid="classlbann_1_1weights_1ae10da5d92c9402ced7e55f04fbd05a2e" compoundref="weights_8cpp" startline="291" endline="312">set_values</referencedby>
        <referencedby refid="classlbann_1_1weights_1a7ac0a9e53b249f16d5e2978e47bd6b7f" compoundref="weights_8cpp" startline="373" endline="412">set_value</referencedby>
        <referencedby refid="classlbann_1_1weights_1a506b6445c46a92cdadad75caf1c166d3" compoundref="weights_8cpp" startline="414" endline="428">get_values_view</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1weights_1a9287dfbd8a7e4a9f5e0d6371d43ee92f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; lbann::weights::m_matrix_height_dims</definition>
        <argsstring></argsstring>
        <name>m_matrix_height_dims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tensor dimensions corresponding to matrix height. See get_matrix_height_dims function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="216" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="216" bodyend="-1"/>
        <referencedby refid="classlbann_1_1weights_1a2971f04c57d90fbb09631b1de3dad336" compoundref="weights_8hpp" startline="131" endline="131">get_matrix_height_dims</referencedby>
        <referencedby refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" compoundref="weights_8cpp" startline="81" endline="112">operator=</referencedby>
        <referencedby refid="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" compoundref="weights_8cpp" startline="137" endline="203">setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1weights_1a8317a198bc5b4cd6bee2c806eefd1f12" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; lbann::weights::m_matrix_width_dims</definition>
        <argsstring></argsstring>
        <name>m_matrix_width_dims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tensor dimensions corresponding to matrix width. See get_matrix_width_dims function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="220" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="220" bodyend="-1"/>
        <referencedby refid="classlbann_1_1weights_1a783ce38ed0b75c0264dd7e28911d5ec0" compoundref="weights_8hpp" startline="136" endline="136">get_matrix_width_dims</referencedby>
        <referencedby refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" compoundref="weights_8cpp" startline="81" endline="112">operator=</referencedby>
        <referencedby refid="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" compoundref="weights_8cpp" startline="137" endline="203">setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" prot="private" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> *</type>
        <definition>AbsDistMat* lbann::weights::m_values</definition>
        <argsstring></argsstring>
        <name>m_values</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Weights matrix. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="223" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="223" bodyend="-1"/>
        <referencedby refid="classlbann_1_1optimizer_1aa9f43ca3f22edc0a25d0509b6514a411" compoundref="optimizer_8cpp" startline="444" endline="470">lbann::optimizer::step</referencedby>
        <referencedby refid="classlbann_1_1weights_1ab7cca67d4459f3ba6a72dae4bb8d5cc6" compoundref="weights_8cpp" startline="51" endline="79">weights</referencedby>
        <referencedby refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" compoundref="weights_8cpp" startline="81" endline="112">operator=</referencedby>
        <referencedby refid="classlbann_1_1weights_1a82334405491bee7a2e2a1295dcb94134" compoundref="weights_8cpp" startline="114" endline="118">~weights</referencedby>
        <referencedby refid="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" compoundref="weights_8cpp" startline="137" endline="203">setup</referencedby>
        <referencedby refid="classlbann_1_1weights_1a7137725a835a37ded1a5ad7f739224a7" compoundref="weights_8cpp" startline="205" endline="236">setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1weights_1a09fa4082be905c0c124dde3033e2461b" compoundref="weights_8cpp" startline="270" endline="289">get_values</referencedby>
        <referencedby refid="classlbann_1_1weights_1ae10da5d92c9402ced7e55f04fbd05a2e" compoundref="weights_8cpp" startline="291" endline="312">set_values</referencedby>
        <referencedby refid="classlbann_1_1weights_1a7ac0a9e53b249f16d5e2978e47bd6b7f" compoundref="weights_8cpp" startline="373" endline="412">set_value</referencedby>
        <referencedby refid="classlbann_1_1weights_1a506b6445c46a92cdadad75caf1c166d3" compoundref="weights_8cpp" startline="414" endline="428">get_values_view</referencedby>
        <referencedby refid="classlbann_1_1weights_1a48dd6b3d37668bf2ab5abafdf9dabde4" compoundref="weights_8cpp" startline="457" endline="470">save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1weights_1a1a2631987f38d32a90fbee61053a04cc" compoundref="weights_8cpp" startline="472" endline="505">write_proto</referencedby>
        <referencedby refid="classlbann_1_1weights_1ad41cac4b516d83f086cdfbcdfaa8223c" compoundref="weights_8cpp" startline="507" endline="521">load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" prot="private" static="no" mutable="no">
        <type><ref refid="classlbann_1_1weights__initializer" kindref="compound">weights_initializer</ref> *</type>
        <definition>weights_initializer* lbann::weights::m_initializer</definition>
        <argsstring></argsstring>
        <name>m_initializer</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Weights initializer. Default is zero initialization. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="228" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="228" bodyend="-1"/>
        <referencedby refid="classlbann_1_1weights_1a448c8a6fa03048da9f3ae275d29c824d" compoundref="weights_8hpp" startline="150" endline="150">get_initializer</referencedby>
        <referencedby refid="classlbann_1_1weights_1a21a3a3f1806197d10619a1450871e066" compoundref="weights_8cpp" startline="35" endline="49">weights</referencedby>
        <referencedby refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" compoundref="weights_8cpp" startline="81" endline="112">operator=</referencedby>
        <referencedby refid="classlbann_1_1weights_1a82334405491bee7a2e2a1295dcb94134" compoundref="weights_8cpp" startline="114" endline="118">~weights</referencedby>
        <referencedby refid="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" compoundref="weights_8cpp" startline="137" endline="203">setup</referencedby>
        <referencedby refid="classlbann_1_1weights_1a71e56d32d8e9c0e3ddf0ec2d0cd3924d" compoundref="weights_8cpp" startline="260" endline="263">set_initializer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" prot="private" static="no" mutable="no">
        <type><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref> *</type>
        <definition>optimizer* lbann::weights::m_optimizer</definition>
        <argsstring></argsstring>
        <name>m_optimizer</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Weights optimizer. Default is nullptr, which corresponds to no optimizer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="232" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="232" bodyend="-1"/>
        <referencedby refid="classlbann_1_1weights_1accdbbd16ada5b5b12890431b92c2e706" compoundref="weights_8hpp" startline="160" endline="160">get_optimizer</referencedby>
        <referencedby refid="classlbann_1_1weights_1ab7cca67d4459f3ba6a72dae4bb8d5cc6" compoundref="weights_8cpp" startline="51" endline="79">weights</referencedby>
        <referencedby refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" compoundref="weights_8cpp" startline="81" endline="112">operator=</referencedby>
        <referencedby refid="classlbann_1_1weights_1a82334405491bee7a2e2a1295dcb94134" compoundref="weights_8cpp" startline="114" endline="118">~weights</referencedby>
        <referencedby refid="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" compoundref="weights_8cpp" startline="137" endline="203">setup</referencedby>
        <referencedby refid="classlbann_1_1weights_1ab641f66c09c8b5d491c0f262e8cb55e6" compoundref="weights_8cpp" startline="265" endline="268">set_optimizer</referencedby>
        <referencedby refid="classlbann_1_1weights_1a48dd6b3d37668bf2ab5abafdf9dabde4" compoundref="weights_8cpp" startline="457" endline="470">save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1weights_1ad41cac4b516d83f086cdfbcdfaa8223c" compoundref="weights_8cpp" startline="507" endline="521">load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1weights_1a3962305112ba98ef2eb89c6f7035f6dd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lbann::weights::m_frozen</definition>
        <argsstring></argsstring>
        <name>m_frozen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Avoid weight update if frozen </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="240" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="240" bodyend="-1"/>
        <referencedby refid="classlbann_1_1weights_1accdbbd16ada5b5b12890431b92c2e706" compoundref="weights_8hpp" startline="160" endline="160">get_optimizer</referencedby>
        <referencedby refid="classlbann_1_1weights_1ab9fe32e21ae25f6b000497addb46351f" compoundref="weights_8hpp" startline="192" endline="192">freeze</referencedby>
        <referencedby refid="classlbann_1_1weights_1ab1e71f962a7702d0aa023fedf1c99e98" compoundref="weights_8hpp" startline="193" endline="193">unfreeze</referencedby>
        <referencedby refid="classlbann_1_1weights_1a5874876052191837679634186c64c388" compoundref="weights_8hpp" startline="194" endline="194">is_frozen</referencedby>
        <referencedby refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" compoundref="weights_8cpp" startline="81" endline="112">operator=</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1weights_1a21a3a3f1806197d10619a1450871e066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::weights::weights</definition>
        <argsstring>(lbann_comm *comm, cudnn::cudnn_manager *cudnn=nullptr)</argsstring>
        <name>weights</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref> *</type>
          <declname>cudnn</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="62" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="35" bodyend="49"/>
        <references refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" compoundref="weights_8hpp" startline="206">m_name</references>
        <references refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" compoundref="weights_8hpp" startline="228">m_initializer</references>
        <references refid="classlbann_1_1weights_1a223e8907034888392548ae901222b39c" compoundref="weights_8hpp" startline="209">m_comm</references>
        <referencedby refid="classlbann_1_1weights_1a1a85fa681dcac2dbead2e5012099f380" compoundref="weights_8hpp" startline="81" endline="81">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1ab7cca67d4459f3ba6a72dae4bb8d5cc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::weights::weights</definition>
        <argsstring>(const weights &amp;other)</argsstring>
        <name>weights</name>
        <param>
          <type>const <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="64" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="51" bodyend="79"/>
        <references refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" compoundref="weights_8hpp" startline="223">m_values</references>
        <references refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" compoundref="weights_8hpp" startline="228">m_initializer</references>
        <references refid="classlbann_1_1weights__initializer_1acc84ce49188b74b23987cef3db18525a">lbann::weights_initializer::copy</references>
        <references refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" compoundref="weights_8hpp" startline="232">m_optimizer</references>
        <references refid="classlbann_1_1optimizer_1adf19a1d19d832ebfe70072cc202cdf39">lbann::optimizer::copy</references>
        <references refid="classlbann_1_1optimizer_1afc00daf2acb6af7e29786524126660c2" compoundref="optimizer_8hpp" startline="62" endline="62">lbann::optimizer::set_weights</references>
        <references refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" compoundref="weights_8hpp" startline="211">m_cudnn</references>
        <references refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" compoundref="weights_8cpp" startline="248" endline="252">get_matrix_height</references>
        <references refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" compoundref="weights_8cpp" startline="254" endline="258">get_matrix_width</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1weights" kindref="compound">weights</ref> &amp;</type>
        <definition>weights &amp; lbann::weights::operator=</definition>
        <argsstring>(const weights &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="65" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="81" bodyend="112"/>
        <references refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" compoundref="weights_8hpp" startline="206">m_name</references>
        <references refid="classlbann_1_1weights_1a223e8907034888392548ae901222b39c" compoundref="weights_8hpp" startline="209">m_comm</references>
        <references refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" compoundref="weights_8hpp" startline="211">m_cudnn</references>
        <references refid="classlbann_1_1weights_1a9287dfbd8a7e4a9f5e0d6371d43ee92f" compoundref="weights_8hpp" startline="216">m_matrix_height_dims</references>
        <references refid="classlbann_1_1weights_1a8317a198bc5b4cd6bee2c806eefd1f12" compoundref="weights_8hpp" startline="220">m_matrix_width_dims</references>
        <references refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" compoundref="weights_8hpp" startline="223">m_values</references>
        <references refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" compoundref="weights_8hpp" startline="228">m_initializer</references>
        <references refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" compoundref="weights_8hpp" startline="232">m_optimizer</references>
        <references refid="classlbann_1_1weights__initializer_1acc84ce49188b74b23987cef3db18525a">lbann::weights_initializer::copy</references>
        <references refid="classlbann_1_1optimizer_1adf19a1d19d832ebfe70072cc202cdf39">lbann::optimizer::copy</references>
        <references refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" compoundref="weights_8cpp" startline="248" endline="252">get_matrix_height</references>
        <references refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" compoundref="weights_8cpp" startline="254" endline="258">get_matrix_width</references>
        <references refid="classlbann_1_1weights_1a3962305112ba98ef2eb89c6f7035f6dd" compoundref="weights_8hpp" startline="240">m_frozen</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a82334405491bee7a2e2a1295dcb94134" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>lbann::weights::~weights</definition>
        <argsstring>()</argsstring>
        <name>~weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="66" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="114" bodyend="118"/>
        <references refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" compoundref="weights_8hpp" startline="223">m_values</references>
        <references refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" compoundref="weights_8hpp" startline="228">m_initializer</references>
        <references refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" compoundref="weights_8hpp" startline="232">m_optimizer</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1ab886e4d3ff62b62a7ac6c52e391666f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::weights::set_name</definition>
        <argsstring>(const std::string name)</argsstring>
        <name>set_name</name>
        <param>
          <type>const std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set weights name. Each set of weights in a model should have a unique, human-readable name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="72" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="72" bodyend="72"/>
        <references refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" compoundref="weights_8hpp" startline="206">m_name</references>
        <referencedby refid="namespacelbann_1_1proto_1a1e95259d3e7fd20a9c361850940a398a" compoundref="weights__factory_8cpp" startline="83" endline="114">lbann::proto::construct_weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a272f80766f31a5add7a970e5e8fcc352" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string lbann::weights::get_name</definition>
        <argsstring>() const</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get weights name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="74" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="74" bodyend="74"/>
        <references refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" compoundref="weights_8hpp" startline="206">m_name</references>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timeline_1afdf506e2c2d40c7b0d1f845fb0ed077e" compoundref="callback__timeline_8cpp" startline="96" endline="99">lbann::lbann_callback_timeline::on_optimize_end</referencedby>
        <referencedby refid="classlbann_1_1optimizer_1a66bb8d28dfb41452ac1a75a3efd47723" compoundref="optimizer_8cpp" startline="107" endline="115">lbann::optimizer::get_description</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a1a85fa681dcac2dbead2e5012099f380" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1weights" kindref="compound">weights</ref> *</type>
        <definition>virtual weights* lbann::weights::copy</definition>
        <argsstring>() const</argsstring>
        <name>copy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a copy of the weights. This function dynamically allocates memory for a weights instance and instantiates a copy. The caller is responsible for deallocating the instance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="81" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="81" bodyend="81"/>
        <references refid="classlbann_1_1weights_1a21a3a3f1806197d10619a1450871e066" compoundref="weights_8cpp" startline="35" endline="49">weights</references>
        <references refid="classlbann_1_1weights_1a476989a30cbe62ab2f680235981c3ba5" compoundref="weights_8cpp" startline="120" endline="122">setup</references>
        <references refid="classlbann_1_1weights_1ac1f4e6725fc8b265e0ed5dfe140a321a" compoundref="weights_8cpp" startline="238" endline="246">get_dims</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a476989a30cbe62ab2f680235981c3ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::weights::setup</definition>
        <argsstring>(int size)</argsstring>
        <name>setup</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup weights as a vector. The weight matrix is setup as a (size x 1) matrix in STAR,STAR format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="87" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="120" bodyend="122"/>
        <referencedby refid="classlbann_1_1weights_1a1a85fa681dcac2dbead2e5012099f380" compoundref="weights_8hpp" startline="81" endline="81">copy</referencedby>
        <referencedby refid="classlbann_1_1weights_1a64037919e22272a8931da328f0b2494a" compoundref="weights_8cpp" startline="124" endline="126">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a64037919e22272a8931da328f0b2494a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::weights::setup</definition>
        <argsstring>(std::vector&lt; int &gt; dims)</argsstring>
        <name>setup</name>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>dims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup weights as a tensor. The weight matrix is setup as a (prod(dims) x 1) matrix in STAR,STAR format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="92" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="124" bodyend="126"/>
        <references refid="classlbann_1_1weights_1a476989a30cbe62ab2f680235981c3ba5" compoundref="weights_8cpp" startline="120" endline="122">setup</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1aacf5c30b815e2f1c47a33043e440ed65" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::weights::setup</definition>
        <argsstring>(int matrix_height, int matrix_width, El::Distribution col_dist, El::Distribution row_dist)</argsstring>
        <name>setup</name>
        <param>
          <type>int</type>
          <declname>matrix_height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>matrix_width</declname>
        </param>
        <param>
          <type>El::Distribution</type>
          <declname>col_dist</declname>
        </param>
        <param>
          <type>El::Distribution</type>
          <declname>row_dist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup weights as a matrix. The weight matrix is setup as a (matrix_height x matrix_width) matrix in col_dist,row_dist format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="97" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="128" bodyend="135"/>
        <references refid="classlbann_1_1weights_1a476989a30cbe62ab2f680235981c3ba5" compoundref="weights_8cpp" startline="120" endline="122">setup</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::weights::setup</definition>
        <argsstring>(std::vector&lt; int &gt; matrix_height_dims, std::vector&lt; int &gt; matrix_width_dims, El::Distribution col_dist, El::Distribution row_dist)</argsstring>
        <name>setup</name>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>matrix_height_dims</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>matrix_width_dims</declname>
        </param>
        <param>
          <type>El::Distribution</type>
          <declname>col_dist</declname>
        </param>
        <param>
          <type>El::Distribution</type>
          <declname>row_dist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup weights as a matrix with tensor dimensions. The weight matrix is setup as a (prod(matrix_height_dims) x prod(matrix_width_dims)) matrix in col_dist,row_dist format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="105" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="137" bodyend="203"/>
        <references refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" compoundref="weights_8hpp" startline="223">m_values</references>
        <references refid="classlbann_1_1weights_1a9287dfbd8a7e4a9f5e0d6371d43ee92f" compoundref="weights_8hpp" startline="216">m_matrix_height_dims</references>
        <references refid="classlbann_1_1weights_1a8317a198bc5b4cd6bee2c806eefd1f12" compoundref="weights_8hpp" startline="220">m_matrix_width_dims</references>
        <references refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" compoundref="weights_8hpp" startline="206">m_name</references>
        <references refid="classlbann_1_1weights_1ac15d39b1d887c8ff927b0c29f667e752" compoundref="weights_8cpp" startline="442" endline="455">get_dims_string</references>
        <references refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" compoundref="weights_8hpp" startline="228">m_initializer</references>
        <references refid="classlbann_1_1weights__initializer_1a693fd517e4162029eafdfdee537c7066" compoundref="initializer_8cpp" startline="34" endline="74">lbann::weights_initializer::construct_matrix</references>
        <references refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" compoundref="weights_8cpp" startline="248" endline="252">get_matrix_height</references>
        <references refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" compoundref="weights_8cpp" startline="254" endline="258">get_matrix_width</references>
        <references refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" compoundref="weights_8hpp" startline="211">m_cudnn</references>
        <references refid="classlbann_1_1weights_1a7137725a835a37ded1a5ad7f739224a7" compoundref="weights_8cpp" startline="205" endline="236">setup_gpu</references>
        <references refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" compoundref="weights_8hpp" startline="232">m_optimizer</references>
        <references refid="classlbann_1_1optimizer_1a7641a88b3c166df2d974a298622b992b" compoundref="optimizer_8cpp" startline="414" endline="442">lbann::optimizer::setup</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1ac1f4e6725fc8b265e0ed5dfe140a321a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; lbann::weights::get_dims</definition>
        <argsstring>() const</argsstring>
        <name>get_dims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get weight tensor dimensions. The dimensions are sorted in decreasing order of the data strides. This is a generalization of the &quot;NCHW/NHWC&quot; notation commonly used to describe image data.</para><para>These dimensions are obtained by concatenating the matrix width dimensions with the matrix height dimensions (in that order). If the weight matrix is duplicated on all processes (i.e. in STAR,STAR layout) and the local matrices are fully-packed, the tensor data is fully-packed. If the matrix is STAR,STAR and the local matrices are not fully-packed, the tensor data is fully-packed w.r.t. the matrix height dimensions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="123" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="238" bodyend="246"/>
        <references refid="classlbann_1_1weights_1a783ce38ed0b75c0264dd7e28911d5ec0" compoundref="weights_8hpp" startline="136" endline="136">get_matrix_width_dims</references>
        <references refid="classlbann_1_1weights_1a2971f04c57d90fbb09631b1de3dad336" compoundref="weights_8hpp" startline="131" endline="131">get_matrix_height_dims</references>
        <referencedby refid="classlbann_1_1weights_1a1a85fa681dcac2dbead2e5012099f380" compoundref="weights_8hpp" startline="81" endline="81">copy</referencedby>
        <referencedby refid="classlbann_1_1weights_1aca05fb7e298c8f9f1f30fa1a8eac9fbf" compoundref="weights_8cpp" startline="334" endline="371">set_value</referencedby>
        <referencedby refid="classlbann_1_1weights_1a1a2631987f38d32a90fbee61053a04cc" compoundref="weights_8cpp" startline="472" endline="505">write_proto</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a3216926df0aaf7aa440b9e5317d05fa2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::weights::get_size</definition>
        <argsstring>() const</argsstring>
        <name>get_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get number of weights. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="125" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="125" bodyend="125"/>
        <references refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" compoundref="weights_8cpp" startline="248" endline="252">get_matrix_height</references>
        <references refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" compoundref="weights_8cpp" startline="254" endline="258">get_matrix_width</references>
        <referencedby refid="classlbann_1_1optimizer_1a435d31e3b7a0302e36439ee36f62dba8" compoundref="optimizer_8cpp" startline="279" endline="300">lbann::optimizer::add_to_gradient</referencedby>
        <referencedby refid="classlbann_1_1optimizer_1ac23ebde61a225f70c27ab937df5755ed" compoundref="optimizer_8cpp" startline="322" endline="366">lbann::optimizer::add_to_gradient_staging</referencedby>
        <referencedby refid="classlbann_1_1optimizer_1aa9f43ca3f22edc0a25d0509b6514a411" compoundref="optimizer_8cpp" startline="444" endline="470">lbann::optimizer::step</referencedby>
        <referencedby refid="classlbann_1_1weights_1aaae37ad2df0808eb606609cd58cd223b" compoundref="weights_8cpp" startline="314" endline="332">set_value</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a2971f04c57d90fbb09631b1de3dad336" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; lbann::weights::get_matrix_height_dims</definition>
        <argsstring>() const</argsstring>
        <name>get_matrix_height_dims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get tensor dimensions corresponding to weight matrix height. The dimensions are sorted in decreasing order of strides. Matrix rows are fully-packed w.r.t. the matrix height dimensions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="131" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="131" bodyend="131"/>
        <references refid="classlbann_1_1weights_1a9287dfbd8a7e4a9f5e0d6371d43ee92f" compoundref="weights_8hpp" startline="216">m_matrix_height_dims</references>
        <referencedby refid="classlbann_1_1weights_1ac1f4e6725fc8b265e0ed5dfe140a321a" compoundref="weights_8cpp" startline="238" endline="246">get_dims</referencedby>
        <referencedby refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" compoundref="weights_8cpp" startline="248" endline="252">get_matrix_height</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a783ce38ed0b75c0264dd7e28911d5ec0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; lbann::weights::get_matrix_width_dims</definition>
        <argsstring>() const</argsstring>
        <name>get_matrix_width_dims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get tensor dimensions corresponding to weight matrix width. The dimensions are sorted in decreasing order of strides. Matrix columns are fully-packed w.r.t. the matrix width dimensions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="136" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="136" bodyend="136"/>
        <references refid="classlbann_1_1weights_1a8317a198bc5b4cd6bee2c806eefd1f12" compoundref="weights_8hpp" startline="220">m_matrix_width_dims</references>
        <references refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" compoundref="weights_8cpp" startline="248" endline="252">get_matrix_height</references>
        <references refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" compoundref="weights_8cpp" startline="254" endline="258">get_matrix_width</references>
        <referencedby refid="classlbann_1_1weights_1ac1f4e6725fc8b265e0ed5dfe140a321a" compoundref="weights_8cpp" startline="238" endline="246">get_dims</referencedby>
        <referencedby refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" compoundref="weights_8cpp" startline="254" endline="258">get_matrix_width</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::weights::get_matrix_height</definition>
        <argsstring>() const</argsstring>
        <name>get_matrix_height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get weight matrix height. If there are no matrix height dimensions, the height is one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="140" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="248" bodyend="252"/>
        <references refid="classlbann_1_1weights_1a2971f04c57d90fbb09631b1de3dad336" compoundref="weights_8hpp" startline="131" endline="131">get_matrix_height_dims</references>
        <referencedby refid="classlbann_1_1weights_1a3216926df0aaf7aa440b9e5317d05fa2" compoundref="weights_8hpp" startline="125" endline="125">get_size</referencedby>
        <referencedby refid="classlbann_1_1weights_1a783ce38ed0b75c0264dd7e28911d5ec0" compoundref="weights_8hpp" startline="136" endline="136">get_matrix_width_dims</referencedby>
        <referencedby refid="classlbann_1_1adam_1a77464b030ec2be620155eff22acdff76" compoundref="adam_8cpp" startline="47" endline="66">lbann::adam::adam</referencedby>
        <referencedby refid="classlbann_1_1adam_1a00051b788b2bb34102a6bad5a380fc85" compoundref="adam_8cpp" startline="68" endline="109">lbann::adam::operator=</referencedby>
        <referencedby refid="classlbann_1_1optimizer_1a7641a88b3c166df2d974a298622b992b" compoundref="optimizer_8cpp" startline="414" endline="442">lbann::optimizer::setup</referencedby>
        <referencedby refid="classlbann_1_1sgd_1ac0a74200f44b45ced9b44e3b6349581a" compoundref="sgd_8cpp" startline="41" endline="54">lbann::sgd::sgd</referencedby>
        <referencedby refid="classlbann_1_1sgd_1ad3949e74505cd25b267dbdd5b510a83f" compoundref="sgd_8cpp" startline="56" endline="83">lbann::sgd::operator=</referencedby>
        <referencedby refid="classlbann_1_1weights_1ab7cca67d4459f3ba6a72dae4bb8d5cc6" compoundref="weights_8cpp" startline="51" endline="79">weights</referencedby>
        <referencedby refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" compoundref="weights_8cpp" startline="81" endline="112">operator=</referencedby>
        <referencedby refid="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" compoundref="weights_8cpp" startline="137" endline="203">setup</referencedby>
        <referencedby refid="classlbann_1_1weights_1aaae37ad2df0808eb606609cd58cd223b" compoundref="weights_8cpp" startline="314" endline="332">set_value</referencedby>
        <referencedby refid="classlbann_1_1weights_1a1a2631987f38d32a90fbee61053a04cc" compoundref="weights_8cpp" startline="472" endline="505">write_proto</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::weights::get_matrix_width</definition>
        <argsstring>() const</argsstring>
        <name>get_matrix_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get weight matrix width. If there are no matrix width dimensions, the width is one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="144" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="254" bodyend="258"/>
        <references refid="classlbann_1_1weights_1a783ce38ed0b75c0264dd7e28911d5ec0" compoundref="weights_8hpp" startline="136" endline="136">get_matrix_width_dims</references>
        <referencedby refid="classlbann_1_1weights_1a3216926df0aaf7aa440b9e5317d05fa2" compoundref="weights_8hpp" startline="125" endline="125">get_size</referencedby>
        <referencedby refid="classlbann_1_1weights_1a783ce38ed0b75c0264dd7e28911d5ec0" compoundref="weights_8hpp" startline="136" endline="136">get_matrix_width_dims</referencedby>
        <referencedby refid="classlbann_1_1adam_1a77464b030ec2be620155eff22acdff76" compoundref="adam_8cpp" startline="47" endline="66">lbann::adam::adam</referencedby>
        <referencedby refid="classlbann_1_1adam_1a00051b788b2bb34102a6bad5a380fc85" compoundref="adam_8cpp" startline="68" endline="109">lbann::adam::operator=</referencedby>
        <referencedby refid="classlbann_1_1optimizer_1a7641a88b3c166df2d974a298622b992b" compoundref="optimizer_8cpp" startline="414" endline="442">lbann::optimizer::setup</referencedby>
        <referencedby refid="classlbann_1_1sgd_1ac0a74200f44b45ced9b44e3b6349581a" compoundref="sgd_8cpp" startline="41" endline="54">lbann::sgd::sgd</referencedby>
        <referencedby refid="classlbann_1_1sgd_1ad3949e74505cd25b267dbdd5b510a83f" compoundref="sgd_8cpp" startline="56" endline="83">lbann::sgd::operator=</referencedby>
        <referencedby refid="classlbann_1_1weights_1ab7cca67d4459f3ba6a72dae4bb8d5cc6" compoundref="weights_8cpp" startline="51" endline="79">weights</referencedby>
        <referencedby refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" compoundref="weights_8cpp" startline="81" endline="112">operator=</referencedby>
        <referencedby refid="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" compoundref="weights_8cpp" startline="137" endline="203">setup</referencedby>
        <referencedby refid="classlbann_1_1weights_1a7ac0a9e53b249f16d5e2978e47bd6b7f" compoundref="weights_8cpp" startline="373" endline="412">set_value</referencedby>
        <referencedby refid="classlbann_1_1weights_1a1a2631987f38d32a90fbee61053a04cc" compoundref="weights_8cpp" startline="472" endline="505">write_proto</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1ab8c007f217040d2c4a99acc1977d9d54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref> *</type>
        <definition>cudnn::cudnn_manager* lbann::weights::get_cudnn_manager</definition>
        <argsstring>()</argsstring>
        <name>get_cudnn_manager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get reference to cuDNN manager. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="147" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="147" bodyend="147"/>
        <references refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" compoundref="weights_8hpp" startline="211">m_cudnn</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a448c8a6fa03048da9f3ae275d29c824d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlbann_1_1weights__initializer" kindref="compound">weights_initializer</ref> &amp;</type>
        <definition>weights_initializer&amp; lbann::weights::get_initializer</definition>
        <argsstring>()</argsstring>
        <name>get_initializer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get weights initializer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="150" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="150" bodyend="150"/>
        <references refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" compoundref="weights_8hpp" startline="228">m_initializer</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1aeaf4d47037d464922121223d4b0b6c33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classlbann_1_1weights__initializer" kindref="compound">weights_initializer</ref> &amp;</type>
        <definition>const weights_initializer&amp; lbann::weights::get_initializer</definition>
        <argsstring>() const</argsstring>
        <name>get_initializer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get weights initializer (const). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="152" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="152" bodyend="152"/>
        <references refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" compoundref="weights_8hpp" startline="228">m_initializer</references>
        <references refid="classlbann_1_1weights_1a71e56d32d8e9c0e3ddf0ec2d0cd3924d" compoundref="weights_8cpp" startline="260" endline="263">set_initializer</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a71e56d32d8e9c0e3ddf0ec2d0cd3924d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::weights::set_initializer</definition>
        <argsstring>(weights_initializer *initializer)</argsstring>
        <name>set_initializer</name>
        <param>
          <type><ref refid="classlbann_1_1weights__initializer" kindref="compound">weights_initializer</ref> *</type>
          <declname>initializer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set weights initializer. This takes ownership of the initializer and deallocates it during destruction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="157" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="260" bodyend="263"/>
        <references refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" compoundref="weights_8hpp" startline="228">m_initializer</references>
        <referencedby refid="classlbann_1_1weights_1aeaf4d47037d464922121223d4b0b6c33" compoundref="weights_8hpp" startline="152" endline="152">get_initializer</referencedby>
        <referencedby refid="namespacelbann_1_1proto_1a1e95259d3e7fd20a9c361850940a398a" compoundref="weights__factory_8cpp" startline="83" endline="114">lbann::proto::construct_weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1accdbbd16ada5b5b12890431b92c2e706" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref> *</type>
        <definition>optimizer* lbann::weights::get_optimizer</definition>
        <argsstring>()</argsstring>
        <name>get_optimizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get weights optimizer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="160" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="160" bodyend="160"/>
        <references refid="classlbann_1_1weights_1a3962305112ba98ef2eb89c6f7035f6dd" compoundref="weights_8hpp" startline="240">m_frozen</references>
        <references refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" compoundref="weights_8hpp" startline="232">m_optimizer</references>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a5754ec6534e1b47e2363c2848649f8a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref> *</type>
        <definition>const optimizer* lbann::weights::get_optimizer</definition>
        <argsstring>() const</argsstring>
        <name>get_optimizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get weights optimizer (const). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="162" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="162" bodyend="162"/>
        <references refid="classlbann_1_1weights_1a3962305112ba98ef2eb89c6f7035f6dd" compoundref="weights_8hpp" startline="240">m_frozen</references>
        <references refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" compoundref="weights_8hpp" startline="232">m_optimizer</references>
        <references refid="classlbann_1_1weights_1ab641f66c09c8b5d491c0f262e8cb55e6" compoundref="weights_8cpp" startline="265" endline="268">set_optimizer</references>
        <references refid="classlbann_1_1weights_1a09fa4082be905c0c124dde3033e2461b" compoundref="weights_8cpp" startline="270" endline="289">get_values</references>
        <references refid="classlbann_1_1weights_1ae10da5d92c9402ced7e55f04fbd05a2e" compoundref="weights_8cpp" startline="291" endline="312">set_values</references>
        <references refid="classlbann_1_1weights_1aaae37ad2df0808eb606609cd58cd223b" compoundref="weights_8cpp" startline="314" endline="332">set_value</references>
        <references refid="classlbann_1_1weights_1a506b6445c46a92cdadad75caf1c166d3" compoundref="weights_8cpp" startline="414" endline="428">get_values_view</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1ab641f66c09c8b5d491c0f262e8cb55e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::weights::set_optimizer</definition>
        <argsstring>(optimizer *opt)</argsstring>
        <name>set_optimizer</name>
        <param>
          <type><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref> *</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set weights optimizer. This takes ownership of the optimizer and deallocates it during destruction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="167" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="265" bodyend="268"/>
        <references refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" compoundref="weights_8hpp" startline="232">m_optimizer</references>
        <referencedby refid="classlbann_1_1weights_1a5754ec6534e1b47e2363c2848649f8a2" compoundref="weights_8hpp" startline="162" endline="162">get_optimizer</referencedby>
        <referencedby refid="namespacelbann_1_1proto_1a1e95259d3e7fd20a9c361850940a398a" compoundref="weights__factory_8cpp" startline="83" endline="114">lbann::proto::construct_weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a09fa4082be905c0c124dde3033e2461b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
        <definition>const AbsDistMat &amp; lbann::weights::get_values</definition>
        <argsstring>()</argsstring>
        <name>get_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the weight matrix. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="170" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="270" bodyend="289"/>
        <references refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" compoundref="weights_8hpp" startline="223">m_values</references>
        <references refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" compoundref="weights_8hpp" startline="211">m_cudnn</references>
        <referencedby refid="classlbann_1_1weights_1a5754ec6534e1b47e2363c2848649f8a2" compoundref="weights_8hpp" startline="162" endline="162">get_optimizer</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate_1aa9ce00b0ad1fefb20a1108d1120e82d5" compoundref="callback__learning__rate_8cpp" startline="275" endline="285">lbann::lbann_callback_optimizerwise_adaptive_learning_rate::optimizer_schedule</referencedby>
        <referencedby refid="classlbann_1_1optimizer_1a7641a88b3c166df2d974a298622b992b" compoundref="optimizer_8cpp" startline="414" endline="442">lbann::optimizer::setup</referencedby>
        <referencedby refid="classlbann_1_1optimizer_1aa9f43ca3f22edc0a25d0509b6514a411" compoundref="optimizer_8cpp" startline="444" endline="470">lbann::optimizer::step</referencedby>
        <referencedby refid="classlbann_1_1weights_1a506b6445c46a92cdadad75caf1c166d3" compoundref="weights_8cpp" startline="414" endline="428">get_values_view</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1ae10da5d92c9402ced7e55f04fbd05a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::weights::set_values</definition>
        <argsstring>(const AbsDistMat &amp;values)</argsstring>
        <name>set_values</name>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the weight matrix. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="172" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="291" bodyend="312"/>
        <references refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" compoundref="weights_8hpp" startline="223">m_values</references>
        <references refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" compoundref="weights_8hpp" startline="211">m_cudnn</references>
        <referencedby refid="classlbann_1_1weights_1a5754ec6534e1b47e2363c2848649f8a2" compoundref="weights_8hpp" startline="162" endline="162">get_optimizer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1aaae37ad2df0808eb606609cd58cd223b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::weights::set_value</definition>
        <argsstring>(DataType value, int index)</argsstring>
        <name>set_value</name>
        <param>
          <type>DataType</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a weight value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="175" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="314" bodyend="332"/>
        <references refid="classlbann_1_1weights_1a3216926df0aaf7aa440b9e5317d05fa2" compoundref="weights_8hpp" startline="125" endline="125">get_size</references>
        <references refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" compoundref="weights_8cpp" startline="248" endline="252">get_matrix_height</references>
        <referencedby refid="classlbann_1_1weights_1a5754ec6534e1b47e2363c2848649f8a2" compoundref="weights_8hpp" startline="162" endline="162">get_optimizer</referencedby>
        <referencedby refid="classlbann_1_1weights_1aca05fb7e298c8f9f1f30fa1a8eac9fbf" compoundref="weights_8cpp" startline="334" endline="371">set_value</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1aca05fb7e298c8f9f1f30fa1a8eac9fbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::weights::set_value</definition>
        <argsstring>(DataType value, std::vector&lt; int &gt; pos)</argsstring>
        <name>set_value</name>
        <param>
          <type>DataType</type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set an entry in the weight tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="177" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="334" bodyend="371"/>
        <references refid="classlbann_1_1weights_1ac1f4e6725fc8b265e0ed5dfe140a321a" compoundref="weights_8cpp" startline="238" endline="246">get_dims</references>
        <references refid="classlbann_1_1weights_1aaae37ad2df0808eb606609cd58cd223b" compoundref="weights_8cpp" startline="314" endline="332">set_value</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a7ac0a9e53b249f16d5e2978e47bd6b7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::weights::set_value</definition>
        <argsstring>(DataType value, int row, int col)</argsstring>
        <name>set_value</name>
        <param>
          <type>DataType</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set an entry in the weight matrix. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="179" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="373" bodyend="412"/>
        <references refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" compoundref="weights_8cpp" startline="248" endline="252">get_matrix_height</references>
        <references refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" compoundref="weights_8cpp" startline="254" endline="258">get_matrix_width</references>
        <references refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" compoundref="weights_8hpp" startline="211">m_cudnn</references>
        <references refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" compoundref="weights_8hpp" startline="223">m_values</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a506b6445c46a92cdadad75caf1c166d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::weights::get_values_view</definition>
        <argsstring>(AbsDistMat &amp;values_v)</argsstring>
        <name>get_values_view</name>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>values_v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a view into the weight matrix. If values_v has a different matrix distribution than the weight matrix, the matrix values are copied into values_v. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="185" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="414" bodyend="428"/>
        <references refid="classlbann_1_1weights_1a09fa4082be905c0c124dde3033e2461b" compoundref="weights_8cpp" startline="270" endline="289">get_values</references>
        <references refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" compoundref="weights_8hpp" startline="211">m_cudnn</references>
        <references refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" compoundref="weights_8hpp" startline="223">m_values</references>
        <referencedby refid="classlbann_1_1weights_1a5754ec6534e1b47e2363c2848649f8a2" compoundref="weights_8hpp" startline="162" endline="162">get_optimizer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1ab9fe32e21ae25f6b000497addb46351f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::weights::freeze</definition>
        <argsstring>()</argsstring>
        <name>freeze</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="192" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="192" bodyend="192"/>
        <references refid="classlbann_1_1weights_1a3962305112ba98ef2eb89c6f7035f6dd" compoundref="weights_8hpp" startline="240">m_frozen</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1ab1e71f962a7702d0aa023fedf1c99e98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::weights::unfreeze</definition>
        <argsstring>()</argsstring>
        <name>unfreeze</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="193" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="193" bodyend="193"/>
        <references refid="classlbann_1_1weights_1a3962305112ba98ef2eb89c6f7035f6dd" compoundref="weights_8hpp" startline="240">m_frozen</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a5874876052191837679634186c64c388" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::weights::is_frozen</definition>
        <argsstring>() const</argsstring>
        <name>is_frozen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="194" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="194" bodyend="194"/>
        <references refid="classlbann_1_1weights_1a3962305112ba98ef2eb89c6f7035f6dd" compoundref="weights_8hpp" startline="240">m_frozen</references>
        <references refid="classlbann_1_1weights_1a48dd6b3d37668bf2ab5abafdf9dabde4" compoundref="weights_8cpp" startline="457" endline="470">save_to_checkpoint_shared</references>
        <references refid="classlbann_1_1weights_1ad41cac4b516d83f086cdfbcdfaa8223c" compoundref="weights_8cpp" startline="507" endline="521">load_from_checkpoint_shared</references>
        <references refid="classlbann_1_1weights_1a1a2631987f38d32a90fbee61053a04cc" compoundref="weights_8cpp" startline="472" endline="505">write_proto</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a48dd6b3d37668bf2ab5abafdf9dabde4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::weights::save_to_checkpoint_shared</definition>
        <argsstring>(persist &amp;p)</argsstring>
        <name>save_to_checkpoint_shared</name>
        <param>
          <type><ref refid="classlbann_1_1persist" kindref="compound">persist</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="196" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="457" bodyend="470"/>
        <references refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" compoundref="weights_8hpp" startline="206">m_name</references>
        <references refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" compoundref="weights_8hpp" startline="223">m_values</references>
        <references refid="classlbann_1_1persist_1a9170de652405d86d9ba9b3793f8781c6" compoundref="persist_8cpp" startline="342" endline="360">lbann::persist::write_distmat</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c">lbann::model</references>
        <references refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" compoundref="weights_8hpp" startline="232">m_optimizer</references>
        <references refid="classlbann_1_1optimizer_1afed10c6d8c5bd922f95075abeff711ce" compoundref="optimizer_8cpp" startline="487" endline="493">lbann::optimizer::save_to_checkpoint_shared</references>
        <referencedby refid="classlbann_1_1weights_1a5874876052191837679634186c64c388" compoundref="weights_8hpp" startline="194" endline="194">is_frozen</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1ad41cac4b516d83f086cdfbcdfaa8223c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::weights::load_from_checkpoint_shared</definition>
        <argsstring>(persist &amp;p)</argsstring>
        <name>load_from_checkpoint_shared</name>
        <param>
          <type><ref refid="classlbann_1_1persist" kindref="compound">persist</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="197" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="507" bodyend="521"/>
        <references refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" compoundref="weights_8hpp" startline="206">m_name</references>
        <references refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" compoundref="weights_8hpp" startline="223">m_values</references>
        <references refid="classlbann_1_1persist_1aa98be93f33b510e5b506b61de6bd79bd" compoundref="persist_8cpp" startline="362" endline="387">lbann::persist::read_distmat</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c">lbann::model</references>
        <references refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" compoundref="weights_8hpp" startline="232">m_optimizer</references>
        <references refid="classlbann_1_1optimizer_1a42a52aab9a682fda57c1e639968a44b9" compoundref="optimizer_8cpp" startline="495" endline="499">lbann::optimizer::load_from_checkpoint_shared</references>
        <referencedby refid="classlbann_1_1weights_1a5874876052191837679634186c64c388" compoundref="weights_8hpp" startline="194" endline="194">is_frozen</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1weights_1a1a2631987f38d32a90fbee61053a04cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::weights::write_proto</definition>
        <argsstring>(lbann_data::WeightsData *proto) const</argsstring>
        <name>write_proto</name>
        <param>
          <type>lbann_data::WeightsData *</type>
          <declname>proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write weights to proto file </para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000011"><xreftitle>Todo</xreftitle><xrefdescription><para>What if weights are on GPU? </para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000012"><xreftitle>Todo</xreftitle><xrefdescription><para>What if world master is not process 0? </para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000013"><xreftitle>Todo</xreftitle><xrefdescription><para>OpenMP parallelization </para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000014"><xreftitle>Todo</xreftitle><xrefdescription><para>Our matrices are column-major while Numpy expects row-major matrices. This row-wise iteration is fine for matrices and column vectors, but it can mess up the order of the weights if a high-dimensional tensor is represented as a matrix. This is what we need for quantization on convolution kernel weights. </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="200" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="472" bodyend="505"/>
        <references refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" compoundref="weights_8hpp" startline="206">m_name</references>
        <references refid="classlbann_1_1weights_1ac1f4e6725fc8b265e0ed5dfe140a321a" compoundref="weights_8cpp" startline="238" endline="246">get_dims</references>
        <references refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" compoundref="weights_8cpp" startline="248" endline="252">get_matrix_height</references>
        <references refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" compoundref="weights_8cpp" startline="254" endline="258">get_matrix_width</references>
        <references refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" compoundref="weights_8hpp" startline="223">m_values</references>
        <references refid="classlbann_1_1weights_1a223e8907034888392548ae901222b39c" compoundref="weights_8hpp" startline="209">m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <referencedby refid="classlbann_1_1weights_1a5874876052191837679634186c64c388" compoundref="weights_8hpp" startline="194" endline="194">is_frozen</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlbann_1_1weights_1a7137725a835a37ded1a5ad7f739224a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::weights::setup_gpu</definition>
        <argsstring>()</argsstring>
        <name>setup_gpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup GPU objects for weights. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="243" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="205" bodyend="236"/>
        <references refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" compoundref="weights_8hpp" startline="223">m_values</references>
        <references refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" compoundref="weights_8hpp" startline="211">m_cudnn</references>
        <referencedby refid="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" compoundref="weights_8cpp" startline="137" endline="203">setup</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classlbann_1_1weights_1ac15d39b1d887c8ff927b0c29f667e752" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string lbann::weights::get_dims_string</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;height_dims, const std::vector&lt; int &gt; &amp;width_dims)</argsstring>
        <name>get_dims_string</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>height_dims</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>width_dims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get string describing weight tensor dimensions. height_dims and width_dims are the dimensions of the weight matrix. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="249" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/weights/weights.cpp" bodystart="442" bodyend="455"/>
        <referencedby refid="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" compoundref="weights_8cpp" startline="137" endline="203">setup</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Neural network weights. Weights are tensors that act as trainable parameters for a neural network. The values can be initialized with a weights initializer and are optimized with first-order methods (e.g. stochastic gradient descent).</para><para>Internally, the weight values are stored in a 2D distributed matrix. The &quot;matrix height dimensions&quot; are tensor dimensions that correspond to the matrix height. The remaining dimensions, the &quot;matrix width dimensions,&quot; correspond to the matrix width.</para><para>Note that LBANN weights are similar to Tensorflow variables and Caffe parameters. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="2366">
        <label>lbann::optimizer</label>
        <link refid="classlbann_1_1optimizer"/>
        <childnode refid="2367" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="2368" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
        <childnode refid="2369" relation="usage">
          <edgelabel>m_gradient_allreduce_req</edgelabel>
        </childnode>
        <childnode refid="2365" relation="usage">
          <edgelabel>m_weights</edgelabel>
        </childnode>
      </node>
      <node id="2368">
        <label>lbann::cudnn::cudnn_manager</label>
        <link refid="classlbann_1_1cudnn_1_1cudnn__manager"/>
      </node>
      <node id="2370">
        <label>lbann::weights_initializer</label>
        <link refid="classlbann_1_1weights__initializer"/>
        <childnode refid="2367" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
      <node id="2365">
        <label>lbann::weights</label>
        <link refid="classlbann_1_1weights"/>
        <childnode refid="2366" relation="usage">
          <edgelabel>m_optimizer</edgelabel>
        </childnode>
        <childnode refid="2367" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="2370" relation="usage">
          <edgelabel>m_initializer</edgelabel>
        </childnode>
        <childnode refid="2368" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="2367">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="2369">
        <label>lbann::Al::request</label>
        <link refid="structlbann_1_1Al_1_1request"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" line="58" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/weights/weights.hpp" bodystart="58" bodyend="252"/>
    <listofallmembers>
      <member refid="classlbann_1_1weights_1a1a85fa681dcac2dbead2e5012099f380" prot="public" virt="virtual"><scope>lbann::weights</scope><name>copy</name></member>
      <member refid="classlbann_1_1weights_1ab9fe32e21ae25f6b000497addb46351f" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>freeze</name></member>
      <member refid="classlbann_1_1weights_1ab8c007f217040d2c4a99acc1977d9d54" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_cudnn_manager</name></member>
      <member refid="classlbann_1_1weights_1ac1f4e6725fc8b265e0ed5dfe140a321a" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_dims</name></member>
      <member refid="classlbann_1_1weights_1ac15d39b1d887c8ff927b0c29f667e752" prot="private" virt="non-virtual"><scope>lbann::weights</scope><name>get_dims_string</name></member>
      <member refid="classlbann_1_1weights_1a448c8a6fa03048da9f3ae275d29c824d" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_initializer</name></member>
      <member refid="classlbann_1_1weights_1aeaf4d47037d464922121223d4b0b6c33" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_initializer</name></member>
      <member refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_matrix_height</name></member>
      <member refid="classlbann_1_1weights_1a2971f04c57d90fbb09631b1de3dad336" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_matrix_height_dims</name></member>
      <member refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_matrix_width</name></member>
      <member refid="classlbann_1_1weights_1a783ce38ed0b75c0264dd7e28911d5ec0" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_matrix_width_dims</name></member>
      <member refid="classlbann_1_1weights_1a272f80766f31a5add7a970e5e8fcc352" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_name</name></member>
      <member refid="classlbann_1_1weights_1accdbbd16ada5b5b12890431b92c2e706" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_optimizer</name></member>
      <member refid="classlbann_1_1weights_1a5754ec6534e1b47e2363c2848649f8a2" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_optimizer</name></member>
      <member refid="classlbann_1_1weights_1a3216926df0aaf7aa440b9e5317d05fa2" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_size</name></member>
      <member refid="classlbann_1_1weights_1a09fa4082be905c0c124dde3033e2461b" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_values</name></member>
      <member refid="classlbann_1_1weights_1a506b6445c46a92cdadad75caf1c166d3" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>get_values_view</name></member>
      <member refid="classlbann_1_1weights_1a5874876052191837679634186c64c388" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>is_frozen</name></member>
      <member refid="classlbann_1_1weights_1ad41cac4b516d83f086cdfbcdfaa8223c" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1weights_1a223e8907034888392548ae901222b39c" prot="private" virt="non-virtual"><scope>lbann::weights</scope><name>m_comm</name></member>
      <member refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" prot="private" virt="non-virtual"><scope>lbann::weights</scope><name>m_cudnn</name></member>
      <member refid="classlbann_1_1weights_1a3962305112ba98ef2eb89c6f7035f6dd" prot="private" virt="non-virtual"><scope>lbann::weights</scope><name>m_frozen</name></member>
      <member refid="classlbann_1_1weights_1a3ddbcce8d543e975efeebdb43e82444c" prot="private" virt="non-virtual"><scope>lbann::weights</scope><name>m_initializer</name></member>
      <member refid="classlbann_1_1weights_1a9287dfbd8a7e4a9f5e0d6371d43ee92f" prot="private" virt="non-virtual"><scope>lbann::weights</scope><name>m_matrix_height_dims</name></member>
      <member refid="classlbann_1_1weights_1a8317a198bc5b4cd6bee2c806eefd1f12" prot="private" virt="non-virtual"><scope>lbann::weights</scope><name>m_matrix_width_dims</name></member>
      <member refid="classlbann_1_1weights_1a08abf0bb29aa47be21bfc7473b4b9b99" prot="private" virt="non-virtual"><scope>lbann::weights</scope><name>m_name</name></member>
      <member refid="classlbann_1_1weights_1a5f3b4d4a3ad390c2a9bdbe6c4971de65" prot="private" virt="non-virtual"><scope>lbann::weights</scope><name>m_optimizer</name></member>
      <member refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" prot="private" virt="non-virtual"><scope>lbann::weights</scope><name>m_values</name></member>
      <member refid="classlbann_1_1weights_1ac1021a88dc4efe5f91a40fae223edf4b" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>operator=</name></member>
      <member refid="classlbann_1_1weights_1afe38b5936c7fe885023474dd92c72c67" prot="private" virt="non-virtual"><scope>lbann::weights</scope><name>optimizer</name></member>
      <member refid="classlbann_1_1weights_1a48dd6b3d37668bf2ab5abafdf9dabde4" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1weights_1a71e56d32d8e9c0e3ddf0ec2d0cd3924d" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>set_initializer</name></member>
      <member refid="classlbann_1_1weights_1ab886e4d3ff62b62a7ac6c52e391666f2" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>set_name</name></member>
      <member refid="classlbann_1_1weights_1ab641f66c09c8b5d491c0f262e8cb55e6" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>set_optimizer</name></member>
      <member refid="classlbann_1_1weights_1aaae37ad2df0808eb606609cd58cd223b" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>set_value</name></member>
      <member refid="classlbann_1_1weights_1aca05fb7e298c8f9f1f30fa1a8eac9fbf" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>set_value</name></member>
      <member refid="classlbann_1_1weights_1a7ac0a9e53b249f16d5e2978e47bd6b7f" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>set_value</name></member>
      <member refid="classlbann_1_1weights_1ae10da5d92c9402ced7e55f04fbd05a2e" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>set_values</name></member>
      <member refid="classlbann_1_1weights_1a476989a30cbe62ab2f680235981c3ba5" prot="public" virt="virtual"><scope>lbann::weights</scope><name>setup</name></member>
      <member refid="classlbann_1_1weights_1a64037919e22272a8931da328f0b2494a" prot="public" virt="virtual"><scope>lbann::weights</scope><name>setup</name></member>
      <member refid="classlbann_1_1weights_1aacf5c30b815e2f1c47a33043e440ed65" prot="public" virt="virtual"><scope>lbann::weights</scope><name>setup</name></member>
      <member refid="classlbann_1_1weights_1a32a8395709a5238ca93d4b4f102cdc12" prot="public" virt="virtual"><scope>lbann::weights</scope><name>setup</name></member>
      <member refid="classlbann_1_1weights_1a7137725a835a37ded1a5ad7f739224a7" prot="private" virt="virtual"><scope>lbann::weights</scope><name>setup_gpu</name></member>
      <member refid="classlbann_1_1weights_1ab1e71f962a7702d0aa023fedf1c99e98" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>unfreeze</name></member>
      <member refid="classlbann_1_1weights_1a21a3a3f1806197d10619a1450871e066" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>weights</name></member>
      <member refid="classlbann_1_1weights_1ab7cca67d4459f3ba6a72dae4bb8d5cc6" prot="public" virt="non-virtual"><scope>lbann::weights</scope><name>weights</name></member>
      <member refid="classlbann_1_1weights_1a1a2631987f38d32a90fbee61053a04cc" prot="public" virt="virtual"><scope>lbann::weights</scope><name>write_proto</name></member>
      <member refid="classlbann_1_1weights_1a82334405491bee7a2e2a1295dcb94134" prot="public" virt="virtual"><scope>lbann::weights</scope><name>~weights</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
