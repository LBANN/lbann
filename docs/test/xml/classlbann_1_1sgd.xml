<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1sgd" kind="class" language="C++" prot="public">
    <compoundname>lbann::sgd</compoundname>
    <basecompoundref refid="classlbann_1_1optimizer" prot="public" virt="non-virtual">lbann::optimizer</basecompoundref>
    <includes refid="sgd_8hpp" local="no">sgd.hpp</includes>
    <innerclass refid="structlbann_1_1sgd_1_1packing__header" prot="private">lbann::sgd::packing_header</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlbann_1_1sgd_1a2e56d66d350debcf0d2c3ad76c214074" prot="private" static="no" mutable="no">
        <type>DataType</type>
        <definition>DataType lbann::sgd::m_momentum</definition>
        <argsstring></argsstring>
        <name>m_momentum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Momentum. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="75" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" bodystart="75" bodyend="-1"/>
        <referencedby refid="classlbann_1_1sgd_1a2b4a91cbb155ed94a185db79fdbf6284" compoundref="sgd_8hpp" startline="95" endline="103">unpack_scalars</referencedby>
        <referencedby refid="classlbann_1_1sgd_1ad3949e74505cd25b267dbdd5b510a83f" compoundref="sgd_8cpp" startline="56" endline="83">operator=</referencedby>
        <referencedby refid="classlbann_1_1sgd_1a2022661b9ef83e418a0a980207cb231e" compoundref="sgd_8cpp" startline="94" endline="100">get_description</referencedby>
        <referencedby refid="classlbann_1_1sgd_1a083a44b456939b58f531cea1fde2378b" compoundref="sgd_8cpp" startline="121" endline="180">step_compute</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1sgd_1a82da488e5d1530f50f67cd4ea30909cb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lbann::sgd::m_nesterov</definition>
        <argsstring></argsstring>
        <name>m_nesterov</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nesterov acceleration. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="77" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" bodystart="77" bodyend="-1"/>
        <referencedby refid="classlbann_1_1sgd_1ad3949e74505cd25b267dbdd5b510a83f" compoundref="sgd_8cpp" startline="56" endline="83">operator=</referencedby>
        <referencedby refid="classlbann_1_1sgd_1a2022661b9ef83e418a0a980207cb231e" compoundref="sgd_8cpp" startline="94" endline="100">get_description</referencedby>
        <referencedby refid="classlbann_1_1sgd_1a083a44b456939b58f531cea1fde2378b" compoundref="sgd_8cpp" startline="121" endline="180">step_compute</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1sgd_1a27f2d893014cef8357edffb63bf649f0" prot="private" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> *</type>
        <definition>AbsDistMat* lbann::sgd::m_velocity</definition>
        <argsstring></argsstring>
        <name>m_velocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Velocity term for momentum SGD. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="79" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" bodystart="79" bodyend="-1"/>
        <referencedby refid="classlbann_1_1sgd_1ac0a74200f44b45ced9b44e3b6349581a" compoundref="sgd_8cpp" startline="41" endline="54">sgd</referencedby>
        <referencedby refid="classlbann_1_1sgd_1ad3949e74505cd25b267dbdd5b510a83f" compoundref="sgd_8cpp" startline="56" endline="83">operator=</referencedby>
        <referencedby refid="classlbann_1_1sgd_1a0d0410edb1ca4510509cc9a5de105b4f" compoundref="sgd_8cpp" startline="85" endline="92">~sgd</referencedby>
        <referencedby refid="classlbann_1_1sgd_1a616c3cfd457ae1e771710b481b4c1bbb" compoundref="sgd_8cpp" startline="102" endline="119">setup</referencedby>
        <referencedby refid="classlbann_1_1sgd_1a083a44b456939b58f531cea1fde2378b" compoundref="sgd_8cpp" startline="121" endline="180">step_compute</referencedby>
        <referencedby refid="classlbann_1_1sgd_1a78ad11ca7424d50a9f2ba29e5f725e21" compoundref="sgd_8cpp" startline="186" endline="198">save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1sgd_1aa3e3237a59b0593d7caf7357b7c181cf" compoundref="sgd_8cpp" startline="200" endline="216">load_from_checkpoint_shared</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1sgd_1a73baa574a5129872fe25f2a419c86baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::sgd::sgd</definition>
        <argsstring>(lbann_comm *comm, DataType learning_rate, DataType momentum=DataType(0), bool nesterov=false)</argsstring>
        <name>sgd</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>DataType</type>
          <declname>learning_rate</declname>
        </param>
        <param>
          <type>DataType</type>
          <declname>momentum</declname>
          <defval>DataType(0)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>nesterov</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="42" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/optimizers/sgd.cpp" bodystart="32" bodyend="39"/>
        <referencedby refid="classlbann_1_1sgd_1a91572d383ad42584bf917e7d62bebe82" compoundref="sgd_8hpp" startline="54" endline="54">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1sgd_1ac0a74200f44b45ced9b44e3b6349581a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::sgd::sgd</definition>
        <argsstring>(const sgd &amp;other)</argsstring>
        <name>sgd</name>
        <param>
          <type>const <ref refid="classlbann_1_1sgd" kindref="compound">sgd</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="48" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/optimizers/sgd.cpp" bodystart="41" bodyend="54"/>
        <references refid="classlbann_1_1sgd_1a27f2d893014cef8357edffb63bf649f0" compoundref="sgd_8hpp" startline="79">m_velocity</references>
        <references refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" compoundref="optimizer_8hpp" startline="166">lbann::optimizer::m_cudnn</references>
        <references refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" compoundref="optimizer_8hpp" startline="169">lbann::optimizer::m_weights</references>
        <references refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" compoundref="weights_8cpp" startline="248" endline="252">lbann::weights::get_matrix_height</references>
        <references refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" compoundref="weights_8cpp" startline="254" endline="258">lbann::weights::get_matrix_width</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1sgd_1ad3949e74505cd25b267dbdd5b510a83f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1sgd" kindref="compound">sgd</ref> &amp;</type>
        <definition>sgd &amp; lbann::sgd::operator=</definition>
        <argsstring>(const sgd &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1sgd" kindref="compound">sgd</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy assignment operator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="50" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/optimizers/sgd.cpp" bodystart="56" bodyend="83"/>
        <references refid="classlbann_1_1optimizer_1ab7811e0a4d2d9b594140aed78b6de743" compoundref="optimizer_8cpp" startline="70" endline="100">lbann::optimizer::operator=</references>
        <references refid="classlbann_1_1sgd_1a2e56d66d350debcf0d2c3ad76c214074" compoundref="sgd_8hpp" startline="75">m_momentum</references>
        <references refid="classlbann_1_1sgd_1a82da488e5d1530f50f67cd4ea30909cb" compoundref="sgd_8hpp" startline="77">m_nesterov</references>
        <references refid="classlbann_1_1sgd_1a27f2d893014cef8357edffb63bf649f0" compoundref="sgd_8hpp" startline="79">m_velocity</references>
        <references refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" compoundref="optimizer_8hpp" startline="166">lbann::optimizer::m_cudnn</references>
        <references refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" compoundref="optimizer_8hpp" startline="169">lbann::optimizer::m_weights</references>
        <references refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" compoundref="weights_8cpp" startline="248" endline="252">lbann::weights::get_matrix_height</references>
        <references refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" compoundref="weights_8cpp" startline="254" endline="258">lbann::weights::get_matrix_width</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1sgd_1a0d0410edb1ca4510509cc9a5de105b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::sgd::~sgd</definition>
        <argsstring>() override</argsstring>
        <name>~sgd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="52" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/optimizers/sgd.cpp" bodystart="85" bodyend="92"/>
        <references refid="classlbann_1_1sgd_1a27f2d893014cef8357edffb63bf649f0" compoundref="sgd_8hpp" startline="79">m_velocity</references>
        <references refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" compoundref="optimizer_8hpp" startline="166">lbann::optimizer::m_cudnn</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1sgd_1a91572d383ad42584bf917e7d62bebe82" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1sgd" kindref="compound">sgd</ref> *</type>
        <definition>sgd* lbann::sgd::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1optimizer_1adf19a1d19d832ebfe70072cc202cdf39">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a copy. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="54" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" bodystart="54" bodyend="54"/>
        <references refid="classlbann_1_1sgd_1a73baa574a5129872fe25f2a419c86baa" compoundref="sgd_8cpp" startline="32" endline="39">sgd</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1sgd_1ad24efbeadae61890d07fa9e95aa91c61" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::sgd::get_type</definition>
        <argsstring>() const override</argsstring>
        <name>get_type</name>
        <reimplements refid="classlbann_1_1optimizer_1a7b7a6814e14eeee157e1cbb7f15dd4ff">get_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the optimizer name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="57" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" bodystart="57" bodyend="57"/>
        <references refid="classlbann_1_1sgd_1a2022661b9ef83e418a0a980207cb231e" compoundref="sgd_8cpp" startline="94" endline="100">get_description</references>
        <references refid="classlbann_1_1sgd_1a616c3cfd457ae1e771710b481b4c1bbb" compoundref="sgd_8cpp" startline="102" endline="119">setup</references>
        <references refid="classlbann_1_1sgd_1a083a44b456939b58f531cea1fde2378b" compoundref="sgd_8cpp" startline="121" endline="180">step_compute</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1sgd_1a2022661b9ef83e418a0a980207cb231e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::sgd::get_description</definition>
        <argsstring>() const override</argsstring>
        <name>get_description</name>
        <reimplements refid="classlbann_1_1optimizer_1a66bb8d28dfb41452ac1a75a3efd47723">get_description</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable description of the optimizer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="59" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/optimizers/sgd.cpp" bodystart="94" bodyend="100"/>
        <references refid="classlbann_1_1optimizer_1a66bb8d28dfb41452ac1a75a3efd47723" compoundref="optimizer_8cpp" startline="107" endline="115">lbann::optimizer::get_description</references>
        <references refid="classlbann_1_1sgd_1a2e56d66d350debcf0d2c3ad76c214074" compoundref="sgd_8hpp" startline="75">m_momentum</references>
        <references refid="classlbann_1_1sgd_1a82da488e5d1530f50f67cd4ea30909cb" compoundref="sgd_8hpp" startline="77">m_nesterov</references>
        <referencedby refid="classlbann_1_1sgd_1ad24efbeadae61890d07fa9e95aa91c61" compoundref="sgd_8hpp" startline="57" endline="57">get_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1sgd_1a616c3cfd457ae1e771710b481b4c1bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::sgd::setup</definition>
        <argsstring>(weights &amp;w) override</argsstring>
        <name>setup</name>
        <reimplements refid="classlbann_1_1optimizer_1a7641a88b3c166df2d974a298622b992b">setup</reimplements>
        <param>
          <type><ref refid="classlbann_1_1weights" kindref="compound">weights</ref> &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup optimizer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="62" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/optimizers/sgd.cpp" bodystart="102" bodyend="119"/>
        <references refid="classlbann_1_1optimizer_1a7641a88b3c166df2d974a298622b992b" compoundref="optimizer_8cpp" startline="414" endline="442">lbann::optimizer::setup</references>
        <references refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" compoundref="optimizer_8hpp" startline="175">lbann::optimizer::m_gradient</references>
        <references refid="classlbann_1_1sgd_1a27f2d893014cef8357edffb63bf649f0" compoundref="sgd_8hpp" startline="79">m_velocity</references>
        <references refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" compoundref="optimizer_8hpp" startline="166">lbann::optimizer::m_cudnn</references>
        <referencedby refid="classlbann_1_1sgd_1ad24efbeadae61890d07fa9e95aa91c61" compoundref="sgd_8hpp" startline="57" endline="57">get_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1sgd_1a083a44b456939b58f531cea1fde2378b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::sgd::step_compute</definition>
        <argsstring>(AbsDistMat &amp;values, const AbsDistMat &amp;gradient) override</argsstring>
        <name>step_compute</name>
        <reimplements refid="classlbann_1_1optimizer_1a0db72c298a0bc3405fb0af97d104a036">step_compute</reimplements>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>gradient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the computation in an optimization step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="65" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/optimizers/sgd.cpp" bodystart="121" bodyend="180"/>
        <references refid="classlbann_1_1sgd_1a2e56d66d350debcf0d2c3ad76c214074" compoundref="sgd_8hpp" startline="75">m_momentum</references>
        <references refid="classlbann_1_1optimizer_1ad393dcdcb82b44510c586ed5ec46d4dd" compoundref="optimizer_8hpp" startline="172">lbann::optimizer::m_learning_rate</references>
        <references refid="classlbann_1_1sgd_1a27f2d893014cef8357edffb63bf649f0" compoundref="sgd_8hpp" startline="79">m_velocity</references>
        <references refid="classlbann_1_1sgd_1a82da488e5d1530f50f67cd4ea30909cb" compoundref="sgd_8hpp" startline="77">m_nesterov</references>
        <referencedby refid="classlbann_1_1sgd_1ad24efbeadae61890d07fa9e95aa91c61" compoundref="sgd_8hpp" startline="57" endline="57">get_type</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlbann_1_1sgd_1ab95756a63ec3fa0100d436a5a9addfeb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::sgd::pack_scalars</definition>
        <argsstring>(persist &amp;p)</argsstring>
        <name>pack_scalars</name>
        <param>
          <type><ref refid="classlbann_1_1persist" kindref="compound">persist</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="90" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" bodystart="90" bodyend="93"/>
        <references refid="classlbann_1_1persist_1a5edc3f9cc3540b50d417993da2a6b5ce" compoundref="persist_8cpp" startline="577" endline="579">lbann::persist::write_datatype</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64">lbann::train</references>
        <referencedby refid="classlbann_1_1sgd_1a78ad11ca7424d50a9f2ba29e5f725e21" compoundref="sgd_8cpp" startline="186" endline="198">save_to_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1sgd_1a2b4a91cbb155ed94a185db79fdbf6284" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::sgd::unpack_scalars</definition>
        <argsstring>(persist &amp;p, struct packing_header *header)</argsstring>
        <name>unpack_scalars</name>
        <param>
          <type><ref refid="classlbann_1_1persist" kindref="compound">persist</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>struct <ref refid="structlbann_1_1sgd_1_1packing__header" kindref="compound">packing_header</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="95" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" bodystart="95" bodyend="103"/>
        <references refid="classlbann_1_1persist_1a1e84eff891affad6001f3c5fa803cae2" compoundref="persist_8cpp" startline="581" endline="583">lbann::persist::read_datatype</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64">lbann::train</references>
        <references refid="structlbann_1_1sgd_1_1packing__header_1a76cff0164cd32346eac4036a8a643776" compoundref="sgd_8hpp" startline="87">lbann::sgd::packing_header::momentum</references>
        <references refid="classlbann_1_1sgd_1a2e56d66d350debcf0d2c3ad76c214074" compoundref="sgd_8hpp" startline="75">m_momentum</references>
        <referencedby refid="classlbann_1_1sgd_1aa3e3237a59b0593d7caf7357b7c181cf" compoundref="sgd_8cpp" startline="200" endline="216">load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1sgd_1a3afe5aa1f1861c390472ff6f53093386" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::sgd::unpack_header</definition>
        <argsstring>(struct packing_header &amp;header)</argsstring>
        <name>unpack_header</name>
        <param>
          <type>struct <ref refid="structlbann_1_1sgd_1_1packing__header" kindref="compound">packing_header</ref> &amp;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="105" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" bodystart="105" bodyend="107"/>
        <references refid="structlbann_1_1sgd_1_1packing__header_1a76cff0164cd32346eac4036a8a643776" compoundref="sgd_8hpp" startline="87">lbann::sgd::packing_header::momentum</references>
        <references refid="classlbann_1_1sgd_1a78ad11ca7424d50a9f2ba29e5f725e21" compoundref="sgd_8cpp" startline="186" endline="198">save_to_checkpoint_shared</references>
        <references refid="classlbann_1_1sgd_1aa3e3237a59b0593d7caf7357b7c181cf" compoundref="sgd_8cpp" startline="200" endline="216">load_from_checkpoint_shared</references>
        <referencedby refid="classlbann_1_1sgd_1aa3e3237a59b0593d7caf7357b7c181cf" compoundref="sgd_8cpp" startline="200" endline="216">load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1sgd_1a78ad11ca7424d50a9f2ba29e5f725e21" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::sgd::save_to_checkpoint_shared</definition>
        <argsstring>(persist &amp;p, std::string m_name) override</argsstring>
        <name>save_to_checkpoint_shared</name>
        <reimplements refid="classlbann_1_1optimizer_1afed10c6d8c5bd922f95075abeff711ce">save_to_checkpoint_shared</reimplements>
        <param>
          <type><ref refid="classlbann_1_1persist" kindref="compound">persist</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>m_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="109" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/optimizers/sgd.cpp" bodystart="186" bodyend="198"/>
        <references refid="classlbann_1_1optimizer_1afed10c6d8c5bd922f95075abeff711ce" compoundref="optimizer_8cpp" startline="487" endline="493">lbann::optimizer::save_to_checkpoint_shared</references>
        <references refid="classlbann_1_1persist_1a34eb918a890ab49dcbeedddf27ec1616" compoundref="persist_8hpp" startline="60" endline="62">lbann::persist::get_rank</references>
        <references refid="classlbann_1_1sgd_1ab95756a63ec3fa0100d436a5a9addfeb" compoundref="sgd_8hpp" startline="90" endline="93">pack_scalars</references>
        <references refid="classlbann_1_1sgd_1a27f2d893014cef8357edffb63bf649f0" compoundref="sgd_8hpp" startline="79">m_velocity</references>
        <references refid="classlbann_1_1persist_1a9170de652405d86d9ba9b3793f8781c6" compoundref="persist_8cpp" startline="342" endline="360">lbann::persist::write_distmat</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64">lbann::train</references>
        <referencedby refid="classlbann_1_1sgd_1a3afe5aa1f1861c390472ff6f53093386" compoundref="sgd_8hpp" startline="105" endline="107">unpack_header</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1sgd_1aa3e3237a59b0593d7caf7357b7c181cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::sgd::load_from_checkpoint_shared</definition>
        <argsstring>(persist &amp;p, std::string m_name) override</argsstring>
        <name>load_from_checkpoint_shared</name>
        <reimplements refid="classlbann_1_1optimizer_1a42a52aab9a682fda57c1e639968a44b9">load_from_checkpoint_shared</reimplements>
        <param>
          <type><ref refid="classlbann_1_1persist" kindref="compound">persist</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>m_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="110" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/optimizers/sgd.cpp" bodystart="200" bodyend="216"/>
        <references refid="classlbann_1_1optimizer_1a42a52aab9a682fda57c1e639968a44b9" compoundref="optimizer_8cpp" startline="495" endline="499">lbann::optimizer::load_from_checkpoint_shared</references>
        <references refid="classlbann_1_1persist_1a34eb918a890ab49dcbeedddf27ec1616" compoundref="persist_8hpp" startline="60" endline="62">lbann::persist::get_rank</references>
        <references refid="classlbann_1_1sgd_1a2b4a91cbb155ed94a185db79fdbf6284" compoundref="sgd_8hpp" startline="95" endline="103">unpack_scalars</references>
        <references refid="classlbann_1_1sgd_1a3afe5aa1f1861c390472ff6f53093386" compoundref="sgd_8hpp" startline="105" endline="107">unpack_header</references>
        <references refid="classlbann_1_1sgd_1a27f2d893014cef8357edffb63bf649f0" compoundref="sgd_8hpp" startline="79">m_velocity</references>
        <references refid="classlbann_1_1persist_1aa98be93f33b510e5b506b61de6bd79bd" compoundref="persist_8cpp" startline="362" endline="387">lbann::persist::read_distmat</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64">lbann::train</references>
        <referencedby refid="classlbann_1_1sgd_1a3afe5aa1f1861c390472ff6f53093386" compoundref="sgd_8hpp" startline="105" endline="107">unpack_header</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Stochastic gradient descent optimizer. Supports momentum and Nesterov acceleration. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2094">
        <label>lbann::sgd</label>
        <link refid="classlbann_1_1sgd"/>
        <childnode refid="2095" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2095">
        <label>lbann::optimizer</label>
        <link refid="classlbann_1_1optimizer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2096">
        <label>lbann::sgd</label>
        <link refid="classlbann_1_1sgd"/>
        <childnode refid="2097" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2097">
        <label>lbann::optimizer</label>
        <link refid="classlbann_1_1optimizer"/>
        <childnode refid="2098" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="2099" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
        <childnode refid="2100" relation="usage">
          <edgelabel>m_gradient_allreduce_req</edgelabel>
        </childnode>
        <childnode refid="2101" relation="usage">
          <edgelabel>m_weights</edgelabel>
        </childnode>
      </node>
      <node id="2099">
        <label>lbann::cudnn::cudnn_manager</label>
        <link refid="classlbann_1_1cudnn_1_1cudnn__manager"/>
      </node>
      <node id="2102">
        <label>lbann::weights_initializer</label>
        <link refid="classlbann_1_1weights__initializer"/>
        <childnode refid="2098" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
      <node id="2101">
        <label>lbann::weights</label>
        <link refid="classlbann_1_1weights"/>
        <childnode refid="2097" relation="usage">
          <edgelabel>m_optimizer</edgelabel>
        </childnode>
        <childnode refid="2098" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="2102" relation="usage">
          <edgelabel>m_initializer</edgelabel>
        </childnode>
        <childnode refid="2099" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="2098">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="2100">
        <label>lbann::Al::request</label>
        <link refid="structlbann_1_1Al_1_1request"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" line="37" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/optimizers/sgd.hpp" bodystart="37" bodyend="117"/>
    <listofallmembers>
      <member refid="classlbann_1_1optimizer_1ade46d28f7df19cab6c6ee90c03e976ea" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>add_gradient_source</name></member>
      <member refid="classlbann_1_1optimizer_1a435d31e3b7a0302e36439ee36f62dba8" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>add_to_gradient</name></member>
      <member refid="classlbann_1_1optimizer_1ac23ebde61a225f70c27ab937df5755ed" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>add_to_gradient_staging</name></member>
      <member refid="classlbann_1_1optimizer_1a3f41360479fbd46c704342bb4ef36d09" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>clear_gradient</name></member>
      <member refid="classlbann_1_1sgd_1a91572d383ad42584bf917e7d62bebe82" prot="public" virt="virtual"><scope>lbann::sgd</scope><name>copy</name></member>
      <member refid="classlbann_1_1sgd_1a2022661b9ef83e418a0a980207cb231e" prot="public" virt="virtual"><scope>lbann::sgd</scope><name>get_description</name></member>
      <member refid="classlbann_1_1optimizer_1a12b7dbc72eb2de78d6ad798b8939f349" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>get_gradient</name></member>
      <member refid="classlbann_1_1optimizer_1ac52867427b0d28ec6888b6344104791d" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>get_learning_rate</name></member>
      <member refid="classlbann_1_1optimizer_1a91370e4de6083e7cd464c809cf583eb3" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>get_num_gradient_sources</name></member>
      <member refid="classlbann_1_1optimizer_1afef81d54e836ba0177f7a411ba3aaf6e" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>get_step_time</name></member>
      <member refid="classlbann_1_1sgd_1ad24efbeadae61890d07fa9e95aa91c61" prot="public" virt="virtual"><scope>lbann::sgd</scope><name>get_type</name></member>
      <member refid="classlbann_1_1optimizer_1a9c3fc3f1d45da822676d5932a1c7af82" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>get_weights</name></member>
      <member refid="classlbann_1_1optimizer_1abccf0babf69e3d7c6e9a7fd0731c79b7" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>is_initialized</name></member>
      <member refid="classlbann_1_1sgd_1aa3e3237a59b0593d7caf7357b7c181cf" prot="private" virt="virtual"><scope>lbann::sgd</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1optimizer_1a8c2569a8fcf0ee969517067b81896c44" prot="protected" virt="non-virtual"><scope>lbann::sgd</scope><name>m_comm</name></member>
      <member refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" prot="protected" virt="non-virtual"><scope>lbann::sgd</scope><name>m_cudnn</name></member>
      <member refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" prot="protected" virt="non-virtual"><scope>lbann::sgd</scope><name>m_gradient</name></member>
      <member refid="classlbann_1_1optimizer_1ad393dcdcb82b44510c586ed5ec46d4dd" prot="protected" virt="non-virtual"><scope>lbann::sgd</scope><name>m_learning_rate</name></member>
      <member refid="classlbann_1_1sgd_1a2e56d66d350debcf0d2c3ad76c214074" prot="private" virt="non-virtual"><scope>lbann::sgd</scope><name>m_momentum</name></member>
      <member refid="classlbann_1_1sgd_1a82da488e5d1530f50f67cd4ea30909cb" prot="private" virt="non-virtual"><scope>lbann::sgd</scope><name>m_nesterov</name></member>
      <member refid="classlbann_1_1sgd_1a27f2d893014cef8357edffb63bf649f0" prot="private" virt="non-virtual"><scope>lbann::sgd</scope><name>m_velocity</name></member>
      <member refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" prot="protected" virt="non-virtual"><scope>lbann::sgd</scope><name>m_weights</name></member>
      <member refid="classlbann_1_1sgd_1ad3949e74505cd25b267dbdd5b510a83f" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>operator=</name></member>
      <member refid="classlbann_1_1optimizer_1ab7811e0a4d2d9b594140aed78b6de743" prot="public" virt="non-virtual" ambiguityscope="lbann::optimizer::"><scope>lbann::sgd</scope><name>operator=</name></member>
      <member refid="classlbann_1_1optimizer_1a136ed79c3f279ecded5be380fb67b05f" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>optimizer</name></member>
      <member refid="classlbann_1_1optimizer_1a300aa4928e2e4feeb5e99b9eb0a16632" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>optimizer</name></member>
      <member refid="classlbann_1_1sgd_1ab95756a63ec3fa0100d436a5a9addfeb" prot="private" virt="non-virtual"><scope>lbann::sgd</scope><name>pack_scalars</name></member>
      <member refid="classlbann_1_1optimizer_1a68ba7515d7eb4af38ff19607c13a111b" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>remove_gradient_source</name></member>
      <member refid="classlbann_1_1optimizer_1a067709debd4d2e7bfe1a35b5f6ced668" prot="public" virt="virtual"><scope>lbann::sgd</scope><name>reset_counters</name></member>
      <member refid="classlbann_1_1sgd_1a78ad11ca7424d50a9f2ba29e5f725e21" prot="private" virt="virtual"><scope>lbann::sgd</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1optimizer_1a147cac09beaa17df4e0fc1fc1be3abce" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>set_learning_rate</name></member>
      <member refid="classlbann_1_1optimizer_1afc00daf2acb6af7e29786524126660c2" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>set_weights</name></member>
      <member refid="classlbann_1_1sgd_1a616c3cfd457ae1e771710b481b4c1bbb" prot="public" virt="virtual"><scope>lbann::sgd</scope><name>setup</name></member>
      <member refid="classlbann_1_1sgd_1a73baa574a5129872fe25f2a419c86baa" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>sgd</name></member>
      <member refid="classlbann_1_1sgd_1ac0a74200f44b45ced9b44e3b6349581a" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>sgd</name></member>
      <member refid="classlbann_1_1optimizer_1a1fe495ccbd62d50735615818abecf454" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>start_gradient_staging_allreduce</name></member>
      <member refid="classlbann_1_1optimizer_1aa9f43ca3f22edc0a25d0509b6514a411" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>step</name></member>
      <member refid="classlbann_1_1sgd_1a083a44b456939b58f531cea1fde2378b" prot="public" virt="virtual"><scope>lbann::sgd</scope><name>step_compute</name></member>
      <member refid="classlbann_1_1sgd_1a3afe5aa1f1861c390472ff6f53093386" prot="private" virt="non-virtual"><scope>lbann::sgd</scope><name>unpack_header</name></member>
      <member refid="classlbann_1_1sgd_1a2b4a91cbb155ed94a185db79fdbf6284" prot="private" virt="non-virtual"><scope>lbann::sgd</scope><name>unpack_scalars</name></member>
      <member refid="classlbann_1_1optimizer_1abbee0e2cb021f835b669d9ba0da5145a" prot="public" virt="virtual"><scope>lbann::sgd</scope><name>~optimizer</name></member>
      <member refid="classlbann_1_1sgd_1a0d0410edb1ca4510509cc9a5de105b4f" prot="public" virt="non-virtual"><scope>lbann::sgd</scope><name>~sgd</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
