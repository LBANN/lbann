<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="callback__save__images_8cpp" kind="file" language="C++">
    <compoundname>callback_save_images.cpp</compoundname>
    <includes local="no">vector</includes>
    <includes refid="callback__save__images_8hpp" local="yes">lbann/callbacks/callback_save_images.hpp</includes>
    <includes refid="image__utils_8hpp" local="yes">lbann/data_readers/image_utils.hpp</includes>
    <incdepgraph>
      <node id="18353">
        <label>sys/stat.h</label>
      </node>
      <node id="18367">
        <label>lbann/data_readers/image_utils.hpp</label>
        <link refid="image__utils_8hpp"/>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18368" relation="include">
        </childnode>
        <childnode refid="18369" relation="include">
        </childnode>
      </node>
      <node id="18328">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="18329" relation="include">
        </childnode>
        <childnode refid="18315" relation="include">
        </childnode>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18330" relation="include">
        </childnode>
      </node>
      <node id="18363">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="18327" relation="include">
        </childnode>
        <childnode refid="18319" relation="include">
        </childnode>
      </node>
      <node id="18345">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18320" relation="include">
        </childnode>
      </node>
      <node id="18320">
        <label>El.hpp</label>
      </node>
      <node id="18319">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="18320" relation="include">
        </childnode>
        <childnode refid="18321" relation="include">
        </childnode>
        <childnode refid="18322" relation="include">
        </childnode>
        <childnode refid="18327" relation="include">
        </childnode>
      </node>
      <node id="18364">
        <label>cassert</label>
      </node>
      <node id="18355">
        <label>fcntl.h</label>
      </node>
      <node id="18358">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18330" relation="include">
        </childnode>
        <childnode refid="18337" relation="include">
        </childnode>
        <childnode refid="18345" relation="include">
        </childnode>
      </node>
      <node id="18329">
        <label>string</label>
      </node>
      <node id="18342">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="18315" relation="include">
        </childnode>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18330" relation="include">
        </childnode>
        <childnode refid="18337" relation="include">
        </childnode>
      </node>
      <node id="18348">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="18349" relation="include">
        </childnode>
      </node>
      <node id="18331">
        <label>map</label>
      </node>
      <node id="18347">
        <label>unordered_set</label>
      </node>
      <node id="18341">
        <label>exception</label>
      </node>
      <node id="18314">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_save_images.cpp</label>
        <link refid="callback__save__images_8cpp"/>
        <childnode refid="18315" relation="include">
        </childnode>
        <childnode refid="18316" relation="include">
        </childnode>
        <childnode refid="18367" relation="include">
        </childnode>
      </node>
      <node id="18362">
        <label>random</label>
      </node>
      <node id="18344">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18330" relation="include">
        </childnode>
        <childnode refid="18337" relation="include">
        </childnode>
        <childnode refid="18342" relation="include">
        </childnode>
      </node>
      <node id="18354">
        <label>sys/types.h</label>
      </node>
      <node id="18318">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18328" relation="include">
        </childnode>
        <childnode refid="18333" relation="include">
        </childnode>
        <childnode refid="18334" relation="include">
        </childnode>
      </node>
      <node id="18350">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="18340" relation="include">
        </childnode>
        <childnode refid="18315" relation="include">
        </childnode>
        <childnode refid="18351" relation="include">
        </childnode>
        <childnode refid="18331" relation="include">
        </childnode>
      </node>
      <node id="18369">
        <label>typeinfo</label>
      </node>
      <node id="18324">
        <label>cstdio</label>
      </node>
      <node id="18338">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="18339" relation="include">
        </childnode>
        <childnode refid="18329" relation="include">
        </childnode>
      </node>
      <node id="18326">
        <label>cxxabi.h</label>
      </node>
      <node id="18337">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18330" relation="include">
        </childnode>
        <childnode refid="18338" relation="include">
        </childnode>
        <childnode refid="18340" relation="include">
        </childnode>
        <childnode refid="18341" relation="include">
        </childnode>
      </node>
      <node id="18366">
        <label>unistd.h</label>
      </node>
      <node id="18315">
        <label>vector</label>
      </node>
      <node id="18330">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="18315" relation="include">
        </childnode>
        <childnode refid="18331" relation="include">
        </childnode>
        <childnode refid="18332" relation="include">
        </childnode>
        <childnode refid="18319" relation="include">
        </childnode>
      </node>
      <node id="18356">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="18357" relation="include">
        </childnode>
        <childnode refid="18358" relation="include">
        </childnode>
      </node>
      <node id="18317">
        <label>utility</label>
      </node>
      <node id="18352">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="18353" relation="include">
        </childnode>
        <childnode refid="18354" relation="include">
        </childnode>
        <childnode refid="18355" relation="include">
        </childnode>
      </node>
      <node id="18346">
        <label>lbann.pb.h</label>
      </node>
      <node id="18323">
        <label>cstdlib</label>
      </node>
      <node id="18340">
        <label>iostream</label>
      </node>
      <node id="18335">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="18336" relation="include">
        </childnode>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18330" relation="include">
        </childnode>
        <childnode refid="18337" relation="include">
        </childnode>
        <childnode refid="18342" relation="include">
        </childnode>
        <childnode refid="18343" relation="include">
        </childnode>
        <childnode refid="18329" relation="include">
        </childnode>
        <childnode refid="18347" relation="include">
        </childnode>
      </node>
      <node id="18359">
        <label>unordered_map</label>
      </node>
      <node id="18361">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18330" relation="include">
        </childnode>
        <childnode refid="18345" relation="include">
        </childnode>
        <childnode refid="18362" relation="include">
        </childnode>
      </node>
      <node id="18334">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18330" relation="include">
        </childnode>
        <childnode refid="18328" relation="include">
        </childnode>
        <childnode refid="18335" relation="include">
        </childnode>
        <childnode refid="18337" relation="include">
        </childnode>
        <childnode refid="18342" relation="include">
        </childnode>
        <childnode refid="18348" relation="include">
        </childnode>
        <childnode refid="18345" relation="include">
        </childnode>
        <childnode refid="18346" relation="include">
        </childnode>
        <childnode refid="18329" relation="include">
        </childnode>
        <childnode refid="18315" relation="include">
        </childnode>
      </node>
      <node id="18349">
        <label>chrono</label>
      </node>
      <node id="18357">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18334" relation="include">
        </childnode>
        <childnode refid="18343" relation="include">
        </childnode>
      </node>
      <node id="18339">
        <label>csignal</label>
      </node>
      <node id="18343">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="18329" relation="include">
        </childnode>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18330" relation="include">
        </childnode>
        <childnode refid="18337" relation="include">
        </childnode>
        <childnode refid="18342" relation="include">
        </childnode>
        <childnode refid="18344" relation="include">
        </childnode>
        <childnode refid="18345" relation="include">
        </childnode>
        <childnode refid="18346" relation="include">
        </childnode>
      </node>
      <node id="18360">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18361" relation="include">
        </childnode>
        <childnode refid="18337" relation="include">
        </childnode>
        <childnode refid="18330" relation="include">
        </childnode>
        <childnode refid="18352" relation="include">
        </childnode>
        <childnode refid="18345" relation="include">
        </childnode>
        <childnode refid="18363" relation="include">
        </childnode>
        <childnode refid="18364" relation="include">
        </childnode>
        <childnode refid="18365" relation="include">
        </childnode>
        <childnode refid="18329" relation="include">
        </childnode>
        <childnode refid="18315" relation="include">
        </childnode>
        <childnode refid="18366" relation="include">
        </childnode>
      </node>
      <node id="18327">
        <label>lbann_config.hpp</label>
      </node>
      <node id="18368">
        <label>type_traits</label>
      </node>
      <node id="18351">
        <label>set</label>
      </node>
      <node id="18333">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="18319" relation="include">
        </childnode>
        <childnode refid="18330" relation="include">
        </childnode>
        <childnode refid="18334" relation="include">
        </childnode>
        <childnode refid="18328" relation="include">
        </childnode>
        <childnode refid="18350" relation="include">
        </childnode>
        <childnode refid="18352" relation="include">
        </childnode>
        <childnode refid="18345" relation="include">
        </childnode>
        <childnode refid="18356" relation="include">
        </childnode>
        <childnode refid="18358" relation="include">
        </childnode>
        <childnode refid="18343" relation="include">
        </childnode>
        <childnode refid="18335" relation="include">
        </childnode>
        <childnode refid="18346" relation="include">
        </childnode>
        <childnode refid="18315" relation="include">
        </childnode>
        <childnode refid="18329" relation="include">
        </childnode>
        <childnode refid="18359" relation="include">
        </childnode>
      </node>
      <node id="18316">
        <label>lbann/callbacks/callback_save_images.hpp</label>
        <link refid="callback__save__images_8hpp"/>
        <childnode refid="18317" relation="include">
        </childnode>
        <childnode refid="18318" relation="include">
        </childnode>
        <childnode refid="18360" relation="include">
        </childnode>
      </node>
      <node id="18336">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="18365">
        <label>algorithm</label>
      </node>
      <node id="18322">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="18323" relation="include">
        </childnode>
        <childnode refid="18324" relation="include">
        </childnode>
        <childnode refid="18325" relation="include">
        </childnode>
        <childnode refid="18326" relation="include">
        </childnode>
      </node>
      <node id="18321">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="18320" relation="include">
        </childnode>
      </node>
      <node id="18332">
        <label>typeindex</label>
      </node>
      <node id="18325">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lbann_callback_save_images<sp/>.hpp<sp/>.cpp<sp/>-<sp/>Callbacks<sp/>to<sp/>save<sp/>images,<sp/>currently<sp/>used<sp/>in<sp/>autoencoder</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callback__save__images_8hpp" kindref="compound">lbann/callbacks/callback_save_images.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="image__utils_8hpp" kindref="compound">lbann/data_readers/image_utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classlbann_1_1lbann__callback__save__images_1aa540916eef9b95db68889a8a7426779c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__save__images_1aa540916eef9b95db68889a8a7426779c" kindref="member">lbann_callback_save_images::on_epoch_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layers<sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1ae14f4b2cc8882b3739d4aeb25d9e73c9" kindref="member">get_layers</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;epoch&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(m-&gt;<ref refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" kindref="member">get_cur_epoch</ref>());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//@todo:<sp/>generalize<sp/>to<sp/>two<sp/>matching<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//@todo:<sp/>use<sp/>view<sp/>so<sp/>we<sp/>can<sp/>save<sp/>arbitrary<sp/>number<sp/>of<sp/>valid<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//using<sp/>layer<sp/>just<sp/>before<sp/>reconstruction<sp/>layer<sp/>because<sp/>prev_layer_act<sp/>is<sp/>protected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__save__images_1ab84c4d511a4614ca90644d12dc77edee" kindref="member">save_image</ref>(*m,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layers[0]-&gt;get_activations(),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layers[layers.size()-2]-&gt;get_activations(),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classlbann_1_1lbann__callback__save__images_1a4591438de0b52467988e2bd34b55c0dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__save__images_1a4591438de0b52467988e2bd34b55c0dd" kindref="member">lbann_callback_save_images::on_phase_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layers<sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1ae14f4b2cc8882b3739d4aeb25d9e73c9" kindref="member">get_layers</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>phase<sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1afd569027be9b7a6adb08f486331384ac" kindref="member">get_current_phase</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;phase&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(phase);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__save__images_1ab84c4d511a4614ca90644d12dc77edee" kindref="member">save_image</ref>(*m,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layers[phase]-&gt;get_activations(),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layers[phase+2]-&gt;get_activations(),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classlbann_1_1lbann__callback__save__images_1a44d0f0113133d6fd8944d8b7702ea786" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__save__images_1a44d0f0113133d6fd8944d8b7702ea786" kindref="member">lbann_callback_save_images::on_test_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layers<sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1ae14f4b2cc8882b3739d4aeb25d9e73c9" kindref="member">get_layers</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__save__images_1ab84c4d511a4614ca90644d12dc77edee" kindref="member">save_image</ref>(*m,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layers[0]-&gt;get_activations(),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layers[layers.size()-2]-&gt;get_activations(),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classlbann_1_1lbann__callback__save__images_1ab84c4d511a4614ca90644d12dc77edee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__save__images_1ab84c4d511a4614ca90644d12dc77edee" kindref="member">lbann_callback_save_images::save_image</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref>&amp;<sp/>m,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>input,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>output,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>input<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>*<sp/>input_col<sp/>=<sp/>input.Construct(input.Grid(),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.Root());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>El::View(*input_col,<sp/>input,<sp/>El::ALL,<sp/>El::IR(0));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a48abd140bc807a8ac1381efd1bfeb375" kindref="member">CircMat</ref><sp/>input_circ<sp/>=<sp/>*input_col;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>input_col;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m.<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>()-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__save__images_1a275e409b2b2f3ebe2baeea636e18c607" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a8cf298061c73f55e2fe717acd2a9f178" kindref="member">save_image</ref>(input_circ.Matrix(),<sp/><ref refid="classlbann_1_1lbann__callback__save__images_1aeb69e2814c78d33a93b9ddc276c4cc57" kindref="member">m_image_dir</ref>+</highlight><highlight class="stringliteral">&quot;input_&quot;</highlight><highlight class="normal">+tag+</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">+<ref refid="classlbann_1_1lbann__callback__save__images_1a7b37fa08f49051897ef427b8c810ca3a" kindref="member">m_extension</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>output<sp/>image<sp/>if<sp/>it<sp/>is<sp/>a<sp/>reconstruction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(output.Height()<sp/>==<sp/>input.Height())<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>*<sp/>output_col<sp/>=<sp/>output.Construct(output.Grid(),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.Root());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>El::View(*output_col,<sp/>output,<sp/>El::ALL,<sp/>El::IR(0));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a48abd140bc807a8ac1381efd1bfeb375" kindref="member">CircMat</ref><sp/>output_circ<sp/>=<sp/>*output_col;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>output_col;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m.<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>()-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__save__images_1a275e409b2b2f3ebe2baeea636e18c607" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a8cf298061c73f55e2fe717acd2a9f178" kindref="member">save_image</ref>(output_circ.Matrix(),<sp/><ref refid="classlbann_1_1lbann__callback__save__images_1aeb69e2814c78d33a93b9ddc276c4cc57" kindref="member">m_image_dir</ref>+</highlight><highlight class="stringliteral">&quot;output_&quot;</highlight><highlight class="normal">+tag+</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">+<ref refid="classlbann_1_1lbann__callback__save__images_1a7b37fa08f49051897ef427b8c810ca3a" kindref="member">m_extension</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m.<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>()-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Saved<sp/>images<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1lbann__callback__save__images_1aeb69e2814c78d33a93b9ddc276c4cc57" kindref="member">m_image_dir</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_save_images.cpp"/>
  </compounddef>
</doxygen>
