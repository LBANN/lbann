<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1mean__absolute__deviation__loss" kind="class" language="C++" prot="public">
    <compoundname>lbann::mean_absolute_deviation_loss</compoundname>
    <basecompoundref refid="classlbann_1_1loss__function" prot="public" virt="non-virtual">lbann::loss_function</basecompoundref>
    <includes refid="objective__functions_2loss__functions_2mean__absolute__deviation_8hpp" local="no">mean_absolute_deviation.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1mean__absolute__deviation__loss_1ab729227237af711003b6cf4a9d9c9cf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::mean_absolute_deviation_loss::mean_absolute_deviation_loss</definition>
        <argsstring>(EvalType scale_factor=EvalType(1))</argsstring>
        <name>mean_absolute_deviation_loss</name>
        <param>
          <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
          <declname>scale_factor</declname>
          <defval><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(1)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" line="40" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" bodystart="40" bodyend="41"/>
        <references refid="classlbann_1_1mean__absolute__deviation__loss_1a0c69f9e73a06208ccea56b61ba38726f">operator=</references>
        <references refid="classlbann_1_1mean__absolute__deviation__loss_1a913786e64e160f849a3b08a7c46ce75a">~mean_absolute_deviation_loss</references>
        <referencedby refid="classlbann_1_1mean__absolute__deviation__loss_1ad35925ead0532d7893fa9659398ccd45" compoundref="objective__functions_2loss__functions_2mean__absolute__deviation_8hpp" startline="50" endline="52">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1mean__absolute__deviation__loss_1a590feaeb1fc096167655ff2fd0b9e9ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::mean_absolute_deviation_loss::mean_absolute_deviation_loss</definition>
        <argsstring>(const mean_absolute_deviation_loss &amp;other)=default</argsstring>
        <name>mean_absolute_deviation_loss</name>
        <param>
          <type>const <ref refid="classlbann_1_1mean__absolute__deviation__loss" kindref="compound">mean_absolute_deviation_loss</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1mean__absolute__deviation__loss_1a0c69f9e73a06208ccea56b61ba38726f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1mean__absolute__deviation__loss" kindref="compound">mean_absolute_deviation_loss</ref> &amp;</type>
        <definition>mean_absolute_deviation_loss&amp; lbann::mean_absolute_deviation_loss::operator=</definition>
        <argsstring>(const mean_absolute_deviation_loss &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1mean__absolute__deviation__loss" kindref="compound">mean_absolute_deviation_loss</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy assignment operator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" line="46" column="1"/>
        <referencedby refid="classlbann_1_1mean__absolute__deviation__loss_1ab729227237af711003b6cf4a9d9c9cf1" compoundref="objective__functions_2loss__functions_2mean__absolute__deviation_8hpp" startline="40" endline="41">mean_absolute_deviation_loss</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1mean__absolute__deviation__loss_1a913786e64e160f849a3b08a7c46ce75a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::mean_absolute_deviation_loss::~mean_absolute_deviation_loss</definition>
        <argsstring>() override=default</argsstring>
        <name>~mean_absolute_deviation_loss</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" line="48" column="1"/>
        <referencedby refid="classlbann_1_1mean__absolute__deviation__loss_1ab729227237af711003b6cf4a9d9c9cf1" compoundref="objective__functions_2loss__functions_2mean__absolute__deviation_8hpp" startline="40" endline="41">mean_absolute_deviation_loss</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1mean__absolute__deviation__loss_1ad35925ead0532d7893fa9659398ccd45" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1mean__absolute__deviation__loss" kindref="compound">mean_absolute_deviation_loss</ref> *</type>
        <definition>mean_absolute_deviation_loss* lbann::mean_absolute_deviation_loss::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1objective__function__term_1ae98a4ec173a602ad55d1df20dadd4cb9">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" line="50" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" bodystart="50" bodyend="52"/>
        <references refid="classlbann_1_1mean__absolute__deviation__loss_1ab729227237af711003b6cf4a9d9c9cf1" compoundref="objective__functions_2loss__functions_2mean__absolute__deviation_8hpp" startline="40" endline="41">mean_absolute_deviation_loss</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1mean__absolute__deviation__loss_1a05e9ac150bf3875ebb0a81e07ac3dfa0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::mean_absolute_deviation_loss::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classlbann_1_1objective__function__term_1a964fbfad3dd0434aa8f32c5fedf1079a">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the objective function term. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" line="55" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1mean__absolute__deviation__loss_1a4e4340e4370b824c56b76ed59e2ba879" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::mean_absolute_deviation_loss::start_evaluate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth) override</argsstring>
        <name>start_evaluate_compute</name>
        <reimplements refid="classlbann_1_1loss__function_1a0bbe41060d788dc7a29f3737761a6f7d">start_evaluate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the mean absolute deviation objective function. Given a prediction <formula id="0">$\hat{y}$</formula> and ground truth <formula id="1">$y$</formula>, the mean absolute deviation is <formula id="7">\[ MAD(\hat{y}, y) = \frac{1}{n} \lVert y - \hat{y} \rVert_1 \]</formula> This function updates the objective function value with the mean value of the mean absolute deviation across the mini-batch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" line="66" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" bodystart="66" bodyend="67"/>
        <references refid="classlbann_1_1mean__absolute__deviation__loss_1ab0a19f6393ef5df9275f1ed4802e8cf6" compoundref="objective__functions_2loss__functions_2mean__absolute__deviation_8cpp" startline="31" endline="60">finish_evaluate_compute</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac41b9ec75e920b610e8907e066074b30">prediction</references>
        <references refid="classlbann_1_1mean__absolute__deviation__loss_1a3ed0cbe4e405c10bf3f6a80eb693390e" compoundref="objective__functions_2loss__functions_2mean__absolute__deviation_8cpp" startline="62" endline="94">differentiate_compute</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1mean__absolute__deviation__loss_1ab0a19f6393ef5df9275f1ed4802e8cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
        <definition>EvalType lbann::mean_absolute_deviation_loss::finish_evaluate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth) override</argsstring>
        <name>finish_evaluate_compute</name>
        <reimplements refid="classlbann_1_1loss__function_1a3ea8553a4e9c75477d7d4fc533c4d4fd">finish_evaluate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish evaluation of the loss function. This should not include the scale factor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" line="69" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/mean_absolute_deviation.cpp" bodystart="31" bodyend="60"/>
        <references refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" compoundref="objective__function__term_8hpp" startline="102" endline="102">lbann::objective_function_term::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" compoundref="comm_8hpp" startline="419" endline="424">lbann::lbann_comm::allreduce</references>
        <referencedby refid="classlbann_1_1mean__absolute__deviation__loss_1a4e4340e4370b824c56b76ed59e2ba879" compoundref="objective__functions_2loss__functions_2mean__absolute__deviation_8hpp" startline="66" endline="67">start_evaluate_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1mean__absolute__deviation__loss_1a3ed0cbe4e405c10bf3f6a80eb693390e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::mean_absolute_deviation_loss::differentiate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth, AbsDistMat &amp;gradient) override</argsstring>
        <name>differentiate_compute</name>
        <reimplements refid="classlbann_1_1loss__function_1aefccc2b4f5a02664002d12630cf369e7">differentiate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>gradient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the mean absolution deviation gradient. The gradient is w.r.t. the prediction vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" line="75" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/mean_absolute_deviation.cpp" bodystart="62" bodyend="94"/>
        <referencedby refid="classlbann_1_1mean__absolute__deviation__loss_1a4e4340e4370b824c56b76ed59e2ba879" compoundref="objective__functions_2loss__functions_2mean__absolute__deviation_8hpp" startline="66" endline="67">start_evaluate_compute</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Mean absolution deviation loss function. Not to be confused with <ref refid="classlbann_1_1mean__absolute__deviation__metric" kindref="compound">mean_absolute_deviation_metric</ref>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1621">
        <label>lbann::loss_function</label>
        <link refid="classlbann_1_1loss__function"/>
        <childnode refid="1622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1620">
        <label>lbann::mean_absolute_deviation_loss</label>
        <link refid="classlbann_1_1mean__absolute__deviation__loss"/>
        <childnode refid="1621" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1622">
        <label>lbann::objective_function_term</label>
        <link refid="classlbann_1_1objective__function__term"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1624">
        <label>lbann::loss_function</label>
        <link refid="classlbann_1_1loss__function"/>
        <childnode refid="1625" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1623">
        <label>lbann::mean_absolute_deviation_loss</label>
        <link refid="classlbann_1_1mean__absolute__deviation__loss"/>
        <childnode refid="1624" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1626">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="1625">
        <label>lbann::objective_function_term</label>
        <link refid="classlbann_1_1objective__function__term"/>
        <childnode refid="1626" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" line="37" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp" bodystart="37" bodyend="79"/>
    <listofallmembers>
      <member refid="classlbann_1_1loss__function_1acd6e3bdcf33235208db03ab7af88e961" prot="public" virt="virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>compute_weight_regularization</name></member>
      <member refid="classlbann_1_1mean__absolute__deviation__loss_1ad35925ead0532d7893fa9659398ccd45" prot="public" virt="virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>copy</name></member>
      <member refid="classlbann_1_1loss__function_1adbd03ef952ee1055e3dd98f06d33324f" prot="public" virt="virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>differentiate</name></member>
      <member refid="classlbann_1_1mean__absolute__deviation__loss_1a3ed0cbe4e405c10bf3f6a80eb693390e" prot="public" virt="virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>differentiate_compute</name></member>
      <member refid="classlbann_1_1mean__absolute__deviation__loss_1ab0a19f6393ef5df9275f1ed4802e8cf6" prot="public" virt="virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>finish_evaluate_compute</name></member>
      <member refid="classlbann_1_1loss__function_1a5264d3e71125b7ce8694f73bf25662f7" prot="public" virt="virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>finish_evaluation</name></member>
      <member refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" prot="protected" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1objective__function__term_1aeeb85314738bec6e15877f68b3d422a0" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>get_layer_pointers</name></member>
      <member refid="classlbann_1_1objective__function__term_1aea73505aed191bfb9336d9d46a69d586" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>get_weights_pointers</name></member>
      <member refid="classlbann_1_1loss__function_1ae948babd62a110e2407271f24dcaec1b" prot="public" virt="virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1loss__function_1a0c5745e661c59e3e5496888d233c07cf" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>loss_function</name></member>
      <member refid="classlbann_1_1loss__function_1aaebcff849004392decc9850c4c75ead5" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>loss_function</name></member>
      <member refid="classlbann_1_1loss__function_1ac6ac9f8f2cef7a4daa1b282dba914975" prot="protected" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>m_gradient</name></member>
      <member refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" prot="protected" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>m_layers</name></member>
      <member refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" prot="protected" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>m_scale_factor</name></member>
      <member refid="classlbann_1_1objective__function__term_1a1d601c29153ae9cb54c585887608f2bf" prot="protected" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>m_weights</name></member>
      <member refid="classlbann_1_1mean__absolute__deviation__loss_1ab729227237af711003b6cf4a9d9c9cf1" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>mean_absolute_deviation_loss</name></member>
      <member refid="classlbann_1_1mean__absolute__deviation__loss_1a590feaeb1fc096167655ff2fd0b9e9ae" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>mean_absolute_deviation_loss</name></member>
      <member refid="classlbann_1_1mean__absolute__deviation__loss_1a05e9ac150bf3875ebb0a81e07ac3dfa0" prot="public" virt="virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>name</name></member>
      <member refid="classlbann_1_1objective__function__term_1a8c019e3c880f38dc20275e395acaeca1" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>objective_function_term</name></member>
      <member refid="classlbann_1_1objective__function__term_1a791a33056717d8b3f5ca2288145d86c8" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>objective_function_term</name></member>
      <member refid="classlbann_1_1mean__absolute__deviation__loss_1a0c69f9e73a06208ccea56b61ba38726f" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>operator=</name></member>
      <member refid="classlbann_1_1loss__function_1ab882c642619ea4285b61e735d84e401c" prot="public" virt="non-virtual" ambiguityscope="lbann::loss_function::"><scope>lbann::mean_absolute_deviation_loss</scope><name>operator=</name></member>
      <member refid="classlbann_1_1objective__function__term_1a8bbac194d96a854d5841817b67b63334" prot="public" virt="non-virtual" ambiguityscope="lbann::objective_function_term::"><scope>lbann::mean_absolute_deviation_loss</scope><name>operator=</name></member>
      <member refid="classlbann_1_1loss__function_1ac44929838f3c3f0a34e1532530422dad" prot="public" virt="virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1objective__function__term_1a82656dfd81bf6b818b38d041d341bc3b" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>set_layer_pointers</name></member>
      <member refid="classlbann_1_1loss__function_1a9ef5356468c892c2c0221f8acd6b5471" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>set_target_layer</name></member>
      <member refid="classlbann_1_1objective__function__term_1aa8adaf01dd8bc535dd86f27fc53c276a" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>set_weights_pointers</name></member>
      <member refid="classlbann_1_1loss__function_1a17a3629e8519c4215ad776a0c7b522ae" prot="public" virt="virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>setup</name></member>
      <member refid="classlbann_1_1mean__absolute__deviation__loss_1a4e4340e4370b824c56b76ed59e2ba879" prot="public" virt="virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>start_evaluate_compute</name></member>
      <member refid="classlbann_1_1loss__function_1a90f4126b0b4d47838ef3cc154c6d9705" prot="public" virt="virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>start_evaluation</name></member>
      <member refid="classlbann_1_1loss__function_1a21c59d9c3db798c330ff8297f6374747" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>~loss_function</name></member>
      <member refid="classlbann_1_1mean__absolute__deviation__loss_1a913786e64e160f849a3b08a7c46ce75a" prot="public" virt="non-virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>~mean_absolute_deviation_loss</name></member>
      <member refid="classlbann_1_1objective__function__term_1ad95920d424b3c248a2124827971451df" prot="public" virt="virtual"><scope>lbann::mean_absolute_deviation_loss</scope><name>~objective_function_term</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
