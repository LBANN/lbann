<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="siamese_8cpp" kind="file" language="C++">
    <compoundname>siamese.cpp</compoundname>
    <includes refid="siamese_8hpp" local="yes">lbann/models/siamese.hpp</includes>
    <includes refid="io__layer_8hpp" local="yes">lbann/layers/io/io_layer.hpp</includes>
    <incdepgraph>
      <node id="21794">
        <label>sys/stat.h</label>
      </node>
      <node id="21774">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="21775" relation="include">
        </childnode>
        <childnode refid="21770" relation="include">
        </childnode>
        <childnode refid="21760" relation="include">
        </childnode>
        <childnode refid="21769" relation="include">
        </childnode>
      </node>
      <node id="21805">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="21768" relation="include">
        </childnode>
        <childnode refid="21760" relation="include">
        </childnode>
      </node>
      <node id="21786">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="21760" relation="include">
        </childnode>
        <childnode refid="21761" relation="include">
        </childnode>
      </node>
      <node id="21761">
        <label>El.hpp</label>
      </node>
      <node id="21760">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="21761" relation="include">
        </childnode>
        <childnode refid="21762" relation="include">
        </childnode>
        <childnode refid="21763" relation="include">
        </childnode>
        <childnode refid="21768" relation="include">
        </childnode>
      </node>
      <node id="21806">
        <label>cassert</label>
      </node>
      <node id="21756">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/models/siamese.cpp</label>
        <link refid="siamese_8cpp"/>
        <childnode refid="21757" relation="include">
        </childnode>
        <childnode refid="21801" relation="include">
        </childnode>
      </node>
      <node id="21796">
        <label>fcntl.h</label>
      </node>
      <node id="21799">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="21760" relation="include">
        </childnode>
        <childnode refid="21769" relation="include">
        </childnode>
        <childnode refid="21778" relation="include">
        </childnode>
        <childnode refid="21786" relation="include">
        </childnode>
      </node>
      <node id="21801">
        <label>lbann/layers/io/io_layer.hpp</label>
        <link refid="io__layer_8hpp"/>
        <childnode refid="21773" relation="include">
        </childnode>
        <childnode refid="21802" relation="include">
        </childnode>
        <childnode refid="21809" relation="include">
        </childnode>
        <childnode refid="21786" relation="include">
        </childnode>
        <childnode refid="21778" relation="include">
        </childnode>
        <childnode refid="21775" relation="include">
        </childnode>
        <childnode refid="21795" relation="include">
        </childnode>
        <childnode refid="21794" relation="include">
        </childnode>
        <childnode refid="21808" relation="include">
        </childnode>
        <childnode refid="21765" relation="include">
        </childnode>
      </node>
      <node id="21775">
        <label>string</label>
      </node>
      <node id="21783">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="21770" relation="include">
        </childnode>
        <childnode refid="21760" relation="include">
        </childnode>
        <childnode refid="21769" relation="include">
        </childnode>
        <childnode refid="21778" relation="include">
        </childnode>
      </node>
      <node id="21789">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="21790" relation="include">
        </childnode>
      </node>
      <node id="21771">
        <label>map</label>
      </node>
      <node id="21758">
        <label>lbann/models/directed_acyclic_graph.hpp</label>
        <link refid="directed__acyclic__graph_8hpp"/>
        <childnode refid="21759" relation="include">
        </childnode>
        <childnode refid="21773" relation="include">
        </childnode>
      </node>
      <node id="21788">
        <label>unordered_set</label>
      </node>
      <node id="21782">
        <label>exception</label>
      </node>
      <node id="21804">
        <label>random</label>
      </node>
      <node id="21785">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="21760" relation="include">
        </childnode>
        <childnode refid="21769" relation="include">
        </childnode>
        <childnode refid="21778" relation="include">
        </childnode>
        <childnode refid="21783" relation="include">
        </childnode>
      </node>
      <node id="21795">
        <label>sys/types.h</label>
      </node>
      <node id="21791">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="21781" relation="include">
        </childnode>
        <childnode refid="21770" relation="include">
        </childnode>
        <childnode refid="21792" relation="include">
        </childnode>
        <childnode refid="21771" relation="include">
        </childnode>
      </node>
      <node id="21765">
        <label>cstdio</label>
      </node>
      <node id="21779">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="21780" relation="include">
        </childnode>
        <childnode refid="21775" relation="include">
        </childnode>
      </node>
      <node id="21767">
        <label>cxxabi.h</label>
      </node>
      <node id="21778">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="21760" relation="include">
        </childnode>
        <childnode refid="21769" relation="include">
        </childnode>
        <childnode refid="21779" relation="include">
        </childnode>
        <childnode refid="21781" relation="include">
        </childnode>
        <childnode refid="21782" relation="include">
        </childnode>
      </node>
      <node id="21808">
        <label>unistd.h</label>
      </node>
      <node id="21770">
        <label>vector</label>
      </node>
      <node id="21769">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="21770" relation="include">
        </childnode>
        <childnode refid="21771" relation="include">
        </childnode>
        <childnode refid="21772" relation="include">
        </childnode>
        <childnode refid="21760" relation="include">
        </childnode>
      </node>
      <node id="21797">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="21798" relation="include">
        </childnode>
        <childnode refid="21799" relation="include">
        </childnode>
      </node>
      <node id="21793">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="21794" relation="include">
        </childnode>
        <childnode refid="21795" relation="include">
        </childnode>
        <childnode refid="21796" relation="include">
        </childnode>
      </node>
      <node id="21787">
        <label>lbann.pb.h</label>
      </node>
      <node id="21764">
        <label>cstdlib</label>
      </node>
      <node id="21781">
        <label>iostream</label>
      </node>
      <node id="21757">
        <label>lbann/models/siamese.hpp</label>
        <link refid="siamese_8hpp"/>
        <childnode refid="21758" relation="include">
        </childnode>
      </node>
      <node id="21776">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="21777" relation="include">
        </childnode>
        <childnode refid="21760" relation="include">
        </childnode>
        <childnode refid="21769" relation="include">
        </childnode>
        <childnode refid="21778" relation="include">
        </childnode>
        <childnode refid="21783" relation="include">
        </childnode>
        <childnode refid="21784" relation="include">
        </childnode>
        <childnode refid="21775" relation="include">
        </childnode>
        <childnode refid="21788" relation="include">
        </childnode>
      </node>
      <node id="21800">
        <label>unordered_map</label>
      </node>
      <node id="21803">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="21760" relation="include">
        </childnode>
        <childnode refid="21769" relation="include">
        </childnode>
        <childnode refid="21786" relation="include">
        </childnode>
        <childnode refid="21804" relation="include">
        </childnode>
      </node>
      <node id="21773">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="21760" relation="include">
        </childnode>
        <childnode refid="21769" relation="include">
        </childnode>
        <childnode refid="21774" relation="include">
        </childnode>
        <childnode refid="21776" relation="include">
        </childnode>
        <childnode refid="21778" relation="include">
        </childnode>
        <childnode refid="21783" relation="include">
        </childnode>
        <childnode refid="21789" relation="include">
        </childnode>
        <childnode refid="21786" relation="include">
        </childnode>
        <childnode refid="21787" relation="include">
        </childnode>
        <childnode refid="21775" relation="include">
        </childnode>
        <childnode refid="21770" relation="include">
        </childnode>
      </node>
      <node id="21790">
        <label>chrono</label>
      </node>
      <node id="21798">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="21760" relation="include">
        </childnode>
        <childnode refid="21773" relation="include">
        </childnode>
        <childnode refid="21784" relation="include">
        </childnode>
      </node>
      <node id="21780">
        <label>csignal</label>
      </node>
      <node id="21809">
        <label>lbann/utils/dataset.hpp</label>
        <link refid="dataset_8hpp"/>
        <childnode refid="21802" relation="include">
        </childnode>
      </node>
      <node id="21784">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="21775" relation="include">
        </childnode>
        <childnode refid="21760" relation="include">
        </childnode>
        <childnode refid="21769" relation="include">
        </childnode>
        <childnode refid="21778" relation="include">
        </childnode>
        <childnode refid="21783" relation="include">
        </childnode>
        <childnode refid="21785" relation="include">
        </childnode>
        <childnode refid="21786" relation="include">
        </childnode>
        <childnode refid="21787" relation="include">
        </childnode>
      </node>
      <node id="21802">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="21760" relation="include">
        </childnode>
        <childnode refid="21803" relation="include">
        </childnode>
        <childnode refid="21778" relation="include">
        </childnode>
        <childnode refid="21769" relation="include">
        </childnode>
        <childnode refid="21793" relation="include">
        </childnode>
        <childnode refid="21786" relation="include">
        </childnode>
        <childnode refid="21805" relation="include">
        </childnode>
        <childnode refid="21806" relation="include">
        </childnode>
        <childnode refid="21807" relation="include">
        </childnode>
        <childnode refid="21775" relation="include">
        </childnode>
        <childnode refid="21770" relation="include">
        </childnode>
        <childnode refid="21808" relation="include">
        </childnode>
      </node>
      <node id="21768">
        <label>lbann_config.hpp</label>
      </node>
      <node id="21792">
        <label>set</label>
      </node>
      <node id="21759">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="21760" relation="include">
        </childnode>
        <childnode refid="21769" relation="include">
        </childnode>
        <childnode refid="21773" relation="include">
        </childnode>
        <childnode refid="21774" relation="include">
        </childnode>
        <childnode refid="21791" relation="include">
        </childnode>
        <childnode refid="21793" relation="include">
        </childnode>
        <childnode refid="21786" relation="include">
        </childnode>
        <childnode refid="21797" relation="include">
        </childnode>
        <childnode refid="21799" relation="include">
        </childnode>
        <childnode refid="21784" relation="include">
        </childnode>
        <childnode refid="21776" relation="include">
        </childnode>
        <childnode refid="21787" relation="include">
        </childnode>
        <childnode refid="21770" relation="include">
        </childnode>
        <childnode refid="21775" relation="include">
        </childnode>
        <childnode refid="21800" relation="include">
        </childnode>
      </node>
      <node id="21777">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="21807">
        <label>algorithm</label>
      </node>
      <node id="21763">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="21764" relation="include">
        </childnode>
        <childnode refid="21765" relation="include">
        </childnode>
        <childnode refid="21766" relation="include">
        </childnode>
        <childnode refid="21767" relation="include">
        </childnode>
      </node>
      <node id="21762">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="21761" relation="include">
        </childnode>
      </node>
      <node id="21772">
        <label>typeindex</label>
      </node>
      <node id="21766">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>siamese<sp/>.hpp<sp/>.cpp<sp/>-<sp/>Siamese<sp/>neural<sp/>network<sp/>models</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="siamese_8hpp" kindref="compound">lbann/models/siamese.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="io__layer_8hpp" kindref="compound">lbann/layers/io/io_layer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classlbann_1_1siamese__model_1af8ca6d6da679f39489f0c50b62ad0069" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1siamese__model_1af8ca6d6da679f39489f0c50b62ad0069" kindref="member">siamese_model::siamese_model</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mini_batch_size,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1objective__function" kindref="compound">objective_function</ref><sp/>*obj_fn,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref><sp/>*default_optimizer,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_heads)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1directed__acyclic__graph__model" kindref="compound">directed_acyclic_graph_model</ref>(comm,<sp/>mini_batch_size,<sp/>obj_fn,<sp/>default_optimizer),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>m_num_heads(num_heads)<sp/>{}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classlbann_1_1siamese__model_1a3960a32fd45059516f3acb41549e1e92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1siamese__model_1a3960a32fd45059516f3acb41549e1e92" kindref="member">siamese_model::freeze_layers_under_frozen_surface</ref>()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assuming<sp/>m_layers<sp/>is<sp/>topologically<sp/>sorted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.size();<sp/>i--<sp/>&gt;<sp/>0u;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layer<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[i];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer-&gt;is_frozen())<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>parent<sp/>:<sp/>layer-&gt;get_parent_layers())<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dynamic_cast&lt;const<sp/>io_layer*&gt;(parent)<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(parent)-&gt;freeze();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classlbann_1_1siamese__model_1a7ff41cffb060500605124959f1a2a6cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1siamese__model_1a7ff41cffb060500605124959f1a2a6cf" kindref="member">siamese_model::setup_layer_topology</ref>()<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1siamese__model_1aae7af40b4a2db59082cd4c9149a1affd" kindref="member">m_follower_to_master_layer</ref>.clear();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>network<sp/>with<sp/>master<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a7b3e2a643c658dcaa7478d2568f29784" kindref="member">directed_acyclic_graph_model::setup_layer_topology</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1directed__acyclic__graph__model_1a2a70d5719832c481db9fa962f6e5f2bd" kindref="member">setup_layer_execution_order</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>layers<sp/>in<sp/>master<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>heads_start<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.size();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>heads_end<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[i]-&gt;get_expected_num_child_layers()<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>heads_start<sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.size()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[i]-&gt;get_expected_num_parent_layers()<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>heads_end<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(heads_start<sp/>&gt;<sp/>heads_end)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;siamese<sp/>models<sp/>must<sp/>have<sp/>a<sp/>fan-out<sp/>layer<sp/>before<sp/>a<sp/>fan-in<sp/>layer<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(found<sp/>fan-out<sp/>layer<sp/>at<sp/>position<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>heads_start<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>fan-in<sp/>layer<sp/>at<sp/>position<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>heads_end<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>std::vector&lt;Layer*&gt;<sp/>master_head(<ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.begin()<sp/>+<sp/>heads_start,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.begin()<sp/>+<sp/>heads_end);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>map<sp/>from<sp/>follower<sp/>layers<sp/>to<sp/>master<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1siamese__model_1aae7af40b4a2db59082cd4c9149a1affd" kindref="member">m_follower_to_master_layer</ref>[layer]<sp/>=<sp/>layer;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Duplicate<sp/>master<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="classlbann_1_1siamese__model_1ad0d7ba3cf40120b4f8e32675c5e9b3db" kindref="member">m_num_heads</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name_suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_head&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>map<sp/>from<sp/>master<sp/>layers<sp/>to<sp/>follower<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;Layer*,Layer*&gt;<sp/>master_to_follower_layer;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>master_layer<sp/>:<sp/>m_layers)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>master_to_follower_layer[master_layer]<sp/>=<sp/>master_layer;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>follower<sp/>head<sp/>by<sp/>copying<sp/>layers<sp/>in<sp/>master<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Layer*&gt;<sp/>follower_head;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>master_layer<sp/>:<sp/>master_head)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/>follower_layer<sp/>=<sp/>master_layer-&gt;<ref refid="classlbann_1_1Layer_1af420f22bbac801c85483ade84588a23f" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>follower_layer-&gt;<ref refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" kindref="member">set_name</ref>(follower_layer-&gt;<ref refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" kindref="member">get_name</ref>()<sp/>+<sp/>name_suffix);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>follower_head.push_back(follower_layer);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>master_to_follower_layer[master_layer]<sp/>=<sp/>follower_layer;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1siamese__model_1aae7af40b4a2db59082cd4c9149a1affd" kindref="member">m_follower_to_master_layer</ref>[follower_layer]<sp/>=<sp/>master_layer;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>pointers<sp/>in<sp/>follower<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>follower_layer<sp/>:<sp/>follower_head)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layer_pointers<sp/>=<sp/>follower_layer-&gt;get_layer_pointers();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer_pointer<sp/>:<sp/>layer_pointers)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer_pointer<sp/>=<sp/>master_to_follower_layer[layer_pointer];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>follower_layer-&gt;set_layer_pointers(layer_pointers);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>pointers<sp/>at<sp/>start<sp/>and<sp/>end<sp/>of<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>m_layers[heads_start-1]-&gt;add_child_layer(follower_head.front());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>m_layers[heads_end]-&gt;add_parent_layer(follower_head.back());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>follower<sp/>head<sp/>to<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>m_layers.insert(m_layers.begin()<sp/>+<sp/>heads_end,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>follower_head.begin(),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>follower_head.end());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>heads_end<sp/>+=<sp/>follower_head.size();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rename<sp/>layers<sp/>in<sp/>master<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/>master_head)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;set_name(layer-&gt;get_name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_head0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>all<sp/>parent/child<sp/>relationships<sp/>are<sp/>reciprocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a7b3e2a643c658dcaa7478d2568f29784" kindref="member">directed_acyclic_graph_model::setup_layer_topology</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1siamese__model_1a3960a32fd45059516f3acb41549e1e92" kindref="member">freeze_layers_under_frozen_surface</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classlbann_1_1siamese__model_1afefdbaf473d40e571b2b58539001c9c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1siamese__model_1afefdbaf473d40e571b2b58539001c9c0" kindref="member">siamese_model::setup_layers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;set_weights(<ref refid="classlbann_1_1siamese__model_1aae7af40b4a2db59082cd4c9149a1affd" kindref="member">m_follower_to_master_layer</ref>[layer]-&gt;<ref refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" kindref="member">get_weights</ref>());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;set_model(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;setup();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;check_setup();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" kindref="member">print_layer_description</ref>(layer)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/models/siamese.cpp"/>
  </compounddef>
</doxygen>
