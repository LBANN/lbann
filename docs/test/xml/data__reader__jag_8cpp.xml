<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="data__reader__jag_8cpp" kind="file" language="C++">
    <compoundname>data_reader_jag.cpp</compoundname>
    <includes refid="file__utils_8hpp" local="yes">lbann/utils/file_utils.hpp</includes>
    <includes refid="cnpy__utils_8hpp" local="yes">lbann/utils/cnpy_utils.hpp</includes>
    <includes refid="opencv__extensions_8hpp" local="yes">lbann/data_readers/opencv_extensions.hpp</includes>
    <includes refid="data__reader__jag_8hpp" local="yes">lbann/data_readers/data_reader_jag.hpp</includes>
    <includes local="no">limits</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">numeric</includes>
    <includes local="no">functional</includes>
    <includes local="no">type_traits</includes>
    <incdepgraph>
      <node id="19467">
        <label>sys/stat.h</label>
      </node>
      <node id="19435">
        <label>lbann/utils/file_utils.hpp</label>
        <link refid="file__utils_8hpp"/>
        <childnode refid="19436" relation="include">
        </childnode>
        <childnode refid="19437" relation="include">
        </childnode>
        <childnode refid="19438" relation="include">
        </childnode>
        <childnode refid="19439" relation="include">
        </childnode>
        <childnode refid="19440" relation="include">
        </childnode>
      </node>
      <node id="19476">
        <label>functional</label>
      </node>
      <node id="19474">
        <label>limits</label>
      </node>
      <node id="19441">
        <label>lbann/utils/cnpy_utils.hpp</label>
        <link refid="cnpy__utils_8hpp"/>
        <childnode refid="19442" relation="include">
        </childnode>
        <childnode refid="19436" relation="include">
        </childnode>
        <childnode refid="19437" relation="include">
        </childnode>
        <childnode refid="19443" relation="include">
        </childnode>
      </node>
      <node id="19440">
        <label>iterator</label>
      </node>
      <node id="19470">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="19452" relation="include">
        </childnode>
        <childnode refid="19444" relation="include">
        </childnode>
      </node>
      <node id="19464">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="19444" relation="include">
        </childnode>
        <childnode refid="19445" relation="include">
        </childnode>
      </node>
      <node id="19445">
        <label>El.hpp</label>
      </node>
      <node id="19444">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="19445" relation="include">
        </childnode>
        <childnode refid="19446" relation="include">
        </childnode>
        <childnode refid="19447" relation="include">
        </childnode>
        <childnode refid="19452" relation="include">
        </childnode>
      </node>
      <node id="19471">
        <label>cassert</label>
      </node>
      <node id="19469">
        <label>fcntl.h</label>
      </node>
      <node id="19475">
        <label>numeric</label>
      </node>
      <node id="19459">
        <label>lbann/data_readers/opencv_extensions.hpp</label>
        <link refid="opencv__extensions_8hpp"/>
      </node>
      <node id="19436">
        <label>string</label>
      </node>
      <node id="19454">
        <label>map</label>
      </node>
      <node id="19458">
        <label>exception</label>
      </node>
      <node id="19439">
        <label>fstream</label>
      </node>
      <node id="19465">
        <label>random</label>
      </node>
      <node id="19434">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_jag.cpp</label>
        <link refid="data__reader__jag_8cpp"/>
        <childnode refid="19435" relation="include">
        </childnode>
        <childnode refid="19441" relation="include">
        </childnode>
        <childnode refid="19459" relation="include">
        </childnode>
        <childnode refid="19460" relation="include">
        </childnode>
        <childnode refid="19474" relation="include">
        </childnode>
        <childnode refid="19472" relation="include">
        </childnode>
        <childnode refid="19475" relation="include">
        </childnode>
        <childnode refid="19476" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19468">
        <label>sys/types.h</label>
      </node>
      <node id="19449">
        <label>cstdio</label>
      </node>
      <node id="19456">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="19457" relation="include">
        </childnode>
        <childnode refid="19436" relation="include">
        </childnode>
      </node>
      <node id="19451">
        <label>cxxabi.h</label>
      </node>
      <node id="19443">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="19444" relation="include">
        </childnode>
        <childnode refid="19453" relation="include">
        </childnode>
        <childnode refid="19456" relation="include">
        </childnode>
        <childnode refid="19438" relation="include">
        </childnode>
        <childnode refid="19458" relation="include">
        </childnode>
      </node>
      <node id="19460">
        <label>lbann/data_readers/data_reader_jag.hpp</label>
        <link refid="data__reader__jag_8hpp"/>
        <childnode refid="19442" relation="include">
        </childnode>
        <childnode refid="19436" relation="include">
        </childnode>
        <childnode refid="19437" relation="include">
        </childnode>
        <childnode refid="19444" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
      </node>
      <node id="19473">
        <label>unistd.h</label>
      </node>
      <node id="19437">
        <label>vector</label>
      </node>
      <node id="19453">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="19437" relation="include">
        </childnode>
        <childnode refid="19454" relation="include">
        </childnode>
        <childnode refid="19455" relation="include">
        </childnode>
        <childnode refid="19444" relation="include">
        </childnode>
      </node>
      <node id="19466">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="19467" relation="include">
        </childnode>
        <childnode refid="19468" relation="include">
        </childnode>
        <childnode refid="19469" relation="include">
        </childnode>
      </node>
      <node id="19448">
        <label>cstdlib</label>
      </node>
      <node id="19461">
        <label>lbann/data_readers/opencv.hpp</label>
        <link refid="opencv_8hpp"/>
        <childnode refid="19452" relation="include">
        </childnode>
      </node>
      <node id="19438">
        <label>iostream</label>
      </node>
      <node id="19463">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="19444" relation="include">
        </childnode>
        <childnode refid="19453" relation="include">
        </childnode>
        <childnode refid="19464" relation="include">
        </childnode>
        <childnode refid="19465" relation="include">
        </childnode>
      </node>
      <node id="19457">
        <label>csignal</label>
      </node>
      <node id="19462">
        <label>data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="19444" relation="include">
        </childnode>
        <childnode refid="19463" relation="include">
        </childnode>
        <childnode refid="19443" relation="include">
        </childnode>
        <childnode refid="19453" relation="include">
        </childnode>
        <childnode refid="19466" relation="include">
        </childnode>
        <childnode refid="19464" relation="include">
        </childnode>
        <childnode refid="19470" relation="include">
        </childnode>
        <childnode refid="19471" relation="include">
        </childnode>
        <childnode refid="19472" relation="include">
        </childnode>
        <childnode refid="19436" relation="include">
        </childnode>
        <childnode refid="19437" relation="include">
        </childnode>
        <childnode refid="19473" relation="include">
        </childnode>
      </node>
      <node id="19452">
        <label>lbann_config.hpp</label>
      </node>
      <node id="19477">
        <label>type_traits</label>
      </node>
      <node id="19472">
        <label>algorithm</label>
      </node>
      <node id="19447">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="19448" relation="include">
        </childnode>
        <childnode refid="19449" relation="include">
        </childnode>
        <childnode refid="19450" relation="include">
        </childnode>
        <childnode refid="19451" relation="include">
        </childnode>
      </node>
      <node id="19442">
        <label>cnpy.h</label>
      </node>
      <node id="19446">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="19445" relation="include">
        </childnode>
      </node>
      <node id="19455">
        <label>typeindex</label>
      </node>
      <node id="19450">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="file__utils_8hpp" kindref="compound">lbann/utils/file_utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cnpy__utils_8hpp" kindref="compound">lbann/utils/cnpy_utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="opencv__extensions_8hpp" kindref="compound">lbann/data_readers/opencv_extensions.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__reader__jag_8hpp" kindref="compound">lbann/data_readers/data_reader_jag.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>numeric_limits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>max_element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accumulate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>multiplies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="comment">//<sp/>is_same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classlbann_1_1data__reader__jag_1a8729a52155d4a4319efb77b1b38bc369" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__reader__jag_1a8729a52155d4a4319efb77b1b38bc369" kindref="member">data_reader_jag::data_reader_jag</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffle)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref>(shuffle),<sp/>m_model_mode(Inverse),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>m_image_loaded(false),<sp/>m_scalar_loaded(false),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>m_input_loaded(false),<sp/>m_num_samples(0u),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>m_linearized_image_size(0u),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>m_linearized_scalar_size(0u),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>m_linearized_input_size(0u),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>m_image_normalization(0u),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>m_image_width(0u),<sp/>m_image_height(0u),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>m_img_min(std::numeric_limits&lt;<ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_t</ref>&gt;::<ref refid="base_8hpp_1ac47a6ee5278a53898222a48639a2bf39a2ffe4e77325d9a7152f7086ea7aa5114" kindref="member">max</ref>()),<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>m_img_max(std::numeric_limits&lt;<ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_t</ref>&gt;::min())<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classlbann_1_1data__reader__jag_1a1836d2414739490e15b856c911ae84e8" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__reader__jag_1a1836d2414739490e15b856c911ae84e8" kindref="member">data_reader_jag::~data_reader_jag</ref>()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classlbann_1_1data__reader__jag_1a143e41b76858ffb6606bafb376c09418" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a143e41b76858ffb6606bafb376c09418" kindref="member">data_reader_jag::set_model_mode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739b" kindref="member">model_mode_t</ref><sp/>mm)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(static_cast&lt;int&gt;(<ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739baab2b8e8bef02dfc8ffaae80bdd0a7fd4" kindref="member">AutoS</ref>)<sp/>&lt;<sp/>static_cast&lt;int&gt;(mm))<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>unrecognized<sp/>mode<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(static_cast&lt;int&gt;(mm)));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref><sp/>=<sp/>mm;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classlbann_1_1data__reader__jag_1a260e95eafd4e4b334cffe189db344d05" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a260e95eafd4e4b334cffe189db344d05" kindref="member">data_reader_jag::set_normalization_mode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mode<sp/>&lt;<sp/>0)<sp/>||<sp/>(2<sp/>&lt;<sp/>mode))<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_jag:<sp/>invalid<sp/>normalization<sp/>mode<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(mode));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a351fe7aaccf8456fa97c9d9bf3dcd73d" kindref="member">m_image_normalization</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classlbann_1_1data__reader__jag_1a7b76ea4a64b8072728eb1b41d5a62f47" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a7b76ea4a64b8072728eb1b41d5a62f47" kindref="member">data_reader_jag::set_image_dims</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((width<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(height<sp/>&gt;<sp/>0))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>set<sp/>and<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a193a91f2aab9f6373a7b376ff183cd0e" kindref="member">m_image_width</ref><sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a6178d5dffd5e9bf7cf5703613cf9bd2e" kindref="member">m_image_height</ref><sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((width<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(height<sp/>==<sp/>0)))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>set<sp/>but<sp/>not<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;__LINE__</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>data_reader_jag::set_image_dims()<sp/>invalid<sp/>image<sp/>dims&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classlbann_1_1data__reader__jag_1a321580d6f335308e19868b4c3d5c9558" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a321580d6f335308e19868b4c3d5c9558" kindref="member">data_reader_jag::get_num_samples</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a25ceffff7e8d6641e785efa033530011" kindref="member">m_num_samples</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classlbann_1_1data__reader__jag_1aab3760b1f7824e67f84ce486d3da399f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1aab3760b1f7824e67f84ce486d3da399f" kindref="member">data_reader_jag::get_linearized_image_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classlbann_1_1data__reader__jag_1ab1060bef9fe9cbc46f36c90c1ebfd149" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1ab1060bef9fe9cbc46f36c90c1ebfd149" kindref="member">data_reader_jag::get_linearized_scalar_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a856b4b9cdf9d8569e5fef1d5d996870d" kindref="member">m_linearized_scalar_size</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classlbann_1_1data__reader__jag_1a2396088a5c5aac058f89702eea23b86f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a2396088a5c5aac058f89702eea23b86f" kindref="member">data_reader_jag::get_linearized_input_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a75e3c8870f9fc8e50fb24e4515ac7d82" kindref="member">m_linearized_input_size</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classlbann_1_1data__reader__jag_1af1e7add9e8bdcf97fe81bfc27b618387" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1af1e7add9e8bdcf97fe81bfc27b618387" kindref="member">data_reader_jag::set_linearized_image_size</ref>()<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1data__reader__jag_1a3f1691818996f73dc918dfd0e8f98a70" kindref="member">m_image_loaded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref><sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a193a91f2aab9f6373a7b376ff183cd0e" kindref="member">m_image_width</ref><sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a6178d5dffd5e9bf7cf5703613cf9bd2e" kindref="member">m_image_height</ref><sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::accumulate(<ref refid="classlbann_1_1data__reader__jag_1ae96696fb14653ef1b57936943eb6a800" kindref="member">m_images</ref>.shape.begin()+1,<sp/><ref refid="classlbann_1_1data__reader__jag_1ae96696fb14653ef1b57936943eb6a800" kindref="member">m_images</ref>.shape.end(),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1u,<sp/>std::multiplies&lt;size_t&gt;());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref><sp/>!=<sp/>static_cast&lt;size_t&gt;(<ref refid="classlbann_1_1data__reader__jag_1a193a91f2aab9f6373a7b376ff183cd0e" kindref="member">m_image_width</ref>*<ref refid="classlbann_1_1data__reader__jag_1a6178d5dffd5e9bf7cf5703613cf9bd2e" kindref="member">m_image_height</ref>))<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classlbann_1_1data__reader__jag_1a193a91f2aab9f6373a7b376ff183cd0e" kindref="member">m_image_width</ref><sp/>==<sp/>0u)<sp/>&amp;&amp;<sp/>(m_image_height<sp/>==<sp/>0u))<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_image_height<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a193a91f2aab9f6373a7b376ff183cd0e" kindref="member">m_image_width</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;__LINE__</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>data_reader_jag::set_linearized_image_size()<sp/>image<sp/>size<sp/>mismatch&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classlbann_1_1data__reader__jag_1a27a1da4475453b043ba0ec1724317c27" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a27a1da4475453b043ba0ec1724317c27" kindref="member">data_reader_jag::set_linearized_scalar_size</ref>()<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1data__reader__jag_1add9f037609b73da931a4a8a460798db9" kindref="member">m_scalar_loaded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a856b4b9cdf9d8569e5fef1d5d996870d" kindref="member">m_linearized_scalar_size</ref><sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a856b4b9cdf9d8569e5fef1d5d996870d" kindref="member">m_linearized_scalar_size</ref></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::accumulate(<ref refid="classlbann_1_1data__reader__jag_1ab0ce0a57903e79f029e91356db8b5441" kindref="member">m_scalars</ref>.shape.begin()+1,<sp/><ref refid="classlbann_1_1data__reader__jag_1ab0ce0a57903e79f029e91356db8b5441" kindref="member">m_scalars</ref>.shape.end(),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1u,<sp/>std::multiplies&lt;size_t&gt;());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classlbann_1_1data__reader__jag_1a15f9aab2180ff66b7b5ace00957740df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a15f9aab2180ff66b7b5ace00957740df" kindref="member">data_reader_jag::set_linearized_input_size</ref>()<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1data__reader__jag_1ae047bbae82c4a8eceedceeea2e1815ad" kindref="member">m_input_loaded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a75e3c8870f9fc8e50fb24e4515ac7d82" kindref="member">m_linearized_input_size</ref><sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a75e3c8870f9fc8e50fb24e4515ac7d82" kindref="member">m_linearized_input_size</ref></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::accumulate(<ref refid="classlbann_1_1data__reader__jag_1aa3ae2023ad77d767e717a24b91dbd548" kindref="member">m_inputs</ref>.shape.begin()+1,<sp/><ref refid="classlbann_1_1data__reader__jag_1aa3ae2023ad77d767e717a24b91dbd548" kindref="member">m_inputs</ref>.shape.end(),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1u,<sp/>std::multiplies&lt;size_t&gt;());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classlbann_1_1data__reader__jag_1aaf9fbe3e290dc1d4bb13fb203e33e313" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1aaf9fbe3e290dc1d4bb13fb203e33e313" kindref="member">data_reader_jag::get_linearized_data_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739ba2d3bba9f202270762169c1c01d2fb7a4" kindref="member">Inverse</ref>:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739bae9c49fc4443020e18086fc83ce0b369b" kindref="member">AutoI</ref>:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739baab2b8e8bef02dfc8ffaae80bdd0a7fd4" kindref="member">AutoS</ref>:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1a856b4b9cdf9d8569e5fef1d5d996870d" kindref="member">m_linearized_scalar_size</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_jag::get_linearized_data_size()<sp/>:<sp/>unknown<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classlbann_1_1data__reader__jag_1ad8e4752ead359374c9c7c10becf6aec1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1ad8e4752ead359374c9c7c10becf6aec1" kindref="member">data_reader_jag::get_linearized_response_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739ba2d3bba9f202270762169c1c01d2fb7a4" kindref="member">Inverse</ref>:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1a75e3c8870f9fc8e50fb24e4515ac7d82" kindref="member">m_linearized_input_size</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739bae9c49fc4443020e18086fc83ce0b369b" kindref="member">AutoI</ref>:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739baab2b8e8bef02dfc8ffaae80bdd0a7fd4" kindref="member">AutoS</ref>:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1a856b4b9cdf9d8569e5fef1d5d996870d" kindref="member">m_linearized_scalar_size</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_jag::get_linearized_response_size()<sp/>:<sp/>unknown<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classlbann_1_1data__reader__jag_1af724f9e38e98e9a4d46f18e7ccadcbb3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/><ref refid="classlbann_1_1data__reader__jag_1af724f9e38e98e9a4d46f18e7ccadcbb3" kindref="member">data_reader_jag::get_data_dims</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739ba2d3bba9f202270762169c1c01d2fb7a4" kindref="member">Inverse</ref>:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{1,<sp/><ref refid="classlbann_1_1data__reader__jag_1a6178d5dffd5e9bf7cf5703613cf9bd2e" kindref="member">m_image_height</ref>,<sp/><ref refid="classlbann_1_1data__reader__jag_1a193a91f2aab9f6373a7b376ff183cd0e" kindref="member">m_image_width</ref>};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>{static_cast&lt;int&gt;(m_linearized_image_size)};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739bae9c49fc4443020e18086fc83ce0b369b" kindref="member">AutoI</ref>:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>)};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739baab2b8e8bef02dfc8ffaae80bdd0a7fd4" kindref="member">AutoS</ref>:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1a856b4b9cdf9d8569e5fef1d5d996870d" kindref="member">m_linearized_scalar_size</ref>)};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_jag::get_data_dims()<sp/>:<sp/>unknown<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classlbann_1_1data__reader__jag_1a1a5c6cbbaba03f9826cbbd7657427351" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a1a5c6cbbaba03f9826cbbd7657427351" kindref="member">data_reader_jag::load</ref>()<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>data_dir<sp/>=<sp/><ref refid="namespacelbann_1a1b8b05bbf2e59808a51ead80c47a9359" kindref="member">add_delimiter</ref>(<ref refid="classlbann_1_1generic__data__reader_1ab4c6c2d4ba40ece809ce896828c8ff03" kindref="member">get_file_dir</ref>());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>namestr<sp/>=<sp/><ref refid="classlbann_1_1generic__data__reader_1a56664e1b43f3fe923cf6d652f14b40a9" kindref="member">get_data_filename</ref>();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>file_names<sp/>=<sp/><ref refid="namespacelbann_1af3f2c9055423e1fe3380b1ad4c4ab5ef" kindref="member">get_tokens</ref>(namestr);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_names.size()<sp/>!=<sp/>3u)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>unexpected<sp/>number<sp/>of<sp/>files<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(file_names.size()));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>str<sp/>:<sp/>file_names)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/>data_dir<sp/>+<sp/>str;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a1a5c6cbbaba03f9826cbbd7657427351" kindref="member">load</ref>(file_names[0],<sp/>file_names[1],<sp/>file_names[2],<sp/><ref refid="classlbann_1_1generic__data__reader_1a51af253029b7daea29bc46cbbef686b3" kindref="member">m_first_n</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_samples<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1a321580d6f335308e19868b4c3d5c9558" kindref="member">get_num_samples</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__reader_1a51af253029b7daea29bc46cbbef686b3" kindref="member">m_first_n</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>num_samples<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__data__reader_1a51af253029b7daea29bc46cbbef686b3" kindref="member">m_first_n</ref>)<sp/>&lt;=<sp/>num_samples)?</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__data__reader_1a51af253029b7daea29bc46cbbef686b3" kindref="member">m_first_n</ref>)<sp/>:<sp/>num_samples;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1a51af253029b7daea29bc46cbbef686b3" kindref="member">m_first_n</ref><sp/>=<sp/>num_samples;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1ae6929a8bd2e59da72a8c2e537f0b2b37" kindref="member">set_use_percent</ref>(1.0);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1aa2d83c4ffc58534e0c193b6b9f9fb925" kindref="member">set_absolute_sample_count</ref>(0u);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" kindref="member">m_shuffled_indices</ref>.clear();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" kindref="member">m_shuffled_indices</ref>.resize(num_samples);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>std::iota(<ref refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" kindref="member">m_shuffled_indices</ref>.begin(),<sp/><ref refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" kindref="member">m_shuffled_indices</ref>.end(),<sp/>0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__reader_1aa28fdeeb6af492540f507e49adff5d6c" kindref="member">select_subset_of_data</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="classlbann_1_1data__reader__jag_1a300a937eb6022b5b2cd6d9405beb3d83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a1a5c6cbbaba03f9826cbbd7657427351" kindref="member">data_reader_jag::load</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>image_file,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>scalar_file,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>input_file,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>first_n)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref><sp/>==<sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739ba2d3bba9f202270762169c1c01d2fb7a4" kindref="member">Inverse</ref><sp/>||<sp/><ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref><sp/>==<sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739bae9c49fc4443020e18086fc83ce0b369b" kindref="member">AutoI</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!image_file.empty()<sp/>&amp;&amp;<sp/>!<ref refid="namespacelbann_1a4fac6c6483965395fa79d31061485f9f" kindref="member">check_if_file_exists</ref>(image_file))<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_jag:<sp/>failed<sp/>to<sp/>load<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>image_file);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref><sp/>==<sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739baab2b8e8bef02dfc8ffaae80bdd0a7fd4" kindref="member">AutoS</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!scalar_file.empty()<sp/>&amp;&amp;<sp/>!<ref refid="namespacelbann_1a4fac6c6483965395fa79d31061485f9f" kindref="member">check_if_file_exists</ref>(scalar_file))<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_jag:<sp/>failed<sp/>to<sp/>load<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>scalar_file);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref><sp/>==<sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739ba2d3bba9f202270762169c1c01d2fb7a4" kindref="member">Inverse</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!input_file.empty()<sp/>&amp;&amp;<sp/>!<ref refid="namespacelbann_1a4fac6c6483965395fa79d31061485f9f" kindref="member">check_if_file_exists</ref>(input_file))<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_jag:<sp/>failed<sp/>to<sp/>load<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>input_file);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a25ceffff7e8d6641e785efa033530011" kindref="member">m_num_samples</ref><sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>in<sp/>only<sp/>those<sp/>that<sp/>will<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref><sp/>==<sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739ba2d3bba9f202270762169c1c01d2fb7a4" kindref="member">Inverse</ref><sp/>||<sp/><ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref><sp/>==<sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739bae9c49fc4443020e18086fc83ce0b369b" kindref="member">AutoI</ref>)<sp/>&amp;&amp;<sp/>!image_file.empty())<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1ae96696fb14653ef1b57936943eb6a800" kindref="member">m_images</ref><sp/><sp/>=<sp/>cnpy::npy_load(image_file);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_n<sp/>&gt;<sp/>0u)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>to<sp/>use<sp/>only<sp/>first_n<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelbann_1_1cnpy__utils_1ab19ad0a361570b7e78e203c02d6ba13a" kindref="member">cnpy_utils::shrink_to_fit</ref>(<ref refid="classlbann_1_1data__reader__jag_1ae96696fb14653ef1b57936943eb6a800" kindref="member">m_images</ref>,<sp/>first_n);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a3f1691818996f73dc918dfd0e8f98a70" kindref="member">m_image_loaded</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1af1e7add9e8bdcf97fe81bfc27b618387" kindref="member">set_linearized_image_size</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref><sp/>==<sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739baab2b8e8bef02dfc8ffaae80bdd0a7fd4" kindref="member">AutoS</ref>)<sp/>&amp;&amp;<sp/>!scalar_file.empty())<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1ab0ce0a57903e79f029e91356db8b5441" kindref="member">m_scalars</ref><sp/>=<sp/>cnpy::npy_load(scalar_file);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_n<sp/>&gt;<sp/>0u)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>to<sp/>use<sp/>only<sp/>first_n<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelbann_1_1cnpy__utils_1ab19ad0a361570b7e78e203c02d6ba13a" kindref="member">cnpy_utils::shrink_to_fit</ref>(<ref refid="classlbann_1_1data__reader__jag_1ab0ce0a57903e79f029e91356db8b5441" kindref="member">m_scalars</ref>,<sp/>first_n);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1add9f037609b73da931a4a8a460798db9" kindref="member">m_scalar_loaded</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a27a1da4475453b043ba0ec1724317c27" kindref="member">set_linearized_scalar_size</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref><sp/>==<sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739ba2d3bba9f202270762169c1c01d2fb7a4" kindref="member">Inverse</ref>)<sp/>&amp;&amp;<sp/>!input_file.empty())<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1aa3ae2023ad77d767e717a24b91dbd548" kindref="member">m_inputs</ref><sp/><sp/>=<sp/>cnpy::npy_load(input_file);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_n<sp/>&gt;<sp/>0u)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>to<sp/>use<sp/>only<sp/>first_n<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelbann_1_1cnpy__utils_1ab19ad0a361570b7e78e203c02d6ba13a" kindref="member">cnpy_utils::shrink_to_fit</ref>(<ref refid="classlbann_1_1data__reader__jag_1aa3ae2023ad77d767e717a24b91dbd548" kindref="member">m_inputs</ref>,<sp/>first_n);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1ae047bbae82c4a8eceedceeea2e1815ad" kindref="member">m_input_loaded</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a15f9aab2180ff66b7b5ace00957740df" kindref="member">set_linearized_input_size</ref>();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_samples<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1a2f6bcf33c1efdcef1c0cc0ac9756968b" kindref="member">check_data</ref>(num_samples);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a627474a612a158675918ec5b5518c80f" kindref="member">get_description</ref>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_jag:<sp/>loaded<sp/>data<sp/>format<sp/>not<sp/>consistent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a25ceffff7e8d6641e785efa033530011" kindref="member">m_num_samples</ref><sp/>=<sp/>num_samples;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a3f1691818996f73dc918dfd0e8f98a70" kindref="member">m_image_loaded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a273907a834d9bd234b21f88ee72076be" kindref="member">m_img_min</ref><sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1a7fd3f8e1b26f624bc91fac8fe4cff85e" kindref="member">get_image_min</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1ab71122303357978ff1de2e2c1d1ac0ed" kindref="member">m_img_max</ref><sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1abf4e3248e1f319202d0bb370316f0d8a" kindref="member">get_image_max</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a273907a834d9bd234b21f88ee72076be" kindref="member">m_img_min</ref><sp/>==<sp/><ref refid="classlbann_1_1data__reader__jag_1ab71122303357978ff1de2e2c1d1ac0ed" kindref="member">m_img_max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_jag:<sp/>no_variation<sp/>in<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1ad145def7b548ca2d0d3f207f6376b114" kindref="member">normalize_image</ref>();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="classlbann_1_1data__reader__jag_1a2f6bcf33c1efdcef1c0cc0ac9756968b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a2f6bcf33c1efdcef1c0cc0ac9756968b" kindref="member">data_reader_jag::check_data</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>num_samples)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>num_samples<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok<sp/>&amp;&amp;<sp/><ref refid="classlbann_1_1data__reader__jag_1a3f1691818996f73dc918dfd0e8f98a70" kindref="member">m_image_loaded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>(<ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref><sp/>&gt;<sp/>0u)<sp/>&amp;&amp;<sp/>(<ref refid="classlbann_1_1data__reader__jag_1ae96696fb14653ef1b57936943eb6a800" kindref="member">m_images</ref>.word_size<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_t</ref>));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_images.shape.size()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__reader__jag_1ae96696fb14653ef1b57936943eb6a800" kindref="member">m_images</ref>.shape.size()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_linearized_image_size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_images.word_size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__reader__jag_1ae96696fb14653ef1b57936943eb6a800" kindref="member">m_images</ref>.word_size<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sizeof(data_t)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_t</ref>)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>num_samples<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1ae96696fb14653ef1b57936943eb6a800" kindref="member">m_images</ref>.shape[0];</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok<sp/>&amp;&amp;<sp/><ref refid="classlbann_1_1data__reader__jag_1add9f037609b73da931a4a8a460798db9" kindref="member">m_scalar_loaded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>(<ref refid="classlbann_1_1data__reader__jag_1a856b4b9cdf9d8569e5fef1d5d996870d" kindref="member">m_linearized_scalar_size</ref><sp/>&gt;<sp/>0u)<sp/>&amp;&amp;<sp/>(<ref refid="classlbann_1_1data__reader__jag_1ab0ce0a57903e79f029e91356db8b5441" kindref="member">m_scalars</ref>.word_size<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1aa2e01bc071588b9c1a583e5a752abcc6" kindref="member">scalar_t</ref>));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_scalars.shape.size()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__reader__jag_1ab0ce0a57903e79f029e91356db8b5441" kindref="member">m_scalars</ref>.shape.size()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_linearized_scalar_size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__reader__jag_1a856b4b9cdf9d8569e5fef1d5d996870d" kindref="member">m_linearized_scalar_size</ref><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_scalars.word_size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__reader__jag_1ab0ce0a57903e79f029e91356db8b5441" kindref="member">m_scalars</ref>.word_size<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sizeof(scalar_t)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1aa2e01bc071588b9c1a583e5a752abcc6" kindref="member">scalar_t</ref>)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_samples<sp/>&gt;<sp/>0u)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>ok<sp/>&amp;&amp;<sp/>(num_samples<sp/>==<sp/><ref refid="classlbann_1_1data__reader__jag_1ab0ce0a57903e79f029e91356db8b5441" kindref="member">m_scalars</ref>.shape[0]);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_samples<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1ab0ce0a57903e79f029e91356db8b5441" kindref="member">m_scalars</ref>.shape[0];</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok<sp/>&amp;&amp;<sp/><ref refid="classlbann_1_1data__reader__jag_1ae047bbae82c4a8eceedceeea2e1815ad" kindref="member">m_input_loaded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>(<ref refid="classlbann_1_1data__reader__jag_1a75e3c8870f9fc8e50fb24e4515ac7d82" kindref="member">m_linearized_input_size</ref><sp/>&gt;<sp/>0u)<sp/>&amp;&amp;<sp/>(<ref refid="classlbann_1_1data__reader__jag_1aa3ae2023ad77d767e717a24b91dbd548" kindref="member">m_inputs</ref>.word_size<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1ab08c9af4bca496b7889de1473c3d8d4e" kindref="member">input_t</ref>));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_inputs.shape.size()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__reader__jag_1aa3ae2023ad77d767e717a24b91dbd548" kindref="member">m_inputs</ref>.shape.size()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_linearized_input_size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__reader__jag_1a75e3c8870f9fc8e50fb24e4515ac7d82" kindref="member">m_linearized_input_size</ref><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_inputs.word_size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__reader__jag_1aa3ae2023ad77d767e717a24b91dbd548" kindref="member">m_inputs</ref>.word_size<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sizeof(input_t)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classlbann_1_1data__reader__jag_1ab08c9af4bca496b7889de1473c3d8d4e" kindref="member">input_t</ref>)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_samples<sp/>&gt;<sp/>0u)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>ok<sp/>&amp;&amp;<sp/>(num_samples<sp/>==<sp/><ref refid="classlbann_1_1data__reader__jag_1aa3ae2023ad77d767e717a24b91dbd548" kindref="member">m_inputs</ref>.shape[0]);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_samples<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1aa3ae2023ad77d767e717a24b91dbd548" kindref="member">m_inputs</ref>.shape[0];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>num_samples<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739ba2d3bba9f202270762169c1c01d2fb7a4" kindref="member">Inverse</ref>:</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1a3f1691818996f73dc918dfd0e8f98a70" kindref="member">m_image_loaded</ref><sp/>&amp;&amp;<sp/><ref refid="classlbann_1_1data__reader__jag_1ae047bbae82c4a8eceedceeea2e1815ad" kindref="member">m_input_loaded</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739bae9c49fc4443020e18086fc83ce0b369b" kindref="member">AutoI</ref>:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1a3f1691818996f73dc918dfd0e8f98a70" kindref="member">m_image_loaded</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739baab2b8e8bef02dfc8ffaae80bdd0a7fd4" kindref="member">AutoS</ref>:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1add9f037609b73da931a4a8a460798db9" kindref="member">m_scalar_loaded</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_jag::check_data()<sp/>:<sp/>unknown<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="classlbann_1_1data__reader__jag_1a627474a612a158675918ec5b5518c80f" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classlbann_1_1data__reader__jag_1a627474a612a158675918ec5b5518c80f" kindref="member">data_reader_jag::get_description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::to_string;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>string(</highlight><highlight class="stringliteral">&quot;data_reader_jag:\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>mode:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(static_cast&lt;int&gt;(<ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref>))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>images:<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>+<sp/><ref refid="namespacelbann_1_1cnpy__utils_1a120e5719167d6d20b2a98c4282fd7a50" kindref="member">cnpy_utils::show_shape</ref>(<ref refid="classlbann_1_1data__reader__jag_1ae96696fb14653ef1b57936943eb6a800" kindref="member">m_images</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>scalars:<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>+<sp/><ref refid="namespacelbann_1_1cnpy__utils_1a120e5719167d6d20b2a98c4282fd7a50" kindref="member">cnpy_utils::show_shape</ref>(<ref refid="classlbann_1_1data__reader__jag_1ab0ce0a57903e79f029e91356db8b5441" kindref="member">m_scalars</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>inputs:<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>+<sp/><ref refid="namespacelbann_1_1cnpy__utils_1a120e5719167d6d20b2a98c4282fd7a50" kindref="member">cnpy_utils::show_shape</ref>(<ref refid="classlbann_1_1data__reader__jag_1aa3ae2023ad77d767e717a24b91dbd548" kindref="member">m_inputs</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a3f1691818996f73dc918dfd0e8f98a70" kindref="member">m_image_loaded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>min<sp/>pixel<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="classlbann_1_1data__reader__jag_1a273907a834d9bd234b21f88ee72076be" kindref="member">m_img_min</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>max<sp/>pixel<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="classlbann_1_1data__reader__jag_1ab71122303357978ff1de2e2c1d1ac0ed" kindref="member">m_img_max</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>image<sp/>width<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="classlbann_1_1data__reader__jag_1a193a91f2aab9f6373a7b376ff183cd0e" kindref="member">m_image_width</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>image<sp/>height<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="classlbann_1_1data__reader__jag_1a6178d5dffd5e9bf7cf5703613cf9bd2e" kindref="member">m_image_height</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>image<sp/>normalization:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="classlbann_1_1data__reader__jag_1a351fe7aaccf8456fa97c9d9bf3dcd73d" kindref="member">m_image_normalization</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="classlbann_1_1data__reader__jag_1ad145def7b548ca2d0d3f207f6376b114" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1ad145def7b548ca2d0d3f207f6376b114" kindref="member">data_reader_jag::normalize_image</ref>()<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1data__reader__jag_1a3f1691818996f73dc918dfd0e8f98a70" kindref="member">m_image_loaded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>depth_t<sp/>=<sp/>cv_image_type&lt;data_t&gt;;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type_code<sp/>=<sp/>depth_t::T(1u);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a351fe7aaccf8456fa97c9d9bf3dcd73d" kindref="member">m_image_normalization</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_t</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1aab51581a1b8175bf5da1b74454ef7701" kindref="member">get_image_ptr</ref>(0);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Present<sp/>the<sp/>entire<sp/>image<sp/>data<sp/>as<sp/>a<sp/>single<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>normalize<sp/>it<sp/>once<sp/>and<sp/>for<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">cv::Mat</ref><sp/>img(<ref refid="classlbann_1_1data__reader__jag_1a25ceffff7e8d6641e785efa033530011" kindref="member">m_num_samples</ref>,<sp/><ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_code,<sp/>reinterpret_cast&lt;void*&gt;(ptr));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::normalize(img,<sp/>img,<sp/>0.0,<sp/>1.0,<sp/>cv::NORM_MINMAX);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a351fe7aaccf8456fa97c9d9bf3dcd73d" kindref="member">m_image_normalization</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normalize<sp/>each<sp/>image<sp/>independently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0u;<sp/>i<sp/>&lt;<sp/><ref refid="classlbann_1_1data__reader__jag_1a25ceffff7e8d6641e785efa033530011" kindref="member">m_num_samples</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_t</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1aab51581a1b8175bf5da1b74454ef7701" kindref="member">get_image_ptr</ref>(i);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">cv::Mat</ref><sp/>img(1,<sp/><ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_code,<sp/>reinterpret_cast&lt;void*&gt;(ptr));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::normalize(img,<sp/>img,<sp/>0.0,<sp/>1.0,<sp/>cv::NORM_MINMAX);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a351fe7aaccf8456fa97c9d9bf3dcd73d" kindref="member">m_image_normalization</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_jag:<sp/>invalid<sp/>normalization<sp/>mode<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(<ref refid="classlbann_1_1data__reader__jag_1a351fe7aaccf8456fa97c9d9bf3dcd73d" kindref="member">m_image_normalization</ref>));</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="classlbann_1_1data__reader__jag_1aab51581a1b8175bf5da1b74454ef7701" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_reader_jag::data_t</ref>*<sp/><ref refid="classlbann_1_1data__reader__jag_1aab51581a1b8175bf5da1b74454ef7701" kindref="member">data_reader_jag::get_image_ptr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a3f1691818996f73dc918dfd0e8f98a70" kindref="member">m_image_loaded</ref>?<sp/>cnpy_utils::data_ptr&lt;data_t&gt;(<ref refid="classlbann_1_1data__reader__jag_1ae96696fb14653ef1b57936943eb6a800" kindref="member">m_images</ref>,<sp/>{i})<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="classlbann_1_1data__reader__jag_1aee6e15cf6eda3bc97d1f7b077d74747a" refkind="member"><highlight class="normal"><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">cv::Mat</ref><sp/><ref refid="classlbann_1_1data__reader__jag_1aee6e15cf6eda3bc97d1f7b077d74747a" kindref="member">data_reader_jag::get_image</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>InputBuf_T<sp/>=<sp/>cv_image_type&lt;data_t&gt;;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_t</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1aab51581a1b8175bf5da1b74454ef7701" kindref="member">get_image_ptr</ref>(i);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">cv::Mat</ref>();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>zero<sp/>copying<sp/>view<sp/>to<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">cv::Mat</ref><sp/>img_org(<ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>,<sp/>1,<sp/>InputBuf_T::T(1u),</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;void*&gt;(ptr));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">cv::Mat</ref><sp/>img;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::is_same&lt;data_t,<sp/>DataType&gt;::value)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>img<sp/>=<sp/>img_org.clone();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>img_org.convertTo(img,<sp/>cv_image_type&lt;DataType&gt;::T(1u));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>img.reshape(0,<sp/><ref refid="classlbann_1_1data__reader__jag_1a6178d5dffd5e9bf7cf5703613cf9bd2e" kindref="member">m_image_height</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="classlbann_1_1data__reader__jag_1abf4e3248e1f319202d0bb370316f0d8a" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_reader_jag::data_t</ref><sp/><ref refid="classlbann_1_1data__reader__jag_1abf4e3248e1f319202d0bb370316f0d8a" kindref="member">data_reader_jag::get_image_max</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1data__reader__jag_1a3f1691818996f73dc918dfd0e8f98a70" kindref="member">m_image_loaded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;data_t&gt;::min();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_t</ref>*<sp/>ptr<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1aab51581a1b8175bf5da1b74454ef7701" kindref="member">get_image_ptr</ref>(0);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tot_num_pixels<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1ae96696fb14653ef1b57936943eb6a800" kindref="member">m_images</ref>.shape[0]*<ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*std::max_element(ptr,<sp/>ptr<sp/>+<sp/>tot_num_pixels);</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="classlbann_1_1data__reader__jag_1a7fd3f8e1b26f624bc91fac8fe4cff85e" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_reader_jag::data_t</ref><sp/><ref refid="classlbann_1_1data__reader__jag_1a7fd3f8e1b26f624bc91fac8fe4cff85e" kindref="member">data_reader_jag::get_image_min</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1data__reader__jag_1a3f1691818996f73dc918dfd0e8f98a70" kindref="member">m_image_loaded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;data_t&gt;::max();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_t</ref>*<sp/>ptr<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1aab51581a1b8175bf5da1b74454ef7701" kindref="member">get_image_ptr</ref>(0);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tot_num_pixels<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1ae96696fb14653ef1b57936943eb6a800" kindref="member">m_images</ref>.shape[0]*<ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*std::min_element(ptr,<sp/>ptr<sp/>+<sp/>tot_num_pixels);</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="classlbann_1_1data__reader__jag_1abaa3c00c30ebaa54d395c93f0225570c" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__reader__jag_1aa2e01bc071588b9c1a583e5a752abcc6" kindref="member">data_reader_jag::scalar_t</ref>*<sp/><ref refid="classlbann_1_1data__reader__jag_1abaa3c00c30ebaa54d395c93f0225570c" kindref="member">data_reader_jag::get_scalar_ptr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1add9f037609b73da931a4a8a460798db9" kindref="member">m_scalar_loaded</ref>?<sp/>cnpy_utils::data_ptr&lt;scalar_t&gt;(<ref refid="classlbann_1_1data__reader__jag_1ab0ce0a57903e79f029e91356db8b5441" kindref="member">m_scalars</ref>,<sp/>{i})<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="classlbann_1_1data__reader__jag_1ad99fffc2f11cb6f3fc42ef1138a3f925" refkind="member"><highlight class="normal">std::vector&lt;DataType&gt;<sp/><ref refid="classlbann_1_1data__reader__jag_1ad99fffc2f11cb6f3fc42ef1138a3f925" kindref="member">data_reader_jag::get_scalar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1aa2e01bc071588b9c1a583e5a752abcc6" kindref="member">scalar_t</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1abaa3c00c30ebaa54d395c93f0225570c" kindref="member">get_scalar_ptr</ref>(i);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>std::vector&lt;DataType&gt;<sp/>ret(<ref refid="classlbann_1_1data__reader__jag_1a856b4b9cdf9d8569e5fef1d5d996870d" kindref="member">m_linearized_scalar_size</ref>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0u;<sp/>j<sp/>&lt;<sp/><ref refid="classlbann_1_1data__reader__jag_1a856b4b9cdf9d8569e5fef1d5d996870d" kindref="member">m_linearized_scalar_size</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>ret[j]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DataType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr[j]);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="classlbann_1_1data__reader__jag_1a5535a2dc025d484ac01a6aad8585c9b5" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1data__reader__jag_1ab08c9af4bca496b7889de1473c3d8d4e" kindref="member">data_reader_jag::input_t</ref>*<sp/><ref refid="classlbann_1_1data__reader__jag_1a5535a2dc025d484ac01a6aad8585c9b5" kindref="member">data_reader_jag::get_input_ptr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1ae047bbae82c4a8eceedceeea2e1815ad" kindref="member">m_input_loaded</ref>?<sp/>cnpy_utils::data_ptr&lt;input_t&gt;(<ref refid="classlbann_1_1data__reader__jag_1aa3ae2023ad77d767e717a24b91dbd548" kindref="member">m_inputs</ref>,<sp/>{i})<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="classlbann_1_1data__reader__jag_1aef236213fa1b229a2554c494fabb8873" refkind="member"><highlight class="normal">std::vector&lt;DataType&gt;<sp/><ref refid="classlbann_1_1data__reader__jag_1aef236213fa1b229a2554c494fabb8873" kindref="member">data_reader_jag::get_input</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1ab08c9af4bca496b7889de1473c3d8d4e" kindref="member">input_t</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1a5535a2dc025d484ac01a6aad8585c9b5" kindref="member">get_input_ptr</ref>(i);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>std::vector&lt;DataType&gt;<sp/>ret(<ref refid="classlbann_1_1data__reader__jag_1a75e3c8870f9fc8e50fb24e4515ac7d82" kindref="member">m_linearized_input_size</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0u;<sp/>j<sp/>&lt;<sp/><ref refid="classlbann_1_1data__reader__jag_1a75e3c8870f9fc8e50fb24e4515ac7d82" kindref="member">m_linearized_input_size</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>ret[j]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DataType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr[j]);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="classlbann_1_1data__reader__jag_1a3b22313694b8ff258486491775100d89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a3b22313694b8ff258486491775100d89" kindref="member">data_reader_jag::fetch_datum</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>X,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mb_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739ba2d3bba9f202270762169c1c01d2fb7a4" kindref="member">Inverse</ref>:<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_t</ref>*<sp/>ptr<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1aab51581a1b8175bf5da1b74454ef7701" kindref="member">get_image_ptr</ref>(data_id);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_minibatch_item&lt;data_t&gt;(X,<sp/>mb_idx,<sp/>ptr,<sp/><ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739bae9c49fc4443020e18086fc83ce0b369b" kindref="member">AutoI</ref>:<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_t</ref>*<sp/>ptr<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1aab51581a1b8175bf5da1b74454ef7701" kindref="member">get_image_ptr</ref>(data_id);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_minibatch_item&lt;data_t&gt;(X,<sp/>mb_idx,<sp/>ptr,<sp/><ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739baab2b8e8bef02dfc8ffaae80bdd0a7fd4" kindref="member">AutoS</ref>:<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1aa2e01bc071588b9c1a583e5a752abcc6" kindref="member">scalar_t</ref>*<sp/>ptr<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1abaa3c00c30ebaa54d395c93f0225570c" kindref="member">get_scalar_ptr</ref>(data_id);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_minibatch_item&lt;scalar_t&gt;(X,<sp/>mb_idx,<sp/>ptr,<sp/><ref refid="classlbann_1_1data__reader__jag_1a856b4b9cdf9d8569e5fef1d5d996870d" kindref="member">m_linearized_scalar_size</ref>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_jag::fetch_datum()<sp/>:<sp/>unknown<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="classlbann_1_1data__reader__jag_1ad9b4259f23a9744ec1c86c688a67f583" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1ad9b4259f23a9744ec1c86c688a67f583" kindref="member">data_reader_jag::fetch_response</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>Y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mb_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__reader__jag_1a877eb1f0eb2afccd73cd7d69407ff6e2" kindref="member">m_model_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739ba2d3bba9f202270762169c1c01d2fb7a4" kindref="member">Inverse</ref>:<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1ab08c9af4bca496b7889de1473c3d8d4e" kindref="member">input_t</ref>*<sp/>ptr<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1a5535a2dc025d484ac01a6aad8585c9b5" kindref="member">get_input_ptr</ref>(data_id);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_minibatch_item&lt;input_t&gt;(Y,<sp/>mb_idx,<sp/>ptr,<sp/><ref refid="classlbann_1_1data__reader__jag_1a75e3c8870f9fc8e50fb24e4515ac7d82" kindref="member">m_linearized_input_size</ref>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739bae9c49fc4443020e18086fc83ce0b369b" kindref="member">AutoI</ref>:<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a7377d6c02c455f019a378489b9b8eab4" kindref="member">data_t</ref>*<sp/>ptr<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1aab51581a1b8175bf5da1b74454ef7701" kindref="member">get_image_ptr</ref>(data_id);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_minibatch_item&lt;data_t&gt;(Y,<sp/>mb_idx,<sp/>ptr,<sp/><ref refid="classlbann_1_1data__reader__jag_1a7c2aa5f489e7c7a3236c1f6c4a760048" kindref="member">m_linearized_image_size</ref>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a114c369c8604df385cf7a3ec20c9739baab2b8e8bef02dfc8ffaae80bdd0a7fd4" kindref="member">AutoS</ref>:<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1aa2e01bc071588b9c1a583e5a752abcc6" kindref="member">scalar_t</ref>*<sp/>ptr<sp/>=<sp/><ref refid="classlbann_1_1data__reader__jag_1abaa3c00c30ebaa54d395c93f0225570c" kindref="member">get_scalar_ptr</ref>(data_id);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_minibatch_item&lt;scalar_t&gt;(Y,<sp/>mb_idx,<sp/>ptr,<sp/><ref refid="classlbann_1_1data__reader__jag_1a856b4b9cdf9d8569e5fef1d5d996870d" kindref="member">m_linearized_scalar_size</ref>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_jag::fetch_response()<sp/>:<sp/>unknown<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="classlbann_1_1data__reader__jag_1a396e7456d926ae9045011e7f28284946" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag_1a396e7456d926ae9045011e7f28284946" kindref="member">data_reader_jag::save_image</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>pixels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_scale)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__image__preprocessor_1a3c4f4cc5c90233696566a35a62a1708c" kindref="member">internal_save_image</ref>(pixels,<sp/>filename,<sp/><ref refid="classlbann_1_1data__reader__jag_1a6178d5dffd5e9bf7cf5703613cf9bd2e" kindref="member">m_image_height</ref>,<sp/><ref refid="classlbann_1_1data__reader__jag_1a193a91f2aab9f6373a7b376ff183cd0e" kindref="member">m_image_width</ref>,<sp/>1,<sp/>do_scale);</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_jag.cpp"/>
  </compounddef>
</doxygen>
