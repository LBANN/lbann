<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacelbann_1_1cnpy__utils" kind="namespace" language="C++">
    <compoundname>lbann::cnpy_utils</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacelbann_1_1cnpy__utils_1a39fd207d94d1333e6379c53423b6f1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lbann::cnpy_utils::compute_cnpy_array_offset</definition>
        <argsstring>(const cnpy::NpyArray &amp;na, std::vector&lt; size_t &gt; indices)</argsstring>
        <name>compute_cnpy_array_offset</name>
        <param>
          <type>const cnpy::NpyArray &amp;</type>
          <declname>na</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the offset to the element (in terms of the number of elements from the beginning of the array) of a loaded numpy array na specified by indices If the number of indices is less than the dimension of na array, the indices vector is appended with zeros to match the dimension. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/cnpy_utils.cpp" line="32" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/cnpy_utils.cpp" bodystart="32" bodyend="51"/>
        <referencedby refid="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" compoundref="cnpy__utils_8hpp" startline="52" endline="59">data</referencedby>
        <referencedby refid="namespacelbann_1_1cnpy__utils_1a348a4aa859715e5859ddd1a5e3a269c9" compoundref="cnpy__utils_8hpp" startline="67" endline="74">data_ptr</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1cnpy__utils_1ab19ad0a361570b7e78e203c02d6ba13a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::cnpy_utils::shrink_to_fit</definition>
        <argsstring>(cnpy::NpyArray &amp;na, size_t sz)</argsstring>
        <name>shrink_to_fit</name>
        <param>
          <type>cnpy::NpyArray &amp;</type>
          <declname>na</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shrink the first dimension of cnpy::NpyArray to the given size. This is used to choose only first sz samples in data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/cnpy_utils.cpp" line="54" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/cnpy_utils.cpp" bodystart="54" bodyend="67"/>
        <referencedby refid="namespacelbann_1_1cnpy__utils_1aba43b785d14caa5c5df74674f10f0dd8" compoundref="cnpy__utils_8hpp" startline="77" endline="79">data_ptr&lt; void &gt;</referencedby>
        <referencedby refid="classlbann_1_1data__reader__jag_1a300a937eb6022b5b2cd6d9405beb3d83" compoundref="data__reader__jag_8cpp" startline="227" endline="289">lbann::data_reader_jag::load</referencedby>
        <referencedby refid="classlbann_1_1offline__patches__npz_1a29f1d64e32c857018d5ef21dd99fe7c4" compoundref="offline__patches__npz_8cpp" startline="40" endline="139">lbann::offline_patches_npz::load</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1cnpy__utils_1a120e5719167d6d20b2a98c4282fd7a50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string lbann::cnpy_utils::show_shape</definition>
        <argsstring>(const cnpy::NpyArray &amp;na)</argsstring>
        <name>show_shape</name>
        <param>
          <type>const cnpy::NpyArray &amp;</type>
          <declname>na</declname>
        </param>
        <briefdescription>
<para>Show the dimensions of loaded data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/cnpy_utils.cpp" line="70" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/utils/cnpy_utils.cpp" bodystart="70" bodyend="82"/>
        <referencedby refid="namespacelbann_1_1cnpy__utils_1aba43b785d14caa5c5df74674f10f0dd8" compoundref="cnpy__utils_8hpp" startline="77" endline="79">data_ptr&lt; void &gt;</referencedby>
        <referencedby refid="classlbann_1_1data__reader__jag_1a627474a612a158675918ec5b5518c80f" compoundref="data__reader__jag_8cpp" startline="358" endline="374">lbann::data_reader_jag::get_description</referencedby>
        <referencedby refid="classlbann_1_1offline__patches__npz_1a9ffc5cc4b431a4ad18cd58651ca05ef8" compoundref="offline__patches__npz_8cpp" startline="158" endline="171">lbann::offline_patches_npz::get_description</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1cnpy__utils_1a9ac86d96ccb1f8b4b2ea16441738781f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; lbann::cnpy_utils::data</definition>
        <argsstring>(const cnpy::NpyArray &amp;na, const std::vector&lt; size_t &gt; indices)</argsstring>
        <name>data</name>
        <param>
          <type>const cnpy::NpyArray &amp;</type>
          <declname>na</declname>
        </param>
        <param>
          <type>const std::vector&lt; size_t &gt;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allow the access to the data element identified by the indices and the word_size of the array na, but present it as a type T element at the address. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/cnpy_utils.hpp" line="52" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/cnpy_utils.hpp" bodystart="52" bodyend="59"/>
        <references refid="namespacelbann_1_1cnpy__utils_1a39fd207d94d1333e6379c53423b6f1a1" compoundref="cnpy__utils_8cpp" startline="32" endline="51">compute_cnpy_array_offset</references>
        <referencedby refid="classlbann_1_1lbann__comm_1a14adb0771b966f40536bf0e92fb00ebb" compoundref="comm_8hpp" startline="444" endline="458">lbann::lbann_comm::allreduce</referencedby>
        <referencedby refid="classlbann_1_1lbann__comm_1afb144a99e0cd2241f5fb05cad68b1f08" compoundref="comm_8hpp" startline="479" endline="490">lbann::lbann_comm::nb_allreduce</referencedby>
        <referencedby refid="classlbann_1_1numpy__reader_1aafc34d19b30845d54175911d143349de" compoundref="data__reader__numpy_8cpp" startline="61" endline="131">lbann::numpy_reader::load</referencedby>
        <referencedby refid="classlbann_1_1numpy__reader_1ab08dc207eaae7c7f5a70e602da3c1be0" compoundref="data__reader__numpy_8cpp" startline="133" endline="150">lbann::numpy_reader::fetch_datum</referencedby>
        <referencedby refid="classlbann_1_1numpy__reader_1a67691517fc4da98ca95dfc934e847067" compoundref="data__reader__numpy_8cpp" startline="152" endline="166">lbann::numpy_reader::fetch_label</referencedby>
        <referencedby refid="classlbann_1_1numpy__reader_1ad7c3a680426ffcf467d74ba3a5e6eb20" compoundref="data__reader__numpy_8cpp" startline="168" endline="182">lbann::numpy_reader::fetch_response</referencedby>
        <referencedby refid="classlbann_1_1pilot2__molecular__reader_1ae45c583f72e11aeb5d955e2657a9a3e8" compoundref="data__reader__pilot2__molecular_8cpp" startline="208" endline="227">lbann::pilot2_molecular_reader::fetch_molecule</referencedby>
        <referencedby refid="classlbann_1_1data__store__csv_1acacd039d3ca8caf8958b731a1ce382c6" compoundref="data__store__csv_8cpp" startline="156" endline="221">lbann::data_store_csv::exchange_data</referencedby>
        <referencedby refid="classlbann_1_1data__store__image_1a5ff5eccbd469caca692e8259f6f8c021" compoundref="data__store__image_8cpp" startline="134" endline="223">lbann::data_store_image::exchange_data</referencedby>
        <referencedby refid="classlbann_1_1data__store__pilot2__molecular_1a0157fe4d04961c03c0d983cb43aa1cec" compoundref="data__store__pilot2__molecular_8cpp" startline="131" endline="150">lbann::data_store_pilot2_molecular::fill_in_data</referencedby>
        <referencedby refid="classlbann_1_1data__store__pilot2__molecular_1addaa6db4e1b3a25424da9da63c0b3616" compoundref="data__store__pilot2__molecular_8cpp" startline="251" endline="300">lbann::data_store_pilot2_molecular::exchange_data</referencedby>
        <referencedby refid="classlbann_1_1stack__profiler_1a27d55f6551cf445d3d0e9836858f6872" compoundref="stack__profiler_8cpp" startline="107" endline="132">lbann::stack_profiler::print</referencedby>
        <referencedby refid="namespacelbann_1a604ae9da0173b8be2bfb6877997d6d5c" compoundref="statistics_8cpp" startline="32" endline="65">lbann::entrywise_mean_and_stdev</referencedby>
        <referencedby refid="namespacelbann_1a213d429a27c3e8676a3ebec40c24005c" compoundref="statistics_8cpp" startline="100" endline="133">lbann::columnwise_mean_and_stdev</referencedby>
        <referencedby refid="namespacelbann_1a0c713b77f8e191addc1e0210037f9e5f" compoundref="statistics_8cpp" startline="218" endline="277">lbann::rowwise_mean_and_stdev</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1cnpy__utils_1a348a4aa859715e5859ddd1a5e3a269c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* lbann::cnpy_utils::data_ptr</definition>
        <argsstring>(const cnpy::NpyArray &amp;na, const std::vector&lt; size_t &gt; indices)</argsstring>
        <name>data_ptr</name>
        <param>
          <type>const cnpy::NpyArray &amp;</type>
          <declname>na</declname>
        </param>
        <param>
          <type>const std::vector&lt; size_t &gt;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the address of the data element identified by the indices and the word_size of the array na, but present it as the address of a type T element </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/cnpy_utils.hpp" line="67" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/cnpy_utils.hpp" bodystart="67" bodyend="74"/>
        <references refid="namespacelbann_1_1cnpy__utils_1a39fd207d94d1333e6379c53423b6f1a1" compoundref="cnpy__utils_8cpp" startline="32" endline="51">compute_cnpy_array_offset</references>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1cnpy__utils_1aba43b785d14caa5c5df74674f10f0dd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void *</type>
        <definition>void* lbann::cnpy_utils::data_ptr&lt; void &gt;</definition>
        <argsstring>(const cnpy::NpyArray &amp;na, const std::vector&lt; size_t &gt; indices)</argsstring>
        <name>data_ptr&lt; void &gt;</name>
        <param>
          <type>const cnpy::NpyArray &amp;</type>
          <declname>na</declname>
        </param>
        <param>
          <type>const std::vector&lt; size_t &gt;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/cnpy_utils.hpp" line="77" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/cnpy_utils.hpp" bodystart="77" bodyend="79"/>
        <references refid="namespacelbann_1_1cnpy__utils_1ab19ad0a361570b7e78e203c02d6ba13a" compoundref="cnpy__utils_8cpp" startline="54" endline="67">shrink_to_fit</references>
        <references refid="namespacelbann_1_1cnpy__utils_1a120e5719167d6d20b2a98c4282fd7a50" compoundref="cnpy__utils_8cpp" startline="70" endline="82">show_shape</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/utils/cnpy_utils.cpp" line="30" column="1"/>
  </compounddef>
</doxygen>
