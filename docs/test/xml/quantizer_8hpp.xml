<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="quantizer_8hpp" kind="file" language="C++">
    <compoundname>quantizer.hpp</compoundname>
    <includes local="no">unordered_map</includes>
    <includes refid="base_8hpp" local="yes">lbann/base.hpp</includes>
    <includes refid="comm_8hpp" local="yes">lbann/comm.hpp</includes>
    <includes refid="timer_8hpp" local="yes">lbann/utils/timer.hpp</includes>
    <includes refid="exception_8hpp" local="yes">lbann/utils/exception.hpp</includes>
    <includes local="no">omp.h</includes>
    <includes refid="quantizer__impl_8hpp" local="yes">quantizer_impl.hpp</includes>
    <includedby refid="quantizer_8cpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/src/utils/quantizer.cpp</includedby>
    <includedby refid="callback__imcomm_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_imcomm.hpp</includedby>
    <incdepgraph>
      <node id="15739">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="15740" relation="include">
        </childnode>
        <childnode refid="15741" relation="include">
        </childnode>
        <childnode refid="15750" relation="include">
        </childnode>
        <childnode refid="15754" relation="include">
        </childnode>
        <childnode refid="15756" relation="include">
        </childnode>
        <childnode refid="15762" relation="include">
        </childnode>
        <childnode refid="15763" relation="include">
        </childnode>
      </node>
      <node id="15742">
        <label>El.hpp</label>
      </node>
      <node id="15741">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="15742" relation="include">
        </childnode>
        <childnode refid="15743" relation="include">
        </childnode>
        <childnode refid="15744" relation="include">
        </childnode>
        <childnode refid="15749" relation="include">
        </childnode>
      </node>
      <node id="15759">
        <label>string</label>
      </node>
      <node id="15754">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="15755" relation="include">
        </childnode>
      </node>
      <node id="15752">
        <label>map</label>
      </node>
      <node id="15762">
        <label>omp.h</label>
      </node>
      <node id="15761">
        <label>exception</label>
      </node>
      <node id="15746">
        <label>cstdio</label>
      </node>
      <node id="15757">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="15758" relation="include">
        </childnode>
        <childnode refid="15759" relation="include">
        </childnode>
      </node>
      <node id="15748">
        <label>cxxabi.h</label>
      </node>
      <node id="15756">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="15741" relation="include">
        </childnode>
        <childnode refid="15750" relation="include">
        </childnode>
        <childnode refid="15757" relation="include">
        </childnode>
        <childnode refid="15760" relation="include">
        </childnode>
        <childnode refid="15761" relation="include">
        </childnode>
      </node>
      <node id="15751">
        <label>vector</label>
      </node>
      <node id="15750">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="15751" relation="include">
        </childnode>
        <childnode refid="15752" relation="include">
        </childnode>
        <childnode refid="15753" relation="include">
        </childnode>
        <childnode refid="15741" relation="include">
        </childnode>
      </node>
      <node id="15745">
        <label>cstdlib</label>
      </node>
      <node id="15760">
        <label>iostream</label>
      </node>
      <node id="15740">
        <label>unordered_map</label>
      </node>
      <node id="15755">
        <label>chrono</label>
      </node>
      <node id="15758">
        <label>csignal</label>
      </node>
      <node id="15749">
        <label>lbann_config.hpp</label>
      </node>
      <node id="15744">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="15745" relation="include">
        </childnode>
        <childnode refid="15746" relation="include">
        </childnode>
        <childnode refid="15747" relation="include">
        </childnode>
        <childnode refid="15748" relation="include">
        </childnode>
      </node>
      <node id="15743">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="15742" relation="include">
        </childnode>
      </node>
      <node id="15763">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="15762" relation="include">
        </childnode>
      </node>
      <node id="15753">
        <label>typeindex</label>
      </node>
      <node id="15747">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15821">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/mean_absolute_deviation.cpp</label>
        <link refid="objective__functions_2loss__functions_2mean__absolute__deviation_8cpp"/>
      </node>
      <node id="15786">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="15787" relation="include">
        </childnode>
        <childnode refid="15788" relation="include">
        </childnode>
        <childnode refid="15789" relation="include">
        </childnode>
        <childnode refid="15790" relation="include">
        </childnode>
        <childnode refid="15791" relation="include">
        </childnode>
        <childnode refid="15792" relation="include">
        </childnode>
        <childnode refid="15793" relation="include">
        </childnode>
        <childnode refid="15794" relation="include">
        </childnode>
        <childnode refid="15784" relation="include">
        </childnode>
      </node>
      <node id="15770">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_io.cpp</label>
        <link refid="callback__io_8cpp"/>
      </node>
      <node id="15777">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_variable_minibatch.cpp</label>
        <link refid="callback__variable__minibatch_8cpp"/>
      </node>
      <node id="15764">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="15765" relation="include">
        </childnode>
        <childnode refid="15766" relation="include">
        </childnode>
      </node>
      <node id="15819">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/geom_negloglike.cpp</label>
        <link refid="geom__negloglike_8cpp"/>
      </node>
      <node id="15820">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp</label>
        <link refid="objective__functions_2loss__functions_2mean__absolute__deviation_8hpp"/>
        <childnode refid="15821" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15775">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_dump_minibatch_sample_indices.cpp</label>
        <link refid="callback__dump__minibatch__sample__indices_8cpp"/>
      </node>
      <node id="15829">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/polya_negloglike.cpp</label>
        <link refid="polya__negloglike_8cpp"/>
      </node>
      <node id="15810">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/loss_function.hpp</label>
        <link refid="loss__function_8hpp"/>
        <childnode refid="15803" relation="include">
        </childnode>
        <childnode refid="15811" relation="include">
        </childnode>
        <childnode refid="15812" relation="include">
        </childnode>
        <childnode refid="15814" relation="include">
        </childnode>
        <childnode refid="15816" relation="include">
        </childnode>
        <childnode refid="15818" relation="include">
        </childnode>
        <childnode refid="15820" relation="include">
        </childnode>
        <childnode refid="15822" relation="include">
        </childnode>
        <childnode refid="15824" relation="include">
        </childnode>
        <childnode refid="15826" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
      </node>
      <node id="15791">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/model_factory.cpp</label>
        <link refid="model__factory_8cpp"/>
      </node>
      <node id="15815">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/cross_entropy.cpp</label>
        <link refid="cross__entropy_8cpp"/>
      </node>
      <node id="15801">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/metrics/pearson_correlation.cpp</label>
        <link refid="pearson__correlation_8cpp"/>
      </node>
      <node id="15783">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="15784">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="15781" relation="include">
        </childnode>
        <childnode refid="15785" relation="include">
        </childnode>
        <childnode refid="15786" relation="include">
        </childnode>
        <childnode refid="15795" relation="include">
        </childnode>
      </node>
      <node id="15807">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_dump_activations.cpp</label>
        <link refid="callback__dump__activations_8cpp"/>
      </node>
      <node id="15773">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/input_layer.hpp</label>
        <link refid="input__layer_8hpp"/>
        <childnode refid="15774" relation="include">
        </childnode>
        <childnode refid="15775" relation="include">
        </childnode>
        <childnode refid="15776" relation="include">
        </childnode>
        <childnode refid="15777" relation="include">
        </childnode>
        <childnode refid="15778" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15766">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="15767" relation="include">
        </childnode>
        <childnode refid="15768" relation="include">
        </childnode>
        <childnode refid="15769" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15812">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/binary_cross_entropy.hpp</label>
        <link refid="binary__cross__entropy_8hpp"/>
        <childnode refid="15813" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15782">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="15783" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15828">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp</label>
        <link refid="polya__negloglike_8hpp"/>
        <childnode refid="15829" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15772">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/models/recurrent.cpp</label>
        <link refid="recurrent_8cpp"/>
      </node>
      <node id="15788">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp</label>
        <link refid="layer__factory_8cpp"/>
      </node>
      <node id="15805">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_checknan.cpp</label>
        <link refid="callback__checknan_8cpp"/>
      </node>
      <node id="15785">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/utils/protobuf_utils.cpp</label>
        <link refid="protobuf__utils_8cpp"/>
      </node>
      <node id="15816">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp</label>
        <link refid="cross__entropy__with__uncertainty_8hpp"/>
        <childnode refid="15817" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15804">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/target/target_layer.hpp</label>
        <link refid="target__layer_8hpp"/>
        <childnode refid="15805" relation="include">
        </childnode>
        <childnode refid="15806" relation="include">
        </childnode>
        <childnode refid="15807" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
        <childnode refid="15808" relation="include">
        </childnode>
      </node>
      <node id="15796">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/init_image_data_readers.cpp</label>
        <link refid="init__image__data__readers_8cpp"/>
      </node>
      <node id="15809">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/kl_divergence.cpp</label>
        <link refid="kl__divergence_8cpp"/>
      </node>
      <node id="15800">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/metrics/metric.cpp</label>
        <link refid="metric_8cpp"/>
      </node>
      <node id="15802">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/target/reconstruction.hpp</label>
        <link refid="reconstruction_8hpp"/>
        <childnode refid="15803" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15792">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/objective_function_factory.cpp</label>
        <link refid="objective__function__factory_8cpp"/>
      </node>
      <node id="15813">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/binary_cross_entropy.cpp</label>
        <link refid="binary__cross__entropy_8cpp"/>
      </node>
      <node id="15767">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_imcomm.cpp</label>
        <link refid="callback__imcomm_8cpp"/>
      </node>
      <node id="15803">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp</label>
        <link refid="greedy__layerwise__autoencoder_8cpp"/>
      </node>
      <node id="15827">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/poisson_negloglike.cpp</label>
        <link refid="poisson__negloglike_8cpp"/>
      </node>
      <node id="15781">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp</label>
        <link refid="proto__common_8cpp"/>
      </node>
      <node id="15790">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/metric_factory.cpp</label>
        <link refid="metric__factory_8cpp"/>
      </node>
      <node id="15780">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="15781" relation="include">
        </childnode>
        <childnode refid="15782" relation="include">
        </childnode>
        <childnode refid="15784" relation="include">
        </childnode>
        <childnode refid="15797" relation="include">
        </childnode>
      </node>
      <node id="15824">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_squared_error.hpp</label>
        <link refid="objective__functions_2loss__functions_2mean__squared__error_8hpp"/>
        <childnode refid="15825" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15774">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_check_dataset.cpp</label>
        <link refid="callback__check__dataset_8cpp"/>
      </node>
      <node id="15826">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/poisson_negloglike.hpp</label>
        <link refid="poisson__negloglike_8hpp"/>
        <childnode refid="15827" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15795">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/init_image_data_readers.hpp</label>
        <link refid="init__image__data__readers_8hpp"/>
        <childnode refid="15796" relation="include">
        </childnode>
        <childnode refid="15781" relation="include">
        </childnode>
      </node>
      <node id="15811">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/loss_function.cpp</label>
        <link refid="loss__function_8cpp"/>
      </node>
      <node id="15806">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_checksmall.cpp</label>
        <link refid="callback__checksmall_8cpp"/>
      </node>
      <node id="15817">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/cross_entropy_with_uncertainty.cpp</label>
        <link refid="cross__entropy__with__uncertainty_8cpp"/>
      </node>
      <node id="15769">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="15770" relation="include">
        </childnode>
        <childnode refid="15771" relation="include">
        </childnode>
        <childnode refid="15772" relation="include">
        </childnode>
        <childnode refid="15773" relation="include">
        </childnode>
        <childnode refid="15798" relation="include">
        </childnode>
      </node>
      <node id="15823">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/mean_absolute_error.cpp</label>
        <link refid="mean__absolute__error_8cpp"/>
      </node>
      <node id="15768">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_ltfb.cpp</label>
        <link refid="callback__ltfb_8cpp"/>
      </node>
      <node id="15799">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/metrics/categorical_accuracy.cpp</label>
        <link refid="categorical__accuracy_8cpp"/>
      </node>
      <node id="15793">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/optimizer_factory.cpp</label>
        <link refid="optimizer__factory_8cpp"/>
      </node>
      <node id="15779">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_debug_io.cpp</label>
        <link refid="callback__debug__io_8cpp"/>
      </node>
      <node id="15814">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy.hpp</label>
        <link refid="cross__entropy_8hpp"/>
        <childnode refid="15815" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15794">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/weights_factory.cpp</label>
        <link refid="weights__factory_8cpp"/>
      </node>
      <node id="15765">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/utils/quantizer.cpp</label>
        <link refid="quantizer_8cpp"/>
      </node>
      <node id="15771">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp</label>
        <link refid="model_8cpp"/>
      </node>
      <node id="15822">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/mean_absolute_error.hpp</label>
        <link refid="mean__absolute__error_8hpp"/>
        <childnode refid="15823" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15787">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp</label>
        <link refid="callback__factory_8cpp"/>
      </node>
      <node id="15797">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/protobuf_utils.hpp</label>
        <link refid="protobuf__utils_8hpp"/>
        <childnode refid="15785" relation="include">
        </childnode>
      </node>
      <node id="15778">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_debug_io.hpp</label>
        <link refid="callback__debug__io_8hpp"/>
        <childnode refid="15779" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15789">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_graph_factory.cpp</label>
        <link refid="layer__graph__factory_8cpp"/>
      </node>
      <node id="15798">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/io/target/generic_target_layer.hpp</label>
        <link refid="generic__target__layer_8hpp"/>
        <childnode refid="15770" relation="include">
        </childnode>
        <childnode refid="15799" relation="include">
        </childnode>
        <childnode refid="15800" relation="include">
        </childnode>
        <childnode refid="15801" relation="include">
        </childnode>
        <childnode refid="15772" relation="include">
        </childnode>
        <childnode refid="15802" relation="include">
        </childnode>
        <childnode refid="15804" relation="include">
        </childnode>
        <childnode refid="15810" relation="include">
        </childnode>
      </node>
      <node id="15808">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/kl_divergence.hpp</label>
        <link refid="kl__divergence_8hpp"/>
        <childnode refid="15809" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15776">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_print.cpp</label>
        <link refid="callback__print_8cpp"/>
      </node>
      <node id="15818">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/geom_negloglike.hpp</label>
        <link refid="geom__negloglike_8hpp"/>
        <childnode refid="15819" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
      </node>
      <node id="15825">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/mean_squared_error.cpp</label>
        <link refid="objective__functions_2loss__functions_2mean__squared__error_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlbann_1_1lbann__quantizer" prot="public">lbann::lbann_quantizer</innerclass>
    <innerclass refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds" prot="public">lbann::lbann_quantizer::adaptive_thresholds</innerclass>
    <innerclass refid="structlbann_1_1lbann__quantizer_1_1adaptive__reconstructions" prot="public">lbann::lbann_quantizer::adaptive_reconstructions</innerclass>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="quantizer_8hpp_1a91ab3ec5ad5377e7d83209c938b0cfcc" prot="public" static="no">
        <name>LBANN_QUANTIZER_TERNARY</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/quantizer.hpp" line="41" column="9" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/quantizer.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lbann_quantizer<sp/>.hpp<sp/>.cpp<sp/>-<sp/>Quantization<sp/>of<sp/>matrices</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LBANN_QUANTIZER_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LBANN_QUANTIZER_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_8hpp" kindref="compound">lbann/base.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="comm_8hpp" kindref="compound">lbann/comm.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8hpp" kindref="compound">lbann/utils/timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">lbann/utils/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LBANN_QUANTIZER_TERNARY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="quantizer_8hpp_1a91ab3ec5ad5377e7d83209c938b0cfcc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LBANN_QUANTIZER_TERNARY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classlbann_1_1lbann__quantizer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1lbann__quantizer" kindref="compound">lbann_quantizer</ref><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classlbann_1_1lbann__quantizer_1ac8b63c86fc871e248ce20c7af19a7fad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1ac8b63c86fc871e248ce20c7af19a7fad" kindref="member">uqtype</ref><sp/>=<sp/>El::Unsigned;</highlight></codeline>
<codeline lineno="60" refid="classlbann_1_1lbann__quantizer_1afcda642ff1b44d31eec910909c3d013e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1afcda642ff1b44d31eec910909c3d013e" kindref="member">qtype</ref><sp/>=<sp/>El::Int;</highlight></codeline>
<codeline lineno="69" refid="classlbann_1_1lbann__quantizer_1a399f3f8c393b6021b43e95d1ce6ea28c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a399f3f8c393b6021b43e95d1ce6ea28c" kindref="member">QuantizedMatrix</ref><sp/>=<sp/>El::Matrix&lt;qtype&gt;;</highlight></codeline>
<codeline lineno="70" refid="classlbann_1_1lbann__quantizer_1a85ea8e298c2975b4f802855278406aa7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a85ea8e298c2975b4f802855278406aa7" kindref="member">ThreshQuantized</ref><sp/>=<sp/>std::vector&lt;uqtype&gt;;</highlight></codeline>
<codeline lineno="71" refid="classlbann_1_1lbann__quantizer_1adb72778971f6bb914a14823dd5806702" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1adb72778971f6bb914a14823dd5806702" kindref="member">ThreshQuantized32</ref><sp/>=<sp/>std::vector&lt;uint32_t&gt;;</highlight></codeline>
<codeline lineno="72" refid="classlbann_1_1lbann__quantizer_1a2153502c89432e8762141d84794aac75" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a2153502c89432e8762141d84794aac75" kindref="member">ThreshQuantized64</ref><sp/>=<sp/>std::vector&lt;uint64_t&gt;;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds" kindref="compound">adaptive_thresholds</ref><sp/>{</highlight></codeline>
<codeline lineno="77" refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a6f6aee51ed629c2ab68666d577189bb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a6f6aee51ed629c2ab68666d577189bb9" kindref="member">pos_thresh</ref>;</highlight></codeline>
<codeline lineno="79" refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a4626553695545cf0783c3f7302f92fbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a4626553695545cf0783c3f7302f92fbf" kindref="member">neg_thresh</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="82" refid="structlbann_1_1lbann__quantizer_1_1adaptive__reconstructions" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__reconstructions" kindref="compound">adaptive_reconstructions</ref><sp/>{</highlight></codeline>
<codeline lineno="84" refid="structlbann_1_1lbann__quantizer_1_1adaptive__reconstructions_1a9b3b4970e067920e056cdd54c2ad8e95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__reconstructions_1a9b3b4970e067920e056cdd54c2ad8e95" kindref="member">pos_recon</ref>;</highlight></codeline>
<codeline lineno="86" refid="structlbann_1_1lbann__quantizer_1_1adaptive__reconstructions_1a631231c118cc17ba4ed569380e6c6711" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__reconstructions_1a631231c118cc17ba4ed569380e6c6711" kindref="member">neg_recon</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LBANN_QUANTIZER_TERNARY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType<sp/>zero_recon;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__quantizer_1a430cd47f333c678d2cb77f4ab2693914" kindref="member">lbann_quantizer</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__quantizer_1ac0cc07008ff963949c2cb7b91786c61c" kindref="member">~lbann_quantizer</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a4dd4696cbbfd93c73e5fb3c40fcb16c3" kindref="member">onebit_quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/><ref refid="classlbann_1_1lbann__quantizer_1a399f3f8c393b6021b43e95d1ce6ea28c" kindref="member">QuantizedMatrix</ref>&amp;<sp/>qmat,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sample<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a4dd4696cbbfd93c73e5fb3c40fcb16c3" kindref="member">onebit_quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat,<sp/><ref refid="classlbann_1_1lbann__quantizer_1a399f3f8c393b6021b43e95d1ce6ea28c" kindref="member">QuantizedMatrix</ref>&amp;<sp/>qmat,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sample<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1ad5592daa122b40c275cce3dc93bba41e" kindref="member">onebit_unquantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a399f3f8c393b6021b43e95d1ce6ea28c" kindref="member">QuantizedMatrix</ref>&amp;<sp/>qmat,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1ad5592daa122b40c275cce3dc93bba41e" kindref="member">onebit_unquantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a399f3f8c393b6021b43e95d1ce6ea28c" kindref="member">QuantizedMatrix</ref>&amp;<sp/>qmat,<sp/><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a4b326de1ca5b7eba6415b6f42f83335b" kindref="member">intermodel_sum_onebit_quantized</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a4b326de1ca5b7eba6415b6f42f83335b" kindref="member">intermodel_sum_onebit_quantized</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a00106e69ea8a6dfe9e9a91c75b845bcd" kindref="member">threshold_quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/><ref refid="classlbann_1_1lbann__quantizer_1a85ea8e298c2975b4f802855278406aa7" kindref="member">ThreshQuantized</ref>&amp;<sp/>q,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a6f6aee51ed629c2ab68666d577189bb9" kindref="member">pos_thresh</ref>,<sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a4626553695545cf0783c3f7302f92fbf" kindref="member">neg_thresh</ref>,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a00106e69ea8a6dfe9e9a91c75b845bcd" kindref="member">threshold_quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat,<sp/><ref refid="classlbann_1_1lbann__quantizer_1a85ea8e298c2975b4f802855278406aa7" kindref="member">ThreshQuantized</ref>&amp;<sp/>q,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a6f6aee51ed629c2ab68666d577189bb9" kindref="member">pos_thresh</ref>,<sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a4626553695545cf0783c3f7302f92fbf" kindref="member">neg_thresh</ref>,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a0f5f3b0149715ab59202b8884a87c7d5" kindref="member">threshold_unquantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a85ea8e298c2975b4f802855278406aa7" kindref="member">ThreshQuantized</ref>&amp;<sp/>q,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a6f6aee51ed629c2ab68666d577189bb9" kindref="member">pos_thresh</ref>,<sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a4626553695545cf0783c3f7302f92fbf" kindref="member">neg_thresh</ref>,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a0f5f3b0149715ab59202b8884a87c7d5" kindref="member">threshold_unquantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a85ea8e298c2975b4f802855278406aa7" kindref="member">ThreshQuantized</ref>&amp;<sp/>q,<sp/><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a6f6aee51ed629c2ab68666d577189bb9" kindref="member">pos_thresh</ref>,<sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a4626553695545cf0783c3f7302f92fbf" kindref="member">neg_thresh</ref>,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a0bd572557675705c5e080b92d74b02ae" kindref="member">intermodel_sum_threshold_quantized</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,<sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a6f6aee51ed629c2ab68666d577189bb9" kindref="member">pos_thresh</ref>,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a4626553695545cf0783c3f7302f92fbf" kindref="member">neg_thresh</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a0bd572557675705c5e080b92d74b02ae" kindref="member">intermodel_sum_threshold_quantized</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,<sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a6f6aee51ed629c2ab68666d577189bb9" kindref="member">pos_thresh</ref>,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a4626553695545cf0783c3f7302f92fbf" kindref="member">neg_thresh</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>colT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>rowT&gt;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a7e4dfca5770dfd88ae6255b0407d8f80" kindref="member">adaptive_quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/>std::vector&lt;rowT&gt;&amp;<sp/>q,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proportion);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>colT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>rowT&gt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a7e4dfca5770dfd88ae6255b0407d8f80" kindref="member">adaptive_quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat,<sp/>std::vector&lt;rowT&gt;&amp;<sp/>q,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proportion);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>colT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>rowT&gt;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1acf8d21e8114a00fdea53d919d76dd511" kindref="member">adaptive_unquantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rowT<sp/>*q,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>colT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>rowT&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1acf8d21e8114a00fdea53d919d76dd511" kindref="member">adaptive_unquantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rowT<sp/>*q,<sp/><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a87e856d8bf5e8a678a39cdb8f547dfd9" kindref="member">intermodel_sum_adaptive_quantized</ref>(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proportion);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a87e856d8bf5e8a678a39cdb8f547dfd9" kindref="member">intermodel_sum_adaptive_quantized</ref>(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/><ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref>&amp;<sp/>mat,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proportion);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds" kindref="compound">adaptive_thresholds</ref><sp/><ref refid="classlbann_1_1lbann__quantizer_1aa5aabc1cb4163e95aee993d9b37b9b32" kindref="member">proportion_threshold</ref>(</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proportion,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sample<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__reconstructions" kindref="compound">adaptive_reconstructions</ref><sp/><ref refid="classlbann_1_1lbann__quantizer_1af77beca5905ff8601ca9b8231a2a16e0" kindref="member">col_reconstruction</ref>(</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,<sp/>El::Int<sp/>col,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds" kindref="compound">adaptive_thresholds</ref><sp/>threshes,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sample<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classlbann_1_1lbann__quantizer_1a71023cbf93b54d8e8707d137e3c6007a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a71023cbf93b54d8e8707d137e3c6007a" kindref="member">get_proportion_time</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a6bd266728f578df0c86fc2e493742cc1" kindref="member">proportion_time</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234" refid="classlbann_1_1lbann__quantizer_1aee1ea46e3191ad25fd310938eaf5a2e0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1aee1ea46e3191ad25fd310938eaf5a2e0" kindref="member">reset_counters</ref>()<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__quantizer_1a6bd266728f578df0c86fc2e493742cc1" kindref="member">proportion_time</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__quantizer_1a716fae78ef5ba082a8093f0d06550804" kindref="member">quantized_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239" refid="classlbann_1_1lbann__quantizer_1afe560823e51a64b1bb42c6f6cbd83ee0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1afe560823e51a64b1bb42c6f6cbd83ee0" kindref="member">get_quantized_count</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a716fae78ef5ba082a8093f0d06550804" kindref="member">quantized_count</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="245" refid="classlbann_1_1lbann__quantizer_1a33ea17392f53b90e91aea1ffb7e11d68" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a33ea17392f53b90e91aea1ffb7e11d68" kindref="member">NUM_BITS</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classlbann_1_1lbann__quantizer_1afcda642ff1b44d31eec910909c3d013e" kindref="member">qtype</ref>)<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="247" refid="classlbann_1_1lbann__quantizer_1a7745dbc282bebe812ff5523a4b3df3f2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/><ref refid="classlbann_1_1lbann__quantizer_1a7745dbc282bebe812ff5523a4b3df3f2" kindref="member">NUM_THRESHOLD_SAMPLES</ref><sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="249" refid="classlbann_1_1lbann__quantizer_1a10667e56db4218aac3912c6bae28fc41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/><ref refid="classlbann_1_1lbann__quantizer_1a10667e56db4218aac3912c6bae28fc41" kindref="member">NUM_RECON_SAMPLES</ref><sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="251" refid="classlbann_1_1lbann__quantizer_1a8e25785452736c54861a69207a48252d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/><ref refid="classlbann_1_1lbann__quantizer_1a8e25785452736c54861a69207a48252d" kindref="member">NUM_ONEBIT_SAMPLES</ref><sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor">#if<sp/>LBANN_QUANTIZER_TERNARY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1afb4315625e371169cabfac56c3f75d37" kindref="member">HEADER_FACTOR</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="classlbann_1_1lbann__quantizer_1afb4315625e371169cabfac56c3f75d37" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HEADER_FACTOR<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="classlbann_1_1lbann__quantizer_1abe63d57e62be1b498848f7920de4433a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/><ref refid="classlbann_1_1lbann__quantizer_1abe63d57e62be1b498848f7920de4433a" kindref="member">MAX_QUANTIZED_EXCESS</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classlbann_1_1lbann__quantizer_1a6bd266728f578df0c86fc2e493742cc1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a6bd266728f578df0c86fc2e493742cc1" kindref="member">proportion_time</ref>;</highlight></codeline>
<codeline lineno="264" refid="classlbann_1_1lbann__quantizer_1a716fae78ef5ba082a8093f0d06550804" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a716fae78ef5ba082a8093f0d06550804" kindref="member">quantized_count</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classlbann_1_1lbann__quantizer_1aa1541b9afa60250dbd570acbbe98242f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>El::Int<sp/><ref refid="classlbann_1_1lbann__quantizer_1aa1541b9afa60250dbd570acbbe98242f" kindref="member">get_onebit_quantized_matrix_height</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mat.Height()<sp/>+<sp/>(NUM_BITS-1))<sp/>/<sp/>NUM_BITS<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a879cea8464408b8265be9e55edd83b2c" kindref="member">onebit_unquantize_add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a399f3f8c393b6021b43e95d1ce6ea28c" kindref="member">QuantizedMatrix</ref>&amp;<sp/>qmat,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1ab12b432ba2901347b025e8b6ec40a3c6" kindref="member">threshold_unquantize_apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a85ea8e298c2975b4f802855278406aa7" kindref="member">ThreshQuantized</ref>&amp;<sp/>q,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a6f6aee51ed629c2ab68666d577189bb9" kindref="member">pos_thresh</ref>,<sp/>DataType<sp/><ref refid="structlbann_1_1lbann__quantizer_1_1adaptive__thresholds_1a4626553695545cf0783c3f7302f92fbf" kindref="member">neg_thresh</ref>,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;El::Unsigned&gt;&amp;<sp/>positions,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a2bcdf31781bf72bbe63940ea0d92990f" kindref="member">threshold_quantize_apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/><ref refid="classlbann_1_1lbann__quantizer_1a85ea8e298c2975b4f802855278406aa7" kindref="member">ThreshQuantized</ref>&amp;<sp/>q,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>pos_thresh,<sp/>DataType<sp/>neg_thresh,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;El::Unsigned&gt;&amp;<sp/>positions,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>colT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>rowT&gt;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a1f63f7be2e227a48ebaa25056e6f85bc" kindref="member">adaptive_unquantize_add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rowT<sp/>*q,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>colT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>rowT&gt;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a25ed3869c6bc615ae51198803ea4e33d" kindref="member">adaptive_quantize_replace</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/>std::vector&lt;rowT&gt;&amp;<sp/>q,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proportion);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>colT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>rowT&gt;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a9d6e80bd54d6eb03dc63c15861356557" kindref="member">adaptive_bound</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,<sp/>std::vector&lt;rowT&gt;&amp;<sp/>q,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proportion);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>colT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>rowT&gt;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1ab3a0e79b571e7c016446c179eedd0dc1" kindref="member">adaptive_quantize_slice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;rowT&gt;&amp;<sp/>q,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;rowT&gt;&amp;<sp/>slice,<sp/>colT<sp/>start,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colT<sp/>end,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proportion);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>colT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>rowT&gt;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a3fe3493cb16b85bd4eaf251980408f1b" kindref="member">intermodel_sum_adaptive_quantized_impl</ref>(</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>mat,<sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>qerror,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proportion);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="classlbann_1_1lbann__quantizer_1aaa0c20f755437130172c40ca8e95bc3f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1aaa0c20f755437130172c40ca8e95bc3f" kindref="member">get_adaptive_quantization_threads</ref>(El::Int<sp/>width)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_threads<sp/>=<sp/>omp_get_max_threads();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&lt;=<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_threads<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&lt;=<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_threads<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&lt;=<sp/>256)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_threads<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&lt;=<sp/>1024)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_threads<sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::min(omp_get_max_threads(),<sp/>num_threads);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="classlbann_1_1lbann__quantizer_1a22b898932caed41ccf24abcb67c00ba1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__quantizer_1a22b898932caed41ccf24abcb67c00ba1" kindref="member">get_adaptive_quantization_copy_threads</ref>(El::Int<sp/>width)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_threads<sp/>=<sp/><ref refid="classlbann_1_1lbann__quantizer_1aaa0c20f755437130172c40ca8e95bc3f" kindref="member">get_adaptive_quantization_threads</ref>(width);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&gt;=<sp/>16384)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_threads<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_threads;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal">};</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="quantizer__impl_8hpp" kindref="compound">quantizer_impl.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>LBANN_QUANTIZER_HPP_INCLUDED</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/quantizer.hpp"/>
  </compounddef>
</doxygen>
