<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03" kind="namespace" language="C++">
    <compoundname>lbann::anonymous_namespace{callback_ltfb.cpp}</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a1865e25ff1f3b6ad417d1853ea0bc6f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::anonymous_namespace{callback_ltfb.cpp}::assign_partners</definition>
        <argsstring>(lbann_comm *comm)</argsstring>
        <name>assign_partners</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign partners for current tournament. This function pairs models up and returns the partner model corresponding to the current process. If there is an odd number of models, one of them is partnered with itself. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_ltfb.cpp" line="43" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_ltfb.cpp" bodystart="43" bodyend="69"/>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <references refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" compoundref="comm_8hpp" startline="152" endline="154">lbann::lbann_comm::get_num_models</references>
        <references refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" compoundref="comm_8hpp" startline="156" endline="158">lbann::lbann_comm::get_procs_per_model</references>
        <references refid="namespacelbann_1ae6ce9c2fdec6f81803f6b1a6555c31c5" compoundref="random_8cpp" startline="64" endline="66">lbann::get_fast_generator</references>
        <references refid="classlbann_1_1lbann__comm_1a74b5c594bfa5aec03af9ad2bd8f5e979" compoundref="comm_8hpp" startline="332" endline="337">lbann::lbann_comm::scatter</references>
        <references refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" compoundref="comm_8hpp" startline="891" endline="893">lbann::lbann_comm::get_world_comm</references>
        <referencedby refid="classlbann_1_1lbann__callback__ltfb_1a7d2d1682c4a6a6b7e8ea1e3f4bf33c84" compoundref="callback__ltfb_8cpp" startline="156" endline="202">lbann::lbann_callback_ltfb::on_batch_begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2b155d39e6dba02a34a7c58d804d865e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::anonymous_namespace{callback_ltfb.cpp}::exchange_weights</definition>
        <argsstring>(lbann_comm *comm, std::vector&lt; weights *&gt; &amp;model_weights, std::vector&lt; weights *&gt; &amp;local_weights, int partner)</argsstring>
        <name>exchange_weights</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> *&gt; &amp;</type>
          <declname>model_weights</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> *&gt; &amp;</type>
          <declname>local_weights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>partner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Exchange weights with remote model. Weights from the local model are copied into local_weights and weights from the remote model are copied into model_weights. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_ltfb.cpp" line="75" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_ltfb.cpp" bodystart="75" bodyend="91"/>
        <references refid="classlbann_1_1lbann__comm_1a6314e3b07b21b8fb0cd2ebe1e49dddb9" compoundref="comm_8hpp" startline="604" endline="611">lbann::lbann_comm::sendrecv</references>
        <referencedby refid="classlbann_1_1lbann__callback__ltfb_1a7d2d1682c4a6a6b7e8ea1e3f4bf33c84" compoundref="callback__ltfb_8cpp" startline="156" endline="202">lbann::lbann_callback_ltfb::on_batch_begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2525bf058156612d7847d0754277e4fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
        <definition>EvalType lbann::anonymous_namespace{callback_ltfb.cpp}::evaluate</definition>
        <argsstring>(model *m)</argsstring>
        <name>evaluate</name>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate a model on tournament data and return its accuracy. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_ltfb.cpp" line="94" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_ltfb.cpp" bodystart="94" bodyend="104"/>
        <references refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">lbann::model::get_execution_mode</references>
        <references refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" compoundref="model_8cpp" startline="643" endline="661">lbann::model::evaluate</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="classlbann_1_1model_1a375372b5b864ffbc4eaa0963f6939f65" compoundref="model_8hpp" startline="145" endline="147">lbann::model::set_execution_mode</references>
        <references refid="classlbann_1_1model_1a84c738fd219b8c2936e76a9360f68936" compoundref="model_8hpp" startline="106" endline="108">lbann::model::get_metrics</references>
        <referencedby refid="classlbann_1_1metric_1a13fd302dec85190b877f7146529e516c" compoundref="metric_8hpp" startline="112" endline="112">lbann::metric::get_unit</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__ltfb_1a7d2d1682c4a6a6b7e8ea1e3f4bf33c84" compoundref="callback__ltfb_8cpp" startline="156" endline="202">lbann::lbann_callback_ltfb::on_batch_begin</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_ltfb.cpp" line="36" column="1"/>
  </compounddef>
</doxygen>
