<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="data__store__multi__images_8cpp" kind="file" language="C++">
    <compoundname>data_store_multi_images.cpp</compoundname>
    <includes refid="data__store__multi__images_8hpp" local="yes">lbann/data_store/data_store_multi_images.hpp</includes>
    <includes refid="data__reader__multi__images_8hpp" local="yes">lbann/data_readers/data_reader_multi_images.hpp</includes>
    <includes refid="exception_8hpp" local="yes">lbann/utils/exception.hpp</includes>
    <includes refid="options_8hpp" local="yes">lbann/utils/options.hpp</includes>
    <includes refid="timer_8hpp" local="yes">lbann/utils/timer.hpp</includes>
    <incdepgraph>
      <node id="20468">
        <label>sys/stat.h</label>
      </node>
      <node id="20475">
        <label>cv_process.hpp</label>
        <link refid="cv__process_8hpp"/>
        <childnode refid="20476" relation="include">
        </childnode>
        <childnode refid="20479" relation="include">
        </childnode>
        <childnode refid="20482" relation="include">
        </childnode>
        <childnode refid="20483" relation="include">
        </childnode>
        <childnode refid="20486" relation="include">
        </childnode>
        <childnode refid="20487" relation="include">
        </childnode>
        <childnode refid="20488" relation="include">
        </childnode>
        <childnode refid="20490" relation="include">
        </childnode>
        <childnode refid="20492" relation="include">
        </childnode>
        <childnode refid="20493" relation="include">
        </childnode>
      </node>
      <node id="20490">
        <label>cv_mean_extractor.hpp</label>
        <link refid="cv__mean__extractor_8hpp"/>
        <childnode refid="20476" relation="include">
        </childnode>
        <childnode refid="20491" relation="include">
        </childnode>
      </node>
      <node id="20493">
        <label>limits</label>
      </node>
      <node id="20471">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="20447" relation="include">
        </childnode>
        <childnode refid="20439" relation="include">
        </childnode>
      </node>
      <node id="20438">
        <label>lbann/data_store/generic_data_store.hpp</label>
        <link refid="generic__data__store_8hpp"/>
        <childnode refid="20439" relation="include">
        </childnode>
        <childnode refid="20448" relation="include">
        </childnode>
        <childnode refid="20449" relation="include">
        </childnode>
        <childnode refid="20452" relation="include">
        </childnode>
      </node>
      <node id="20459">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="20439" relation="include">
        </childnode>
        <childnode refid="20440" relation="include">
        </childnode>
      </node>
      <node id="20436">
        <label>lbann/data_store/data_store_imagenet.hpp</label>
        <link refid="data__store__imagenet_8hpp"/>
        <childnode refid="20437" relation="include">
        </childnode>
      </node>
      <node id="20440">
        <label>El.hpp</label>
      </node>
      <node id="20481">
        <label>lbann/utils/mild_exception.hpp</label>
        <link refid="mild__exception_8hpp"/>
        <childnode refid="20465" relation="include">
        </childnode>
      </node>
      <node id="20435">
        <label>lbann/data_store/data_store_multi_images.hpp</label>
        <link refid="data__store__multi__images_8hpp"/>
        <childnode refid="20436" relation="include">
        </childnode>
      </node>
      <node id="20439">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="20440" relation="include">
        </childnode>
        <childnode refid="20441" relation="include">
        </childnode>
        <childnode refid="20442" relation="include">
        </childnode>
        <childnode refid="20447" relation="include">
        </childnode>
      </node>
      <node id="20456">
        <label>data_reader_image.hpp</label>
        <link refid="data__reader__image_8hpp"/>
        <childnode refid="20457" relation="include">
        </childnode>
        <childnode refid="20471" relation="include">
        </childnode>
        <childnode refid="20475" relation="include">
        </childnode>
      </node>
      <node id="20472">
        <label>cassert</label>
      </node>
      <node id="20470">
        <label>fcntl.h</label>
      </node>
      <node id="20478">
        <label>opencv_extensions.hpp</label>
        <link refid="opencv__extensions_8hpp"/>
      </node>
      <node id="20486">
        <label>cv_colorizer.hpp</label>
        <link refid="cv__colorizer_8hpp"/>
        <childnode refid="20476" relation="include">
        </childnode>
      </node>
      <node id="20464">
        <label>string</label>
      </node>
      <node id="20495">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="20496" relation="include">
        </childnode>
      </node>
      <node id="20450">
        <label>map</label>
      </node>
      <node id="20434">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_store/data_store_multi_images.cpp</label>
        <link refid="data__store__multi__images_8cpp"/>
        <childnode refid="20435" relation="include">
        </childnode>
        <childnode refid="20454" relation="include">
        </childnode>
        <childnode refid="20461" relation="include">
        </childnode>
        <childnode refid="20494" relation="include">
        </childnode>
        <childnode refid="20495" relation="include">
        </childnode>
      </node>
      <node id="20452">
        <label>unordered_set</label>
      </node>
      <node id="20482">
        <label>cv_subtractor.hpp</label>
        <link refid="cv__subtractor_8hpp"/>
        <childnode refid="20476" relation="include">
        </childnode>
        <childnode refid="20439" relation="include">
        </childnode>
      </node>
      <node id="20466">
        <label>exception</label>
      </node>
      <node id="20484">
        <label>ostream</label>
      </node>
      <node id="20460">
        <label>random</label>
      </node>
      <node id="20455">
        <label>data_reader_imagenet.hpp</label>
        <link refid="data__reader__imagenet_8hpp"/>
        <childnode refid="20456" relation="include">
        </childnode>
        <childnode refid="20475" relation="include">
        </childnode>
      </node>
      <node id="20469">
        <label>sys/types.h</label>
      </node>
      <node id="20480">
        <label>typeinfo</label>
      </node>
      <node id="20444">
        <label>cstdio</label>
      </node>
      <node id="20487">
        <label>cv_decolorizer.hpp</label>
        <link refid="cv__decolorizer_8hpp"/>
        <childnode refid="20447" relation="include">
        </childnode>
        <childnode refid="20476" relation="include">
        </childnode>
      </node>
      <node id="20462">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="20463" relation="include">
        </childnode>
        <childnode refid="20464" relation="include">
        </childnode>
      </node>
      <node id="20446">
        <label>cxxabi.h</label>
      </node>
      <node id="20461">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="20439" relation="include">
        </childnode>
        <childnode refid="20448" relation="include">
        </childnode>
        <childnode refid="20462" relation="include">
        </childnode>
        <childnode refid="20465" relation="include">
        </childnode>
        <childnode refid="20466" relation="include">
        </childnode>
      </node>
      <node id="20454">
        <label>lbann/data_readers/data_reader_multi_images.hpp</label>
        <link refid="data__reader__multi__images_8hpp"/>
        <childnode refid="20455" relation="include">
        </childnode>
        <childnode refid="20475" relation="include">
        </childnode>
        <childnode refid="20449" relation="include">
        </childnode>
        <childnode refid="20464" relation="include">
        </childnode>
        <childnode refid="20489" relation="include">
        </childnode>
        <childnode refid="20465" relation="include">
        </childnode>
      </node>
      <node id="20474">
        <label>unistd.h</label>
      </node>
      <node id="20449">
        <label>vector</label>
      </node>
      <node id="20448">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="20449" relation="include">
        </childnode>
        <childnode refid="20450" relation="include">
        </childnode>
        <childnode refid="20451" relation="include">
        </childnode>
        <childnode refid="20439" relation="include">
        </childnode>
      </node>
      <node id="20489">
        <label>utility</label>
      </node>
      <node id="20467">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="20468" relation="include">
        </childnode>
        <childnode refid="20469" relation="include">
        </childnode>
        <childnode refid="20470" relation="include">
        </childnode>
      </node>
      <node id="20443">
        <label>cstdlib</label>
      </node>
      <node id="20477">
        <label>opencv.hpp</label>
        <link refid="opencv_8hpp"/>
        <childnode refid="20447" relation="include">
        </childnode>
      </node>
      <node id="20465">
        <label>iostream</label>
      </node>
      <node id="20453">
        <label>unordered_map</label>
      </node>
      <node id="20479">
        <label>cv_normalizer.hpp</label>
        <link refid="cv__normalizer_8hpp"/>
        <childnode refid="20480" relation="include">
        </childnode>
        <childnode refid="20476" relation="include">
        </childnode>
        <childnode refid="20439" relation="include">
        </childnode>
        <childnode refid="20481" relation="include">
        </childnode>
      </node>
      <node id="20458">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="20439" relation="include">
        </childnode>
        <childnode refid="20448" relation="include">
        </childnode>
        <childnode refid="20459" relation="include">
        </childnode>
        <childnode refid="20460" relation="include">
        </childnode>
      </node>
      <node id="20476">
        <label>cv_transform.hpp</label>
        <link refid="cv__transform_8hpp"/>
        <childnode refid="20477" relation="include">
        </childnode>
        <childnode refid="20478" relation="include">
        </childnode>
      </node>
      <node id="20483">
        <label>cv_augmenter.hpp</label>
        <link refid="cv__augmenter_8hpp"/>
        <childnode refid="20476" relation="include">
        </childnode>
        <childnode refid="20465" relation="include">
        </childnode>
        <childnode refid="20484" relation="include">
        </childnode>
        <childnode refid="20485" relation="include">
        </childnode>
        <childnode refid="20464" relation="include">
        </childnode>
      </node>
      <node id="20496">
        <label>chrono</label>
      </node>
      <node id="20437">
        <label>lbann/data_store/data_store_image.hpp</label>
        <link refid="data__store__image_8hpp"/>
        <childnode refid="20438" relation="include">
        </childnode>
        <childnode refid="20453" relation="include">
        </childnode>
      </node>
      <node id="20463">
        <label>csignal</label>
      </node>
      <node id="20488">
        <label>cv_cropper.hpp</label>
        <link refid="cv__cropper_8hpp"/>
        <childnode refid="20476" relation="include">
        </childnode>
        <childnode refid="20489" relation="include">
        </childnode>
        <childnode refid="20484" relation="include">
        </childnode>
      </node>
      <node id="20494">
        <label>lbann/utils/options.hpp</label>
        <link refid="options_8hpp"/>
        <childnode refid="20465" relation="include">
        </childnode>
        <childnode refid="20450" relation="include">
        </childnode>
        <childnode refid="20449" relation="include">
        </childnode>
        <childnode refid="20464" relation="include">
        </childnode>
      </node>
      <node id="20457">
        <label>data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="20439" relation="include">
        </childnode>
        <childnode refid="20458" relation="include">
        </childnode>
        <childnode refid="20461" relation="include">
        </childnode>
        <childnode refid="20448" relation="include">
        </childnode>
        <childnode refid="20467" relation="include">
        </childnode>
        <childnode refid="20459" relation="include">
        </childnode>
        <childnode refid="20471" relation="include">
        </childnode>
        <childnode refid="20472" relation="include">
        </childnode>
        <childnode refid="20473" relation="include">
        </childnode>
        <childnode refid="20464" relation="include">
        </childnode>
        <childnode refid="20449" relation="include">
        </childnode>
        <childnode refid="20474" relation="include">
        </childnode>
      </node>
      <node id="20447">
        <label>lbann_config.hpp</label>
      </node>
      <node id="20491">
        <label>type_traits</label>
      </node>
      <node id="20473">
        <label>algorithm</label>
      </node>
      <node id="20442">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="20443" relation="include">
        </childnode>
        <childnode refid="20444" relation="include">
        </childnode>
        <childnode refid="20445" relation="include">
        </childnode>
        <childnode refid="20446" relation="include">
        </childnode>
      </node>
      <node id="20485">
        <label>cstring</label>
      </node>
      <node id="20441">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="20440" relation="include">
        </childnode>
      </node>
      <node id="20492">
        <label>memory</label>
      </node>
      <node id="20451">
        <label>typeindex</label>
      </node>
      <node id="20445">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__store__multi__images_8hpp" kindref="compound">lbann/data_store/data_store_multi_images.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__reader__multi__images_8hpp" kindref="compound">lbann/data_readers/data_reader_multi_images.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">lbann/utils/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="options_8hpp" kindref="compound">lbann/utils/options.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8hpp" kindref="compound">lbann/utils/timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classlbann_1_1data__store__multi__images_1a39108690484fe407efafefe6a4b0947b" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="classlbann_1_1data__store__multi__images_1a39108690484fe407efafefe6a4b0947b" kindref="member">data_store_multi_images::get_sample</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__multi__images" kindref="compound">data_reader_multi_images</ref><sp/>*reader<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1data__reader__multi__images" kindref="compound">data_reader_multi_images</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__multi__images_1a6cbb30001dd633b0d810c417cbbf441e" kindref="member">data_reader_multi_images::sample_t</ref><sp/>sample<sp/>=<sp/>reader-&gt;<ref refid="classlbann_1_1data__reader__multi__images_1ab940ea9e62d5fac6d6c1b209404abe83" kindref="member">get_sample</ref>(idx);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sample.first;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classlbann_1_1data__store__multi__images_1a7b5e9ec7b7132872299a204d5d24ee62" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__multi__images_1a7b5e9ec7b7132872299a204d5d24ee62" kindref="member">data_store_multi_images::setup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tm1<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a87695bfd2d1ed0dbe01d99108e3f68b7" kindref="member">m_rank</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;starting<sp/>data_store_multi_images::setup()<sp/>for<sp/>data<sp/>reader<sp/>with<sp/>role:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>-&gt;<ref refid="classlbann_1_1generic__data__reader_1a92982e1b399f37e2ead5aa440883cba5" kindref="member">get_role</ref>()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__data__store_1a853741295a07b5687921fc56d0d7d5b2" kindref="member">set_name</ref>(</highlight><highlight class="stringliteral">&quot;data_store_multi_images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__reader__multi__images" kindref="compound">data_reader_multi_images</ref><sp/>*reader<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1data__reader__multi__images" kindref="compound">data_reader_multi_images</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1generic__data__store_1afa49ced0ab64c632371ea52532a91ec2" kindref="member">m_reader</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;dynamic_cast&lt;data_reader_multi_images*&gt;(m_reader)<sp/>failed\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__store__image_1a2f660053e7621a9cc70a7c4eef53c9cc" kindref="member">m_num_img_srcs</ref><sp/>=<sp/>reader-&gt;<ref refid="classlbann_1_1data__reader__multi__images_1a692a657d00afc38dde1dabeb66b1550f" kindref="member">get_num_img_srcs</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//@todo<sp/>needs<sp/>to<sp/>be<sp/>designed<sp/>and<sp/>implemented!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/><ref refid="classlbann_1_1generic__data__store_1a1a9cc7b097cd7dd6ae0d12d52bb43ea1" kindref="member">m_in_memory</ref>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>yet<sp/>implemented&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__imagenet_1a611aa1734a491c443396a077b49fe4fe" kindref="member">data_store_imagenet::setup</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a87695bfd2d1ed0dbe01d99108e3f68b7" kindref="member">m_rank</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;data_store_multi_images<sp/>setup<sp/>time:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>tm1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classlbann_1_1data__store__multi__images_1a25963dfa7d6de983e7b250f8ef7e2a0e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__multi__images_1a25963dfa7d6de983e7b250f8ef7e2a0e" kindref="member">data_store_multi_images::get_file_sizes</ref>()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>std::vector&lt;Triple&gt;<sp/>my_file_sizes(<ref refid="classlbann_1_1generic__data__store_1abd38f8d8aab0648959e09d011abfe20a" kindref="member">m_my_datastore_indices</ref>.size()*<ref refid="classlbann_1_1data__store__image_1a2f660053e7621a9cc70a7c4eef53c9cc" kindref="member">m_num_img_srcs</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;STARTING<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1a53140adb8f7c2348986916a1abb85ffa" kindref="member">get_name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::get_file_sizes<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>my_file_sizes.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>files\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cur_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>size_t&gt;<sp/>names;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_index<sp/>:<sp/><ref refid="classlbann_1_1generic__data__store_1abd38f8d8aab0648959e09d011abfe20a" kindref="member">m_my_datastore_indices</ref>)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>sample(<ref refid="classlbann_1_1data__store__multi__images_1a39108690484fe407efafefe6a4b0947b" kindref="member">get_sample</ref>(base_index));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;sample.size();<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>base_index*<ref refid="classlbann_1_1data__store__image_1a2f660053e7621a9cc70a7c4eef53c9cc" kindref="member">m_num_img_srcs</ref><sp/>+<sp/>k;<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>file_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(names.find(sample[k])<sp/>!=<sp/>names.end())<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_len<sp/>=<sp/>names[sample[k]];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_len<sp/>=<sp/><ref refid="classlbann_1_1generic__data__store_1a7641d15eba63426acf5071acb8026442" kindref="member">get_file_size</ref>(<ref refid="classlbann_1_1generic__data__store_1ab479c127f00ce550c7433b90e40a5a3d" kindref="member">m_dir</ref>,<sp/>sample[k]);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names[sample[k]]<sp/>=<sp/>file_len;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>my_file_sizes[jj].global_index<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>my_file_sizes[jj].num_bytes<sp/>=<sp/>file_len;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>my_file_sizes[jj].offset<sp/>=<sp/>cur_offset;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>my_file_sizes[jj].rank<sp/>=<sp/><ref refid="classlbann_1_1generic__data__store_1a87695bfd2d1ed0dbe01d99108e3f68b7" kindref="member">m_rank</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur_offset<sp/>+=<sp/>my_file_sizes[jj].num_bytes;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(my_file_sizes[jj].num_bytes<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>file<sp/>size<sp/>is<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++jj;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1data__store__image_1a477529f2ba3f86598bbd409d3c2b6901" kindref="member">exchange_file_sizes</ref>(my_file_sizes,<sp/><ref refid="classlbann_1_1generic__data__store_1a0dfa2ffa01845b84ca477fb3e14a36c6" kindref="member">m_num_global_indices</ref>*<ref refid="classlbann_1_1data__store__image_1a2f660053e7621a9cc70a7c4eef53c9cc" kindref="member">m_num_img_srcs</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classlbann_1_1data__store__multi__images_1a8ce8ccf3c7b0d19adfb838108bec075b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__multi__images_1a8ce8ccf3c7b0d19adfb838108bec075b" kindref="member">data_store_multi_images::read_files</ref>()<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_index<sp/>:<sp/><ref refid="classlbann_1_1generic__data__store_1abd38f8d8aab0648959e09d011abfe20a" kindref="member">m_my_datastore_indices</ref>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>sample(<ref refid="classlbann_1_1data__store__multi__images_1a39108690484fe407efafefe6a4b0947b" kindref="member">get_sample</ref>(base_index));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;sample.size();<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>base_index<sp/>*<sp/><ref refid="classlbann_1_1data__store__image_1a2f660053e7621a9cc70a7c4eef53c9cc" kindref="member">m_num_img_srcs</ref><sp/>+<sp/>k;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__image_1ae5a9ba5fb1bf4d3147743012b8099038" kindref="member">m_offsets</ref>.find(index)<sp/>==<sp/><ref refid="classlbann_1_1data__store__image_1ae5a9ba5fb1bf4d3147743012b8099038" kindref="member">m_offsets</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_offsets.find(index)<sp/>failed<sp/>for<sp/>index:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/><ref refid="classlbann_1_1data__store__image_1ae5a9ba5fb1bf4d3147743012b8099038" kindref="member">m_offsets</ref>[index];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__image_1a1903176a4b305fd42617ea1cb6d997ae" kindref="member">m_file_sizes</ref>.find(index)<sp/>==<sp/><ref refid="classlbann_1_1data__store__image_1a1903176a4b305fd42617ea1cb6d997ae" kindref="member">m_file_sizes</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_file_sizes.find(index)<sp/>failed<sp/>for<sp/>index:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>file_len<sp/>=<sp/><ref refid="classlbann_1_1data__store__image_1a1903176a4b305fd42617ea1cb6d997ae" kindref="member">m_file_sizes</ref>[index];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>+<sp/>file_len<sp/>&gt;<sp/><ref refid="classlbann_1_1data__store__image_1a10e9aa0c240785bc0a961f24e87a1c16" kindref="member">m_data</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_my_datastore_indices.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>offset:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>offset</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>file_len:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>file_len<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>offset+file_len:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>offset+file_len<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_data.size():<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1data__store__image_1a10e9aa0c240785bc0a961f24e87a1c16" kindref="member">m_data</ref>.size()</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\noffset+file_len<sp/>must<sp/>be<sp/>&lt;=<sp/>m_data.size()&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__image_1a8a53bab58d75554821f90c38d14078aa" kindref="member">load_file</ref>(<ref refid="classlbann_1_1generic__data__store_1ab479c127f00ce550c7433b90e40a5a3d" kindref="member">m_dir</ref>,<sp/>sample[k],<sp/><ref refid="classlbann_1_1data__store__image_1a10e9aa0c240785bc0a961f24e87a1c16" kindref="member">m_data</ref>.data()+offset,<sp/>file_len);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classlbann_1_1data__store__multi__images_1abe17bbf485f6da9d7dfa568e9e74a693" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__store__multi__images_1abe17bbf485f6da9d7dfa568e9e74a693" kindref="member">data_store_multi_images::extended_testing</ref>()<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1generic__data__store_1a143fd33ef3a53180bc62745e369c16f8" kindref="member">m_master</ref>)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;STARTING<sp/>data_store_multi_images::extended_testing()\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>v;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>:<sp/><ref refid="classlbann_1_1generic__data__store_1a41f7fec1f1f3d6568a5765be7a6784eb" kindref="member">m_my_minibatch_indices_v</ref>)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base_index<sp/>=<sp/>(*m_shuffled_indices)[idx];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>sample(<ref refid="classlbann_1_1data__store__multi__images_1a39108690484fe407efafefe6a4b0947b" kindref="member">get_sample</ref>(base_index));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;sample.size();<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>base_index*<ref refid="classlbann_1_1data__store__image_1a2f660053e7621a9cc70a7c4eef53c9cc" kindref="member">m_num_img_srcs</ref><sp/>+<sp/>k;<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__image_1a1903176a4b305fd42617ea1cb6d997ae" kindref="member">m_file_sizes</ref>.find(index)<sp/>==<sp/><ref refid="classlbann_1_1data__store__image_1a1903176a4b305fd42617ea1cb6d997ae" kindref="member">m_file_sizes</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>file<sp/>length<sp/>not<sp/>found:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>file_len<sp/>=<sp/><ref refid="classlbann_1_1data__store__image_1a1903176a4b305fd42617ea1cb6d997ae" kindref="member">m_file_sizes</ref>[index];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v.resize(file_len);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__store__image_1a8a53bab58d75554821f90c38d14078aa" kindref="member">load_file</ref>(<ref refid="classlbann_1_1generic__data__store_1ab479c127f00ce550c7433b90e40a5a3d" kindref="member">m_dir</ref>,<sp/>sample[k],<sp/>v.data(),<sp/>file_len);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__image_1a627a08479de191dcef74e633c4cded8c" kindref="member">m_my_minibatch_data</ref>.find(index)<sp/>==<sp/><ref refid="classlbann_1_1data__store__image_1a627a08479de191dcef74e633c4cded8c" kindref="member">m_my_minibatch_data</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_my_minibatch_data.find(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>failed.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1data__store__image_1a627a08479de191dcef74e633c4cded8c" kindref="member">m_my_minibatch_data</ref>[index]<sp/>!=<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>data_store_multi_images::extended_testing:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rank:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1a87695bfd2d1ed0dbe01d99108e3f68b7" kindref="member">m_rank</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>index:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>FAILED!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;rank:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1generic__data__store_1a87695bfd2d1ed0dbe01d99108e3f68b7" kindref="member">m_rank</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>data_store_multi_images::extended_testing,<sp/>PASSED!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/data_store/data_store_multi_images.cpp"/>
  </compounddef>
</doxygen>
