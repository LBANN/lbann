<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1lbann__callback__step__minibatch" kind="class" language="C++" prot="public">
    <compoundname>lbann::lbann_callback_step_minibatch</compoundname>
    <basecompoundref refid="classlbann_1_1lbann__callback__variable__minibatch" prot="public" virt="non-virtual">lbann::lbann_callback_variable_minibatch</basecompoundref>
    <includes refid="callback__variable__minibatch_8hpp" local="no">callback_variable_minibatch.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classlbann_1_1lbann__callback__step__minibatch_1a1d150c95b193f9a24c8d7d73506b034c" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::lbann_callback_step_minibatch::m_step</definition>
        <argsstring></argsstring>
        <name>m_step</name>
        <briefdescription>
<para>Number of epochs between mini-batch size increases. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" line="105" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" bodystart="105" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__callback__step__minibatch_1a9ed85aa78f6e4fe4cf3427f9257a4610" compoundref="callback__variable__minibatch_8cpp" startline="153" endline="163">schedule</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__callback__step__minibatch_1ad367d8969b52755f768085d8db98449c" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::lbann_callback_step_minibatch::m_ramp_time</definition>
        <argsstring></argsstring>
        <name>m_ramp_time</name>
        <briefdescription>
<para>Number of steps to ramp the learning rate over. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" line="107" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" bodystart="107" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__callback__step__minibatch_1a9ed85aa78f6e4fe4cf3427f9257a4610" compoundref="callback__variable__minibatch_8cpp" startline="153" endline="163">schedule</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1lbann__callback__step__minibatch_1a2ce11bed6c3a4d526c2fdd885970f49d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_callback_step_minibatch::lbann_callback_step_minibatch</definition>
        <argsstring>(int starting_mbsize, int step, int ramp_time=0)</argsstring>
        <name>lbann_callback_step_minibatch</name>
        <param>
          <type>int</type>
          <declname>starting_mbsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ramp_time</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" line="93" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_variable_minibatch.cpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__step__minibatch_1a66b34b96845274563dd72172dafd9079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_callback_step_minibatch::lbann_callback_step_minibatch</definition>
        <argsstring>(const lbann_callback_step_minibatch &amp;)=default</argsstring>
        <name>lbann_callback_step_minibatch</name>
        <param>
          <type>const <ref refid="classlbann_1_1lbann__callback__step__minibatch" kindref="compound">lbann_callback_step_minibatch</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__step__minibatch_1adea0e27a38a8094db757a57e4f976769" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1lbann__callback__step__minibatch" kindref="compound">lbann_callback_step_minibatch</ref> &amp;</type>
        <definition>lbann_callback_step_minibatch&amp; lbann::lbann_callback_step_minibatch::operator=</definition>
        <argsstring>(const lbann_callback_step_minibatch &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1lbann__callback__step__minibatch" kindref="compound">lbann_callback_step_minibatch</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__step__minibatch_1a3c291a8908f893d0ca372ae7c650bbb2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1lbann__callback__step__minibatch" kindref="compound">lbann_callback_step_minibatch</ref> *</type>
        <definition>lbann_callback_step_minibatch* lbann::lbann_callback_step_minibatch::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a9f545d1269a8c7af335625d049691f26">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" line="98" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__step__minibatch_1a2e07fa5a590d68b1b71059d9275ee12a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::lbann_callback_step_minibatch::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a7522c7a14f1d6a1ea762cc2d7248eb3a">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return this callback&apos;s name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" line="101" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" bodystart="101" bodyend="101"/>
        <references refid="classlbann_1_1lbann__callback__variable__minibatch_1ace13e8941491ddd28ef35c277cecb1ad">lbann::lbann_callback_variable_minibatch::schedule</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classlbann_1_1lbann__callback__step__minibatch_1a9ed85aa78f6e4fe4cf3427f9257a4610" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::lbann_callback_step_minibatch::schedule</definition>
        <argsstring>(model *m, int &amp;new_mbsize, float &amp;new_lr, int &amp;ramp_time) override</argsstring>
        <name>schedule</name>
        <reimplements refid="classlbann_1_1lbann__callback__variable__minibatch_1ace13e8941491ddd28ef35c277cecb1ad">schedule</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>new_mbsize</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>new_lr</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>ramp_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implemented by child classes to provide the mini-batch/learning schedule. This is called at the end of every training epoch. If it returns false, no changes are made from the currently established schedule. If this returns true, the mini-batch size will be changed accordingly. If the mini-batch size is larger than the model&apos;s maximum mini-batch size, a warning is printed and the maximum mini-batch size is used. If new_lr also non-zero, the learning rate will be changed to new_lr, with a linear ramp time. (If ramp_time is 0, it is changed immediately.) Note changing the learning rate while in a ramp may lead to unexpected behavior; also be aware of interactions with other learning rate schedules. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" line="103" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_variable_minibatch.cpp" bodystart="153" bodyend="163"/>
        <references refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" compoundref="model_8hpp" startline="128" endline="130">lbann::model::get_cur_epoch</references>
        <references refid="classlbann_1_1lbann__callback__step__minibatch_1a1d150c95b193f9a24c8d7d73506b034c" compoundref="callback__variable__minibatch_8hpp" startline="105">m_step</references>
        <references refid="classlbann_1_1lbann__callback__variable__minibatch_1a6488bd1f45110a1cb22553e5035003de" compoundref="callback__variable__minibatch_8hpp" startline="80">lbann::lbann_callback_variable_minibatch::m_current_mini_batch_size</references>
        <references refid="classlbann_1_1lbann__callback__variable__minibatch_1a9de892c44231eadbbc7d27cfcc340ce2" compoundref="callback__variable__minibatch_8cpp" startline="137" endline="146">lbann::lbann_callback_variable_minibatch::get_current_learning_rate</references>
        <references refid="classlbann_1_1lbann__callback__step__minibatch_1ad367d8969b52755f768085d8db98449c" compoundref="callback__variable__minibatch_8hpp" startline="107">m_ramp_time</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Double the mini-batch size every set number of epochs. Also doubles the learning rate. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1489">
        <label>lbann::lbann_callback</label>
        <link refid="classlbann_1_1lbann__callback"/>
      </node>
      <node id="1487">
        <label>lbann::lbann_callback_step_minibatch</label>
        <link refid="classlbann_1_1lbann__callback__step__minibatch"/>
        <childnode refid="1488" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1488">
        <label>lbann::lbann_callback_variable_minibatch</label>
        <link refid="classlbann_1_1lbann__callback__variable__minibatch"/>
        <childnode refid="1489" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1492">
        <label>lbann::lbann_callback</label>
        <link refid="classlbann_1_1lbann__callback"/>
        <childnode refid="1493" relation="usage">
          <edgelabel>m_summarizer</edgelabel>
        </childnode>
      </node>
      <node id="1493">
        <label>lbann::lbann_summary</label>
        <link refid="classlbann_1_1lbann__summary"/>
      </node>
      <node id="1490">
        <label>lbann::lbann_callback_step_minibatch</label>
        <link refid="classlbann_1_1lbann__callback__step__minibatch"/>
        <childnode refid="1491" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1491">
        <label>lbann::lbann_callback_variable_minibatch</label>
        <link refid="classlbann_1_1lbann__callback__variable__minibatch"/>
        <childnode refid="1492" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" line="91" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_variable_minibatch.hpp" bodystart="91" bodyend="108"/>
    <listofallmembers>
      <member refid="classlbann_1_1lbann__callback__variable__minibatch_1af078f30f9c206b89bdd542ce1fc6d2ad" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>change_learning_rate</name></member>
      <member refid="classlbann_1_1lbann__callback__step__minibatch_1a3c291a8908f893d0ca372ae7c650bbb2" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>copy</name></member>
      <member refid="classlbann_1_1lbann__callback_1acec888932129f93ba2a0077192467c9e" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>get_batch_interval</name></member>
      <member refid="classlbann_1_1lbann__callback__variable__minibatch_1a9de892c44231eadbbc7d27cfcc340ce2" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>get_current_learning_rate</name></member>
      <member refid="classlbann_1_1lbann__callback_1a679057298a41ddd47f08c157f756c584" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>lbann_callback</name></member>
      <member refid="classlbann_1_1lbann__callback_1a91d994616b8bf98685ac32939228f96a" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>lbann_callback</name></member>
      <member refid="classlbann_1_1lbann__callback__step__minibatch_1a2ce11bed6c3a4d526c2fdd885970f49d" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>lbann_callback_step_minibatch</name></member>
      <member refid="classlbann_1_1lbann__callback__step__minibatch_1a66b34b96845274563dd72172dafd9079" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>lbann_callback_step_minibatch</name></member>
      <member refid="classlbann_1_1lbann__callback__variable__minibatch_1a970a03f0d297f8447020e85d23f5ee73" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>lbann_callback_variable_minibatch</name></member>
      <member refid="classlbann_1_1lbann__callback__variable__minibatch_1a7ffbb380f1a58b164cfb49ab1b407648" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>lbann_callback_variable_minibatch</name></member>
      <member refid="classlbann_1_1lbann__callback_1a6126e310e9924398c18ccf76bb91c705" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>m_batch_interval</name></member>
      <member refid="classlbann_1_1lbann__callback__variable__minibatch_1a6488bd1f45110a1cb22553e5035003de" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>m_current_mini_batch_size</name></member>
      <member refid="classlbann_1_1lbann__callback__variable__minibatch_1ac78d3d357e1c16b3303cf358aee8a83d" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>m_lr_incr</name></member>
      <member refid="classlbann_1_1lbann__callback__variable__minibatch_1a7beea78ef7107c88cb8782d3af618117" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>m_ramp_count</name></member>
      <member refid="classlbann_1_1lbann__callback__step__minibatch_1ad367d8969b52755f768085d8db98449c" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>m_ramp_time</name></member>
      <member refid="classlbann_1_1lbann__callback__variable__minibatch_1a8e1a314b320f6131d0eecbff69aeb2b8" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>m_starting_mbsize</name></member>
      <member refid="classlbann_1_1lbann__callback__step__minibatch_1a1d150c95b193f9a24c8d7d73506b034c" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>m_step</name></member>
      <member refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>m_summarizer</name></member>
      <member refid="classlbann_1_1lbann__callback__step__minibatch_1a2e07fa5a590d68b1b71059d9275ee12a" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>name</name></member>
      <member refid="classlbann_1_1lbann__callback_1a2c0709a26179d115ff85b7561786ee27" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_backward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1abeb1e486e259fd358332abf1e952f630" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_backward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1af183624e63ba65e0003fa988f53dee0c" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_backward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1aba03b59c056ace8094095c08e39b9ac4" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_backward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a9ecf4e44cd4021cdd687de14c850cc83" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_batch_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a895ca577e358601fcae5c04749f60535" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_batch_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a3462e54126adbd0082c22c98d8de5468" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_batch_evaluate_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1ad10891b8ab3de74ee1a70e6255e7d58a" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_batch_evaluate_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4ed9498763412a55953fff71ee3a9456" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_epoch_begin</name></member>
      <member refid="classlbann_1_1lbann__callback__variable__minibatch_1a091e7563b5a7a90638e2521fe39cbf8f" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_epoch_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4a2cff48a688bb56ed14b8b53344f945" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_evaluate_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a044174864e4981a1dac093d58e8c4d6c" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_evaluate_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a0794f3fb88db6fef53f0e2f235f94424" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_evaluate_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1ae23c5a61b81dbdfbd79736ac2b6035aa" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_evaluate_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a22ed977371173105b4aad3a20b9c59dc" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1ab96adb1d77180e00fdd668cd381323fd" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a79a0bb407852d7b330b74373647ffe46" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a5eff0a59fbce98a981d9cdd0547a3ad5" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a1a9248b305f06419889c1b3b0f0893d8" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_optimize_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a497e750da160e0071ce8864ccc3a1344" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_optimize_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a235195d5fa4461835b861a03a5c0278f" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_optimize_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4653e2903bfd3903709a81eaf7eabc1a" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_optimize_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1ace7452239c9ad7aa6247e9496adbcffe" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_phase_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a716bff45bdc5a88eed09c2231f5bc93a" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_test_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1accbad4dd004c1ced33642db6398b2efe" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_test_end</name></member>
      <member refid="classlbann_1_1lbann__callback__variable__minibatch_1a4f5d8ab04ab3e1cc3aa66327d3712f51" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_train_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1af28078b0ddaef45124465bef01eefedf" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_train_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a2bde303671110519388d9962bc3e5583" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_validation_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1adc16e42e5064dc2dc8d84dfbfc1325eb" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>on_validation_end</name></member>
      <member refid="classlbann_1_1lbann__callback__step__minibatch_1adea0e27a38a8094db757a57e4f976769" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__callback__variable__minibatch_1a154f749e29203562d41faf81202e5656" prot="public" virt="non-virtual" ambiguityscope="lbann::lbann_callback_variable_minibatch::"><scope>lbann::lbann_callback_step_minibatch</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__callback_1a66b0a8c00a273669fa782ece59e8898b" prot="public" virt="non-virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_step_minibatch</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__callback__step__minibatch_1a9ed85aa78f6e4fe4cf3427f9257a4610" prot="protected" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>schedule</name></member>
      <member refid="classlbann_1_1lbann__callback_1a02d924df2f8ca851578dc76d9015e48d" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>set_summarizer</name></member>
      <member refid="classlbann_1_1lbann__callback_1aab5086e27d9bb0a7c7ee8ffc1bc58671" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>setup</name></member>
      <member refid="classlbann_1_1lbann__callback_1ac91abaec389f8d2547512c45ae587304" prot="public" virt="virtual"><scope>lbann::lbann_callback_step_minibatch</scope><name>~lbann_callback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
