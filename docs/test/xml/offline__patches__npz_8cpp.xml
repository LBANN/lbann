<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="offline__patches__npz_8cpp" kind="file" language="C++">
    <compoundname>offline_patches_npz.cpp</compoundname>
    <includes refid="offline__patches__npz_8hpp" local="yes">lbann/data_readers/offline_patches_npz.hpp</includes>
    <includes refid="file__utils_8hpp" local="yes">lbann/utils/file_utils.hpp</includes>
    <includes refid="cnpy__utils_8hpp" local="yes">lbann/utils/cnpy_utils.hpp</includes>
    <includes local="no">set</includes>
    <incdepgraph>
      <node id="20098">
        <label>lbann/utils/file_utils.hpp</label>
        <link refid="file__utils_8hpp"/>
        <childnode refid="20096" relation="include">
        </childnode>
        <childnode refid="20097" relation="include">
        </childnode>
        <childnode refid="20099" relation="include">
        </childnode>
        <childnode refid="20100" relation="include">
        </childnode>
        <childnode refid="20101" relation="include">
        </childnode>
      </node>
      <node id="20102">
        <label>lbann/utils/cnpy_utils.hpp</label>
        <link refid="cnpy__utils_8hpp"/>
        <childnode refid="20095" relation="include">
        </childnode>
        <childnode refid="20096" relation="include">
        </childnode>
        <childnode refid="20097" relation="include">
        </childnode>
        <childnode refid="20103" relation="include">
        </childnode>
      </node>
      <node id="20101">
        <label>iterator</label>
      </node>
      <node id="20094">
        <label>lbann/data_readers/offline_patches_npz.hpp</label>
        <link refid="offline__patches__npz_8hpp"/>
        <childnode refid="20095" relation="include">
        </childnode>
        <childnode refid="20096" relation="include">
        </childnode>
        <childnode refid="20097" relation="include">
        </childnode>
      </node>
      <node id="20105">
        <label>El.hpp</label>
      </node>
      <node id="20104">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="20105" relation="include">
        </childnode>
        <childnode refid="20106" relation="include">
        </childnode>
        <childnode refid="20107" relation="include">
        </childnode>
        <childnode refid="20112" relation="include">
        </childnode>
      </node>
      <node id="20096">
        <label>string</label>
      </node>
      <node id="20114">
        <label>map</label>
      </node>
      <node id="20118">
        <label>exception</label>
      </node>
      <node id="20100">
        <label>fstream</label>
      </node>
      <node id="20109">
        <label>cstdio</label>
      </node>
      <node id="20116">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="20117" relation="include">
        </childnode>
        <childnode refid="20096" relation="include">
        </childnode>
      </node>
      <node id="20111">
        <label>cxxabi.h</label>
      </node>
      <node id="20103">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="20104" relation="include">
        </childnode>
        <childnode refid="20113" relation="include">
        </childnode>
        <childnode refid="20116" relation="include">
        </childnode>
        <childnode refid="20099" relation="include">
        </childnode>
        <childnode refid="20118" relation="include">
        </childnode>
      </node>
      <node id="20097">
        <label>vector</label>
      </node>
      <node id="20113">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="20097" relation="include">
        </childnode>
        <childnode refid="20114" relation="include">
        </childnode>
        <childnode refid="20115" relation="include">
        </childnode>
        <childnode refid="20104" relation="include">
        </childnode>
      </node>
      <node id="20108">
        <label>cstdlib</label>
      </node>
      <node id="20099">
        <label>iostream</label>
      </node>
      <node id="20117">
        <label>csignal</label>
      </node>
      <node id="20112">
        <label>lbann_config.hpp</label>
      </node>
      <node id="20119">
        <label>set</label>
      </node>
      <node id="20107">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="20108" relation="include">
        </childnode>
        <childnode refid="20109" relation="include">
        </childnode>
        <childnode refid="20110" relation="include">
        </childnode>
        <childnode refid="20111" relation="include">
        </childnode>
      </node>
      <node id="20095">
        <label>cnpy.h</label>
      </node>
      <node id="20106">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="20105" relation="include">
        </childnode>
      </node>
      <node id="20093">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/offline_patches_npz.cpp</label>
        <link refid="offline__patches__npz_8cpp"/>
        <childnode refid="20094" relation="include">
        </childnode>
        <childnode refid="20098" relation="include">
        </childnode>
        <childnode refid="20102" relation="include">
        </childnode>
        <childnode refid="20119" relation="include">
        </childnode>
      </node>
      <node id="20115">
        <label>typeindex</label>
      </node>
      <node id="20110">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="offline__patches__npz_8hpp" kindref="compound">lbann/data_readers/offline_patches_npz.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="file__utils_8hpp" kindref="compound">lbann/utils/file_utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cnpy__utils_8hpp" kindref="compound">lbann/utils/cnpy_utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classlbann_1_1offline__patches__npz_1a6beaea209f8e0e7a70587bbe31d793a0" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1offline__patches__npz_1a6beaea209f8e0e7a70587bbe31d793a0" kindref="member">offline_patches_npz::offline_patches_npz</ref>()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>:<sp/>m_checked_ok(false),<sp/>m_num_patches(3u),<sp/>m_variant_divider(</highlight><highlight class="stringliteral">&quot;.JPEG.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classlbann_1_1offline__patches__npz_1a29f1d64e32c857018d5ef21dd99fe7c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1offline__patches__npz_1a29f1d64e32c857018d5ef21dd99fe7c4" kindref="member">offline_patches_npz::load</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>first_n)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a5f90dc1b898f8ad9d7ea16c188738419" kindref="member">m_item_class_list</ref>.clear();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a515ef05ef0679f3b6f1197d1ab47bfb3" kindref="member">m_file_root_list</ref>.clear();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a164d2bd134dc8c3946dc28d6ec5da0ec" kindref="member">m_file_variant_list</ref>.clear();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>list<sp/>of<sp/>arrays<sp/>expected<sp/>to<sp/>be<sp/>packed<sp/>in<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;max_class&apos;<sp/>and<sp/>&apos;variant_divider&apos;<sp/>are<sp/>scalar<sp/>values,<sp/>and<sp/>known<sp/>in<sp/>advance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;<sp/>dict<sp/>=</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;item_root_list&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;item_variant_list&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;item_class_list&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;file_root_list&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;file_variant_list&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;max_class&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;variant_divider&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacelbann_1a4fac6c6483965395fa79d31061485f9f" kindref="member">check_if_file_exists</ref>(filename))<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>cnpy::npz_t<sp/><ref refid="classlbann_1_1dataset" kindref="compound">dataset</ref><sp/>=<sp/>cnpy::npz_load(filename);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>all<sp/>the<sp/>arrays<sp/>are<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>np<sp/>:<sp/>dataset)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict.find(np.first)<sp/>==<sp/>dict.end())<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_n<sp/>&gt;<sp/>0u)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>to<sp/>use<sp/>only<sp/>first_n<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelbann_1_1cnpy__utils_1ab19ad0a361570b7e78e203c02d6ba13a" kindref="member">cnpy_utils::shrink_to_fit</ref>(dataset[</highlight><highlight class="stringliteral">&quot;item_root_list&quot;</highlight><highlight class="normal">],<sp/>first_n);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelbann_1_1cnpy__utils_1ab19ad0a361570b7e78e203c02d6ba13a" kindref="member">cnpy_utils::shrink_to_fit</ref>(dataset[</highlight><highlight class="stringliteral">&quot;item_variant_list&quot;</highlight><highlight class="normal">],<sp/>first_n);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>array<sp/>of<sp/>index<sp/>sequences<sp/>for<sp/>root<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a5d61c89e80f8e67b4850fb72792ce862" kindref="member">m_item_root_list</ref><sp/>=<sp/>dataset[</highlight><highlight class="stringliteral">&quot;item_root_list&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_n<sp/>&gt;<sp/>0u)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>to<sp/>use<sp/>only<sp/>first_n<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>array<sp/>of<sp/>index<sp/>sequences<sp/>for<sp/>variant<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a5aec35e7b2f9956b8e7e8ce5cbb3ff22" kindref="member">m_item_variant_list</ref><sp/>=<sp/>dataset[</highlight><highlight class="stringliteral">&quot;item_variant_list&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>label<sp/>array<sp/>into<sp/>a<sp/>vector<sp/>of<sp/>label_t<sp/>(uint8_t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>cnpy::NpyArray<sp/>d_item_class_list<sp/>=<sp/>dataset[</highlight><highlight class="stringliteral">&quot;item_class_list&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref><sp/>=<sp/>(d_item_class_list.shape.size()<sp/>==<sp/>1u);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>of<sp/>shrinking<sp/>to<sp/>first_n,<sp/>make<sp/>sure<sp/>the<sp/>size<sp/>is<sp/>consistent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_samples<sp/>=<sp/><ref refid="classlbann_1_1offline__patches__npz_1a5d61c89e80f8e67b4850fb72792ce862" kindref="member">m_item_root_list</ref>.shape[0];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a5f90dc1b898f8ad9d7ea16c188738419" kindref="member">m_item_class_list</ref>.resize(num_samples);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0u;<sp/>i<sp/>&lt;<sp/>num_samples;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>digits(cnpy_utils::data_ptr&lt;char&gt;(d_item_class_list,<sp/>{i}),<sp/>d_item_class_list.word_size);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a5f90dc1b898f8ad9d7ea16c188738419" kindref="member">m_item_class_list</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1offline__patches__npz_1ae0ed6bf62b2be1814964206522ed4e05" kindref="member">label_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(atoi(digits.c_str()));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>cnpy::npz_t::iterator<sp/>it<sp/>=<sp/>dataset.find(</highlight><highlight class="stringliteral">&quot;item_class_list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>dataset.erase(it);<sp/></highlight><highlight class="comment">//<sp/>to<sp/>keep<sp/>memory<sp/>footprint<sp/>as<sp/>low<sp/>as<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>array<sp/>of<sp/>dictionary<sp/>substrings<sp/>of<sp/>root<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>cnpy::NpyArray<sp/>d_file_root_list<sp/>=<sp/>dataset[</highlight><highlight class="stringliteral">&quot;file_root_list&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref><sp/>=<sp/><ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref><sp/>&amp;&amp;<sp/>(d_file_root_list.shape.size()<sp/>==<sp/>1u);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_roots<sp/>=<sp/>d_file_root_list.shape[0];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a515ef05ef0679f3b6f1197d1ab47bfb3" kindref="member">m_file_root_list</ref>.resize(num_roots);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0u;<sp/>i<sp/>&lt;<sp/>num_roots;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>file_root(cnpy_utils::data_ptr&lt;char&gt;(d_file_root_list,<sp/>{i}),<sp/>d_file_root_list.word_size);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a515ef05ef0679f3b6f1197d1ab47bfb3" kindref="member">m_file_root_list</ref>[i]<sp/>=<sp/>std::string(file_root.c_str());</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>cnpy::npz_t::iterator<sp/>it<sp/>=<sp/>dataset.find(</highlight><highlight class="stringliteral">&quot;file_root_list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>dataset.erase(it);<sp/></highlight><highlight class="comment">//<sp/>to<sp/>keep<sp/>memory<sp/>footprint<sp/>as<sp/>low<sp/>as<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//for<sp/>(const<sp/>auto&amp;<sp/>fl:<sp/>m_file_root_list)<sp/>std::cout<sp/>&lt;&lt;<sp/>fl<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>array<sp/>of<sp/>dictionary<sp/>substrings<sp/>of<sp/>variant<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>cnpy::NpyArray<sp/>d_file_variant_list<sp/>=<sp/>dataset[</highlight><highlight class="stringliteral">&quot;file_variant_list&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref><sp/>=<sp/><ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref><sp/>&amp;&amp;<sp/>(d_file_variant_list.shape.size()<sp/>==<sp/>1u);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_variants<sp/>=<sp/>d_file_variant_list.shape[0];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a164d2bd134dc8c3946dc28d6ec5da0ec" kindref="member">m_file_variant_list</ref>.resize(num_variants);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0u;<sp/>i<sp/>&lt;<sp/>num_variants;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>file_variant(cnpy_utils::data_ptr&lt;char&gt;(d_file_variant_list,<sp/>{i}),<sp/>d_file_variant_list.word_size);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a164d2bd134dc8c3946dc28d6ec5da0ec" kindref="member">m_file_variant_list</ref>[i]<sp/>=<sp/>std::string(file_variant.c_str());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>cnpy::npz_t::iterator<sp/>it<sp/>=<sp/>dataset.find(</highlight><highlight class="stringliteral">&quot;file_variant_list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>dataset.erase(it);<sp/></highlight><highlight class="comment">//<sp/>to<sp/>keep<sp/>memory<sp/>footprint<sp/>as<sp/>low<sp/>as<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//for<sp/>(const<sp/>auto&amp;<sp/>fl:<sp/>m_file_variant_list)<sp/>std::cout<sp/>&lt;&lt;<sp/>fl<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref><sp/>=<sp/><ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref><sp/>&amp;&amp;<sp/><ref refid="classlbann_1_1offline__patches__npz_1a44d8cad35ff9ad245856c5408965e53b" kindref="member">check_data</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>get_description();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a5f90dc1b898f8ad9d7ea16c188738419" kindref="member">m_item_class_list</ref>.clear();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a515ef05ef0679f3b6f1197d1ab47bfb3" kindref="member">m_file_root_list</ref>.clear();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1offline__patches__npz_1a164d2bd134dc8c3946dc28d6ec5da0ec" kindref="member">m_file_variant_list</ref>.clear();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;offline_patches_npz:<sp/>loaded<sp/>data<sp/>not<sp/>consistent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classlbann_1_1offline__patches__npz_1a44d8cad35ff9ad245856c5408965e53b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1offline__patches__npz_1a44d8cad35ff9ad245856c5408965e53b" kindref="member">offline_patches_npz::check_data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>(<ref refid="classlbann_1_1offline__patches__npz_1a5d61c89e80f8e67b4850fb72792ce862" kindref="member">m_item_root_list</ref>.shape.size()<sp/>==<sp/>2u)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classlbann_1_1offline__patches__npz_1a5aec35e7b2f9956b8e7e8ce5cbb3ff22" kindref="member">m_item_variant_list</ref>.shape.size()<sp/>==<sp/>3u)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classlbann_1_1offline__patches__npz_1a515ef05ef0679f3b6f1197d1ab47bfb3" kindref="member">m_file_root_list</ref>.size()<sp/>&gt;<sp/>0u)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classlbann_1_1offline__patches__npz_1a164d2bd134dc8c3946dc28d6ec5da0ec" kindref="member">m_file_variant_list</ref>.size()<sp/>&gt;<sp/>0u)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classlbann_1_1offline__patches__npz_1a5d61c89e80f8e67b4850fb72792ce862" kindref="member">m_item_root_list</ref>.shape[0]<sp/>==<sp/><ref refid="classlbann_1_1offline__patches__npz_1a5f90dc1b898f8ad9d7ea16c188738419" kindref="member">m_item_class_list</ref>.size())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classlbann_1_1offline__patches__npz_1a5aec35e7b2f9956b8e7e8ce5cbb3ff22" kindref="member">m_item_variant_list</ref>.shape[0]<sp/>==<sp/><ref refid="classlbann_1_1offline__patches__npz_1a5f90dc1b898f8ad9d7ea16c188738419" kindref="member">m_item_class_list</ref>.size())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classlbann_1_1offline__patches__npz_1a5d61c89e80f8e67b4850fb72792ce862" kindref="member">m_item_root_list</ref>.shape[1]<sp/>==<sp/><ref refid="classlbann_1_1offline__patches__npz_1a5c13583d344641295301f82a32ebee41" kindref="member">m_num_patches</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classlbann_1_1offline__patches__npz_1a5aec35e7b2f9956b8e7e8ce5cbb3ff22" kindref="member">m_item_variant_list</ref>.shape[1]<sp/>==<sp/><ref refid="classlbann_1_1offline__patches__npz_1a5c13583d344641295301f82a32ebee41" kindref="member">m_num_patches</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classlbann_1_1offline__patches__npz_1a5aec35e7b2f9956b8e7e8ce5cbb3ff22" kindref="member">m_item_variant_list</ref>.shape[2]<sp/>&gt;<sp/>0u)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classlbann_1_1offline__patches__npz_1a5d61c89e80f8e67b4850fb72792ce862" kindref="member">m_item_root_list</ref>.word_size<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(size_t))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classlbann_1_1offline__patches__npz_1a5aec35e7b2f9956b8e7e8ce5cbb3ff22" kindref="member">m_item_variant_list</ref>.word_size<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(size_t));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classlbann_1_1offline__patches__npz_1a9ffc5cc4b431a4ad18cd58651ca05ef8" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classlbann_1_1offline__patches__npz_1a9ffc5cc4b431a4ad18cd58651ca05ef8" kindref="member">offline_patches_npz::get_description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::to_string;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>string(</highlight><highlight class="stringliteral">&quot;offline_patches_npz:\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>item_root_list:<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespacelbann_1_1cnpy__utils_1a120e5719167d6d20b2a98c4282fd7a50" kindref="member">cnpy_utils::show_shape</ref>(<ref refid="classlbann_1_1offline__patches__npz_1a5d61c89e80f8e67b4850fb72792ce862" kindref="member">m_item_root_list</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>item_variant_list:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacelbann_1_1cnpy__utils_1a120e5719167d6d20b2a98c4282fd7a50" kindref="member">cnpy_utils::show_shape</ref>(<ref refid="classlbann_1_1offline__patches__npz_1a5aec35e7b2f9956b8e7e8ce5cbb3ff22" kindref="member">m_item_variant_list</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>item_class_list:<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>+<sp/>to_string(<ref refid="classlbann_1_1offline__patches__npz_1a5f90dc1b898f8ad9d7ea16c188738419" kindref="member">m_item_class_list</ref>.size())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>file_root_list:<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>to_string(<ref refid="classlbann_1_1offline__patches__npz_1a515ef05ef0679f3b6f1197d1ab47bfb3" kindref="member">m_file_root_list</ref>.size())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>file_variant_list:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="classlbann_1_1offline__patches__npz_1a164d2bd134dc8c3946dc28d6ec5da0ec" kindref="member">m_file_variant_list</ref>.size())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>variant_divider:<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>+<sp/><ref refid="classlbann_1_1offline__patches__npz_1aaab0b9040ce248875b6cdb430e054b3a" kindref="member">m_variant_divider</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>num<sp/>of<sp/>samples:<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>to_string(<ref refid="classlbann_1_1offline__patches__npz_1aa6fa05575f54a29b67d0bba8a2a9d363" kindref="member">get_num_samples</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>num<sp/>of<sp/>patches:<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>to_string(<ref refid="classlbann_1_1offline__patches__npz_1a5c13583d344641295301f82a32ebee41" kindref="member">m_num_patches</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classlbann_1_1offline__patches__npz_1a9c8ad05ffdf0d44ee1c9b61740dd42e3" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1offline__patches__npz_1a61405205f907a697515786d0a9e7858a" kindref="member">offline_patches_npz::sample_t</ref><sp/><ref refid="classlbann_1_1offline__patches__npz_1a9c8ad05ffdf0d44ee1c9b61740dd42e3" kindref="member">offline_patches_npz::get_sample</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref><sp/>||<sp/>idx<sp/>&gt;=<sp/><ref refid="classlbann_1_1offline__patches__npz_1aa6fa05575f54a29b67d0bba8a2a9d363" kindref="member">get_num_samples</ref>())<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;offline_patches_npz:<sp/>invalid<sp/>sample<sp/>index&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>file_names;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0u;<sp/>p<sp/>&lt;<sp/><ref refid="classlbann_1_1offline__patches__npz_1a5c13583d344641295301f82a32ebee41" kindref="member">m_num_patches</ref>;<sp/>++p)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>root<sp/>=<sp/>cnpy_utils::data&lt;size_t&gt;(<ref refid="classlbann_1_1offline__patches__npz_1a5d61c89e80f8e67b4850fb72792ce862" kindref="member">m_item_root_list</ref>,<sp/>{idx,<sp/>p});</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root<sp/>&gt;=<sp/><ref refid="classlbann_1_1offline__patches__npz_1a515ef05ef0679f3b6f1197d1ab47bfb3" kindref="member">m_file_root_list</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::to_string;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;offline_patches_npz:<sp/>invalid<sp/>file_root_list<sp/>index:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>to_string(root)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&gt;=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="classlbann_1_1offline__patches__npz_1a515ef05ef0679f3b6f1197d1ab47bfb3" kindref="member">m_file_root_list</ref>.size()));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>file_name<sp/>=<sp/><ref refid="classlbann_1_1offline__patches__npz_1a515ef05ef0679f3b6f1197d1ab47bfb3" kindref="member">m_file_root_list</ref>.at(root);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>variant<sp/>=<sp/>&amp;(cnpy_utils::data&lt;size_t&gt;(<ref refid="classlbann_1_1offline__patches__npz_1a5aec35e7b2f9956b8e7e8ce5cbb3ff22" kindref="member">m_item_variant_list</ref>,<sp/>{idx,<sp/>p,<sp/>0u}));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ve<sp/>=<sp/>m_item_variant_list.shape.back()-1;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ve;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file_name<sp/>+=<sp/><ref refid="classlbann_1_1offline__patches__npz_1a164d2bd134dc8c3946dc28d6ec5da0ec" kindref="member">m_file_variant_list</ref>.at(variant[i])<sp/>+<sp/><ref refid="classlbann_1_1offline__patches__npz_1aaab0b9040ce248875b6cdb430e054b3a" kindref="member">m_variant_divider</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>file_name<sp/>+=<sp/><ref refid="classlbann_1_1offline__patches__npz_1a164d2bd134dc8c3946dc28d6ec5da0ec" kindref="member">m_file_variant_list</ref>.at(variant[ve]);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>file_names.push_back(file_name);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(file_names,<sp/><ref refid="classlbann_1_1offline__patches__npz_1a5f90dc1b898f8ad9d7ea16c188738419" kindref="member">m_item_class_list</ref>[idx]);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classlbann_1_1offline__patches__npz_1a7548019f8e7f768027b50d497c4e6e73" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1offline__patches__npz_1ae0ed6bf62b2be1814964206522ed4e05" kindref="member">offline_patches_npz::label_t</ref><sp/><ref refid="classlbann_1_1offline__patches__npz_1a7548019f8e7f768027b50d497c4e6e73" kindref="member">offline_patches_npz::get_label</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1offline__patches__npz_1ab434320c2084790a2c99257d6c39fc85" kindref="member">m_checked_ok</ref><sp/>||<sp/>idx<sp/>&gt;=<sp/><ref refid="classlbann_1_1offline__patches__npz_1aa6fa05575f54a29b67d0bba8a2a9d363" kindref="member">get_num_samples</ref>())<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;offline_patches_npz:<sp/>invalid<sp/>sample<sp/>index&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1offline__patches__npz_1a5f90dc1b898f8ad9d7ea16c188738419" kindref="member">m_item_class_list</ref>[idx];</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/offline_patches_npz.cpp"/>
  </compounddef>
</doxygen>
