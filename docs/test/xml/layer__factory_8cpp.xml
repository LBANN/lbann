<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="layer__factory_8cpp" kind="file" language="C++">
    <compoundname>layer_factory.cpp</compoundname>
    <includes refid="factories_8hpp" local="yes">lbann/proto/factories.hpp</includes>
    <incdepgraph>
      <node id="23330">
        <label>sys/stat.h</label>
      </node>
      <node id="23291">
        <label>lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="23292" relation="include">
        </childnode>
      </node>
      <node id="23515">
        <label>glob.h</label>
      </node>
      <node id="23413">
        <label>cv_process.hpp</label>
        <link refid="cv__process_8hpp"/>
        <childnode refid="23414" relation="include">
        </childnode>
        <childnode refid="23417" relation="include">
        </childnode>
        <childnode refid="23420" relation="include">
        </childnode>
        <childnode refid="23421" relation="include">
        </childnode>
        <childnode refid="23424" relation="include">
        </childnode>
        <childnode refid="23425" relation="include">
        </childnode>
        <childnode refid="23426" relation="include">
        </childnode>
        <childnode refid="23427" relation="include">
        </childnode>
        <childnode refid="23429" relation="include">
        </childnode>
        <childnode refid="23430" relation="include">
        </childnode>
      </node>
      <node id="23376">
        <label>lbann/layers/transform/pooling.hpp</label>
        <link refid="pooling_8hpp"/>
        <childnode refid="23377" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23375" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23372" relation="include">
        </childnode>
      </node>
      <node id="23481">
        <label>lbann/callbacks/callback_checkpoint.hpp</label>
        <link refid="callback__checkpoint_8hpp"/>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23322" relation="include">
        </childnode>
      </node>
      <node id="23366">
        <label>lbann/weights/fan_in_fan_out_initializers.hpp</label>
        <link refid="fan__in__fan__out__initializers_8hpp"/>
        <childnode refid="23321" relation="include">
        </childnode>
      </node>
      <node id="23427">
        <label>cv_mean_extractor.hpp</label>
        <link refid="cv__mean__extractor_8hpp"/>
        <childnode refid="23414" relation="include">
        </childnode>
        <childnode refid="23428" relation="include">
        </childnode>
      </node>
      <node id="23356">
        <label>lbann/layers/activations/selu.hpp</label>
        <link refid="selu_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
      </node>
      <node id="23430">
        <label>limits</label>
      </node>
      <node id="23310">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
      </node>
      <node id="23463">
        <label>lbann/callbacks/callback_io.hpp</label>
        <link refid="callback__io_8hpp"/>
        <childnode refid="23324" relation="include">
        </childnode>
        <childnode refid="23336" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23406">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="23336" relation="include">
        </childnode>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
        <childnode refid="23325" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23371" relation="include">
        </childnode>
        <childnode refid="23407" relation="include">
        </childnode>
      </node>
      <node id="23484">
        <label>lbann/optimizers/adagrad.hpp</label>
        <link refid="adagrad_8hpp"/>
        <childnode refid="23312" relation="include">
        </childnode>
      </node>
      <node id="23355">
        <label>lbann/layers/activations/relu.hpp</label>
        <link refid="relu_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
      </node>
      <node id="23352">
        <label>lbann/layers/activations/exponential.hpp</label>
        <link refid="exponential_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
      </node>
      <node id="23480">
        <label>lbann/callbacks/callback_timeline.hpp</label>
        <link refid="callback__timeline_8hpp"/>
        <childnode refid="23336" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23495">
        <label>lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp</label>
        <link refid="objective__functions_2loss__functions_2mean__absolute__deviation_8hpp"/>
        <childnode refid="23490" relation="include">
        </childnode>
      </node>
      <node id="23441">
        <label>offline_patches_npz.hpp</label>
        <link refid="offline__patches__npz_8hpp"/>
        <childnode refid="23442" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
      </node>
      <node id="23459">
        <label>lbann/callbacks/callback_checksmall.hpp</label>
        <link refid="callback__checksmall_8hpp"/>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23440">
        <label>lbann/data_readers/data_reader_triplet.hpp</label>
        <link refid="data__reader__triplet_8hpp"/>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23413" relation="include">
        </childnode>
        <childnode refid="23441" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23377" relation="include">
        </childnode>
        <childnode refid="23317" relation="include">
        </childnode>
      </node>
      <node id="23340">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="23304" relation="include">
        </childnode>
        <childnode refid="23296" relation="include">
        </childnode>
      </node>
      <node id="23435">
        <label>patchworks/patchworks_patch_descriptor.hpp</label>
        <link refid="patchworks__patch__descriptor_8hpp"/>
        <childnode refid="23304" relation="include">
        </childnode>
      </node>
      <node id="23499">
        <label>lbann/objective_functions/weight_regularization/l1.hpp</label>
        <link refid="l1_8hpp"/>
        <childnode refid="23334" relation="include">
        </childnode>
      </node>
      <node id="23514">
        <label>lbann/utils/glob.hpp</label>
        <link refid="glob_8hpp"/>
        <childnode refid="23515" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
      </node>
      <node id="23382">
        <label>lbann/layers/transform/concatenation.hpp</label>
        <link refid="concatenation_8hpp"/>
        <childnode refid="23375" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23367" relation="include">
        </childnode>
      </node>
      <node id="23490">
        <label>lbann/objective_functions/loss_functions/loss_function.hpp</label>
        <link refid="loss__function_8hpp"/>
        <childnode refid="23334" relation="include">
        </childnode>
        <childnode refid="23409" relation="include">
        </childnode>
      </node>
      <node id="23454">
        <label>lbann/data_store/generic_data_store.hpp</label>
        <link refid="generic__data__store_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23324" relation="include">
        </childnode>
      </node>
      <node id="23374">
        <label>lbann/layers/transform/reshape.hpp</label>
        <link refid="reshape_8hpp"/>
        <childnode refid="23375" relation="include">
        </childnode>
      </node>
      <node id="23322">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23297" relation="include">
        </childnode>
      </node>
      <node id="23518">
        <label>cstdint</label>
      </node>
      <node id="23455">
        <label>lbann/data_store/data_store_imagenet.hpp</label>
        <link refid="data__store__imagenet_8hpp"/>
        <childnode refid="23456" relation="include">
        </childnode>
      </node>
      <node id="23297">
        <label>El.hpp</label>
      </node>
      <node id="23500">
        <label>lbann/objective_functions/weight_regularization/l2.hpp</label>
        <link refid="l2_8hpp"/>
        <childnode refid="23334" relation="include">
        </childnode>
      </node>
      <node id="23419">
        <label>lbann/utils/mild_exception.hpp</label>
        <link refid="mild__exception_8hpp"/>
        <childnode refid="23317" relation="include">
        </childnode>
      </node>
      <node id="23353">
        <label>lbann/layers/activations/identity.hpp</label>
        <link refid="identity_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
      </node>
      <node id="23461">
        <label>lbann/callbacks/callback_print.hpp</label>
        <link refid="callback__print_8hpp"/>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23458">
        <label>lbann/callbacks/callback_checknan.hpp</label>
        <link refid="callback__checknan_8hpp"/>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23296">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="23297" relation="include">
        </childnode>
        <childnode refid="23298" relation="include">
        </childnode>
        <childnode refid="23299" relation="include">
        </childnode>
        <childnode refid="23304" relation="include">
        </childnode>
      </node>
      <node id="23292">
        <label>lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="23293" relation="include">
        </childnode>
        <childnode refid="23323" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
        <childnode refid="23291" relation="include">
        </childnode>
      </node>
      <node id="23385">
        <label>lbann/layers/transform/safe_inv.hpp</label>
        <link refid="safe__inv_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23375" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
      </node>
      <node id="23394">
        <label>lbann/layers/regularizers/dropout.hpp</label>
        <link refid="dropout_8hpp"/>
        <childnode refid="23393" relation="include">
        </childnode>
      </node>
      <node id="23517">
        <label>lbann/utils/omp_diagnostics.hpp</label>
        <link refid="omp__diagnostics_8hpp"/>
        <childnode refid="23518" relation="include">
        </childnode>
      </node>
      <node id="23403">
        <label>lbann/io/data_buffers/distributed_io_buffer.hpp</label>
        <link refid="distributed__io__buffer_8hpp"/>
        <childnode refid="23401" relation="include">
        </childnode>
      </node>
      <node id="23387">
        <label>lbann/layers/transform/reduction.hpp</label>
        <link refid="reduction_8hpp"/>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23375" relation="include">
        </childnode>
      </node>
      <node id="23397">
        <label>lbann/layers/io/input/input_layer.hpp</label>
        <link refid="input__layer_8hpp"/>
        <childnode refid="23398" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23295" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23331" relation="include">
        </childnode>
        <childnode refid="23330" relation="include">
        </childnode>
        <childnode refid="23343" relation="include">
        </childnode>
      </node>
      <node id="23404">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23324" relation="include">
        </childnode>
        <childnode refid="23336" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23406" relation="include">
        </childnode>
      </node>
      <node id="23412">
        <label>data_reader_image.hpp</label>
        <link refid="data__reader__image_8hpp"/>
        <childnode refid="23337" relation="include">
        </childnode>
        <childnode refid="23340" relation="include">
        </childnode>
        <childnode refid="23413" relation="include">
        </childnode>
      </node>
      <node id="23341">
        <label>cassert</label>
      </node>
      <node id="23462">
        <label>lbann/callbacks/callback_timer.hpp</label>
        <link refid="callback__timer_8hpp"/>
        <childnode refid="23326" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23465">
        <label>lbann/callbacks/callback_learning_rate.hpp</label>
        <link refid="callback__learning__rate_8hpp"/>
        <childnode refid="23324" relation="include">
        </childnode>
        <childnode refid="23336" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23332">
        <label>fcntl.h</label>
      </node>
      <node id="23492">
        <label>lbann/objective_functions/loss_functions/binary_cross_entropy.hpp</label>
        <link refid="binary__cross__entropy_8hpp"/>
        <childnode refid="23490" relation="include">
        </childnode>
      </node>
      <node id="23335">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23322" relation="include">
        </childnode>
      </node>
      <node id="23416">
        <label>opencv_extensions.hpp</label>
        <link refid="opencv__extensions_8hpp"/>
      </node>
      <node id="23424">
        <label>cv_colorizer.hpp</label>
        <link refid="cv__colorizer_8hpp"/>
        <childnode refid="23414" relation="include">
        </childnode>
      </node>
      <node id="23399">
        <label>lbann/layers/io/io_layer.hpp</label>
        <link refid="io__layer_8hpp"/>
        <childnode refid="23309" relation="include">
        </childnode>
        <childnode refid="23337" relation="include">
        </childnode>
        <childnode refid="23400" relation="include">
        </childnode>
        <childnode refid="23322" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23331" relation="include">
        </childnode>
        <childnode refid="23330" relation="include">
        </childnode>
        <childnode refid="23343" relation="include">
        </childnode>
        <childnode refid="23301" relation="include">
        </childnode>
      </node>
      <node id="23482">
        <label>lbann/callbacks/callback_save_model.hpp</label>
        <link refid="callback__save__model_8hpp"/>
        <childnode refid="23377" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23323" relation="include">
        </childnode>
        <childnode refid="23483" relation="include">
        </childnode>
      </node>
      <node id="23516">
        <label>lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="23293" relation="include">
        </childnode>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
      </node>
      <node id="23311">
        <label>string</label>
      </node>
      <node id="23401">
        <label>lbann/io/data_buffers/generic_io_buffer.hpp</label>
        <link refid="generic__io__buffer_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
        <childnode refid="23337" relation="include">
        </childnode>
      </node>
      <node id="23393">
        <label>lbann/layers/regularizers/regularizer.hpp</label>
        <link refid="regularizer_8hpp"/>
        <childnode refid="23309" relation="include">
        </childnode>
      </node>
      <node id="23498">
        <label>lbann/objective_functions/loss_functions/polya_negloglike.hpp</label>
        <link refid="polya__negloglike_8hpp"/>
        <childnode refid="23490" relation="include">
        </childnode>
      </node>
      <node id="23358">
        <label>lbann/layers/activations/smooth_relu.hpp</label>
        <link refid="smooth__relu_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
      </node>
      <node id="23319">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
      </node>
      <node id="23290">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp</label>
        <link refid="layer__factory_8cpp"/>
        <childnode refid="23291" relation="include">
        </childnode>
      </node>
      <node id="23471">
        <label>lbann/callbacks/callback_dump_minibatch_sample_indices.hpp</label>
        <link refid="callback__dump__minibatch__sample__indices_8hpp"/>
        <childnode refid="23377" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23503">
        <label>lbann/objective_functions/layer_term.hpp</label>
        <link refid="layer__term_8hpp"/>
        <childnode refid="23334" relation="include">
        </childnode>
        <childnode refid="23388" relation="include">
        </childnode>
      </node>
      <node id="23325">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="23326" relation="include">
        </childnode>
      </node>
      <node id="23307">
        <label>map</label>
      </node>
      <node id="23449">
        <label>compound_data_reader.hpp</label>
        <link refid="compound__data__reader_8hpp"/>
        <childnode refid="23337" relation="include">
        </childnode>
        <childnode refid="23377" relation="include">
        </childnode>
      </node>
      <node id="23367">
        <label>lbann/utils/cublas_wrapper.hpp</label>
        <link refid="cublas__wrapper_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
      </node>
      <node id="23344">
        <label>lbann/models/directed_acyclic_graph.hpp</label>
        <link refid="directed__acyclic__graph_8hpp"/>
        <childnode refid="23295" relation="include">
        </childnode>
        <childnode refid="23309" relation="include">
        </childnode>
      </node>
      <node id="23324">
        <label>unordered_set</label>
      </node>
      <node id="23395">
        <label>lbann/layers/regularizers/selu_dropout.hpp</label>
        <link refid="selu__dropout_8hpp"/>
        <childnode refid="23393" relation="include">
        </childnode>
      </node>
      <node id="23493">
        <label>lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp</label>
        <link refid="cross__entropy__with__uncertainty_8hpp"/>
        <childnode refid="23490" relation="include">
        </childnode>
      </node>
      <node id="23510">
        <label>lbann/metrics/boolean_accuracy.hpp</label>
        <link refid="boolean__accuracy_8hpp"/>
        <childnode refid="23335" relation="include">
        </childnode>
      </node>
      <node id="23447">
        <label>lbann/data_readers/data_reader_numpy.hpp</label>
        <link refid="data__reader__numpy_8hpp"/>
        <childnode refid="23337" relation="include">
        </childnode>
        <childnode refid="23442" relation="include">
        </childnode>
      </node>
      <node id="23408">
        <label>lbann/layers/io/target/target_layer.hpp</label>
        <link refid="target__layer_8hpp"/>
        <childnode refid="23409" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23295" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23331" relation="include">
        </childnode>
        <childnode refid="23330" relation="include">
        </childnode>
        <childnode refid="23343" relation="include">
        </childnode>
      </node>
      <node id="23371">
        <label>omp.h</label>
      </node>
      <node id="23370">
        <label>lbann/layers/learning/base_convolution.hpp</label>
        <link refid="base__convolution_8hpp"/>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23371" relation="include">
        </childnode>
        <childnode refid="23365" relation="include">
        </childnode>
        <childnode refid="23309" relation="include">
        </childnode>
        <childnode refid="23321" relation="include">
        </childnode>
        <childnode refid="23366" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23338" relation="include">
        </childnode>
        <childnode refid="23325" relation="include">
        </childnode>
        <childnode refid="23372" relation="include">
        </childnode>
      </node>
      <node id="23369">
        <label>lbann/layers/learning/convolution.hpp</label>
        <link refid="convolution_8hpp"/>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23370" relation="include">
        </childnode>
        <childnode refid="23309" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23338" relation="include">
        </childnode>
        <childnode refid="23325" relation="include">
        </childnode>
      </node>
      <node id="23360">
        <label>lbann/layers/activations/softplus.hpp</label>
        <link refid="softplus_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
      </node>
      <node id="23420">
        <label>cv_subtractor.hpp</label>
        <link refid="cv__subtractor_8hpp"/>
        <childnode refid="23414" relation="include">
        </childnode>
        <childnode refid="23296" relation="include">
        </childnode>
      </node>
      <node id="23318">
        <label>exception</label>
      </node>
      <node id="23422">
        <label>ostream</label>
      </node>
      <node id="23359">
        <label>lbann/layers/activations/softmax.hpp</label>
        <link refid="softmax_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
        <childnode refid="23309" relation="include">
        </childnode>
        <childnode refid="23329" relation="include">
        </childnode>
        <childnode refid="23338" relation="include">
        </childnode>
        <childnode refid="23295" relation="include">
        </childnode>
        <childnode refid="23343" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23341" relation="include">
        </childnode>
      </node>
      <node id="23476">
        <label>lbann/callbacks/callback_check_reconstruction_error.hpp</label>
        <link refid="callback__check__reconstruction__error_8hpp"/>
        <childnode refid="23324" relation="include">
        </childnode>
        <childnode refid="23336" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23505">
        <label>lbann/metrics/top_k_categorical_accuracy.hpp</label>
        <link refid="top__k__categorical__accuracy_8hpp"/>
        <childnode refid="23335" relation="include">
        </childnode>
      </node>
      <node id="23439">
        <label>lbann/data_readers/data_reader_mnist_siamese.hpp</label>
        <link refid="data__reader__mnist__siamese_8hpp"/>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23413" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23377" relation="include">
        </childnode>
        <childnode refid="23317" relation="include">
        </childnode>
      </node>
      <node id="23372">
        <label>lbann/utils/im2col.hpp</label>
        <link refid="im2col_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
      </node>
      <node id="23375">
        <label>lbann/layers/transform/transform.hpp</label>
        <link refid="transform_8hpp"/>
        <childnode refid="23309" relation="include">
        </childnode>
      </node>
      <node id="23410">
        <label>lbann/layers/io/target/reconstruction.hpp</label>
        <link refid="reconstruction_8hpp"/>
        <childnode refid="23309" relation="include">
        </childnode>
        <childnode refid="23409" relation="include">
        </childnode>
        <childnode refid="23295" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23338" relation="include">
        </childnode>
      </node>
      <node id="23436">
        <label>lbann/data_readers/data_reader_cifar10.hpp</label>
        <link refid="data__reader__cifar10_8hpp"/>
        <childnode refid="23412" relation="include">
        </childnode>
      </node>
      <node id="23509">
        <label>lbann/metrics/r2.hpp</label>
        <link refid="r2_8hpp"/>
        <childnode refid="23335" relation="include">
        </childnode>
      </node>
      <node id="23345">
        <label>lbann/models/recurrent.hpp</label>
        <link refid="recurrent_8hpp"/>
        <childnode refid="23344" relation="include">
        </childnode>
      </node>
      <node id="23388">
        <label>lbann/layers/transform/evaluation.hpp</label>
        <link refid="evaluation_8hpp"/>
        <childnode refid="23375" relation="include">
        </childnode>
      </node>
      <node id="23511">
        <label>lbann/metrics/boolean_false_positives.hpp</label>
        <link refid="boolean__false__positives_8hpp"/>
        <childnode refid="23335" relation="include">
        </childnode>
      </node>
      <node id="23478">
        <label>lbann/callbacks/callback_variable_minibatch.hpp</label>
        <link refid="callback__variable__minibatch_8hpp"/>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23487">
        <label>lbann/optimizers/rmsprop.hpp</label>
        <link refid="rmsprop_8hpp"/>
        <childnode refid="23312" relation="include">
        </childnode>
        <childnode refid="23330" relation="include">
        </childnode>
      </node>
      <node id="23450">
        <label>lbann/data_readers/data_reader_merge_features.hpp</label>
        <link refid="data__reader__merge__features_8hpp"/>
        <childnode refid="23449" relation="include">
        </childnode>
      </node>
      <node id="23361">
        <label>lbann/layers/activations/swish.hpp</label>
        <link refid="swish_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
      </node>
      <node id="23373">
        <label>lbann/layers/learning/deconvolution.hpp</label>
        <link refid="deconvolution_8hpp"/>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23370" relation="include">
        </childnode>
        <childnode refid="23309" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23338" relation="include">
        </childnode>
        <childnode refid="23325" relation="include">
        </childnode>
      </node>
      <node id="23339">
        <label>random</label>
      </node>
      <node id="23469">
        <label>lbann/callbacks/callback_dump_activations.hpp</label>
        <link refid="callback__dump__activations_8hpp"/>
        <childnode refid="23377" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23506">
        <label>lbann/metrics/mean_squared_error.hpp</label>
        <link refid="metrics_2mean__squared__error_8hpp"/>
        <childnode refid="23335" relation="include">
        </childnode>
      </node>
      <node id="23321">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
      </node>
      <node id="23504">
        <label>lbann/metrics/categorical_accuracy.hpp</label>
        <link refid="categorical__accuracy_8hpp"/>
        <childnode refid="23335" relation="include">
        </childnode>
      </node>
      <node id="23433">
        <label>lbann/data_readers/data_reader_imagenet_patches.hpp</label>
        <link refid="data__reader__imagenet__patches_8hpp"/>
        <childnode refid="23412" relation="include">
        </childnode>
        <childnode refid="23434" relation="include">
        </childnode>
      </node>
      <node id="23431">
        <label>lbann/data_readers/data_reader_imagenet.hpp</label>
        <link refid="data__reader__imagenet_8hpp"/>
        <childnode refid="23412" relation="include">
        </childnode>
        <childnode refid="23413" relation="include">
        </childnode>
      </node>
      <node id="23331">
        <label>sys/types.h</label>
      </node>
      <node id="23405">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23310" relation="include">
        </childnode>
        <childnode refid="23295" relation="include">
        </childnode>
        <childnode refid="23309" relation="include">
        </childnode>
      </node>
      <node id="23464">
        <label>lbann/callbacks/callback_summary.hpp</label>
        <link refid="callback__summary_8hpp"/>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23310" relation="include">
        </childnode>
      </node>
      <node id="23327">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="23317" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23328" relation="include">
        </childnode>
        <childnode refid="23307" relation="include">
        </childnode>
      </node>
      <node id="23418">
        <label>typeinfo</label>
      </node>
      <node id="23392">
        <label>lbann/layers/regularizers/local_response_normalization.hpp</label>
        <link refid="local__response__normalization_8hpp"/>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23393" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
      </node>
      <node id="23301">
        <label>cstdio</label>
      </node>
      <node id="23425">
        <label>cv_decolorizer.hpp</label>
        <link refid="cv__decolorizer_8hpp"/>
        <childnode refid="23304" relation="include">
        </childnode>
        <childnode refid="23414" relation="include">
        </childnode>
      </node>
      <node id="23402">
        <label>lbann/io/data_buffers/partitioned_io_buffer.hpp</label>
        <link refid="partitioned__io__buffer_8hpp"/>
        <childnode refid="23401" relation="include">
        </childnode>
      </node>
      <node id="23315">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="23316" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
      </node>
      <node id="23501">
        <label>lbann/objective_functions/weight_regularization/group_lasso.hpp</label>
        <link refid="group__lasso_8hpp"/>
        <childnode refid="23334" relation="include">
        </childnode>
      </node>
      <node id="23303">
        <label>cxxabi.h</label>
      </node>
      <node id="23380">
        <label>lbann/layers/transform/sum.hpp</label>
        <link refid="sum_8hpp"/>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23375" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
      </node>
      <node id="23314">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
        <childnode refid="23315" relation="include">
        </childnode>
        <childnode refid="23317" relation="include">
        </childnode>
        <childnode refid="23318" relation="include">
        </childnode>
      </node>
      <node id="23351">
        <label>lbann/layers/activations/elu.hpp</label>
        <link refid="elu_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
      </node>
      <node id="23443">
        <label>lbann/data_readers/data_reader_synthetic.hpp</label>
        <link refid="data__reader__synthetic_8hpp"/>
        <childnode refid="23337" relation="include">
        </childnode>
      </node>
      <node id="23411">
        <label>lbann/data_readers/data_reader_imagenet_org.hpp</label>
        <link refid="data__reader__imagenet__org_8hpp"/>
        <childnode refid="23412" relation="include">
        </childnode>
        <childnode refid="23340" relation="include">
        </childnode>
      </node>
      <node id="23444">
        <label>lbann/data_readers/data_reader_jag.hpp</label>
        <link refid="data__reader__jag_8hpp"/>
        <childnode refid="23442" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23415" relation="include">
        </childnode>
        <childnode refid="23337" relation="include">
        </childnode>
      </node>
      <node id="23438">
        <label>lbann/data_readers/data_reader_multi_images.hpp</label>
        <link refid="data__reader__multi__images_8hpp"/>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23413" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23377" relation="include">
        </childnode>
        <childnode refid="23317" relation="include">
        </childnode>
      </node>
      <node id="23343">
        <label>unistd.h</label>
      </node>
      <node id="23349">
        <label>lbann/layers/activations/activation.hpp</label>
        <link refid="activation_8hpp"/>
        <childnode refid="23309" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
      </node>
      <node id="23306">
        <label>vector</label>
      </node>
      <node id="23386">
        <label>lbann/layers/transform/hadamard.hpp</label>
        <link refid="hadamard_8hpp"/>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23375" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
      </node>
      <node id="23379">
        <label>lbann/layers/transform/split.hpp</label>
        <link refid="split_8hpp"/>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23375" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23367" relation="include">
        </childnode>
      </node>
      <node id="23305">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23307" relation="include">
        </childnode>
        <childnode refid="23308" relation="include">
        </childnode>
        <childnode refid="23296" relation="include">
        </childnode>
      </node>
      <node id="23293">
        <label>lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="23294" relation="include">
        </childnode>
        <childnode refid="23344" relation="include">
        </childnode>
        <childnode refid="23345" relation="include">
        </childnode>
        <childnode refid="23346" relation="include">
        </childnode>
        <childnode refid="23347" relation="include">
        </childnode>
        <childnode refid="23348" relation="include">
        </childnode>
        <childnode refid="23350" relation="include">
        </childnode>
        <childnode refid="23351" relation="include">
        </childnode>
        <childnode refid="23352" relation="include">
        </childnode>
        <childnode refid="23353" relation="include">
        </childnode>
        <childnode refid="23354" relation="include">
        </childnode>
        <childnode refid="23355" relation="include">
        </childnode>
        <childnode refid="23356" relation="include">
        </childnode>
        <childnode refid="23357" relation="include">
        </childnode>
        <childnode refid="23358" relation="include">
        </childnode>
        <childnode refid="23359" relation="include">
        </childnode>
        <childnode refid="23360" relation="include">
        </childnode>
        <childnode refid="23361" relation="include">
        </childnode>
        <childnode refid="23362" relation="include">
        </childnode>
        <childnode refid="23363" relation="include">
        </childnode>
        <childnode refid="23364" relation="include">
        </childnode>
        <childnode refid="23369" relation="include">
        </childnode>
        <childnode refid="23373" relation="include">
        </childnode>
        <childnode refid="23374" relation="include">
        </childnode>
        <childnode refid="23376" relation="include">
        </childnode>
        <childnode refid="23378" relation="include">
        </childnode>
        <childnode refid="23379" relation="include">
        </childnode>
        <childnode refid="23380" relation="include">
        </childnode>
        <childnode refid="23381" relation="include">
        </childnode>
        <childnode refid="23382" relation="include">
        </childnode>
        <childnode refid="23383" relation="include">
        </childnode>
        <childnode refid="23384" relation="include">
        </childnode>
        <childnode refid="23385" relation="include">
        </childnode>
        <childnode refid="23386" relation="include">
        </childnode>
        <childnode refid="23387" relation="include">
        </childnode>
        <childnode refid="23388" relation="include">
        </childnode>
        <childnode refid="23389" relation="include">
        </childnode>
        <childnode refid="23390" relation="include">
        </childnode>
        <childnode refid="23391" relation="include">
        </childnode>
        <childnode refid="23392" relation="include">
        </childnode>
        <childnode refid="23394" relation="include">
        </childnode>
        <childnode refid="23395" relation="include">
        </childnode>
        <childnode refid="23396" relation="include">
        </childnode>
        <childnode refid="23397" relation="include">
        </childnode>
        <childnode refid="23408" relation="include">
        </childnode>
        <childnode refid="23410" relation="include">
        </childnode>
        <childnode refid="23411" relation="include">
        </childnode>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23432" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
        <childnode refid="23436" relation="include">
        </childnode>
        <childnode refid="23437" relation="include">
        </childnode>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23439" relation="include">
        </childnode>
        <childnode refid="23440" relation="include">
        </childnode>
        <childnode refid="23443" relation="include">
        </childnode>
        <childnode refid="23444" relation="include">
        </childnode>
        <childnode refid="23445" relation="include">
        </childnode>
        <childnode refid="23447" relation="include">
        </childnode>
        <childnode refid="23446" relation="include">
        </childnode>
        <childnode refid="23448" relation="include">
        </childnode>
        <childnode refid="23450" relation="include">
        </childnode>
        <childnode refid="23451" relation="include">
        </childnode>
        <childnode refid="23452" relation="include">
        </childnode>
        <childnode refid="23453" relation="include">
        </childnode>
        <childnode refid="23454" relation="include">
        </childnode>
        <childnode refid="23455" relation="include">
        </childnode>
        <childnode refid="23457" relation="include">
        </childnode>
        <childnode refid="23458" relation="include">
        </childnode>
        <childnode refid="23459" relation="include">
        </childnode>
        <childnode refid="23460" relation="include">
        </childnode>
        <childnode refid="23461" relation="include">
        </childnode>
        <childnode refid="23462" relation="include">
        </childnode>
        <childnode refid="23463" relation="include">
        </childnode>
        <childnode refid="23464" relation="include">
        </childnode>
        <childnode refid="23465" relation="include">
        </childnode>
        <childnode refid="23466" relation="include">
        </childnode>
        <childnode refid="23467" relation="include">
        </childnode>
        <childnode refid="23404" relation="include">
        </childnode>
        <childnode refid="23468" relation="include">
        </childnode>
        <childnode refid="23469" relation="include">
        </childnode>
        <childnode refid="23470" relation="include">
        </childnode>
        <childnode refid="23471" relation="include">
        </childnode>
        <childnode refid="23472" relation="include">
        </childnode>
        <childnode refid="23473" relation="include">
        </childnode>
        <childnode refid="23474" relation="include">
        </childnode>
        <childnode refid="23475" relation="include">
        </childnode>
        <childnode refid="23476" relation="include">
        </childnode>
        <childnode refid="23477" relation="include">
        </childnode>
        <childnode refid="23478" relation="include">
        </childnode>
        <childnode refid="23479" relation="include">
        </childnode>
        <childnode refid="23480" relation="include">
        </childnode>
        <childnode refid="23481" relation="include">
        </childnode>
        <childnode refid="23482" relation="include">
        </childnode>
        <childnode refid="23320" relation="include">
        </childnode>
        <childnode refid="23321" relation="include">
        </childnode>
        <childnode refid="23366" relation="include">
        </childnode>
        <childnode refid="23484" relation="include">
        </childnode>
        <childnode refid="23485" relation="include">
        </childnode>
        <childnode refid="23486" relation="include">
        </childnode>
        <childnode refid="23487" relation="include">
        </childnode>
        <childnode refid="23488" relation="include">
        </childnode>
        <childnode refid="23333" relation="include">
        </childnode>
        <childnode refid="23489" relation="include">
        </childnode>
        <childnode refid="23491" relation="include">
        </childnode>
        <childnode refid="23492" relation="include">
        </childnode>
        <childnode refid="23493" relation="include">
        </childnode>
        <childnode refid="23494" relation="include">
        </childnode>
        <childnode refid="23495" relation="include">
        </childnode>
        <childnode refid="23496" relation="include">
        </childnode>
        <childnode refid="23497" relation="include">
        </childnode>
        <childnode refid="23498" relation="include">
        </childnode>
        <childnode refid="23499" relation="include">
        </childnode>
        <childnode refid="23500" relation="include">
        </childnode>
        <childnode refid="23501" relation="include">
        </childnode>
        <childnode refid="23502" relation="include">
        </childnode>
        <childnode refid="23503" relation="include">
        </childnode>
        <childnode refid="23504" relation="include">
        </childnode>
        <childnode refid="23505" relation="include">
        </childnode>
        <childnode refid="23506" relation="include">
        </childnode>
        <childnode refid="23507" relation="include">
        </childnode>
        <childnode refid="23508" relation="include">
        </childnode>
        <childnode refid="23509" relation="include">
        </childnode>
        <childnode refid="23510" relation="include">
        </childnode>
        <childnode refid="23511" relation="include">
        </childnode>
        <childnode refid="23512" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23310" relation="include">
        </childnode>
        <childnode refid="23513" relation="include">
        </childnode>
        <childnode refid="23514" relation="include">
        </childnode>
        <childnode refid="23516" relation="include">
        </childnode>
        <childnode refid="23329" relation="include">
        </childnode>
        <childnode refid="23322" relation="include">
        </childnode>
        <childnode refid="23313" relation="include">
        </childnode>
        <childnode refid="23517" relation="include">
        </childnode>
      </node>
      <node id="23396">
        <label>lbann/layers/regularizers/batch_normalization.hpp</label>
        <link refid="batch__normalization_8hpp"/>
        <childnode refid="23393" relation="include">
        </childnode>
      </node>
      <node id="23491">
        <label>lbann/objective_functions/loss_functions/mean_squared_error.hpp</label>
        <link refid="objective__functions_2loss__functions_2mean__squared__error_8hpp"/>
        <childnode refid="23490" relation="include">
        </childnode>
      </node>
      <node id="23362">
        <label>lbann/layers/activations/tanh.hpp</label>
        <link refid="tanh_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
      </node>
      <node id="23364">
        <label>lbann/layers/learning/fully_connected.hpp</label>
        <link refid="fully__connected_8hpp"/>
        <childnode refid="23365" relation="include">
        </childnode>
        <childnode refid="23349" relation="include">
        </childnode>
        <childnode refid="23338" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
        <childnode refid="23295" relation="include">
        </childnode>
        <childnode refid="23321" relation="include">
        </childnode>
        <childnode refid="23366" relation="include">
        </childnode>
        <childnode refid="23367" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23368" relation="include">
        </childnode>
      </node>
      <node id="23389">
        <label>lbann/layers/transform/gaussian.hpp</label>
        <link refid="gaussian_8hpp"/>
        <childnode refid="23375" relation="include">
        </childnode>
        <childnode refid="23338" relation="include">
        </childnode>
      </node>
      <node id="23333">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="23334" relation="include">
        </childnode>
        <childnode refid="23335" relation="include">
        </childnode>
      </node>
      <node id="23377">
        <label>utility</label>
      </node>
      <node id="23329">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="23330" relation="include">
        </childnode>
        <childnode refid="23331" relation="include">
        </childnode>
        <childnode refid="23332" relation="include">
        </childnode>
      </node>
      <node id="23497">
        <label>lbann/objective_functions/loss_functions/poisson_negloglike.hpp</label>
        <link refid="poisson__negloglike_8hpp"/>
        <childnode refid="23490" relation="include">
        </childnode>
      </node>
      <node id="23368">
        <label>sstream</label>
      </node>
      <node id="23363">
        <label>lbann/layers/activations/power.hpp</label>
        <link refid="power_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
      </node>
      <node id="23448">
        <label>lbann/data_readers/data_reader_merge_samples.hpp</label>
        <link refid="data__reader__merge__samples_8hpp"/>
        <childnode refid="23449" relation="include">
        </childnode>
      </node>
      <node id="23390">
        <label>lbann/layers/transform/bernoulli.hpp</label>
        <link refid="bernoulli_8hpp"/>
        <childnode refid="23375" relation="include">
        </childnode>
        <childnode refid="23338" relation="include">
        </childnode>
      </node>
      <node id="23486">
        <label>lbann/optimizers/hypergradient_adam.hpp</label>
        <link refid="hypergradient__adam_8hpp"/>
        <childnode refid="23312" relation="include">
        </childnode>
      </node>
      <node id="23381">
        <label>lbann/layers/transform/slice.hpp</label>
        <link refid="slice_8hpp"/>
        <childnode refid="23375" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23367" relation="include">
        </childnode>
      </node>
      <node id="23457">
        <label>lbann/callbacks/callback_check_init.hpp</label>
        <link refid="callback__check__init_8hpp"/>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23323">
        <label>lbann.pb.h</label>
      </node>
      <node id="23466">
        <label>lbann/callbacks/callback_debug.hpp</label>
        <link refid="callback__debug_8hpp"/>
        <childnode refid="23326" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23445">
        <label>lbann/data_readers/data_reader_nci.hpp</label>
        <link refid="data__reader__nci_8hpp"/>
        <childnode refid="23446" relation="include">
        </childnode>
      </node>
      <node id="23452">
        <label>lbann/data_readers/data_reader_pilot2_molecular.hpp</label>
        <link refid="data__reader__pilot2__molecular_8hpp"/>
        <childnode refid="23337" relation="include">
        </childnode>
        <childnode refid="23442" relation="include">
        </childnode>
      </node>
      <node id="23300">
        <label>cstdlib</label>
      </node>
      <node id="23475">
        <label>lbann/callbacks/profiler.hpp</label>
        <link refid="profiler_8hpp"/>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23460">
        <label>lbann/callbacks/callback_check_dataset.hpp</label>
        <link refid="callback__check__dataset_8hpp"/>
        <childnode refid="23328" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23398">
        <label>lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="23399" relation="include">
        </childnode>
        <childnode refid="23401" relation="include">
        </childnode>
        <childnode refid="23402" relation="include">
        </childnode>
        <childnode refid="23403" relation="include">
        </childnode>
        <childnode refid="23295" relation="include">
        </childnode>
        <childnode refid="23404" relation="include">
        </childnode>
      </node>
      <node id="23415">
        <label>opencv.hpp</label>
        <link refid="opencv_8hpp"/>
        <childnode refid="23304" relation="include">
        </childnode>
      </node>
      <node id="23472">
        <label>lbann/callbacks/callback_early_stopping.hpp</label>
        <link refid="callback__early__stopping_8hpp"/>
        <childnode refid="23324" relation="include">
        </childnode>
        <childnode refid="23336" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23317">
        <label>iostream</label>
      </node>
      <node id="23357">
        <label>lbann/layers/activations/sigmoid.hpp</label>
        <link refid="sigmoid_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
      </node>
      <node id="23347">
        <label>lbann/models/siamese.hpp</label>
        <link refid="siamese_8hpp"/>
        <childnode refid="23344" relation="include">
        </childnode>
      </node>
      <node id="23446">
        <label>data_reader_csv.hpp</label>
        <link refid="data__reader__csv_8hpp"/>
        <childnode refid="23337" relation="include">
        </childnode>
        <childnode refid="23340" relation="include">
        </childnode>
        <childnode refid="23336" relation="include">
        </childnode>
      </node>
      <node id="23434">
        <label>cv_process_patches.hpp</label>
        <link refid="cv__process__patches_8hpp"/>
        <childnode refid="23413" relation="include">
        </childnode>
        <childnode refid="23435" relation="include">
        </childnode>
        <childnode refid="23430" relation="include">
        </childnode>
      </node>
      <node id="23312">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="23313" relation="include">
        </childnode>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
        <childnode refid="23320" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23324" relation="include">
        </childnode>
      </node>
      <node id="23336">
        <label>unordered_map</label>
      </node>
      <node id="23417">
        <label>cv_normalizer.hpp</label>
        <link refid="cv__normalizer_8hpp"/>
        <childnode refid="23418" relation="include">
        </childnode>
        <childnode refid="23414" relation="include">
        </childnode>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23419" relation="include">
        </childnode>
      </node>
      <node id="23338">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
        <childnode refid="23322" relation="include">
        </childnode>
        <childnode refid="23339" relation="include">
        </childnode>
      </node>
      <node id="23378">
        <label>lbann/layers/transform/unpooling.hpp</label>
        <link refid="unpooling_8hpp"/>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23376" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23372" relation="include">
        </childnode>
      </node>
      <node id="23414">
        <label>cv_transform.hpp</label>
        <link refid="cv__transform_8hpp"/>
        <childnode refid="23415" relation="include">
        </childnode>
        <childnode refid="23416" relation="include">
        </childnode>
      </node>
      <node id="23479">
        <label>lbann/callbacks/callback_gradient_check.hpp</label>
        <link refid="callback__gradient__check_8hpp"/>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23485">
        <label>lbann/optimizers/adam.hpp</label>
        <link refid="adam_8hpp"/>
        <childnode refid="23312" relation="include">
        </childnode>
      </node>
      <node id="23512">
        <label>lbann/metrics/boolean_false_negatives.hpp</label>
        <link refid="boolean__false__negatives_8hpp"/>
        <childnode refid="23335" relation="include">
        </childnode>
      </node>
      <node id="23309">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
        <childnode refid="23310" relation="include">
        </childnode>
        <childnode refid="23312" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
        <childnode refid="23325" relation="include">
        </childnode>
        <childnode refid="23322" relation="include">
        </childnode>
        <childnode refid="23323" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
      </node>
      <node id="23489">
        <label>lbann/objective_functions/loss_functions/cross_entropy.hpp</label>
        <link refid="cross__entropy_8hpp"/>
        <childnode refid="23490" relation="include">
        </childnode>
      </node>
      <node id="23383">
        <label>lbann/layers/transform/constant.hpp</label>
        <link refid="constant_8hpp"/>
        <childnode refid="23375" relation="include">
        </childnode>
      </node>
      <node id="23346">
        <label>lbann/models/greedy_layerwise_autoencoder.hpp</label>
        <link refid="greedy__layerwise__autoencoder_8hpp"/>
        <childnode refid="23294" relation="include">
        </childnode>
      </node>
      <node id="23421">
        <label>cv_augmenter.hpp</label>
        <link refid="cv__augmenter_8hpp"/>
        <childnode refid="23414" relation="include">
        </childnode>
        <childnode refid="23317" relation="include">
        </childnode>
        <childnode refid="23422" relation="include">
        </childnode>
        <childnode refid="23423" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
      </node>
      <node id="23326">
        <label>chrono</label>
      </node>
      <node id="23456">
        <label>lbann/data_store/data_store_image.hpp</label>
        <link refid="data__store__image_8hpp"/>
        <childnode refid="23454" relation="include">
        </childnode>
        <childnode refid="23336" relation="include">
        </childnode>
      </node>
      <node id="23384">
        <label>lbann/layers/transform/dummy.hpp</label>
        <link refid="dummy_8hpp"/>
        <childnode refid="23375" relation="include">
        </childnode>
      </node>
      <node id="23477">
        <label>lbann/callbacks/callback_hang.hpp</label>
        <link refid="callback__hang_8hpp"/>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23334">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23309" relation="include">
        </childnode>
        <childnode refid="23320" relation="include">
        </childnode>
      </node>
      <node id="23316">
        <label>csignal</label>
      </node>
      <node id="23426">
        <label>cv_cropper.hpp</label>
        <link refid="cv__cropper_8hpp"/>
        <childnode refid="23414" relation="include">
        </childnode>
        <childnode refid="23377" relation="include">
        </childnode>
        <childnode refid="23422" relation="include">
        </childnode>
      </node>
      <node id="23400">
        <label>lbann/utils/dataset.hpp</label>
        <link refid="dataset_8hpp"/>
        <childnode refid="23337" relation="include">
        </childnode>
      </node>
      <node id="23513">
        <label>lbann/utils/options.hpp</label>
        <link refid="options_8hpp"/>
        <childnode refid="23317" relation="include">
        </childnode>
        <childnode refid="23307" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
      </node>
      <node id="23320">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23319" relation="include">
        </childnode>
        <childnode refid="23321" relation="include">
        </childnode>
        <childnode refid="23322" relation="include">
        </childnode>
        <childnode refid="23323" relation="include">
        </childnode>
      </node>
      <node id="23508">
        <label>lbann/metrics/pearson_correlation.hpp</label>
        <link refid="pearson__correlation_8hpp"/>
        <childnode refid="23335" relation="include">
        </childnode>
      </node>
      <node id="23337">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23338" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
        <childnode refid="23329" relation="include">
        </childnode>
        <childnode refid="23322" relation="include">
        </childnode>
        <childnode refid="23340" relation="include">
        </childnode>
        <childnode refid="23341" relation="include">
        </childnode>
        <childnode refid="23342" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23343" relation="include">
        </childnode>
      </node>
      <node id="23437">
        <label>lbann/data_readers/data_reader_mnist.hpp</label>
        <link refid="data__reader__mnist_8hpp"/>
        <childnode refid="23412" relation="include">
        </childnode>
        <childnode refid="23340" relation="include">
        </childnode>
      </node>
      <node id="23304">
        <label>lbann_config.hpp</label>
      </node>
      <node id="23428">
        <label>type_traits</label>
      </node>
      <node id="23483">
        <label>google/protobuf/message.h</label>
      </node>
      <node id="23328">
        <label>set</label>
      </node>
      <node id="23432">
        <label>lbann/data_readers/data_reader_imagenet_single.hpp</label>
        <link refid="data__reader__imagenet__single_8hpp"/>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
      </node>
      <node id="23496">
        <label>lbann/objective_functions/loss_functions/mean_absolute_error.hpp</label>
        <link refid="mean__absolute__error_8hpp"/>
        <childnode refid="23490" relation="include">
        </childnode>
      </node>
      <node id="23295">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="23296" relation="include">
        </childnode>
        <childnode refid="23305" relation="include">
        </childnode>
        <childnode refid="23309" relation="include">
        </childnode>
        <childnode refid="23310" relation="include">
        </childnode>
        <childnode refid="23327" relation="include">
        </childnode>
        <childnode refid="23329" relation="include">
        </childnode>
        <childnode refid="23322" relation="include">
        </childnode>
        <childnode refid="23333" relation="include">
        </childnode>
        <childnode refid="23335" relation="include">
        </childnode>
        <childnode refid="23320" relation="include">
        </childnode>
        <childnode refid="23312" relation="include">
        </childnode>
        <childnode refid="23323" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23336" relation="include">
        </childnode>
      </node>
      <node id="23473">
        <label>lbann/callbacks/callback_ltfb.hpp</label>
        <link refid="callback__ltfb_8hpp"/>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23474">
        <label>lbann/callbacks/callback_save_images.hpp</label>
        <link refid="callback__save__images_8hpp"/>
        <childnode refid="23377" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23337" relation="include">
        </childnode>
      </node>
      <node id="23313">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="23365">
        <label>lbann/layers/learning/learning.hpp</label>
        <link refid="learning_8hpp"/>
        <childnode refid="23309" relation="include">
        </childnode>
      </node>
      <node id="23342">
        <label>algorithm</label>
      </node>
      <node id="23299">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="23300" relation="include">
        </childnode>
        <childnode refid="23301" relation="include">
        </childnode>
        <childnode refid="23302" relation="include">
        </childnode>
        <childnode refid="23303" relation="include">
        </childnode>
      </node>
      <node id="23442">
        <label>cnpy.h</label>
      </node>
      <node id="23391">
        <label>lbann/layers/transform/uniform.hpp</label>
        <link refid="uniform_8hpp"/>
        <childnode refid="23375" relation="include">
        </childnode>
        <childnode refid="23338" relation="include">
        </childnode>
      </node>
      <node id="23294">
        <label>lbann/models/sequential.hpp</label>
        <link refid="sequential_8hpp"/>
        <childnode refid="23295" relation="include">
        </childnode>
        <childnode refid="23309" relation="include">
        </childnode>
        <childnode refid="23337" relation="include">
        </childnode>
        <childnode refid="23322" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
      </node>
      <node id="23467">
        <label>lbann/callbacks/callback_debug_io.hpp</label>
        <link refid="callback__debug__io_8hpp"/>
        <childnode refid="23326" relation="include">
        </childnode>
        <childnode refid="23306" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23397" relation="include">
        </childnode>
      </node>
      <node id="23348">
        <label>lbann/layers/activations/atan.hpp</label>
        <link refid="atan_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
      </node>
      <node id="23423">
        <label>cstring</label>
      </node>
      <node id="23298">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="23297" relation="include">
        </childnode>
      </node>
      <node id="23409">
        <label>lbann/layers/io/target/generic_target_layer.hpp</label>
        <link refid="generic__target__layer_8hpp"/>
        <childnode refid="23399" relation="include">
        </childnode>
        <childnode refid="23398" relation="include">
        </childnode>
        <childnode refid="23402" relation="include">
        </childnode>
        <childnode refid="23403" relation="include">
        </childnode>
        <childnode refid="23314" relation="include">
        </childnode>
        <childnode refid="23295" relation="include">
        </childnode>
        <childnode refid="23311" relation="include">
        </childnode>
        <childnode refid="23331" relation="include">
        </childnode>
        <childnode refid="23330" relation="include">
        </childnode>
        <childnode refid="23343" relation="include">
        </childnode>
      </node>
      <node id="23502">
        <label>lbann/objective_functions/kl_divergence.hpp</label>
        <link refid="kl__divergence_8hpp"/>
        <childnode refid="23334" relation="include">
        </childnode>
        <childnode refid="23408" relation="include">
        </childnode>
      </node>
      <node id="23507">
        <label>lbann/metrics/mean_absolute_deviation.hpp</label>
        <link refid="metrics_2mean__absolute__deviation_8hpp"/>
        <childnode refid="23335" relation="include">
        </childnode>
      </node>
      <node id="23354">
        <label>lbann/layers/activations/leaky_relu.hpp</label>
        <link refid="leaky__relu_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
      </node>
      <node id="23451">
        <label>lbann/data_readers/data_reader_ascii.hpp</label>
        <link refid="data__reader__ascii_8hpp"/>
        <childnode refid="23337" relation="include">
        </childnode>
      </node>
      <node id="23494">
        <label>lbann/objective_functions/loss_functions/geom_negloglike.hpp</label>
        <link refid="geom__negloglike_8hpp"/>
        <childnode refid="23490" relation="include">
        </childnode>
      </node>
      <node id="23407">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="23371" relation="include">
        </childnode>
      </node>
      <node id="23453">
        <label>lbann/data_readers/data_reader_mesh.hpp</label>
        <link refid="data__reader__mesh_8hpp"/>
        <childnode refid="23337" relation="include">
        </childnode>
      </node>
      <node id="23350">
        <label>lbann/layers/activations/bent_identity.hpp</label>
        <link refid="bent__identity_8hpp"/>
        <childnode refid="23349" relation="include">
        </childnode>
      </node>
      <node id="23429">
        <label>memory</label>
      </node>
      <node id="23468">
        <label>lbann/callbacks/callback_dump_weights.hpp</label>
        <link refid="callback__dump__weights_8hpp"/>
        <childnode refid="23377" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23488">
        <label>lbann/optimizers/sgd.hpp</label>
        <link refid="sgd_8hpp"/>
        <childnode refid="23312" relation="include">
        </childnode>
      </node>
      <node id="23308">
        <label>typeindex</label>
      </node>
      <node id="23470">
        <label>lbann/callbacks/callback_dump_gradients.hpp</label>
        <link refid="callback__dump__gradients_8hpp"/>
        <childnode refid="23377" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
      </node>
      <node id="23302">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <innernamespace refid="namespacelbann_1_1proto">lbann::proto</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="factories_8hpp" kindref="compound">lbann/proto/factories.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">proto<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;data_layout<sp/>layout&gt;</highlight></codeline>
<codeline lineno="33" refid="namespacelbann_1_1proto_1a7e4b0a66836712b1713ae4a121453cde" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/><ref refid="namespacelbann_1_1proto_1a7e4b0a66836712b1713ae4a121453cde" kindref="member">construct_layer</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref>*<sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;execution_mode,<sp/>generic_data_reader*&gt;&amp;<sp/>data_readers,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_parallel_readers,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref>*<sp/>cudnn,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Layer&amp;<sp/>proto_layer)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>only<sp/>data-parallel<sp/>layers<sp/>have<sp/>GPU<sp/>support</highlight></codeline>
<codeline lineno="42"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout<sp/>==<sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0" kindref="member">data_layout::MODEL_PARALLEL</ref>)<sp/>{<sp/>cudnn<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_input())<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.input();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>io_buffer<sp/>=<sp/>params.io_buffer();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io_buffer<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;distributed&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1input__layer" kindref="compound">input_layer&lt;distributed_io_buffer, layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_parallel_readers,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_readers,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!params.data_set_per_model(),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.for_regression());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io_buffer<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;partitioned&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1input__layer" kindref="compound">input_layer&lt;partitioned_io_buffer, layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_parallel_readers,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_readers,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!params.data_set_per_model(),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.for_regression());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Target<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_target())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.target();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>io_buffer<sp/>=<sp/>params.<ref refid="classlbann_1_1generic__input__layer_1a9dfe8b9afaebc7a5bcb0177ee2ab428f" kindref="member">io_buffer</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io_buffer<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;distributed&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1target__layer" kindref="compound">target_layer&lt;distributed_io_buffer, layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_parallel_readers,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_readers,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.shared_data_reader(),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.for_regression());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io_buffer<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;partitioned&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1target__layer" kindref="compound">target_layer&lt;partitioned_io_buffer, layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_parallel_readers,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_readers,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.shared_data_reader(),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.for_regression());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_reconstruction())<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1reconstruction__layer" kindref="compound">reconstruction_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fully<sp/>connected<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_fully_connected())<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.fully_connected();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_neurons<sp/>=<sp/>params.num_neurons();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.num_neurons_from_data_reader())<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_neurons<sp/>=<sp/>data_readers[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>]-&gt;<ref refid="classlbann_1_1generic__target__layer_1a26376bcc04f9c8ec35ff99bd71de43d9" kindref="member">get_linearized_data_size</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1fully__connected__layer" kindref="compound">fully_connected_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_neurons,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.has_bias(),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudnn);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convolution<sp/>and<sp/>deconvolution<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_convolution())<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.convolution();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>num_output_channels<sp/>=<sp/>params.num_output_channels();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>bias<sp/>=<sp/>params.has_bias();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.has_vectors())<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dims<sp/>=<sp/>parse_list&lt;int&gt;(params.conv_dims());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pads<sp/>=<sp/>parse_list&lt;int&gt;(params.conv_pads());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>strides<sp/>=<sp/>parse_list&lt;int&gt;(params.conv_strides());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout<sp/>==<sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1convolution__layer" kindref="compound">convolution_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>dims.size(),<sp/>num_output_channels,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims,<sp/>pads,<sp/>strides,<sp/>bias,<sp/>cudnn</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>num_dims<sp/>=<sp/>params.num_dims();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dim<sp/>=<sp/>params.conv_dims_i();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pad<sp/>=<sp/>params.conv_pads_i();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>stride<sp/>=<sp/>params.conv_strides_i();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout<sp/>==<sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1convolution__layer" kindref="compound">convolution_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>num_dims,<sp/>num_output_channels,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim,<sp/>pad,<sp/>stride,<sp/>bias,<sp/>cudnn</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_deconvolution())<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.deconvolution();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>bias<sp/>=<sp/>params.has_bias();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_output_channels<sp/>=<sp/>params.num_output_channels();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.num_neurons_from_data_reader())<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_output_channels<sp/>=<sp/>data_readers[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>]-&gt;get_linearized_data_size();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.has_vectors())<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dims<sp/>=<sp/>parse_list&lt;int&gt;(params.conv_dims());</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pads<sp/>=<sp/>parse_list&lt;int&gt;(params.conv_pads());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>strides<sp/>=<sp/>parse_list&lt;int&gt;(params.conv_strides());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout<sp/>==<sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1deconvolution__layer" kindref="compound">deconvolution_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>(</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>dims.size(),<sp/>num_output_channels,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims,<sp/>pads,<sp/>strides,<sp/>bias,<sp/>cudnn</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>num_dims<sp/>=<sp/>params.num_dims();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dim<sp/>=<sp/>params.conv_dims_i();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pad<sp/>=<sp/>params.conv_pads_i();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>stride<sp/>=<sp/>params.conv_strides_i();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout<sp/>==<sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1deconvolution__layer" kindref="compound">deconvolution_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>(</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>num_dims,<sp/>num_output_channels,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim,<sp/>pad,<sp/>stride,<sp/>bias,<sp/>cudnn</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_reshape())<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.reshape();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>dims<sp/>=<sp/>parse_list&lt;int&gt;(params.dims());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.num_neurons_from_data_reader())<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dims.clear();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.reshape_to_flattened_conv_format())<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims.push_back(1);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dims.push_back(data_readers[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>]-&gt;get_linearized_data_size());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1reshape__layer" kindref="compound">reshape_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>dims.size(),<sp/>dims.data());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_sum())<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>scaling_factors<sp/>=<sp/>parse_list&lt;DataType&gt;(proto_layer.sum().scaling_factors());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1sum__layer" kindref="compound">sum_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>scaling_factors,<sp/>cudnn);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_split())<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1split__layer" kindref="compound">split_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>cudnn);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_concatenation())<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>axis<sp/>=<sp/>proto_layer.concatenation().concatenation_axis();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1concatenation__layer" kindref="compound">concatenation_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>axis,<sp/>cudnn);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_slice())<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.slice();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>slice_points<sp/>=<sp/>parse_list&lt;int&gt;(params.slice_points());</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1slice__layer" kindref="compound">slice_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.slice_axis(),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_points,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudnn);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_hadamard())<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1hadamard__layer" kindref="compound">hadamard_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>cudnn);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_constant())<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.constant();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dims<sp/>=<sp/>parse_list&lt;int&gt;(params.num_neurons());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1constant__layer" kindref="compound">constant_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>params.value(),<sp/>dims,<sp/>cudnn);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_gaussian())<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.gaussian();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dims<sp/>=<sp/>parse_list&lt;int&gt;(params.neuron_dims());</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1gaussian__layer" kindref="compound">gaussian_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.mean(),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.stdev(),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudnn);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_bernoulli())<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.bernoulli();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dims<sp/>=<sp/>parse_list&lt;int&gt;(params.neuron_dims());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1bernoulli__layer" kindref="compound">bernoulli_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.prob(),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudnn);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_uniform())<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.uniform();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dims<sp/>=<sp/>parse_list&lt;int&gt;(params.neuron_dims());</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1uniform__layer" kindref="compound">uniform_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.min(),</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.max(),</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudnn);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_pooling())<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.pooling();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mode_str<sp/>=<sp/>params.pool_mode();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1ac47a6ee5278a53898222a48639a2bf39" kindref="member">pool_mode</ref><sp/>mode<sp/>=<sp/><ref refid="base_8hpp_1ac47a6ee5278a53898222a48639a2bf39afedb2d84cafe20862cb4399751a8a7e3" kindref="member">pool_mode::invalid</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode_str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal"><sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>mode<sp/>=<sp/><ref refid="base_8hpp_1ac47a6ee5278a53898222a48639a2bf39a2ffe4e77325d9a7152f7086ea7aa5114" kindref="member">pool_mode::max</ref>;<sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode_str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;average&quot;</highlight><highlight class="normal"><sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>mode<sp/>=<sp/><ref refid="base_8hpp_1ac47a6ee5278a53898222a48639a2bf39a6927a3a7218a3195858411433ec20a21" kindref="member">pool_mode::average</ref>;<sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode_str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;average_no_pad&quot;</highlight><highlight class="normal"><sp/>)<sp/>{<sp/>mode<sp/>=<sp/><ref refid="base_8hpp_1ac47a6ee5278a53898222a48639a2bf39ad91c68878ae16f6dfcd4e1551c33cdd1" kindref="member">pool_mode::average_no_pad</ref>;<sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.has_vectors())<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dims<sp/>=<sp/>parse_list&lt;int&gt;(params.pool_dims());</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pads<sp/>=<sp/>parse_list&lt;int&gt;(params.pool_pads());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>strides<sp/>=<sp/>parse_list&lt;int&gt;(params.pool_strides());</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout<sp/>==<sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1pooling__layer" kindref="compound">pooling_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>(</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>dims.size(),<sp/>dims,<sp/>pads,<sp/>strides,<sp/>mode,<sp/>cudnn</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>num_dims<sp/>=<sp/>params.num_dims();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dim<sp/>=<sp/>params.pool_dims_i();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pad<sp/>=<sp/>params.pool_pads_i();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>stride<sp/>=<sp/>params.pool_strides_i();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout<sp/>==<sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1pooling__layer" kindref="compound">pooling_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>(</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>num_dims,<sp/>dim,<sp/>pad,<sp/>stride,<sp/>mode,<sp/>cudnn</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_unpooling())<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout<sp/>==<sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1unpooling__layer" kindref="compound">unpooling_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_reduction())<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.reduction();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mode_str<sp/>=<sp/>params.mode();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelbann_1a5975e1fb530a267728bfb01dc5c1be9b" kindref="member">reduction_mode</ref><sp/>mode<sp/>=<sp/><ref refid="namespacelbann_1a5975e1fb530a267728bfb01dc5c1be9baccc0377a8afbf50e7094f5c23a8af223" kindref="member">reduction_mode::INVALID</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode_str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sum&quot;</highlight><highlight class="normal"><sp/>||<sp/>mode_str.empty())<sp/>{<sp/>mode<sp/>=<sp/><ref refid="namespacelbann_1a5975e1fb530a267728bfb01dc5c1be9ba6970bdc2201030b9c03fbdcf3973858a" kindref="member">reduction_mode::SUM</ref>;<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode_str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;average&quot;</highlight><highlight class="normal">)<sp/>{<sp/>mode<sp/>=<sp/><ref refid="namespacelbann_1a5975e1fb530a267728bfb01dc5c1be9ba16de38737a9f8366e9b2042b4e9b6290" kindref="member">reduction_mode::AVERAGE</ref>;<sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout<sp/>==<sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1reduction__layer" kindref="compound">reduction_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>mode,<sp/>cudnn);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_evaluation())<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1evaluation__layer" kindref="compound">evaluation_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>cudnn);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Regularizer<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_batch_normalization())<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.batch_normalization();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout<sp/>==<sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1batch__normalization" kindref="compound">batch_normalization&lt;data_layout::DATA_PARALLEL&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.decay(),</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.epsilon(),</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.global_stats(),</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudnn);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_dropout())<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.dropout();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dropout" kindref="compound">dropout&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>params.keep_prob(),<sp/>cudnn);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_local_response_normalization())<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.local_response_normalization();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout<sp/>==<sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1local__response__normalization__layer" kindref="compound">local_response_normalization_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.window_width(),</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.lrn_alpha(),</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.lrn_beta(),</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.lrn_k(),</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudnn);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_selu_dropout())<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.selu_dropout();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>keep_prob<sp/>=<sp/>params.keep_prob();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>alpha<sp/>=<sp/>params.alpha();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>scale<sp/>=<sp/>params.scale();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>!=<sp/>0.0<sp/>&amp;&amp;<sp/>scale<sp/>!=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1selu__dropout" kindref="compound">selu_dropout&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>keep_prob,<sp/>alpha,<sp/>scale);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1selu__dropout" kindref="compound">selu_dropout&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>keep_prob);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Activation<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_softmax())<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1softmax__layer" kindref="compound">softmax_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>cudnn);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_relu())<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1relu__layer" kindref="compound">relu_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>cudnn);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_sigmoid())<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1sigmoid__layer" kindref="compound">sigmoid_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>cudnn);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_tanh())<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1tanh__layer" kindref="compound">tanh_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_atan())<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1atan__layer" kindref="compound">atan_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_exponential())<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1exponential__layer" kindref="compound">exponential_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_identity())<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1identity__layer" kindref="compound">identity_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_bent_identity())<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1bent__identity__layer" kindref="compound">bent_identity_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_softplus())<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1softplus__layer" kindref="compound">softplus_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_smooth_relu())<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1smooth__relu__layer" kindref="compound">smooth_relu_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_leaky_relu())<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1leaky__relu__layer" kindref="compound">leaky_relu_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_swish())<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1swish__layer" kindref="compound">swish_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_elu())<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.elu();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1elu__layer" kindref="compound">elu_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>params.alpha());</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_selu())<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.selu();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>alpha<sp/>=<sp/>params.alpha();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>scale<sp/>=<sp/>params.scale();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>!=<sp/>0.0<sp/>&amp;&amp;<sp/>scale<sp/>!=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1selu__layer" kindref="compound">selu_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>alpha,<sp/>scale);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1selu__layer" kindref="compound">selu_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_layer.has_power())<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_layer.power();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1power__layer" kindref="compound">power_layer&lt;layout&gt;</ref>(<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>params.exponent());</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Throw<sp/>exception<sp/>if<sp/>layer<sp/>has<sp/>not<sp/>been<sp/>constructed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>construct<sp/>layer<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>proto_layer.name();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(err.str());</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Template<sp/>instantiation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/>construct_layer&lt;data_layout::DATA_PARALLEL&gt;(</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref>*<sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>std::map&lt;execution_mode,<sp/>generic_data_reader*&gt;&amp;<sp/>data_readers,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_parallel_readers,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref>*<sp/>cudnn,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Layer&amp;<sp/>proto_layer</highlight></codeline>
<codeline lineno="383"><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/>construct_layer&lt;data_layout::MODEL_PARALLEL&gt;(</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref>*<sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>std::map&lt;execution_mode,<sp/>generic_data_reader*&gt;&amp;<sp/>data_readers,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_parallel_readers,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref>*<sp/>cudnn,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Layer&amp;<sp/>proto_layer</highlight></codeline>
<codeline lineno="390"><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>proto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp"/>
  </compounddef>
</doxygen>
