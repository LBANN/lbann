<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1top__k__categorical__accuracy__metric" kind="class" language="C++" prot="public">
    <compoundname>lbann::top_k_categorical_accuracy_metric</compoundname>
    <basecompoundref refid="classlbann_1_1metric" prot="public" virt="non-virtual">lbann::metric</basecompoundref>
    <includes refid="top__k__categorical__accuracy_8hpp" local="no">top_k_categorical_accuracy.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlbann_1_1top__k__categorical__accuracy__metric_1a6cc172f6799bffac44de06d0657efdeb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::top_k_categorical_accuracy_metric::m_top_k</definition>
        <argsstring></argsstring>
        <name>m_top_k</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of classes to check. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" line="73" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" bodystart="73" bodyend="-1"/>
        <referencedby refid="classlbann_1_1top__k__categorical__accuracy__metric_1a7b49f722f75dabe73c0fc3500d72ef63" compoundref="top__k__categorical__accuracy_8hpp" startline="57" endline="57">name</referencedby>
        <referencedby refid="classlbann_1_1top__k__categorical__accuracy__metric_1a3449bdb835e7e5bd7d17cd001fb4ae38" compoundref="top__k__categorical__accuracy_8cpp" startline="35" endline="115">evaluate_compute</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1top__k__categorical__accuracy__metric_1a3896f230e2972c01b746fc808c51462e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::top_k_categorical_accuracy_metric::top_k_categorical_accuracy_metric</definition>
        <argsstring>(int top_k, lbann_comm *comm)</argsstring>
        <name>top_k_categorical_accuracy_metric</name>
        <param>
          <type>int</type>
          <declname>top_k</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" line="43" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/metrics/top_k_categorical_accuracy.cpp" bodystart="31" bodyend="33"/>
        <referencedby refid="classlbann_1_1top__k__categorical__accuracy__metric_1a2d93a9bca14d52bda02a58e4c58b800e" compoundref="top__k__categorical__accuracy_8hpp" startline="52" endline="54">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1top__k__categorical__accuracy__metric_1a3a79aaa2c235ba13b366eed78cabeaf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::top_k_categorical_accuracy_metric::top_k_categorical_accuracy_metric</definition>
        <argsstring>(const top_k_categorical_accuracy_metric &amp;other)=default</argsstring>
        <name>top_k_categorical_accuracy_metric</name>
        <param>
          <type>const <ref refid="classlbann_1_1top__k__categorical__accuracy__metric" kindref="compound">top_k_categorical_accuracy_metric</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1top__k__categorical__accuracy__metric_1a2036cad8a7f9cb7490bf0341de0d70eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1top__k__categorical__accuracy__metric" kindref="compound">top_k_categorical_accuracy_metric</ref> &amp;</type>
        <definition>top_k_categorical_accuracy_metric&amp; lbann::top_k_categorical_accuracy_metric::operator=</definition>
        <argsstring>(const top_k_categorical_accuracy_metric &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1top__k__categorical__accuracy__metric" kindref="compound">top_k_categorical_accuracy_metric</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy assignment operator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1top__k__categorical__accuracy__metric_1a71a9e2ae447bd0013ada063d9616c816" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual lbann::top_k_categorical_accuracy_metric::~top_k_categorical_accuracy_metric</definition>
        <argsstring>()=default</argsstring>
        <name>~top_k_categorical_accuracy_metric</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1top__k__categorical__accuracy__metric_1a2d93a9bca14d52bda02a58e4c58b800e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1top__k__categorical__accuracy__metric" kindref="compound">top_k_categorical_accuracy_metric</ref> *</type>
        <definition>top_k_categorical_accuracy_metric* lbann::top_k_categorical_accuracy_metric::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1metric_1a2a4498d41f77da8585552f485caab167">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" line="52" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" bodystart="52" bodyend="54"/>
        <references refid="classlbann_1_1top__k__categorical__accuracy__metric_1a3896f230e2972c01b746fc808c51462e" compoundref="top__k__categorical__accuracy_8cpp" startline="31" endline="33">top_k_categorical_accuracy_metric</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1top__k__categorical__accuracy__metric_1a7b49f722f75dabe73c0fc3500d72ef63" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::top_k_categorical_accuracy_metric::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classlbann_1_1metric_1af455d7b6874d3491bc04f0f2ebfcab51">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a string name for this metric. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" line="57" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" bodystart="57" bodyend="57"/>
        <references refid="classlbann_1_1top__k__categorical__accuracy__metric_1a6cc172f6799bffac44de06d0657efdeb" compoundref="top__k__categorical__accuracy_8hpp" startline="73">m_top_k</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1top__k__categorical__accuracy__metric_1a0531d4f199fa61ce448af8c945ff3dfc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::top_k_categorical_accuracy_metric::get_unit</definition>
        <argsstring>() const override</argsstring>
        <name>get_unit</name>
        <reimplements refid="classlbann_1_1metric_1a13fd302dec85190b877f7146529e516c">get_unit</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return &quot;%&quot; as a display unit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" line="59" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" bodystart="59" bodyend="59"/>
        <references refid="classlbann_1_1top__k__categorical__accuracy__metric_1a3449bdb835e7e5bd7d17cd001fb4ae38" compoundref="top__k__categorical__accuracy_8cpp" startline="35" endline="115">evaluate_compute</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac41b9ec75e920b610e8907e066074b30">prediction</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classlbann_1_1top__k__categorical__accuracy__metric_1a3449bdb835e7e5bd7d17cd001fb4ae38" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
        <definition>EvalType lbann::top_k_categorical_accuracy_metric::evaluate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth) override</argsstring>
        <name>evaluate_compute</name>
        <reimplements refid="classlbann_1_1metric_1aab79147ff480675db2e01d7a889a4296">evaluate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computation to evaluate the metric function. This returns the sum of metric values across the mini-batch, not the mean value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" line="67" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/metrics/top_k_categorical_accuracy.cpp" bodystart="35" bodyend="115"/>
        <references refid="classlbann_1_1top__k__categorical__accuracy__metric_1a6cc172f6799bffac44de06d0657efdeb" compoundref="top__k__categorical__accuracy_8hpp" startline="73">m_top_k</references>
        <references refid="classlbann_1_1metric_1a464120720df6bfdf91bffe353e562964" compoundref="metric_8hpp" startline="171" endline="171">lbann::metric::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1aa784298e6ed0f9f01a20b179d5110df9" compoundref="comm_8hpp" startline="303" endline="306">lbann::lbann_comm::gather</references>
        <references refid="classlbann_1_1lbann__comm_1aebb6290d1b618eace302404291c598a5" compoundref="comm_8hpp" startline="409" endline="411">lbann::lbann_comm::model_allreduce</references>
        <referencedby refid="classlbann_1_1top__k__categorical__accuracy__metric_1a0531d4f199fa61ce448af8c945ff3dfc" compoundref="top__k__categorical__accuracy_8hpp" startline="59" endline="59">get_unit</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Top-k categorical accuracy metric. A prediction is correct if any of the top k predictions are correct. The value is a percentage in [0,100]. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2280">
        <label>lbann::metric</label>
        <link refid="classlbann_1_1metric"/>
      </node>
      <node id="2279">
        <label>lbann::top_k_categorical_accuracy_metric</label>
        <link refid="classlbann_1_1top__k__categorical__accuracy__metric"/>
        <childnode refid="2280" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2285">
        <label>lbann::io_layer</label>
        <link refid="classlbann_1_1io__layer"/>
        <childnode refid="2286" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2297">
        <label>lbann::generic_input_layer</label>
        <link refid="classlbann_1_1generic__input__layer"/>
        <childnode refid="2285" relation="public-inheritance">
        </childnode>
        <childnode refid="2298" relation="usage">
          <edgelabel>m_training_dataset</edgelabel>
          <edgelabel>m_validation_dataset</edgelabel>
          <edgelabel>m_testing_dataset</edgelabel>
        </childnode>
        <childnode refid="2294" relation="usage">
          <edgelabel>io_buffer</edgelabel>
        </childnode>
      </node>
      <node id="2284">
        <label>lbann::generic_target_layer</label>
        <link refid="classlbann_1_1generic__target__layer"/>
        <childnode refid="2285" relation="public-inheritance">
        </childnode>
        <childnode refid="2294" relation="usage">
          <edgelabel>io_buffer</edgelabel>
        </childnode>
        <childnode refid="2297" relation="usage">
          <edgelabel>m_paired_input_layer</edgelabel>
        </childnode>
      </node>
      <node id="2287">
        <label>lbann::model</label>
        <link refid="classlbann_1_1model"/>
        <childnode refid="2288" relation="usage">
          <edgelabel>m_default_optimizer</edgelabel>
        </childnode>
        <childnode refid="2283" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="2293" relation="usage">
          <edgelabel>m_objective_function</edgelabel>
        </childnode>
      </node>
      <node id="2295">
        <label>lbann::fetch_data_functor</label>
        <link refid="classlbann_1_1fetch__data__functor"/>
      </node>
      <node id="2282">
        <label>lbann::metric</label>
        <link refid="classlbann_1_1metric"/>
        <childnode refid="2283" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="2284" relation="usage">
          <edgelabel>m_target_layer</edgelabel>
        </childnode>
      </node>
      <node id="2288">
        <label>lbann::optimizer</label>
        <link refid="classlbann_1_1optimizer"/>
        <childnode refid="2283" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="2289" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
        <childnode refid="2290" relation="usage">
          <edgelabel>m_gradient_allreduce_req</edgelabel>
        </childnode>
        <childnode refid="2291" relation="usage">
          <edgelabel>m_weights</edgelabel>
        </childnode>
      </node>
      <node id="2281">
        <label>lbann::top_k_categorical_accuracy_metric</label>
        <link refid="classlbann_1_1top__k__categorical__accuracy__metric"/>
        <childnode refid="2282" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2289">
        <label>lbann::cudnn::cudnn_manager</label>
        <link refid="classlbann_1_1cudnn_1_1cudnn__manager"/>
      </node>
      <node id="2292">
        <label>lbann::weights_initializer</label>
        <link refid="classlbann_1_1weights__initializer"/>
        <childnode refid="2283" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
      <node id="2298">
        <label>lbann::dataset</label>
        <link refid="classlbann_1_1dataset"/>
      </node>
      <node id="2294">
        <label>lbann::generic_io_buffer</label>
        <link refid="classlbann_1_1generic__io__buffer"/>
        <childnode refid="2295" relation="usage">
          <edgelabel>fetch_data_fn</edgelabel>
        </childnode>
        <childnode refid="2283" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="2296" relation="usage">
          <edgelabel>update_data_reader_fn</edgelabel>
        </childnode>
      </node>
      <node id="2286">
        <label>lbann::Layer</label>
        <link refid="classlbann_1_1Layer"/>
        <childnode refid="2283" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="2287" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
        <childnode refid="2289" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="2291">
        <label>lbann::weights</label>
        <link refid="classlbann_1_1weights"/>
        <childnode refid="2288" relation="usage">
          <edgelabel>m_optimizer</edgelabel>
        </childnode>
        <childnode refid="2283" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="2292" relation="usage">
          <edgelabel>m_initializer</edgelabel>
        </childnode>
        <childnode refid="2289" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="2283">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="2290">
        <label>lbann::Al::request</label>
        <link refid="structlbann_1_1Al_1_1request"/>
      </node>
      <node id="2296">
        <label>lbann::update_data_reader_functor</label>
        <link refid="classlbann_1_1update__data__reader__functor"/>
      </node>
      <node id="2293">
        <label>lbann::objective_function</label>
        <link refid="classlbann_1_1objective__function"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" line="38" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/top_k_categorical_accuracy.hpp" bodystart="38" bodyend="75"/>
    <listofallmembers>
      <member refid="classlbann_1_1top__k__categorical__accuracy__metric_1a2d93a9bca14d52bda02a58e4c58b800e" prot="public" virt="virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>copy</name></member>
      <member refid="classlbann_1_1metric_1ab4e14cb4296c7b47719071b210448dec" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>evaluate</name></member>
      <member refid="classlbann_1_1top__k__categorical__accuracy__metric_1a3449bdb835e7e5bd7d17cd001fb4ae38" prot="protected" virt="virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>evaluate_compute</name></member>
      <member refid="classlbann_1_1metric_1a464120720df6bfdf91bffe353e562964" prot="protected" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1metric_1a686239cad1f25628c9b298f9233cc9f3" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>get_evaluate_time</name></member>
      <member refid="classlbann_1_1metric_1a7f97c998fa64475f9ef7f066237b0695" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>get_layer_pointers</name></member>
      <member refid="classlbann_1_1metric_1a2926c6b391dc8c3e3d13d0199317c570" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>get_mean_value</name></member>
      <member refid="classlbann_1_1metric_1a489feb28d318bd8405133f9f8c94cc10" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>get_statistics_num_samples</name></member>
      <member refid="classlbann_1_1metric_1aba7f7a12aeba6619f7b4330e9075f76e" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>get_target_layer</name></member>
      <member refid="classlbann_1_1top__k__categorical__accuracy__metric_1a0531d4f199fa61ce448af8c945ff3dfc" prot="public" virt="virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>get_unit</name></member>
      <member refid="classlbann_1_1metric_1ab3d1ec8247352467790be036a07cfc2b" prot="public" virt="virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1top__k__categorical__accuracy__metric_1a6cc172f6799bffac44de06d0657efdeb" prot="private" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>m_top_k</name></member>
      <member refid="classlbann_1_1metric_1a3cd2d4f7dcbf94f70b3b8560a3171d9d" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>metric</name></member>
      <member refid="classlbann_1_1metric_1ac2fc993e31fed5298c4e321b315b77a0" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>metric</name></member>
      <member refid="classlbann_1_1top__k__categorical__accuracy__metric_1a7b49f722f75dabe73c0fc3500d72ef63" prot="public" virt="virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>name</name></member>
      <member refid="classlbann_1_1top__k__categorical__accuracy__metric_1a2036cad8a7f9cb7490bf0341de0d70eb" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>operator=</name></member>
      <member refid="classlbann_1_1metric_1a4324342dab4892199a47df1d78b2cef5" prot="public" virt="non-virtual" ambiguityscope="lbann::metric::"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>operator=</name></member>
      <member refid="classlbann_1_1metric_1ab93708cd870277eb7865655e075620c9" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>reset_counters</name></member>
      <member refid="classlbann_1_1metric_1af7747feb8bc7a5ee039876a70fae1b0c" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>reset_statistics</name></member>
      <member refid="classlbann_1_1metric_1a27a3d8c073b85297b902ba35137926b4" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>reset_statistics</name></member>
      <member refid="classlbann_1_1metric_1a9728b02a240dfd9faa61b7dfeb3feede" prot="public" virt="virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1metric_1a5de0c336b93f2c03f37f38047d401f99" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>set_layer_pointers</name></member>
      <member refid="classlbann_1_1metric_1a8367719e2c7816a4c718c049ea97b709" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>set_target_layer</name></member>
      <member refid="classlbann_1_1metric_1a898d23e410297378db2fe9f8d1754fe0" prot="public" virt="virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>setup</name></member>
      <member refid="classlbann_1_1top__k__categorical__accuracy__metric_1a3896f230e2972c01b746fc808c51462e" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>top_k_categorical_accuracy_metric</name></member>
      <member refid="classlbann_1_1top__k__categorical__accuracy__metric_1a3a79aaa2c235ba13b366eed78cabeaf1" prot="public" virt="non-virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>top_k_categorical_accuracy_metric</name></member>
      <member refid="classlbann_1_1metric_1ae173eae981ed474f125a5462e734802b" prot="public" virt="virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>~metric</name></member>
      <member refid="classlbann_1_1top__k__categorical__accuracy__metric_1a71a9e2ae447bd0013ada063d9616c816" prot="public" virt="virtual"><scope>lbann::top_k_categorical_accuracy_metric</scope><name>~top_k_categorical_accuracy_metric</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
