<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="metric_8cpp" kind="file" language="C++">
    <compoundname>metric.cpp</compoundname>
    <includes refid="metric_8hpp" local="yes">lbann/metrics/metric.hpp</includes>
    <includes refid="model_8hpp" local="yes">lbann/models/model.hpp</includes>
    <includes refid="generic__target__layer_8hpp" local="yes">lbann/layers/io/target/generic_target_layer.hpp</includes>
    <includes refid="timer_8hpp" local="yes">lbann/utils/timer.hpp</includes>
    <incdepgraph>
      <node id="21309">
        <label>sys/stat.h</label>
      </node>
      <node id="21296">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="21290" relation="include">
        </childnode>
        <childnode refid="21284" relation="include">
        </childnode>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21283" relation="include">
        </childnode>
      </node>
      <node id="21331">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="21314" relation="include">
        </childnode>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21283" relation="include">
        </childnode>
        <childnode refid="21304" relation="include">
        </childnode>
        <childnode refid="21287" relation="include">
        </childnode>
        <childnode refid="21332" relation="include">
        </childnode>
        <childnode refid="21333" relation="include">
        </childnode>
      </node>
      <node id="21320">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="21282" relation="include">
        </childnode>
        <childnode refid="21274" relation="include">
        </childnode>
      </node>
      <node id="21293">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21275" relation="include">
        </childnode>
      </node>
      <node id="21275">
        <label>El.hpp</label>
      </node>
      <node id="21274">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="21275" relation="include">
        </childnode>
        <childnode refid="21276" relation="include">
        </childnode>
        <childnode refid="21277" relation="include">
        </childnode>
        <childnode refid="21282" relation="include">
        </childnode>
      </node>
      <node id="21328">
        <label>lbann/io/data_buffers/distributed_io_buffer.hpp</label>
        <link refid="distributed__io__buffer_8hpp"/>
        <childnode refid="21326" relation="include">
        </childnode>
      </node>
      <node id="21329">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="21284" relation="include">
        </childnode>
        <childnode refid="21303" relation="include">
        </childnode>
        <childnode refid="21314" relation="include">
        </childnode>
        <childnode refid="21330" relation="include">
        </childnode>
        <childnode refid="21331" relation="include">
        </childnode>
      </node>
      <node id="21321">
        <label>cassert</label>
      </node>
      <node id="21311">
        <label>fcntl.h</label>
      </node>
      <node id="21273">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21283" relation="include">
        </childnode>
        <childnode refid="21287" relation="include">
        </childnode>
        <childnode refid="21293" relation="include">
        </childnode>
      </node>
      <node id="21316">
        <label>lbann/layers/io/io_layer.hpp</label>
        <link refid="io__layer_8hpp"/>
        <childnode refid="21295" relation="include">
        </childnode>
        <childnode refid="21317" relation="include">
        </childnode>
        <childnode refid="21324" relation="include">
        </childnode>
        <childnode refid="21293" relation="include">
        </childnode>
        <childnode refid="21287" relation="include">
        </childnode>
        <childnode refid="21290" relation="include">
        </childnode>
        <childnode refid="21310" relation="include">
        </childnode>
        <childnode refid="21309" relation="include">
        </childnode>
        <childnode refid="21323" relation="include">
        </childnode>
        <childnode refid="21279" relation="include">
        </childnode>
      </node>
      <node id="21290">
        <label>string</label>
      </node>
      <node id="21326">
        <label>lbann/io/data_buffers/generic_io_buffer.hpp</label>
        <link refid="generic__io__buffer_8hpp"/>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21283" relation="include">
        </childnode>
        <childnode refid="21317" relation="include">
        </childnode>
      </node>
      <node id="21299">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="21284" relation="include">
        </childnode>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21283" relation="include">
        </childnode>
        <childnode refid="21287" relation="include">
        </childnode>
      </node>
      <node id="21304">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="21305" relation="include">
        </childnode>
      </node>
      <node id="21285">
        <label>map</label>
      </node>
      <node id="21303">
        <label>unordered_set</label>
      </node>
      <node id="21332">
        <label>omp.h</label>
      </node>
      <node id="21292">
        <label>exception</label>
      </node>
      <node id="21272">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/metrics/metric.cpp</label>
        <link refid="metric_8cpp"/>
        <childnode refid="21273" relation="include">
        </childnode>
        <childnode refid="21294" relation="include">
        </childnode>
        <childnode refid="21315" relation="include">
        </childnode>
        <childnode refid="21304" relation="include">
        </childnode>
      </node>
      <node id="21319">
        <label>random</label>
      </node>
      <node id="21301">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21283" relation="include">
        </childnode>
        <childnode refid="21287" relation="include">
        </childnode>
        <childnode refid="21299" relation="include">
        </childnode>
      </node>
      <node id="21310">
        <label>sys/types.h</label>
      </node>
      <node id="21330">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21296" relation="include">
        </childnode>
        <childnode refid="21294" relation="include">
        </childnode>
        <childnode refid="21295" relation="include">
        </childnode>
      </node>
      <node id="21306">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="21291" relation="include">
        </childnode>
        <childnode refid="21284" relation="include">
        </childnode>
        <childnode refid="21307" relation="include">
        </childnode>
        <childnode refid="21285" relation="include">
        </childnode>
      </node>
      <node id="21279">
        <label>cstdio</label>
      </node>
      <node id="21327">
        <label>lbann/io/data_buffers/partitioned_io_buffer.hpp</label>
        <link refid="partitioned__io__buffer_8hpp"/>
        <childnode refid="21326" relation="include">
        </childnode>
      </node>
      <node id="21288">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="21289" relation="include">
        </childnode>
        <childnode refid="21290" relation="include">
        </childnode>
      </node>
      <node id="21281">
        <label>cxxabi.h</label>
      </node>
      <node id="21287">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21283" relation="include">
        </childnode>
        <childnode refid="21288" relation="include">
        </childnode>
        <childnode refid="21291" relation="include">
        </childnode>
        <childnode refid="21292" relation="include">
        </childnode>
      </node>
      <node id="21323">
        <label>unistd.h</label>
      </node>
      <node id="21284">
        <label>vector</label>
      </node>
      <node id="21283">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="21284" relation="include">
        </childnode>
        <childnode refid="21285" relation="include">
        </childnode>
        <childnode refid="21286" relation="include">
        </childnode>
        <childnode refid="21274" relation="include">
        </childnode>
      </node>
      <node id="21312">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="21313" relation="include">
        </childnode>
        <childnode refid="21273" relation="include">
        </childnode>
      </node>
      <node id="21308">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="21309" relation="include">
        </childnode>
        <childnode refid="21310" relation="include">
        </childnode>
        <childnode refid="21311" relation="include">
        </childnode>
      </node>
      <node id="21302">
        <label>lbann.pb.h</label>
      </node>
      <node id="21278">
        <label>cstdlib</label>
      </node>
      <node id="21325">
        <label>lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="21316" relation="include">
        </childnode>
        <childnode refid="21326" relation="include">
        </childnode>
        <childnode refid="21327" relation="include">
        </childnode>
        <childnode refid="21328" relation="include">
        </childnode>
        <childnode refid="21294" relation="include">
        </childnode>
        <childnode refid="21329" relation="include">
        </childnode>
      </node>
      <node id="21291">
        <label>iostream</label>
      </node>
      <node id="21297">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="21298" relation="include">
        </childnode>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21283" relation="include">
        </childnode>
        <childnode refid="21287" relation="include">
        </childnode>
        <childnode refid="21299" relation="include">
        </childnode>
        <childnode refid="21300" relation="include">
        </childnode>
        <childnode refid="21290" relation="include">
        </childnode>
        <childnode refid="21303" relation="include">
        </childnode>
      </node>
      <node id="21314">
        <label>unordered_map</label>
      </node>
      <node id="21318">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21283" relation="include">
        </childnode>
        <childnode refid="21293" relation="include">
        </childnode>
        <childnode refid="21319" relation="include">
        </childnode>
      </node>
      <node id="21295">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21283" relation="include">
        </childnode>
        <childnode refid="21296" relation="include">
        </childnode>
        <childnode refid="21297" relation="include">
        </childnode>
        <childnode refid="21287" relation="include">
        </childnode>
        <childnode refid="21299" relation="include">
        </childnode>
        <childnode refid="21304" relation="include">
        </childnode>
        <childnode refid="21293" relation="include">
        </childnode>
        <childnode refid="21302" relation="include">
        </childnode>
        <childnode refid="21290" relation="include">
        </childnode>
        <childnode refid="21284" relation="include">
        </childnode>
      </node>
      <node id="21305">
        <label>chrono</label>
      </node>
      <node id="21313">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21295" relation="include">
        </childnode>
        <childnode refid="21300" relation="include">
        </childnode>
      </node>
      <node id="21289">
        <label>csignal</label>
      </node>
      <node id="21324">
        <label>lbann/utils/dataset.hpp</label>
        <link refid="dataset_8hpp"/>
        <childnode refid="21317" relation="include">
        </childnode>
      </node>
      <node id="21300">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="21290" relation="include">
        </childnode>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21283" relation="include">
        </childnode>
        <childnode refid="21287" relation="include">
        </childnode>
        <childnode refid="21299" relation="include">
        </childnode>
        <childnode refid="21301" relation="include">
        </childnode>
        <childnode refid="21293" relation="include">
        </childnode>
        <childnode refid="21302" relation="include">
        </childnode>
      </node>
      <node id="21317">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21318" relation="include">
        </childnode>
        <childnode refid="21287" relation="include">
        </childnode>
        <childnode refid="21283" relation="include">
        </childnode>
        <childnode refid="21308" relation="include">
        </childnode>
        <childnode refid="21293" relation="include">
        </childnode>
        <childnode refid="21320" relation="include">
        </childnode>
        <childnode refid="21321" relation="include">
        </childnode>
        <childnode refid="21322" relation="include">
        </childnode>
        <childnode refid="21290" relation="include">
        </childnode>
        <childnode refid="21284" relation="include">
        </childnode>
        <childnode refid="21323" relation="include">
        </childnode>
      </node>
      <node id="21282">
        <label>lbann_config.hpp</label>
      </node>
      <node id="21307">
        <label>set</label>
      </node>
      <node id="21294">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21283" relation="include">
        </childnode>
        <childnode refid="21295" relation="include">
        </childnode>
        <childnode refid="21296" relation="include">
        </childnode>
        <childnode refid="21306" relation="include">
        </childnode>
        <childnode refid="21308" relation="include">
        </childnode>
        <childnode refid="21293" relation="include">
        </childnode>
        <childnode refid="21312" relation="include">
        </childnode>
        <childnode refid="21273" relation="include">
        </childnode>
        <childnode refid="21300" relation="include">
        </childnode>
        <childnode refid="21297" relation="include">
        </childnode>
        <childnode refid="21302" relation="include">
        </childnode>
        <childnode refid="21284" relation="include">
        </childnode>
        <childnode refid="21290" relation="include">
        </childnode>
        <childnode refid="21314" relation="include">
        </childnode>
      </node>
      <node id="21298">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="21322">
        <label>algorithm</label>
      </node>
      <node id="21277">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="21278" relation="include">
        </childnode>
        <childnode refid="21279" relation="include">
        </childnode>
        <childnode refid="21280" relation="include">
        </childnode>
        <childnode refid="21281" relation="include">
        </childnode>
      </node>
      <node id="21276">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="21275" relation="include">
        </childnode>
      </node>
      <node id="21315">
        <label>lbann/layers/io/target/generic_target_layer.hpp</label>
        <link refid="generic__target__layer_8hpp"/>
        <childnode refid="21316" relation="include">
        </childnode>
        <childnode refid="21325" relation="include">
        </childnode>
        <childnode refid="21327" relation="include">
        </childnode>
        <childnode refid="21328" relation="include">
        </childnode>
        <childnode refid="21287" relation="include">
        </childnode>
        <childnode refid="21294" relation="include">
        </childnode>
        <childnode refid="21290" relation="include">
        </childnode>
        <childnode refid="21310" relation="include">
        </childnode>
        <childnode refid="21309" relation="include">
        </childnode>
        <childnode refid="21323" relation="include">
        </childnode>
      </node>
      <node id="21333">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="21332" relation="include">
        </childnode>
      </node>
      <node id="21286">
        <label>typeindex</label>
      </node>
      <node id="21280">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="metric_8hpp" kindref="compound">lbann/metrics/metric.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="model_8hpp" kindref="compound">lbann/models/model.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="generic__target__layer_8hpp" kindref="compound">lbann/layers/io/target/generic_target_layer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8hpp" kindref="compound">lbann/utils/timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structlbann_1_1metric__statistics_1a1933a2417f08d99b1ddfa2b883dae68a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1metric__statistics_1a1933a2417f08d99b1ddfa2b883dae68a" kindref="member">metric_statistics::add_value</ref>(<ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>total_value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="structlbann_1_1metric__statistics_1a3481b2bb165e12a52db847f40a70f800" kindref="member">m_sum</ref><sp/>+=<sp/>total_value;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="structlbann_1_1metric__statistics_1a6633bf91863b7e2327563ac93a9783f7" kindref="member">m_num_samples</ref><sp/>+=<sp/>num_samples;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structlbann_1_1metric__statistics_1ac3cb1abfc32b090fa2a08bda6afa5c09" refkind="member"><highlight class="normal"><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/><ref refid="structlbann_1_1metric__statistics_1ac3cb1abfc32b090fa2a08bda6afa5c09" kindref="member">metric_statistics::get_mean</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structlbann_1_1metric__statistics_1a6633bf91863b7e2327563ac93a9783f7" kindref="member">m_num_samples</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>get<sp/>mean<sp/>metric<sp/>value<sp/>with<sp/>no<sp/>statistics&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1metric__statistics_1a3481b2bb165e12a52db847f40a70f800" kindref="member">m_sum</ref><sp/>/<sp/><ref refid="structlbann_1_1metric__statistics_1a6633bf91863b7e2327563ac93a9783f7" kindref="member">m_num_samples</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structlbann_1_1metric__statistics_1a3ab2a4cd36c154e495bc8f18c4295907" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1metric__statistics_1a3ab2a4cd36c154e495bc8f18c4295907" kindref="member">metric_statistics::reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="structlbann_1_1metric__statistics_1a3481b2bb165e12a52db847f40a70f800" kindref="member">m_sum</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="structlbann_1_1metric__statistics_1a6633bf91863b7e2327563ac93a9783f7" kindref="member">m_num_samples</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structlbann_1_1metric__statistics_1a88f5324c96cceb47d723d2acfddb41f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1metric__statistics_1a88f5324c96cceb47d723d2acfddb41f1" kindref="member">metric_statistics::pack_scalars</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>p.<ref refid="classlbann_1_1persist_1ad29ebcbacdef90a91a9d474d4d6e1bcd" kindref="member">write_double</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56af9ab05454998236921a6b0e281fae632" kindref="member">persist_type::validate</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sum&quot;</highlight><highlight class="normal">,<sp/><ref refid="structlbann_1_1metric__statistics_1a3481b2bb165e12a52db847f40a70f800" kindref="member">m_sum</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aced95e3bc711276b072af97b65ef9fc1" kindref="member">write_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56af9ab05454998236921a6b0e281fae632" kindref="member">persist_type::validate</ref>,<sp/></highlight><highlight class="stringliteral">&quot;num_samples&quot;</highlight><highlight class="normal">,<sp/><ref refid="structlbann_1_1metric__statistics_1a6633bf91863b7e2327563ac93a9783f7" kindref="member">m_num_samples</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structlbann_1_1metric__statistics_1a4ff472c5d9155fe28c5a576c49f1e154" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1metric__statistics_1a4ff472c5d9155fe28c5a576c49f1e154" kindref="member">metric_statistics::unpack_scalars</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1metric__statistics_1_1packing__header" kindref="compound">packing_header</ref><sp/>*header)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>uint64_t<sp/>num_samples;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>p.<ref refid="classlbann_1_1persist_1ae3a0b96ece72901bb0a05d26a4eb4791" kindref="member">read_double</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56af9ab05454998236921a6b0e281fae632" kindref="member">persist_type::validate</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sum&quot;</highlight><highlight class="normal">,<sp/>&amp;sum);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aa6d996db3714a7ae055adac0d8e8ac63" kindref="member">read_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56af9ab05454998236921a6b0e281fae632" kindref="member">persist_type::validate</ref>,<sp/></highlight><highlight class="stringliteral">&quot;num_samples&quot;</highlight><highlight class="normal">,<sp/>(uint64_t<sp/>*)<sp/>&amp;num_samples);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="structlbann_1_1metric__statistics_1a3481b2bb165e12a52db847f40a70f800" kindref="member">m_sum</ref><sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="structlbann_1_1metric__statistics_1a6633bf91863b7e2327563ac93a9783f7" kindref="member">m_num_samples</ref><sp/>=<sp/>num_samples;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structlbann_1_1metric__statistics_1_1packing__header_1a33dd5f49566506d8fc5b6662e5c5a40f" kindref="member">sum</ref><sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structlbann_1_1metric__statistics_1_1packing__header_1ab580e8e40a8b894bcae9755e10dae183" kindref="member">num_samples</ref><sp/>=<sp/>num_samples;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structlbann_1_1metric__statistics_1acdc0ca1af87e9cbd615c6e77b9dba21c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1metric__statistics_1acdc0ca1af87e9cbd615c6e77b9dba21c" kindref="member">metric_statistics::unpack_header</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlbann_1_1metric__statistics_1_1packing__header" kindref="compound">packing_header</ref>&amp;<sp/>header)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="structlbann_1_1metric__statistics_1a3481b2bb165e12a52db847f40a70f800" kindref="member">m_sum</ref><sp/>=<sp/>header.<ref refid="structlbann_1_1metric__statistics_1_1packing__header_1a33dd5f49566506d8fc5b6662e5c5a40f" kindref="member">sum</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="structlbann_1_1metric__statistics_1a6633bf91863b7e2327563ac93a9783f7" kindref="member">m_num_samples</ref><sp/>=<sp/>header.<ref refid="structlbann_1_1metric__statistics_1_1packing__header_1ab580e8e40a8b894bcae9755e10dae183" kindref="member">num_samples</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classlbann_1_1metric_1a3cd2d4f7dcbf94f70b3b8560a3171d9d" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1metric_1a3cd2d4f7dcbf94f70b3b8560a3171d9d" kindref="member">metric::metric</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>:<sp/>m_comm(comm),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>m_target_layer(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classlbann_1_1metric_1a898d23e410297378db2fe9f8d1754fe0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1metric_1a898d23e410297378db2fe9f8d1754fe0" kindref="member">metric::setup</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref>&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>target<sp/>layer<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1metric_1a2bf6c53efb1b525bfa63a8c3167968d9" kindref="member">m_target_layer</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Layer*&gt;<sp/>layers<sp/>=<sp/>m.<ref refid="classlbann_1_1model_1ae14f4b2cc8882b3739d4aeb25d9e73c9" kindref="member">get_layers</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>layers.size()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__target__layer" kindref="compound">generic_target_layer</ref><sp/>*target<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1generic__target__layer" kindref="compound">generic_target_layer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(layers[i]);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1metric_1a2bf6c53efb1b525bfa63a8c3167968d9" kindref="member">m_target_layer</ref><sp/>=<sp/>target;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1metric_1a2bf6c53efb1b525bfa63a8c3167968d9" kindref="member">m_target_layer</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>setup<sp/>metric<sp/>with<sp/>target<sp/>layer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classlbann_1_1metric_1ab4e14cb4296c7b47719071b210448dec" refkind="member"><highlight class="normal"><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/><ref refid="classlbann_1_1metric_1ab4e14cb4296c7b47719071b210448dec" kindref="member">metric::evaluate</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mini_batch_size)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>target<sp/>layer<sp/>pointer<sp/>has<sp/>been<sp/>setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1metric_1a2bf6c53efb1b525bfa63a8c3167968d9" kindref="member">m_target_layer</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>evaluate<sp/>metric<sp/>without<sp/>setting<sp/>a<sp/>target<sp/>layer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluate<sp/>objective<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>total_value<sp/>=<sp/><ref refid="classlbann_1_1metric_1aab79147ff480675db2e01d7a889a4296" kindref="member">evaluate_compute</ref>(<ref refid="classlbann_1_1metric_1a2bf6c53efb1b525bfa63a8c3167968d9" kindref="member">m_target_layer</ref>-&gt;<ref refid="classlbann_1_1generic__target__layer_1ac0b88a705256ab06bbba6bbffbc7ebc1" kindref="member">get_prediction</ref>(),</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1metric_1a2bf6c53efb1b525bfa63a8c3167968d9" kindref="member">m_target_layer</ref>-&gt;<ref refid="classlbann_1_1generic__target__layer_1a9cbe476f3e447bc91e2834921ca7da9f" kindref="member">get_ground_truth</ref>());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1metric_1a4c77a1bd1db77e9d837a72128e3d687f" kindref="member">m_evaluate_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>result<sp/>in<sp/>statistics<sp/>and<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>[mode].add_value(total_value,<sp/>mini_batch_size);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_value<sp/>/<sp/>mini_batch_size;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classlbann_1_1metric_1a2926c6b391dc8c3e3d13d0199317c570" refkind="member"><highlight class="normal"><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/><ref refid="classlbann_1_1metric_1a2926c6b391dc8c3e3d13d0199317c570" kindref="member">metric::get_mean_value</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>.count(mode)<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>.at(mode).get_num_samples()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>get<sp/>mean<sp/>metric<sp/>value<sp/>with<sp/>no<sp/>samples<sp/>for<sp/>statistics&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>.at(mode).get_mean();</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classlbann_1_1metric_1a489feb28d318bd8405133f9f8c94cc10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1metric_1a489feb28d318bd8405133f9f8c94cc10" kindref="member">metric::get_statistics_num_samples</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>.count(mode)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>.at(mode).get_num_samples();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classlbann_1_1metric_1aba7f7a12aeba6619f7b4330e9075f76e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1generic__target__layer" kindref="compound">generic_target_layer</ref>&amp;<sp/><ref refid="classlbann_1_1metric_1aba7f7a12aeba6619f7b4330e9075f76e" kindref="member">metric::get_target_layer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1metric_1a2bf6c53efb1b525bfa63a8c3167968d9" kindref="member">m_target_layer</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>access<sp/>target<sp/>layer<sp/>before<sp/>it<sp/>is<sp/>set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classlbann_1_1metric_1a2bf6c53efb1b525bfa63a8c3167968d9" kindref="member">m_target_layer</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classlbann_1_1metric_1a7f97c998fa64475f9ef7f066237b0695" refkind="member"><highlight class="normal">std::vector&lt;Layer*&gt;<sp/><ref refid="classlbann_1_1metric_1a7f97c998fa64475f9ef7f066237b0695" kindref="member">metric::get_layer_pointers</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;Layer*&gt;(1,<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1generic__target__layer" kindref="compound">generic_target_layer</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1metric_1a2bf6c53efb1b525bfa63a8c3167968d9" kindref="member">m_target_layer</ref>));</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="classlbann_1_1metric_1a5de0c336b93f2c03f37f38047d401f99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1metric_1a5de0c336b93f2c03f37f38047d401f99" kindref="member">metric::set_layer_pointers</ref>(std::vector&lt;Layer*&gt;<sp/>layers)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layers.size()<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>set<sp/>layer<sp/>pointers<sp/>with<sp/>an<sp/>invalid<sp/>number<sp/>of<sp/>pointers<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(expected<sp/>1,<sp/>found<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>layers.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1metric_1a2bf6c53efb1b525bfa63a8c3167968d9" kindref="member">m_target_layer</ref><sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1generic__target__layer" kindref="compound">generic_target_layer</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(layers[0]);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classlbann_1_1metric_1a9728b02a240dfd9faa61b7dfeb3feede" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1metric_1a9728b02a240dfd9faa61b7dfeb3feede" kindref="member">metric::save_to_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>out<sp/>fields<sp/>we<sp/>need<sp/>to<sp/>save<sp/>for<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="classlbann_1_1persist_1a34eb918a890ab49dcbeedddf27ec1616" kindref="member">get_rank</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>].pack_scalars(p);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>].pack_scalars(p);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>].pack_scalars(p);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classlbann_1_1metric_1ab3d1ec8247352467790be036a07cfc2b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1metric_1ab3d1ec8247352467790be036a07cfc2b" kindref="member">metric::load_from_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlbann_1_1metric__statistics_1_1packing__header" kindref="compound">metric_statistics::packing_header</ref><sp/>training_header,<sp/>validation_header,<sp/>testing_header;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="classlbann_1_1persist_1a34eb918a890ab49dcbeedddf27ec1616" kindref="member">get_rank</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>].unpack_scalars(p,<sp/>&amp;training_header);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>].unpack_scalars(p,<sp/>&amp;validation_header);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>].unpack_scalars(p,<sp/>&amp;testing_header);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>MPI_Bcast(&amp;training_header,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(training_header),<sp/>MPI_BYTE,<sp/>0,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>MPI_Bcast(&amp;validation_header,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(validation_header),<sp/>MPI_BYTE,<sp/>0,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>MPI_Bcast(&amp;testing_header,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(testing_header),<sp/>MPI_BYTE,<sp/>0,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>].unpack_header(training_header);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>].unpack_header(validation_header);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1metric_1a9949d8aceedbc113aa2c356046ed73fc" kindref="member">m_statistics</ref>[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>].unpack_header(testing_header);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/metrics/metric.cpp"/>
  </compounddef>
</doxygen>
