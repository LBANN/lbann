<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="callback__checksmall_8cpp" kind="file" language="C++">
    <compoundname>callback_checksmall.cpp</compoundname>
    <includes refid="callback__checksmall_8hpp" local="yes">lbann/callbacks/callback_checksmall.hpp</includes>
    <includes refid="exception_8hpp" local="yes">lbann/utils/exception.hpp</includes>
    <includes refid="target__layer_8hpp" local="yes">lbann/layers/io/target/target_layer.hpp</includes>
    <incdepgraph>
      <node id="17576">
        <label>sys/stat.h</label>
      </node>
      <node id="17550">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="17551" relation="include">
        </childnode>
        <childnode refid="17552" relation="include">
        </childnode>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
      </node>
      <node id="17599">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="17582" relation="include">
        </childnode>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
        <childnode refid="17571" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17600" relation="include">
        </childnode>
        <childnode refid="17601" relation="include">
        </childnode>
      </node>
      <node id="17539">
        <label>lbann/callbacks/callback_checksmall.hpp</label>
        <link refid="callback__checksmall_8hpp"/>
        <childnode refid="17540" relation="include">
        </childnode>
      </node>
      <node id="17589">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="17549" relation="include">
        </childnode>
        <childnode refid="17541" relation="include">
        </childnode>
      </node>
      <node id="17568">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17542" relation="include">
        </childnode>
      </node>
      <node id="17542">
        <label>El.hpp</label>
      </node>
      <node id="17541">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="17542" relation="include">
        </childnode>
        <childnode refid="17543" relation="include">
        </childnode>
        <childnode refid="17544" relation="include">
        </childnode>
        <childnode refid="17549" relation="include">
        </childnode>
      </node>
      <node id="17597">
        <label>lbann/io/data_buffers/distributed_io_buffer.hpp</label>
        <link refid="distributed__io__buffer_8hpp"/>
        <childnode refid="17595" relation="include">
        </childnode>
      </node>
      <node id="17598">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="17552" relation="include">
        </childnode>
        <childnode refid="17570" relation="include">
        </childnode>
        <childnode refid="17582" relation="include">
        </childnode>
        <childnode refid="17540" relation="include">
        </childnode>
        <childnode refid="17599" relation="include">
        </childnode>
      </node>
      <node id="17590">
        <label>cassert</label>
      </node>
      <node id="17578">
        <label>fcntl.h</label>
      </node>
      <node id="17581">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17568" relation="include">
        </childnode>
      </node>
      <node id="17585">
        <label>lbann/layers/io/io_layer.hpp</label>
        <link refid="io__layer_8hpp"/>
        <childnode refid="17557" relation="include">
        </childnode>
        <childnode refid="17586" relation="include">
        </childnode>
        <childnode refid="17593" relation="include">
        </childnode>
        <childnode refid="17568" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17551" relation="include">
        </childnode>
        <childnode refid="17577" relation="include">
        </childnode>
        <childnode refid="17576" relation="include">
        </childnode>
        <childnode refid="17592" relation="include">
        </childnode>
        <childnode refid="17546" relation="include">
        </childnode>
      </node>
      <node id="17551">
        <label>string</label>
      </node>
      <node id="17595">
        <label>lbann/io/data_buffers/generic_io_buffer.hpp</label>
        <link refid="generic__io__buffer_8hpp"/>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
        <childnode refid="17586" relation="include">
        </childnode>
      </node>
      <node id="17565">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="17552" relation="include">
        </childnode>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
      </node>
      <node id="17571">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="17572" relation="include">
        </childnode>
      </node>
      <node id="17554">
        <label>map</label>
      </node>
      <node id="17570">
        <label>unordered_set</label>
      </node>
      <node id="17583">
        <label>lbann/layers/io/target/target_layer.hpp</label>
        <link refid="target__layer_8hpp"/>
        <childnode refid="17584" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17556" relation="include">
        </childnode>
        <childnode refid="17551" relation="include">
        </childnode>
        <childnode refid="17577" relation="include">
        </childnode>
        <childnode refid="17576" relation="include">
        </childnode>
        <childnode refid="17592" relation="include">
        </childnode>
      </node>
      <node id="17600">
        <label>omp.h</label>
      </node>
      <node id="17564">
        <label>exception</label>
      </node>
      <node id="17588">
        <label>random</label>
      </node>
      <node id="17567">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17565" relation="include">
        </childnode>
      </node>
      <node id="17577">
        <label>sys/types.h</label>
      </node>
      <node id="17540">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17550" relation="include">
        </childnode>
        <childnode refid="17556" relation="include">
        </childnode>
        <childnode refid="17557" relation="include">
        </childnode>
      </node>
      <node id="17573">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="17563" relation="include">
        </childnode>
        <childnode refid="17552" relation="include">
        </childnode>
        <childnode refid="17574" relation="include">
        </childnode>
        <childnode refid="17554" relation="include">
        </childnode>
      </node>
      <node id="17546">
        <label>cstdio</label>
      </node>
      <node id="17596">
        <label>lbann/io/data_buffers/partitioned_io_buffer.hpp</label>
        <link refid="partitioned__io__buffer_8hpp"/>
        <childnode refid="17595" relation="include">
        </childnode>
      </node>
      <node id="17561">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="17562" relation="include">
        </childnode>
        <childnode refid="17551" relation="include">
        </childnode>
      </node>
      <node id="17548">
        <label>cxxabi.h</label>
      </node>
      <node id="17560">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
        <childnode refid="17561" relation="include">
        </childnode>
        <childnode refid="17563" relation="include">
        </childnode>
        <childnode refid="17564" relation="include">
        </childnode>
      </node>
      <node id="17592">
        <label>unistd.h</label>
      </node>
      <node id="17552">
        <label>vector</label>
      </node>
      <node id="17553">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="17552" relation="include">
        </childnode>
        <childnode refid="17554" relation="include">
        </childnode>
        <childnode refid="17555" relation="include">
        </childnode>
        <childnode refid="17541" relation="include">
        </childnode>
      </node>
      <node id="17579">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="17580" relation="include">
        </childnode>
        <childnode refid="17581" relation="include">
        </childnode>
      </node>
      <node id="17575">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="17576" relation="include">
        </childnode>
        <childnode refid="17577" relation="include">
        </childnode>
        <childnode refid="17578" relation="include">
        </childnode>
      </node>
      <node id="17538">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_checksmall.cpp</label>
        <link refid="callback__checksmall_8cpp"/>
        <childnode refid="17539" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17583" relation="include">
        </childnode>
      </node>
      <node id="17569">
        <label>lbann.pb.h</label>
      </node>
      <node id="17545">
        <label>cstdlib</label>
      </node>
      <node id="17594">
        <label>lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="17585" relation="include">
        </childnode>
        <childnode refid="17595" relation="include">
        </childnode>
        <childnode refid="17596" relation="include">
        </childnode>
        <childnode refid="17597" relation="include">
        </childnode>
        <childnode refid="17556" relation="include">
        </childnode>
        <childnode refid="17598" relation="include">
        </childnode>
      </node>
      <node id="17563">
        <label>iostream</label>
      </node>
      <node id="17558">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="17559" relation="include">
        </childnode>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17565" relation="include">
        </childnode>
        <childnode refid="17566" relation="include">
        </childnode>
        <childnode refid="17551" relation="include">
        </childnode>
        <childnode refid="17570" relation="include">
        </childnode>
      </node>
      <node id="17582">
        <label>unordered_map</label>
      </node>
      <node id="17587">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
        <childnode refid="17568" relation="include">
        </childnode>
        <childnode refid="17588" relation="include">
        </childnode>
      </node>
      <node id="17557">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
        <childnode refid="17550" relation="include">
        </childnode>
        <childnode refid="17558" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17565" relation="include">
        </childnode>
        <childnode refid="17571" relation="include">
        </childnode>
        <childnode refid="17568" relation="include">
        </childnode>
        <childnode refid="17569" relation="include">
        </childnode>
        <childnode refid="17551" relation="include">
        </childnode>
        <childnode refid="17552" relation="include">
        </childnode>
      </node>
      <node id="17572">
        <label>chrono</label>
      </node>
      <node id="17580">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17557" relation="include">
        </childnode>
        <childnode refid="17566" relation="include">
        </childnode>
      </node>
      <node id="17562">
        <label>csignal</label>
      </node>
      <node id="17593">
        <label>lbann/utils/dataset.hpp</label>
        <link refid="dataset_8hpp"/>
        <childnode refid="17586" relation="include">
        </childnode>
      </node>
      <node id="17566">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="17551" relation="include">
        </childnode>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17565" relation="include">
        </childnode>
        <childnode refid="17567" relation="include">
        </childnode>
        <childnode refid="17568" relation="include">
        </childnode>
        <childnode refid="17569" relation="include">
        </childnode>
      </node>
      <node id="17586">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17587" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
        <childnode refid="17575" relation="include">
        </childnode>
        <childnode refid="17568" relation="include">
        </childnode>
        <childnode refid="17589" relation="include">
        </childnode>
        <childnode refid="17590" relation="include">
        </childnode>
        <childnode refid="17591" relation="include">
        </childnode>
        <childnode refid="17551" relation="include">
        </childnode>
        <childnode refid="17552" relation="include">
        </childnode>
        <childnode refid="17592" relation="include">
        </childnode>
      </node>
      <node id="17549">
        <label>lbann_config.hpp</label>
      </node>
      <node id="17574">
        <label>set</label>
      </node>
      <node id="17556">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="17541" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
        <childnode refid="17557" relation="include">
        </childnode>
        <childnode refid="17550" relation="include">
        </childnode>
        <childnode refid="17573" relation="include">
        </childnode>
        <childnode refid="17575" relation="include">
        </childnode>
        <childnode refid="17568" relation="include">
        </childnode>
        <childnode refid="17579" relation="include">
        </childnode>
        <childnode refid="17581" relation="include">
        </childnode>
        <childnode refid="17566" relation="include">
        </childnode>
        <childnode refid="17558" relation="include">
        </childnode>
        <childnode refid="17569" relation="include">
        </childnode>
        <childnode refid="17552" relation="include">
        </childnode>
        <childnode refid="17551" relation="include">
        </childnode>
        <childnode refid="17582" relation="include">
        </childnode>
      </node>
      <node id="17559">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="17591">
        <label>algorithm</label>
      </node>
      <node id="17544">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="17545" relation="include">
        </childnode>
        <childnode refid="17546" relation="include">
        </childnode>
        <childnode refid="17547" relation="include">
        </childnode>
        <childnode refid="17548" relation="include">
        </childnode>
      </node>
      <node id="17543">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="17542" relation="include">
        </childnode>
      </node>
      <node id="17584">
        <label>lbann/layers/io/target/generic_target_layer.hpp</label>
        <link refid="generic__target__layer_8hpp"/>
        <childnode refid="17585" relation="include">
        </childnode>
        <childnode refid="17594" relation="include">
        </childnode>
        <childnode refid="17596" relation="include">
        </childnode>
        <childnode refid="17597" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17556" relation="include">
        </childnode>
        <childnode refid="17551" relation="include">
        </childnode>
        <childnode refid="17577" relation="include">
        </childnode>
        <childnode refid="17576" relation="include">
        </childnode>
        <childnode refid="17592" relation="include">
        </childnode>
      </node>
      <node id="17601">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="17600" relation="include">
        </childnode>
      </node>
      <node id="17555">
        <label>typeindex</label>
      </node>
      <node id="17547">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lbann_callback_checksmall<sp/>.hpp<sp/>.cpp<sp/>-<sp/>Check<sp/>matrices<sp/>for<sp/>small<sp/>values</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callback__checksmall_8hpp" kindref="compound">lbann/callbacks/callback_checksmall.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">lbann/utils/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="target__layer_8hpp" kindref="compound">lbann/layers/io/target/target_layer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classlbann_1_1lbann__callback__checksmall_1a2f50695feb1444145bae251f2e94b721" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__checksmall_1a2f50695feb1444145bae251f2e94b721" kindref="member">lbann_callback_checksmall::on_forward_prop_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m,<sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dynamic_cast&lt;generic_target_layer*&gt;(l)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>acts<sp/>=<sp/>l-&gt;<ref refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" kindref="member">get_activations</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1lbann__callback__checksmall_1afe78f539ba3b2ad3e6ae8c468850052c" kindref="member">is_good</ref>(acts))<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1lbann__callback__checksmall_1acbdd897ecbe5a27b59db15ae7662e0f9" kindref="member">name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::to_string(m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>()-&gt;<ref refid="classlbann_1_1lbann__comm_1a4519335d6772dab3c36517618260d48a" kindref="member">get_rank_in_world</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>in<sp/>activations<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l-&gt;<ref refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" kindref="member">get_name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(step=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::to_string(m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(ss.str());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classlbann_1_1lbann__callback__checksmall_1aade56a328c4b9df28c0cd979eed9e5ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__checksmall_1aade56a328c4b9df28c0cd979eed9e5ff" kindref="member">lbann_callback_checksmall::on_backward_prop_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w<sp/>:<sp/>m-&gt;<ref refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" kindref="member">get_weights</ref>())<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref><sp/>*opt<sp/>=<sp/>w-&gt;get_optimizer();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!<ref refid="classlbann_1_1lbann__callback__checksmall_1afe78f539ba3b2ad3e6ae8c468850052c" kindref="member">is_good</ref>(opt-&gt;<ref refid="classlbann_1_1optimizer_1a12b7dbc72eb2de78d6ad798b8939f349" kindref="member">get_gradient</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1lbann__callback__checksmall_1acbdd897ecbe5a27b59db15ae7662e0f9" kindref="member">name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::to_string(m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>()-&gt;<ref refid="classlbann_1_1lbann__comm_1a4519335d6772dab3c36517618260d48a" kindref="member">get_rank_in_world</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>in<sp/>weights<sp/>gradient<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>w-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(step=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::to_string(m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(ss.str());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classlbann_1_1lbann__callback__checksmall_1a00f1e6ad712638a107667a3e6695a6f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__checksmall_1a00f1e6ad712638a107667a3e6695a6f0" kindref="member">lbann_callback_checksmall::on_batch_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w<sp/>:<sp/>m-&gt;<ref refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" kindref="member">get_weights</ref>())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1lbann__callback__checksmall_1afe78f539ba3b2ad3e6ae8c468850052c" kindref="member">is_good</ref>(w-&gt;get_values()))<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1lbann__callback__checksmall_1acbdd897ecbe5a27b59db15ae7662e0f9" kindref="member">name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::to_string(m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>()-&gt;<ref refid="classlbann_1_1lbann__comm_1a4519335d6772dab3c36517618260d48a" kindref="member">get_rank_in_world</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>in<sp/>weights<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>w-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(step=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::to_string(m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()-1)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(ss.str());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classlbann_1_1lbann__callback__checksmall_1afe78f539ba3b2ad3e6ae8c468850052c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__checksmall_1afe78f539ba3b2ad3e6ae8c468850052c" kindref="member">lbann_callback_checksmall::is_good</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>local_mat<sp/>=<sp/>m.LockedMatrix();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>height<sp/>=<sp/>local_mat.Height();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>width<sp/>=<sp/>local_mat.Width();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(El::Int<sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(El::Int<sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>height;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>val<sp/>=<sp/>std::abs(local_mat(row,<sp/>col));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>val<sp/>&lt;=<sp/><ref refid="classlbann_1_1lbann__callback__checksmall_1a2c37cd93bca10f6fb42348c2e6b0016e" kindref="member">m_threshold</ref>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Found<sp/>small<sp/>value<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>val<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;at<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>row<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>col<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_checksmall.cpp"/>
  </compounddef>
</doxygen>
