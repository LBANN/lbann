<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1model" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>lbann::model</compoundname>
    <derivedcompoundref refid="classlbann_1_1directed__acyclic__graph__model" prot="public" virt="non-virtual">lbann::directed_acyclic_graph_model</derivedcompoundref>
    <derivedcompoundref refid="classlbann_1_1sequential__model" prot="public" virt="non-virtual">lbann::sequential_model</derivedcompoundref>
    <includes refid="model_8hpp" local="no">model.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" prot="protected" static="no" mutable="no">
        <type><ref refid="classlbann_1_1objective__function" kindref="compound">objective_function</ref> *</type>
        <definition>objective_function* lbann::model::m_objective_function</definition>
        <argsstring></argsstring>
        <name>m_objective_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The objective function used to train the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="221" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="221" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1aee5530467523924a662dec891b9a7993" compoundref="model_8hpp" startline="101" endline="103">get_objective_function</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" compoundref="greedy__layerwise__autoencoder_8cpp" startline="160" endline="212">lbann::greedy_layerwise_autoencoder::set_phase</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" compoundref="greedy__layerwise__autoencoder_8cpp" startline="214" endline="244">lbann::greedy_layerwise_autoencoder::restore_sequential_model</referencedby>
        <referencedby refid="classlbann_1_1model_1a03fd1dc3edddb414b040bc009cf73371" compoundref="model_8cpp" startline="69" endline="112">model</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1ae97a8048de182af3ed8a6fbd92212958" compoundref="model_8cpp" startline="165" endline="172">~model</referencedby>
        <referencedby refid="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" compoundref="model_8cpp" startline="312" endline="362">remap_pointers</referencedby>
        <referencedby refid="classlbann_1_1model_1afd9dbca79503a40b7aa5c78da4d6f391" compoundref="model_8cpp" startline="386" endline="409">setup</referencedby>
        <referencedby refid="classlbann_1_1model_1a582edc0f930e1594381ecc7922e91b08" compoundref="model_8cpp" startline="468" endline="502">setup_weights</referencedby>
        <referencedby refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" compoundref="model_8cpp" startline="713" endline="718">reset_epoch_statistics</referencedby>
        <referencedby refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" compoundref="model_8cpp" startline="720" endline="742">evaluate_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a1eb5efcc8f73ba9478b2ce1efb9f2d8c" compoundref="model_8cpp" startline="1101" endline="1126">summarize_stats</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" prot="protected" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
        <definition>execution_mode lbann::model::m_execution_mode</definition>
        <argsstring></argsstring>
        <name>m_execution_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The model&apos;s current execution mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="224" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="224" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1a375372b5b864ffbc4eaa0963f6939f65" compoundref="model_8hpp" startline="145" endline="147">set_execution_mode</referencedby>
        <referencedby refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" compoundref="model_8hpp" startline="149" endline="151">get_execution_mode</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" compoundref="model_8cpp" startline="720" endline="742">evaluate_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a1eb5efcc8f73ba9478b2ce1efb9f2d8c" compoundref="model_8cpp" startline="1101" endline="1126">summarize_stats</referencedby>
        <referencedby refid="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" compoundref="model_8cpp" startline="1151" endline="1171">save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" compoundref="model_8cpp" startline="1173" endline="1209">load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lbann::model::m_terminate_training</definition>
        <argsstring></argsstring>
        <name>m_terminate_training</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag telling the model to terminate training. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="226" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="226" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1a90363b6a20269cf7197701e49f1f52a3" compoundref="model_8hpp" startline="191" endline="193">get_terminate_training</referencedby>
        <referencedby refid="classlbann_1_1model_1a5bafc4e84671490c6118959becb22e16" compoundref="model_8hpp" startline="195" endline="197">set_terminate_training</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" compoundref="model_8cpp" startline="1151" endline="1171">save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" compoundref="model_8cpp" startline="1173" endline="1209">load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::model::m_current_epoch</definition>
        <argsstring></argsstring>
        <name>m_current_epoch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Most recent/current epoch for the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="228" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="228" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" compoundref="model_8hpp" startline="128" endline="130">get_cur_epoch</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">lbann::greedy_layerwise_autoencoder::train</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" compoundref="model_8cpp" startline="679" endline="701">train</referencedby>
        <referencedby refid="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" compoundref="model_8cpp" startline="1151" endline="1171">save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" compoundref="model_8cpp" startline="1173" endline="1209">load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::model::m_current_step</definition>
        <argsstring></argsstring>
        <name>m_current_step</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Most recent/current training step for the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="230" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="230" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" compoundref="model_8cpp" startline="1151" endline="1171">save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" compoundref="model_8cpp" startline="1173" endline="1209">load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::model::m_current_validation_step</definition>
        <argsstring></argsstring>
        <name>m_current_validation_step</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="231" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="231" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1a680ef8ecf644dbc821b5e7488d3bd2c4" compoundref="model_8hpp" startline="137" endline="139">get_cur_validation_step</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" compoundref="model_8cpp" startline="720" endline="742">evaluate_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" compoundref="model_8cpp" startline="1151" endline="1171">save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" compoundref="model_8cpp" startline="1173" endline="1209">load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::model::m_current_testing_step</definition>
        <argsstring></argsstring>
        <name>m_current_testing_step</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="232" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="232" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1a4040b1f06a2a5d5187a72c06060124c1" compoundref="model_8hpp" startline="141" endline="143">get_cur_testing_step</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" compoundref="model_8cpp" startline="720" endline="742">evaluate_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" compoundref="model_8cpp" startline="1151" endline="1171">save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" compoundref="model_8cpp" startline="1173" endline="1209">load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::model::m_max_mini_batch_size</definition>
        <argsstring></argsstring>
        <name>m_max_mini_batch_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum possible minibatch size supported by layers in this model. Note that this is local to the particular model, not across multiple models. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="238" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="238" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1a8c311798ff4acaeafdfbf85162ba5084" compoundref="model_8hpp" startline="161" endline="163">get_max_mini_batch_size</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" compoundref="model_8cpp" startline="1151" endline="1171">save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" compoundref="model_8cpp" startline="1173" endline="1209">load_from_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1model_1a488da86420421a4890c8fd7a95849acc" compoundref="model_8cpp" startline="1211" endline="1215">write_proto</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::model::m_current_mini_batch_size</definition>
        <argsstring></argsstring>
        <name>m_current_mini_batch_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of the current mini-batch in the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="240" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="240" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1a4f3cc91f8495870723389be15f77184a" compoundref="model_8hpp" startline="153" endline="155">set_current_mini_batch_size</referencedby>
        <referencedby refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" compoundref="model_8hpp" startline="157" endline="159">get_current_mini_batch_size</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1a43b3ed176749e0aab6065f274ec2a717" compoundref="model_8cpp" startline="785" endline="789">clear_error_signals</referencedby>
        <referencedby refid="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" compoundref="model_8cpp" startline="1151" endline="1171">save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" compoundref="model_8cpp" startline="1173" endline="1209">load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1a4887fd2816e7c51b24cb8bf8e4a80a1c" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::model::m_effective_mini_batch_size</definition>
        <argsstring></argsstring>
        <name>m_effective_mini_batch_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The &quot;effective&quot; size of a minibatch. This is the size of the minibatch across all models and used for e.g. correctly averaging gradients from multiple models. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="246" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="246" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1a2a9b4cfa1c8c91e4131908751f9c4a6a" compoundref="model_8hpp" startline="165" endline="167">get_effective_mini_batch_size</referencedby>
        <referencedby refid="classlbann_1_1model_1aa64829cba8a84928a396893172a1d116" compoundref="model_8hpp" startline="169" endline="171">set_effective_mini_batch_size</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1a150ef033f81982936e007b10c421f488" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::model::m_current_phase</definition>
        <argsstring></argsstring>
        <name>m_current_phase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>current phase (multiple of epoch counts) in training a model </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="248" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="248" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1afd569027be9b7a6adb08f486331384ac" compoundref="model_8hpp" startline="175" endline="177">get_current_phase</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" compoundref="model_8cpp" startline="1151" endline="1171">save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" compoundref="model_8cpp" startline="1173" endline="1209">load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" prot="protected" static="no" mutable="no">
        <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
        <definition>lbann_comm* lbann::model::m_comm</definition>
        <argsstring></argsstring>
        <name>m_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Communicator for the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="250" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="250" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" compoundref="model_8hpp" startline="123" endline="125">get_comm</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" compoundref="greedy__layerwise__autoencoder_8cpp" startline="160" endline="212">lbann::greedy_layerwise_autoencoder::set_phase</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1a989ab581e359f65c9238d627cce5b589" compoundref="model_8cpp" startline="457" endline="466">setup_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1a6ba9a836e5ba52c999c5234cfa5e62c2" compoundref="model_8cpp" startline="541" endline="576">add_dummy_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1ac56d43e457cd4dfc3b88122bd10d286e" compoundref="model_8cpp" startline="578" endline="624">add_split_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1a488da86420421a4890c8fd7a95849acc" compoundref="model_8cpp" startline="1211" endline="1215">write_proto</referencedby>
        <referencedby refid="classlbann_1_1recurrent__model_1a712dabb1c1e90f6e268b42f6abaedd93" compoundref="recurrent_8cpp" startline="395" endline="442">lbann::recurrent_model::setup_layers</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1a53a83327a1115a53affa78c93344e641" compoundref="sequential_8cpp" startline="152" endline="163">lbann::sequential_model::write_proto</referencedby>
        <referencedby refid="classlbann_1_1siamese__model_1afefdbaf473d40e571b2b58539001c9c0" compoundref="siamese_8cpp" startline="148" endline="158">lbann::siamese_model::setup_layers</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classlbann_1_1lbann__callback" kindref="compound">lbann_callback</ref> * &gt;</type>
        <definition>std::vector&lt;lbann_callback *&gt; lbann::model::m_callbacks</definition>
        <argsstring></argsstring>
        <name>m_callbacks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current callbacks to process. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="252" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="252" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1a38c71a455870e087c4c07acb78e4477c" compoundref="model_8hpp" startline="88" endline="90">get_callbacks</referencedby>
        <referencedby refid="classlbann_1_1model_1a03fd1dc3edddb414b040bc009cf73371" compoundref="model_8cpp" startline="69" endline="112">model</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1ae97a8048de182af3ed8a6fbd92212958" compoundref="model_8cpp" startline="165" endline="172">~model</referencedby>
        <referencedby refid="classlbann_1_1model_1a8f45cdca82dbc0cc1f519898474cc6ec" compoundref="model_8cpp" startline="192" endline="197">add_callback</referencedby>
        <referencedby refid="classlbann_1_1model_1afd9dbca79503a40b7aa5c78da4d6f391" compoundref="model_8cpp" startline="386" endline="409">setup</referencedby>
        <referencedby refid="classlbann_1_1model_1a780395fa740102adda5537aa5d257698" compoundref="model_8cpp" startline="851" endline="855">do_train_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a13bb6edae42c719b78454a8af9549122" compoundref="model_8cpp" startline="857" endline="861">do_train_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1ab14bedea05bd5ef549d95ceb2b57b7a4" compoundref="model_8cpp" startline="863" endline="877">do_evaluate_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1ab123ed691fb6e9f52d468914a1f4460c" compoundref="model_8cpp" startline="879" endline="893">do_evaluate_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a6f975af3ff4921d78a9eb1aca12eaf5e" compoundref="model_8cpp" startline="895" endline="899">do_epoch_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a93e43a6c5aaf8ad890ef50ff97dfa176" compoundref="model_8cpp" startline="901" endline="905">do_epoch_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a156acfa740b92322d44b6c477636eb26" compoundref="model_8cpp" startline="907" endline="926">do_batch_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a3dc29e9751a53afda7e171aff335273e" compoundref="model_8cpp" startline="928" endline="947">do_batch_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1af3c45642bbacf1bd07e8504d7e689ec0" compoundref="model_8cpp" startline="949" endline="968">do_model_forward_prop_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a9d67f4f3a027327d2db8767759f9c2bf" compoundref="model_8cpp" startline="970" endline="989">do_model_forward_prop_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" compoundref="model_8cpp" startline="991" endline="1010">do_layer_forward_prop_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" compoundref="model_8cpp" startline="1012" endline="1031">do_layer_forward_prop_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a8a60eee343381e657b2c042637e56751" compoundref="model_8cpp" startline="1033" endline="1039">do_model_backward_prop_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a737a0129eadf52be476034888b3eedc2" compoundref="model_8cpp" startline="1041" endline="1047">do_model_backward_prop_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a51dc59ea8dd4bc689854732269aaf001" compoundref="model_8cpp" startline="1049" endline="1055">do_layer_backward_prop_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1ab0939d2668cca7efc2cc52355d34df3b" compoundref="model_8cpp" startline="1057" endline="1063">do_layer_backward_prop_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a19c96544ccf733646f3454be887f3a08" compoundref="model_8cpp" startline="1065" endline="1071">do_model_optimize_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1ac0b37e4f4881e274bd9c4889d4852fe8" compoundref="model_8cpp" startline="1073" endline="1079">do_model_optimize_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a24b668fa62ce0215d3b1773636b7eced" compoundref="model_8cpp" startline="1081" endline="1087">do_weight_optimize_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1af1e22d2b06d0ca90ae79fd5cf1d82066" compoundref="model_8cpp" startline="1089" endline="1095">do_weight_optimize_end_cbs</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1a68df9efe547f53f7bf2a03ac64527990" prot="protected" static="no" mutable="no">
        <type><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref> *</type>
        <definition>optimizer* lbann::model::m_default_optimizer</definition>
        <argsstring></argsstring>
        <name>m_default_optimizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default optimizer. If a layer needs to construct an optimizer during setup, it will make a copy of the default optimizer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="258" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="258" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1ae97a8048de182af3ed8a6fbd92212958" compoundref="model_8cpp" startline="165" endline="172">~model</referencedby>
        <referencedby refid="classlbann_1_1model_1a0d2d5a1eac592e5721a81a9b9ea4b7f2" compoundref="model_8cpp" startline="249" endline="255">create_optimizer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classlbann_1_1metric" kindref="compound">metric</ref> * &gt;</type>
        <definition>std::vector&lt;metric *&gt; lbann::model::m_metrics</definition>
        <argsstring></argsstring>
        <name>m_metrics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of model metrics. A metric can be used to evaluate the performance of the model without affecting the training process. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="264" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="264" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1a84c738fd219b8c2936e76a9360f68936" compoundref="model_8hpp" startline="106" endline="108">get_metrics</referencedby>
        <referencedby refid="classlbann_1_1model_1a03fd1dc3edddb414b040bc009cf73371" compoundref="model_8cpp" startline="69" endline="112">model</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1ae97a8048de182af3ed8a6fbd92212958" compoundref="model_8cpp" startline="165" endline="172">~model</referencedby>
        <referencedby refid="classlbann_1_1model_1a2ad536c9aeb5a1dfaa5a96107d62c4a4" compoundref="model_8cpp" startline="199" endline="204">add_metric</referencedby>
        <referencedby refid="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" compoundref="model_8cpp" startline="312" endline="362">remap_pointers</referencedby>
        <referencedby refid="classlbann_1_1model_1afd9dbca79503a40b7aa5c78da4d6f391" compoundref="model_8cpp" startline="386" endline="409">setup</referencedby>
        <referencedby refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" compoundref="model_8cpp" startline="713" endline="718">reset_epoch_statistics</referencedby>
        <referencedby refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" compoundref="model_8cpp" startline="720" endline="742">evaluate_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a1eb5efcc8f73ba9478b2ce1efb9f2d8c" compoundref="model_8cpp" startline="1101" endline="1126">summarize_stats</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> * &gt;</type>
        <definition>std::vector&lt;Layer *&gt; lbann::model::m_layers</definition>
        <argsstring></argsstring>
        <name>m_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of layers in model. The list is in execution order for forward propagation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="269" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="269" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1ae14f4b2cc8882b3739d4aeb25d9e73c9" compoundref="model_8hpp" startline="114" endline="114">get_layers</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a115607e435ae4685531a81852ce01fe7" compoundref="greedy__layerwise__autoencoder_8cpp" startline="66" endline="135">lbann::greedy_layerwise_autoencoder::setup_layer_topology</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" compoundref="greedy__layerwise__autoencoder_8cpp" startline="160" endline="212">lbann::greedy_layerwise_autoencoder::set_phase</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" compoundref="greedy__layerwise__autoencoder_8cpp" startline="214" endline="244">lbann::greedy_layerwise_autoencoder::restore_sequential_model</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" compoundref="greedy__layerwise__autoencoder_8cpp" startline="246" endline="292">lbann::greedy_layerwise_autoencoder::forward_prop</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" compoundref="greedy__layerwise__autoencoder_8cpp" startline="294" endline="332">lbann::greedy_layerwise_autoencoder::backward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1a03fd1dc3edddb414b040bc009cf73371" compoundref="model_8cpp" startline="69" endline="112">model</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1ae97a8048de182af3ed8a6fbd92212958" compoundref="model_8cpp" startline="165" endline="172">~model</referencedby>
        <referencedby refid="classlbann_1_1model_1a5dfa9895024f07d273062b67d7a0dc01" compoundref="model_8cpp" startline="178" endline="183">add_layer</referencedby>
        <referencedby refid="classlbann_1_1model_1a95fb74f678f69b763d51b2ce987c8fde" compoundref="model_8cpp" startline="206" endline="219">set_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1a2c82c9def03b1c60e48f52fca7708833" compoundref="model_8cpp" startline="257" endline="266">is_execution_mode_valid</referencedby>
        <referencedby refid="classlbann_1_1model_1aef7a4775c70f96610bfc5a4605b946a5" compoundref="model_8cpp" startline="268" endline="284">construct_layer_graph</referencedby>
        <referencedby refid="classlbann_1_1model_1a31c281b63593a0ec7110664f7309b01a" compoundref="model_8cpp" startline="286" endline="292">permute_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" compoundref="model_8cpp" startline="312" endline="362">remap_pointers</referencedby>
        <referencedby refid="classlbann_1_1model_1ad0131e36e763470a7bbf67e83b42cd14" compoundref="model_8cpp" startline="364" endline="380">freeze_layers_under_frozen_surface</referencedby>
        <referencedby refid="classlbann_1_1model_1a7b3e2a643c658dcaa7478d2568f29784" compoundref="model_8cpp" startline="411" endline="430">setup_layer_topology</referencedby>
        <referencedby refid="classlbann_1_1model_1ab0e8af146d4121c1b8b04b4a3c2a455c" compoundref="model_8cpp" startline="432" endline="455">setup_layer_execution_order</referencedby>
        <referencedby refid="classlbann_1_1model_1a989ab581e359f65c9238d627cce5b589" compoundref="model_8cpp" startline="457" endline="466">setup_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1a582edc0f930e1594381ecc7922e91b08" compoundref="model_8cpp" startline="468" endline="502">setup_weights</referencedby>
        <referencedby refid="classlbann_1_1model_1a3fb0304e6426dd28a436f50559ef2bef" compoundref="model_8cpp" startline="504" endline="539">add_connected_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1a6ba9a836e5ba52c999c5234cfa5e62c2" compoundref="model_8cpp" startline="541" endline="576">add_dummy_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1ac56d43e457cd4dfc3b88122bd10d286e" compoundref="model_8cpp" startline="578" endline="624">add_split_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1a32a189033b8ff92d233781b1039c70f1" compoundref="model_8cpp" startline="626" endline="637">get_num_iterations_per_epoch</referencedby>
        <referencedby refid="classlbann_1_1model_1aa819e0d7c8bb178155e40e33037cf054" compoundref="model_8cpp" startline="664" endline="676">collect_indices</referencedby>
        <referencedby refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" compoundref="model_8cpp" startline="705" endline="710">reset_mode_and_model</referencedby>
        <referencedby refid="classlbann_1_1model_1a43b3ed176749e0aab6065f274ec2a717" compoundref="model_8cpp" startline="785" endline="789">clear_error_signals</referencedby>
        <referencedby refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" compoundref="model_8cpp" startline="791" endline="799">forward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" compoundref="model_8cpp" startline="801" endline="824">backward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1a7518775e0fd29ed682319193e2d264cc" compoundref="model_8cpp" startline="839" endline="845">update_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1a1eb5efcc8f73ba9478b2ce1efb9f2d8c" compoundref="model_8cpp" startline="1101" endline="1126">summarize_stats</referencedby>
        <referencedby refid="classlbann_1_1model_1a0824e757e4806fad77630d69926a8911" compoundref="model_8cpp" startline="1128" endline="1132">summarize_matrices</referencedby>
        <referencedby refid="classlbann_1_1recurrent__model_1ac89ddfa607e5cb6b940eb389ebbce6f6" compoundref="recurrent_8cpp" startline="361" endline="393">lbann::recurrent_model::setup_layer_topology</referencedby>
        <referencedby refid="classlbann_1_1recurrent__model_1a712dabb1c1e90f6e268b42f6abaedd93" compoundref="recurrent_8cpp" startline="395" endline="442">lbann::recurrent_model::setup_layers</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1a3801a58530388fb6a8cb3e1c018e827d" compoundref="sequential_8cpp" startline="40" endline="65">lbann::sequential_model::setup_layer_topology</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1a51cd5ae859c66cfb36d25d968ef06203" compoundref="sequential_8cpp" startline="67" endline="86">lbann::sequential_model::save_to_checkpoint</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1aa405c653dae867e862475e13b9df1db0" compoundref="sequential_8cpp" startline="88" endline="111">lbann::sequential_model::load_from_checkpoint</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1a226032d9890b8770c6fca54bf70d69eb" compoundref="sequential_8cpp" startline="117" endline="150">lbann::sequential_model::save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1a53a83327a1115a53affa78c93344e641" compoundref="sequential_8cpp" startline="152" endline="163">lbann::sequential_model::write_proto</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1aa52cca299012c67f88483206d50abb21" compoundref="sequential_8cpp" startline="165" endline="202">lbann::sequential_model::load_from_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1siamese__model_1a3960a32fd45059516f3acb41549e1e92" compoundref="siamese_8cpp" startline="42" endline="54">lbann::siamese_model::freeze_layers_under_frozen_surface</referencedby>
        <referencedby refid="classlbann_1_1siamese__model_1a7ff41cffb060500605124959f1a2a6cf" compoundref="siamese_8cpp" startline="56" endline="146">lbann::siamese_model::setup_layer_topology</referencedby>
        <referencedby refid="classlbann_1_1siamese__model_1afefdbaf473d40e571b2b58539001c9c0" compoundref="siamese_8cpp" startline="148" endline="158">lbann::siamese_model::setup_layers</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> * &gt;</type>
        <definition>std::vector&lt;weights *&gt; lbann::model::m_weights</definition>
        <argsstring></argsstring>
        <name>m_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of weights in model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="271" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="271" bodyend="-1"/>
        <referencedby refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" compoundref="model_8hpp" startline="120" endline="120">get_weights</referencedby>
        <referencedby refid="classlbann_1_1model_1a03fd1dc3edddb414b040bc009cf73371" compoundref="model_8cpp" startline="69" endline="112">model</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1ae97a8048de182af3ed8a6fbd92212958" compoundref="model_8cpp" startline="165" endline="172">~model</referencedby>
        <referencedby refid="classlbann_1_1model_1af35fca77e75eb6dd570e4727aa3d5b6b" compoundref="model_8cpp" startline="185" endline="190">add_weights</referencedby>
        <referencedby refid="classlbann_1_1model_1aaed20219476dc1458bbd058be36de1ec" compoundref="model_8cpp" startline="221" endline="247">replace_weights</referencedby>
        <referencedby refid="classlbann_1_1model_1a582edc0f930e1594381ecc7922e91b08" compoundref="model_8cpp" startline="468" endline="502">setup_weights</referencedby>
        <referencedby refid="classlbann_1_1model_1ae4ca41f514498a37503ecc6ba1600bab" compoundref="model_8cpp" startline="778" endline="783">clear_gradients</referencedby>
        <referencedby refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" compoundref="model_8cpp" startline="801" endline="824">backward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1a38d8924938fa69857d3f9ed83ac98ee9" compoundref="model_8cpp" startline="826" endline="837">update_weights</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1a226032d9890b8770c6fca54bf70d69eb" compoundref="sequential_8cpp" startline="117" endline="150">lbann::sequential_model::save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1aa52cca299012c67f88483206d50abb21" compoundref="sequential_8cpp" startline="165" endline="202">lbann::sequential_model::load_from_checkpoint_shared</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1model_1a6feaee921c434bbfc32451ed874cc051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::model::model</definition>
        <argsstring>(lbann_comm *comm, int mini_batch_size, objective_function *obj_fn, optimizer *default_optimizer=nullptr)</argsstring>
        <name>model</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mini_batch_size</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1objective__function" kindref="compound">objective_function</ref> *</type>
          <declname>obj_fn</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref> *</type>
          <declname>default_optimizer</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="58" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="51" bodyend="67"/>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a03fd1dc3edddb414b040bc009cf73371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::model::model</definition>
        <argsstring>(const model &amp;other)</argsstring>
        <name>model</name>
        <param>
          <type>const <ref refid="classlbann_1_1model" kindref="compound">model</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="64" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="69" bodyend="112"/>
        <references refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" compoundref="model_8hpp" startline="221">m_objective_function</references>
        <references refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" compoundref="model_8hpp" startline="264">m_metrics</references>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" compoundref="model_8hpp" startline="271">m_weights</references>
        <references refid="classlbann_1_1objective__function_1a8ab03f0dc1d2c067b895f5859bacd810" compoundref="objective__function_8hpp" startline="49" endline="49">lbann::objective_function::copy</references>
        <references refid="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" compoundref="model_8cpp" startline="312" endline="362">remap_pointers</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> &amp;</type>
        <definition>model &amp; lbann::model::operator=</definition>
        <argsstring>(const model &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1model" kindref="compound">model</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy assignment operator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="66" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="114" bodyend="163"/>
        <references refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" compoundref="model_8hpp" startline="221">m_objective_function</references>
        <references refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" compoundref="model_8hpp" startline="264">m_metrics</references>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" compoundref="model_8hpp" startline="271">m_weights</references>
        <references refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" compoundref="model_8hpp" startline="224">m_execution_mode</references>
        <references refid="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" compoundref="model_8hpp" startline="226">m_terminate_training</references>
        <references refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" compoundref="model_8hpp" startline="228">m_current_epoch</references>
        <references refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" compoundref="model_8hpp" startline="230">m_current_step</references>
        <references refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" compoundref="model_8hpp" startline="231">m_current_validation_step</references>
        <references refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" compoundref="model_8hpp" startline="232">m_current_testing_step</references>
        <references refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" compoundref="model_8hpp" startline="238">m_max_mini_batch_size</references>
        <references refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" compoundref="model_8hpp" startline="240">m_current_mini_batch_size</references>
        <references refid="classlbann_1_1model_1a4887fd2816e7c51b24cb8bf8e4a80a1c" compoundref="model_8hpp" startline="246">m_effective_mini_batch_size</references>
        <references refid="classlbann_1_1model_1a150ef033f81982936e007b10c421f488" compoundref="model_8hpp" startline="248">m_current_phase</references>
        <references refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" compoundref="model_8hpp" startline="250">m_comm</references>
        <references refid="classlbann_1_1objective__function_1a8ab03f0dc1d2c067b895f5859bacd810" compoundref="objective__function_8hpp" startline="49" endline="49">lbann::objective_function::copy</references>
        <references refid="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" compoundref="model_8cpp" startline="312" endline="362">remap_pointers</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ae97a8048de182af3ed8a6fbd92212958" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>lbann::model::~model</definition>
        <argsstring>()</argsstring>
        <name>~model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="68" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="165" bodyend="172"/>
        <references refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" compoundref="model_8hpp" startline="221">m_objective_function</references>
        <references refid="classlbann_1_1model_1a68df9efe547f53f7bf2a03ac64527990" compoundref="model_8hpp" startline="258">m_default_optimizer</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" compoundref="model_8hpp" startline="271">m_weights</references>
        <references refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" compoundref="model_8hpp" startline="264">m_metrics</references>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1aacd024c11f0897b33a7e7838b9433ba2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
        <definition>virtual model* lbann::model::copy</definition>
        <argsstring>() const =0</argsstring>
        <name>copy</name>
        <reimplementedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a435fa0830662ebde904b9e70902f7e16">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1siamese__model_1a26bbedec5306e47e214124cca2cb381b">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1sequential__model_1a548d44a9c4c6bec3680d60b20ac9bd73">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1directed__acyclic__graph__model_1a6a21050a732686e9e6c9f384ff9fda51">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1recurrent__model_1ad184f898241fe026f140db689f129d47">copy</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a7e471599eded909c4ce7178689dd13b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string lbann::model::name</definition>
        <argsstring>() const =0</argsstring>
        <name>name</name>
        <reimplementedby refid="classlbann_1_1siamese__model_1ad745961977aa395e11543d263103126e">name</reimplementedby>
        <reimplementedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a975ea739b9a97e76fac46ce8191dea84">name</reimplementedby>
        <reimplementedby refid="classlbann_1_1sequential__model_1abf2b69dacb5ee3165289377e1d961cd5">name</reimplementedby>
        <reimplementedby refid="classlbann_1_1directed__acyclic__graph__model_1ad2b97ab2670e76538a754e28e19b5c94">name</reimplementedby>
        <reimplementedby refid="classlbann_1_1recurrent__model_1a01b4f6dce63bc2e0545b2bd7603b32b2">name</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the model&apos;s name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1afd9dbca79503a40b7aa5c78da4d6f391" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set up the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="76" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="386" bodyend="409"/>
        <references refid="classlbann_1_1model_1a7b3e2a643c658dcaa7478d2568f29784" compoundref="model_8cpp" startline="411" endline="430">setup_layer_topology</references>
        <references refid="classlbann_1_1model_1ab0e8af146d4121c1b8b04b4a3c2a455c" compoundref="model_8cpp" startline="432" endline="455">setup_layer_execution_order</references>
        <references refid="classlbann_1_1model_1a989ab581e359f65c9238d627cce5b589" compoundref="model_8cpp" startline="457" endline="466">setup_layers</references>
        <references refid="classlbann_1_1model_1a582edc0f930e1594381ecc7922e91b08" compoundref="model_8cpp" startline="468" endline="502">setup_weights</references>
        <references refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" compoundref="model_8hpp" startline="221">m_objective_function</references>
        <references refid="classlbann_1_1objective__function_1ac14bb274978e0a5182122fd179579878" compoundref="objective__function_8cpp" startline="63" endline="73">lbann::objective_function::setup</references>
        <references refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" compoundref="model_8hpp" startline="264">m_metrics</references>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a5dfa9895024f07d273062b67d7a0dc01" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::add_layer</definition>
        <argsstring>(Layer *layer)</argsstring>
        <name>add_layer</name>
        <param>
          <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add layer to model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="79" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="178" bodyend="183"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <referencedby refid="classlbann_1_1model_1a95fb74f678f69b763d51b2ce987c8fde" compoundref="model_8cpp" startline="206" endline="219">set_layers</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1af35fca77e75eb6dd570e4727aa3d5b6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::model::add_weights</definition>
        <argsstring>(weights *w)</argsstring>
        <name>add_weights</name>
        <param>
          <type><ref refid="classlbann_1_1weights" kindref="compound">weights</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add weights to model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="82" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="185" bodyend="190"/>
        <references refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" compoundref="model_8hpp" startline="271">m_weights</references>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a9f850c1bdf4ae3cd986411d3cb3a524c" compoundref="base__convolution_8hpp" startline="217" endline="265">lbann::base_convolution_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ac046a5ab567cc01f9a36c6b0fc4e3b55" compoundref="batch__normalization_8hpp" startline="228" endline="292">lbann::batch_normalization&lt; T_layout &gt;::setup_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a8f45cdca82dbc0cc1f519898474cc6ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::model::add_callback</definition>
        <argsstring>(lbann_callback *cb)</argsstring>
        <name>add_callback</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__callback" kindref="compound">lbann_callback</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a new callback for the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="85" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="192" bodyend="197"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a38c71a455870e087c4c07acb78e4477c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="classlbann_1_1lbann__callback" kindref="compound">lbann_callback</ref> * &gt; &amp;</type>
        <definition>virtual std::vector&lt;lbann_callback*&gt;&amp; lbann::model::get_callbacks</definition>
        <argsstring>()</argsstring>
        <name>get_callbacks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the list of callbacks for the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="88" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="88" bodyend="90"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="classlbann_1_1model_1a2ad536c9aeb5a1dfaa5a96107d62c4a4" compoundref="model_8cpp" startline="199" endline="204">add_metric</references>
        <references refid="classlbann_1_1model_1a0d2d5a1eac592e5721a81a9b9ea4b7f2" compoundref="model_8cpp" startline="249" endline="255">create_optimizer</references>
        <referencedby refid="classlbann_1_1generic__input__layer_1ad0b8ea79bc508bd227e08124359531c8" compoundref="generic__input__layer_8hpp" startline="170" endline="196">lbann::generic_input_layer::fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__ltfb_1a7548166d170eda00e4e0cba6626a1a78" compoundref="callback__ltfb_8cpp" startline="138" endline="154">lbann::lbann_callback_ltfb::setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a2ad536c9aeb5a1dfaa5a96107d62c4a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::model::add_metric</definition>
        <argsstring>(metric *m)</argsstring>
        <name>add_metric</name>
        <param>
          <type><ref refid="classlbann_1_1metric" kindref="compound">metric</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a new metric for the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="93" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="199" bodyend="204"/>
        <references refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" compoundref="model_8hpp" startline="264">m_metrics</references>
        <referencedby refid="classlbann_1_1model_1a38c71a455870e087c4c07acb78e4477c" compoundref="model_8hpp" startline="88" endline="90">get_callbacks</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a0d2d5a1eac592e5721a81a9b9ea4b7f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref> *</type>
        <definition>optimizer * lbann::model::create_optimizer</definition>
        <argsstring>() const</argsstring>
        <name>create_optimizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct an instance of the default optimizer. If there is no default optimizer, a null pointer is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="98" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="249" bodyend="255"/>
        <references refid="classlbann_1_1model_1a68df9efe547f53f7bf2a03ac64527990" compoundref="model_8hpp" startline="258">m_default_optimizer</references>
        <references refid="classlbann_1_1optimizer_1adf19a1d19d832ebfe70072cc202cdf39">lbann::optimizer::copy</references>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a9f850c1bdf4ae3cd986411d3cb3a524c" compoundref="base__convolution_8hpp" startline="217" endline="265">lbann::base_convolution_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ac046a5ab567cc01f9a36c6b0fc4e3b55" compoundref="batch__normalization_8hpp" startline="228" endline="292">lbann::batch_normalization&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1model_1a38c71a455870e087c4c07acb78e4477c" compoundref="model_8hpp" startline="88" endline="90">get_callbacks</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1aee5530467523924a662dec891b9a7993" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlbann_1_1objective__function" kindref="compound">objective_function</ref> *</type>
        <definition>objective_function* lbann::model::get_objective_function</definition>
        <argsstring>() const</argsstring>
        <name>get_objective_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the model&apos;s objective function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="101" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="101" bodyend="103"/>
        <references refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" compoundref="model_8hpp" startline="221">m_objective_function</references>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a09bf00610af66810bf8bbb65424d1e1a" compoundref="reconstruction_8hpp" startline="94" endline="100">lbann::reconstruction_layer&lt; T_layout &gt;::summarize_stats</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__reconstruction__error_1a8a6a72b8016d3ba3ad11b5e7e2f3f5df" compoundref="callback__check__reconstruction__error_8cpp" startline="38" endline="47">lbann::lbann_callback_check_reconstruction_error::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__early__stopping_1a32eb9c5e763c97ab1162cfebea7ad049" compoundref="callback__early__stopping_8cpp" startline="38" endline="61">lbann::lbann_callback_early_stopping::on_validation_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__gradient__check_1ab62102d5ab30330386514161b9ee6586" compoundref="callback__gradient__check_8cpp" startline="40" endline="180">lbann::lbann_callback_gradient_check::on_test_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__gradient__check_1a54ba40dd3b381d5c889d77edeffa37f9" compoundref="callback__gradient__check_8cpp" startline="182" endline="192">lbann::lbann_callback_gradient_check::compute_objective_function</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1a6c64fae03736b8acba5c839f59d2ac6f" compoundref="callback__learning__rate_8cpp" startline="121" endline="150">lbann::lbann_callback_adaptive_learning_rate::global_schedule</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">lbann::lbann_callback_print::report_results</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a84c738fd219b8c2936e76a9360f68936" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::vector&lt; <ref refid="classlbann_1_1metric" kindref="compound">metric</ref> * &gt; &amp;</type>
        <definition>virtual const std::vector&lt;metric *&gt;&amp; lbann::model::get_metrics</definition>
        <argsstring>() const</argsstring>
        <name>get_metrics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the model&apos;s metrics. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="106" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="106" bodyend="108"/>
        <references refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" compoundref="model_8hpp" startline="264">m_metrics</references>
        <references refid="classlbann_1_1model_1a95fb74f678f69b763d51b2ce987c8fde" compoundref="model_8cpp" startline="206" endline="219">set_layers</references>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2525bf058156612d7847d0754277e4fc" compoundref="callback__ltfb_8cpp" startline="94" endline="104">lbann::anonymous_namespace{callback_ltfb.cpp}::evaluate</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">lbann::lbann_callback_print::report_results</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a404e64dcedfcba611510379f99dcace9" compoundref="callback__summary_8cpp" startline="70" endline="82">lbann::lbann_callback_summary::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a8dced0a202df3daaece138a7b958e544" compoundref="callback__summary_8cpp" startline="84" endline="100">lbann::lbann_callback_summary::on_test_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a95fb74f678f69b763d51b2ce987c8fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::model::set_layers</definition>
        <argsstring>(std::vector&lt; Layer *&gt; &amp;layers)</argsstring>
        <name>set_layers</name>
        <param>
          <type>std::vector&lt; <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>layers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the model&apos;s layers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="111" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="206" bodyend="219"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1a5dfa9895024f07d273062b67d7a0dc01" compoundref="model_8cpp" startline="178" endline="183">add_layer</references>
        <referencedby refid="classlbann_1_1model_1a84c738fd219b8c2936e76a9360f68936" compoundref="model_8hpp" startline="106" endline="108">get_metrics</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ae14f4b2cc8882b3739d4aeb25d9e73c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::vector&lt; <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> * &gt; &amp;</type>
        <definition>virtual const std::vector&lt;Layer *&gt;&amp; lbann::model::get_layers</definition>
        <argsstring>() const</argsstring>
        <name>get_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the model&apos;s layers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="114" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="114" bodyend="114"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1aaed20219476dc1458bbd058be36de1ec" compoundref="model_8cpp" startline="221" endline="247">replace_weights</references>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a8cbc105d8bd9d3b493ef34de7c387929" compoundref="callback__check__dataset_8cpp" startline="77" endline="143">lbann::lbann_callback_check_dataset::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a335713a3df9194f657f98cccd2f695f5" compoundref="callback__checknan_8cpp" startline="99" endline="132">lbann::lbann_callback_checknan::dump_network</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a528f4aea5f657f40b27c58a164d4095a" compoundref="callback__debug__io_8cpp" startline="87" endline="143">lbann::lbann_callback_debug_io::print_phase_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__activations_1a5c93f4455b743e3f61600bf092a6d93c" compoundref="callback__dump__activations_8cpp" startline="57" endline="75">lbann::lbann_callback_dump_activations::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__gradient__check_1ab62102d5ab30330386514161b9ee6586" compoundref="callback__gradient__check_8cpp" startline="40" endline="180">lbann::lbann_callback_gradient_check::on_test_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__gradient__check_1a54ba40dd3b381d5c889d77edeffa37f9" compoundref="callback__gradient__check_8cpp" startline="182" endline="192">lbann::lbann_callback_gradient_check::compute_objective_function</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__io_1a118c5cb8a9c83661a67569df890676e2" compoundref="callback__io_8cpp" startline="42" endline="63">lbann::lbann_callback_io::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__io_1a8abca84e4b0dc21b28e5d5e409446fdc" compoundref="callback__io_8cpp" startline="65" endline="86">lbann::lbann_callback_io::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1ae3c99d7c56ac33ab7e09880134b43cad" compoundref="callback__print_8cpp" startline="46" endline="116">lbann::lbann_callback_print::on_epoch_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__save__images_1aa540916eef9b95db68889a8a7426779c" compoundref="callback__save__images_8cpp" startline="36" endline="46">lbann::lbann_callback_save_images::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__save__images_1a4591438de0b52467988e2bd34b55c0dd" compoundref="callback__save__images_8cpp" startline="49" endline="57">lbann::lbann_callback_save_images::on_phase_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__save__images_1a44d0f0113133d6fd8944d8b7702ea786" compoundref="callback__save__images_8cpp" startline="59" endline="65">lbann::lbann_callback_save_images::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a8dced0a202df3daaece138a7b958e544" compoundref="callback__summary_8cpp" startline="84" endline="100">lbann::lbann_callback_summary::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a72a46c51527a02516584ce1e49e5cd29" compoundref="callback__summary_8cpp" startline="102" endline="123">lbann::lbann_callback_summary::save_histograms</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timeline_1a35a431c2545b4087d6f970d45f86c054" compoundref="callback__timeline_8cpp" startline="35" endline="47">lbann::lbann_callback_timeline::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__variable__minibatch_1a4f5d8ab04ab3e1cc3aa66327d3712f51" compoundref="callback__variable__minibatch_8cpp" startline="40" endline="64">lbann::lbann_callback_variable_minibatch::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__variable__minibatch_1a091e7563b5a7a90638e2521fe39cbf8f" compoundref="callback__variable__minibatch_8cpp" startline="66" endline="125">lbann::lbann_callback_variable_minibatch::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1metric_1a898d23e410297378db2fe9f8d1754fe0" compoundref="metric_8cpp" startline="83" endline="103">lbann::metric::setup</referencedby>
        <referencedby refid="classlbann_1_1kl__divergence_1acaa96d2e2fcf164c2e7b5cd5a0bf222e" compoundref="kl__divergence_8cpp" startline="42" endline="57">lbann::kl_divergence::setup</referencedby>
        <referencedby refid="classlbann_1_1loss__function_1a17a3629e8519c4215ad776a0c7b522ae" compoundref="loss__function_8cpp" startline="68" endline="112">lbann::loss_function::setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1aaed20219476dc1458bbd058be36de1ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::model::replace_weights</definition>
        <argsstring>(std::vector&lt; weights *&gt; &amp;w)</argsstring>
        <name>replace_weights</name>
        <param>
          <type>std::vector&lt; <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> *&gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replace the model&apos;s weights. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="117" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="221" bodyend="247"/>
        <references refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" compoundref="model_8hpp" startline="271">m_weights</references>
        <references refid="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" compoundref="model_8cpp" startline="312" endline="362">remap_pointers</references>
        <referencedby refid="classlbann_1_1model_1ae14f4b2cc8882b3739d4aeb25d9e73c9" compoundref="model_8hpp" startline="114" endline="114">get_layers</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> * &gt; &amp;</type>
        <definition>const std::vector&lt;weights *&gt;&amp; lbann::model::get_weights</definition>
        <argsstring>() const</argsstring>
        <name>get_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the model&apos;s weights. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="120" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="120" bodyend="120"/>
        <references refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" compoundref="model_8hpp" startline="271">m_weights</references>
        <referencedby refid="classlbann_1_1lbann__callback__check__init_1a037f1371c56c1b528f487517a58ce3fb" compoundref="callback__check__init_8cpp" startline="34" endline="72">lbann::lbann_callback_check_init::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a40d9a9fcc5849746570b99321e1c5488" compoundref="callback__checknan_8cpp" startline="51" endline="64">lbann::lbann_callback_checknan::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a1d1b3b082aa49016e7b80e0f267575da" compoundref="callback__checknan_8cpp" startline="66" endline="78">lbann::lbann_callback_checknan::on_batch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a335713a3df9194f657f98cccd2f695f5" compoundref="callback__checknan_8cpp" startline="99" endline="132">lbann::lbann_callback_checknan::dump_network</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checksmall_1aade56a328c4b9df28c0cd979eed9e5ff" compoundref="callback__checksmall_8cpp" startline="50" endline="62">lbann::lbann_callback_checksmall::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checksmall_1a00f1e6ad712638a107667a3e6695a6f0" compoundref="callback__checksmall_8cpp" startline="64" endline="75">lbann::lbann_callback_checksmall::on_batch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__gradients_1a2485599f66842eda62c8bc8d4d44ef02" compoundref="callback__dump__gradients_8cpp" startline="34" endline="48">lbann::lbann_callback_dump_gradients::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__weights_1a5902fb87255b410a5d777ea385813416" compoundref="callback__dump__weights_8cpp" startline="42" endline="56">lbann::lbann_callback_dump_weights::dump_weights</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__gradient__check_1ab62102d5ab30330386514161b9ee6586" compoundref="callback__gradient__check_8cpp" startline="40" endline="180">lbann::lbann_callback_gradient_check::on_test_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a096555a87ce1bb011ceafb44081c4192" compoundref="callback__imcomm_8cpp" startline="73" endline="109">lbann::lbann_callback_imcomm::setup</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a332ba4ceca91939c79fae2735fdc8ff3" compoundref="callback__imcomm_8cpp" startline="111" endline="122">lbann::lbann_callback_imcomm::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a3160dbf536def4f930e0ea0aabdebc11" compoundref="callback__imcomm_8cpp" startline="124" endline="154">lbann::lbann_callback_imcomm::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a0a425ba562f7637b25cd6ba094e7885b" compoundref="callback__imcomm_8cpp" startline="156" endline="205">lbann::lbann_callback_imcomm::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__learning__rate_1a501f31a6b8fde1282a60e4b347e8d9d3" compoundref="callback__learning__rate_8cpp" startline="43" endline="64">lbann::lbann_callback_learning_rate::setup</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__ltfb_1a7548166d170eda00e4e0cba6626a1a78" compoundref="callback__ltfb_8cpp" startline="138" endline="154">lbann::lbann_callback_ltfb::setup</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__ltfb_1a7d2d1682c4a6a6b7e8ea1e3f4bf33c84" compoundref="callback__ltfb_8cpp" startline="156" endline="202">lbann::lbann_callback_ltfb::on_batch_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a72a46c51527a02516584ce1e49e5cd29" compoundref="callback__summary_8cpp" startline="102" endline="123">lbann::lbann_callback_summary::save_histograms</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timeline_1a35a431c2545b4087d6f970d45f86c054" compoundref="callback__timeline_8cpp" startline="35" endline="47">lbann::lbann_callback_timeline::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__variable__minibatch_1af078f30f9c206b89bdd542ce1fc6d2ad" compoundref="callback__variable__minibatch_8cpp" startline="127" endline="135">lbann::lbann_callback_variable_minibatch::change_learning_rate</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__variable__minibatch_1a9de892c44231eadbbc7d27cfcc340ce2" compoundref="callback__variable__minibatch_8cpp" startline="137" endline="146">lbann::lbann_callback_variable_minibatch::get_current_learning_rate</referencedby>
        <referencedby refid="classlbann_1_1siamese__model_1afefdbaf473d40e571b2b58539001c9c0" compoundref="siamese_8cpp" startline="148" endline="158">lbann::siamese_model::setup_layers</referencedby>
        <referencedby refid="classlbann_1_1group__lasso__weight__regularization_1af413161b1feefa3bb472079635547c57" compoundref="group__lasso_8cpp" startline="32" endline="52">lbann::group_lasso_weight_regularization::setup</referencedby>
        <referencedby refid="classlbann_1_1l1__weight__regularization_1afcd238514ad132d66609efbb30de25ec" compoundref="l1_8cpp" startline="32" endline="52">lbann::l1_weight_regularization::setup</referencedby>
        <referencedby refid="classlbann_1_1l2__weight__regularization_1a0320afab573fbe77b5ba6d22ea5e0898" compoundref="l2_8cpp" startline="67" endline="98">lbann::l2_weight_regularization::setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
        <definition>lbann_comm* lbann::model::get_comm</definition>
        <argsstring>() const</argsstring>
        <name>get_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the model&apos;s comm. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="123" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="123" bodyend="125"/>
        <references refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" compoundref="model_8hpp" startline="250">m_comm</references>
        <referencedby refid="classlbann_1_1lbann__callback__hang_1ada39fd10375143a26c99e0a32d4368ce" compoundref="callback__hang_8hpp" startline="53" endline="60">lbann::lbann_callback_hang::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a8cbc105d8bd9d3b493ef34de7c387929" compoundref="callback__check__dataset_8cpp" startline="77" endline="143">lbann::lbann_callback_check_dataset::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a9bcb1368152c621c4484136ec8eecff8" compoundref="callback__check__dataset_8cpp" startline="145" endline="155">lbann::lbann_callback_check_dataset::on_validation_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1afe1fda5a6bfe632dc680230cc56dff3e" compoundref="callback__check__dataset_8cpp" startline="157" endline="160">lbann::lbann_callback_check_dataset::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__init_1a037f1371c56c1b528f487517a58ce3fb" compoundref="callback__check__init_8cpp" startline="34" endline="72">lbann::lbann_callback_check_init::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__reconstruction__error_1a8a6a72b8016d3ba3ad11b5e7e2f3f5df" compoundref="callback__check__reconstruction__error_8cpp" startline="38" endline="47">lbann::lbann_callback_check_reconstruction_error::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a09388ae76566a6a93c957ab76cd54dcd" compoundref="callback__checknan_8cpp" startline="35" endline="49">lbann::lbann_callback_checknan::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a40d9a9fcc5849746570b99321e1c5488" compoundref="callback__checknan_8cpp" startline="51" endline="64">lbann::lbann_callback_checknan::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a1d1b3b082aa49016e7b80e0f267575da" compoundref="callback__checknan_8cpp" startline="66" endline="78">lbann::lbann_callback_checknan::on_batch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a335713a3df9194f657f98cccd2f695f5" compoundref="callback__checknan_8cpp" startline="99" endline="132">lbann::lbann_callback_checknan::dump_network</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checkpoint_1a2e5f396667ccc45f7203263b06c5e216" compoundref="callback__checkpoint_8cpp" startline="64" endline="106">lbann::lbann_callback_checkpoint::need_checkpoint</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checkpoint_1a23b6f5abb924b2c4d0694e98c7d6f4d5" compoundref="callback__checkpoint_8cpp" startline="145" endline="202">lbann::lbann_callback_checkpoint::checkpointShared</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checkpoint_1a40d369278bc5963ba2f3cca1750ba004" compoundref="callback__checkpoint_8cpp" startline="203" endline="256">lbann::lbann_callback_checkpoint::restartShared</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checksmall_1a2f50695feb1444145bae251f2e94b721" compoundref="callback__checksmall_8cpp" startline="35" endline="48">lbann::lbann_callback_checksmall::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checksmall_1aade56a328c4b9df28c0cd979eed9e5ff" compoundref="callback__checksmall_8cpp" startline="50" endline="62">lbann::lbann_callback_checksmall::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checksmall_1a00f1e6ad712638a107667a3e6695a6f0" compoundref="callback__checksmall_8cpp" startline="64" endline="75">lbann::lbann_callback_checksmall::on_batch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac3e88ef582a7e3949b6e016ca2b17459" compoundref="callback__debug_8cpp" startline="37" endline="41">lbann::lbann_callback_debug::on_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1acb3d05be6c600f4d61957ccf10606ddc" compoundref="callback__debug_8cpp" startline="43" endline="47">lbann::lbann_callback_debug::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1adaf60c995d2638a40d9c87a923c53865" compoundref="callback__debug_8cpp" startline="49" endline="53">lbann::lbann_callback_debug::on_backward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19a8ec63f55fc86024c9ab8fe0836500" compoundref="callback__debug_8cpp" startline="55" endline="59">lbann::lbann_callback_debug::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac364fb6e77dc163e146af77bb670d74b" compoundref="callback__debug_8cpp" startline="64" endline="79">lbann::lbann_callback_debug::on_batch_evaluate_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a07a02eb525ebe9c06b361c48fc2977c8" compoundref="callback__debug_8cpp" startline="81" endline="96">lbann::lbann_callback_debug::on_batch_evaluate_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a83fe16882119a54afe59ba616fe1722a" compoundref="callback__debug_8cpp" startline="98" endline="113">lbann::lbann_callback_debug::on_evaluate_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19639823e288e7599947c0abfaa6d1f4" compoundref="callback__debug_8cpp" startline="115" endline="130">lbann::lbann_callback_debug::on_evaluate_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1aa31ee265d40edff982ebf38054394927" compoundref="callback__debug__io_8cpp" startline="38" endline="52">lbann::lbann_callback_debug_io::on_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a3c9897a583441381f82a11246aea4424" compoundref="callback__debug__io_8cpp" startline="54" endline="84">lbann::lbann_callback_debug_io::print_fp_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a528f4aea5f657f40b27c58a164d4095a" compoundref="callback__debug__io_8cpp" startline="87" endline="143">lbann::lbann_callback_debug_io::print_phase_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1ac9b36fc36ab6faa9de44db026addf02a" compoundref="callback__debug__io_8cpp" startline="154" endline="165">lbann::lbann_callback_debug_io::on_evaluate_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__activations_1acf4429a44ead6ffea303528618bc6572" compoundref="callback__dump__activations_8cpp" startline="35" endline="55">lbann::lbann_callback_dump_activations::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__activations_1a5c93f4455b743e3f61600bf092a6d93c" compoundref="callback__dump__activations_8cpp" startline="57" endline="75">lbann::lbann_callback_dump_activations::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__gradients_1a2485599f66842eda62c8bc8d4d44ef02" compoundref="callback__dump__gradients_8cpp" startline="34" endline="48">lbann::lbann_callback_dump_gradients::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__minibatch__sample__indices_1a34d4564309168b3ab0b2e3092e2f9355" compoundref="callback__dump__minibatch__sample__indices_8cpp" startline="37" endline="58">lbann::lbann_callback_dump_minibatch_sample_indices::dump_to_file</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__weights_1a5902fb87255b410a5d777ea385813416" compoundref="callback__dump__weights_8cpp" startline="42" endline="56">lbann::lbann_callback_dump_weights::dump_weights</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__early__stopping_1a32eb9c5e763c97ab1162cfebea7ad049" compoundref="callback__early__stopping_8cpp" startline="38" endline="61">lbann::lbann_callback_early_stopping::on_validation_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__gradient__check_1ab62102d5ab30330386514161b9ee6586" compoundref="callback__gradient__check_8cpp" startline="40" endline="180">lbann::lbann_callback_gradient_check::on_test_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a332ba4ceca91939c79fae2735fdc8ff3" compoundref="callback__imcomm_8cpp" startline="111" endline="122">lbann::lbann_callback_imcomm::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a3160dbf536def4f930e0ea0aabdebc11" compoundref="callback__imcomm_8cpp" startline="124" endline="154">lbann::lbann_callback_imcomm::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a0a425ba562f7637b25cd6ba094e7885b" compoundref="callback__imcomm_8cpp" startline="156" endline="205">lbann::lbann_callback_imcomm::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__io_1a118c5cb8a9c83661a67569df890676e2" compoundref="callback__io_8cpp" startline="42" endline="63">lbann::lbann_callback_io::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__io_1a8abca84e4b0dc21b28e5d5e409446fdc" compoundref="callback__io_8cpp" startline="65" endline="86">lbann::lbann_callback_io::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__learning__rate_1ab8eb509bdbea501882d6b248a814bb28" compoundref="callback__learning__rate_8cpp" startline="66" endline="83">lbann::lbann_callback_learning_rate::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__ltfb_1a7548166d170eda00e4e0cba6626a1a78" compoundref="callback__ltfb_8cpp" startline="138" endline="154">lbann::lbann_callback_ltfb::setup</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a405e20e9fa137bd377faf692cc3c54aa" compoundref="callback__print_8cpp" startline="36" endline="44">lbann::lbann_callback_print::setup</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1ae3c99d7c56ac33ab7e09880134b43cad" compoundref="callback__print_8cpp" startline="46" endline="116">lbann::lbann_callback_print::on_epoch_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">lbann::lbann_callback_print::report_results</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__save__images_1ab84c4d511a4614ca90644d12dc77edee" compoundref="callback__save__images_8cpp" startline="67" endline="99">lbann::lbann_callback_save_images::save_image</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__save__model_1ae047ee35b65e9bda4080a83833612699" compoundref="callback__save__model_8cpp" startline="41" endline="49">lbann::lbann_callback_save_model::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a89b18186fdaa7b6a7a0e9ab8ee334d88" compoundref="callback__summary_8cpp" startline="47" endline="68">lbann::lbann_callback_summary::on_batch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a8dced0a202df3daaece138a7b958e544" compoundref="callback__summary_8cpp" startline="84" endline="100">lbann::lbann_callback_summary::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timeline_1a35a431c2545b4087d6f970d45f86c054" compoundref="callback__timeline_8cpp" startline="35" endline="47">lbann::lbann_callback_timeline::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timeline_1a7af247d7f016db358da0a57f8a4b76c6" compoundref="callback__timeline_8cpp" startline="49" endline="72">lbann::lbann_callback_timeline::on_train_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timer_1a955e59858c6803e96b21fe494cdf3971" compoundref="callback__timer_8cpp" startline="52" endline="166">lbann::lbann_callback_timer::timing_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__variable__minibatch_1a4f5d8ab04ab3e1cc3aa66327d3712f51" compoundref="callback__variable__minibatch_8cpp" startline="40" endline="64">lbann::lbann_callback_variable_minibatch::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__variable__minibatch_1a091e7563b5a7a90638e2521fe39cbf8f" compoundref="callback__variable__minibatch_8cpp" startline="66" endline="125">lbann::lbann_callback_variable_minibatch::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1objective__function__term_1a6c8dbdf18aac8676098189fb7b178e91" compoundref="objective__function__term_8cpp" startline="39" endline="41">lbann::objective_function_term::setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::model::get_cur_epoch</definition>
        <argsstring>() const</argsstring>
        <name>get_cur_epoch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current epoch for the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="128" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="128" bodyend="130"/>
        <references refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" compoundref="model_8hpp" startline="228">m_current_epoch</references>
        <referencedby refid="classlbann_1_1lbann__callback__check__init_1a037f1371c56c1b528f487517a58ce3fb" compoundref="callback__check__init_8cpp" startline="34" endline="72">lbann::lbann_callback_check_init::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a335713a3df9194f657f98cccd2f695f5" compoundref="callback__checknan_8cpp" startline="99" endline="132">lbann::lbann_callback_checknan::dump_network</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checkpoint_1a2e5f396667ccc45f7203263b06c5e216" compoundref="callback__checkpoint_8cpp" startline="64" endline="106">lbann::lbann_callback_checkpoint::need_checkpoint</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checkpoint_1a23b6f5abb924b2c4d0694e98c7d6f4d5" compoundref="callback__checkpoint_8cpp" startline="145" endline="202">lbann::lbann_callback_checkpoint::checkpointShared</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac3e88ef582a7e3949b6e016ca2b17459" compoundref="callback__debug_8cpp" startline="37" endline="41">lbann::lbann_callback_debug::on_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1acb3d05be6c600f4d61957ccf10606ddc" compoundref="callback__debug_8cpp" startline="43" endline="47">lbann::lbann_callback_debug::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1adaf60c995d2638a40d9c87a923c53865" compoundref="callback__debug_8cpp" startline="49" endline="53">lbann::lbann_callback_debug::on_backward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19a8ec63f55fc86024c9ab8fe0836500" compoundref="callback__debug_8cpp" startline="55" endline="59">lbann::lbann_callback_debug::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a3c9897a583441381f82a11246aea4424" compoundref="callback__debug__io_8cpp" startline="54" endline="84">lbann::lbann_callback_debug_io::print_fp_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__activations_1acf4429a44ead6ffea303528618bc6572" compoundref="callback__dump__activations_8cpp" startline="35" endline="55">lbann::lbann_callback_dump_activations::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__gradients_1a2485599f66842eda62c8bc8d4d44ef02" compoundref="callback__dump__gradients_8cpp" startline="34" endline="48">lbann::lbann_callback_dump_gradients::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__minibatch__sample__indices_1a34d4564309168b3ab0b2e3092e2f9355" compoundref="callback__dump__minibatch__sample__indices_8cpp" startline="37" endline="58">lbann::lbann_callback_dump_minibatch_sample_indices::dump_to_file</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__weights_1a5902fb87255b410a5d777ea385813416" compoundref="callback__dump__weights_8cpp" startline="42" endline="56">lbann::lbann_callback_dump_weights::dump_weights</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__io_1a118c5cb8a9c83661a67569df890676e2" compoundref="callback__io_8cpp" startline="42" endline="63">lbann::lbann_callback_io::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__io_1a8abca84e4b0dc21b28e5d5e409446fdc" compoundref="callback__io_8cpp" startline="65" endline="86">lbann::lbann_callback_io::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__learning__rate_1ab8eb509bdbea501882d6b248a814bb28" compoundref="callback__learning__rate_8cpp" startline="66" endline="83">lbann::lbann_callback_learning_rate::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__step__learning__rate_1a440671682e8c041a7208af77231059ec" compoundref="callback__learning__rate_8cpp" startline="104" endline="110">lbann::lbann_callback_step_learning_rate::global_schedule</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1a6c64fae03736b8acba5c839f59d2ac6f" compoundref="callback__learning__rate_8cpp" startline="121" endline="150">lbann::lbann_callback_adaptive_learning_rate::global_schedule</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate_1a2ee62bfde00d7f1a4e55e4a334160fbe" compoundref="callback__learning__rate_8cpp" startline="164" endline="177">lbann::lbann_callback_drop_fixed_learning_rate::global_schedule</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ad292e2e7f4078162ed93b6e05d94e0e4" compoundref="callback__learning__rate_8cpp" startline="205" endline="214">lbann::lbann_callback_linear_growth_learning_rate::global_schedule</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1ae3c99d7c56ac33ab7e09880134b43cad" compoundref="callback__print_8cpp" startline="46" endline="116">lbann::lbann_callback_print::on_epoch_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">lbann::lbann_callback_print::report_results</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__save__images_1aa540916eef9b95db68889a8a7426779c" compoundref="callback__save__images_8cpp" startline="36" endline="46">lbann::lbann_callback_save_images::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timer_1a955e59858c6803e96b21fe494cdf3971" compoundref="callback__timer_8cpp" startline="52" endline="166">lbann::lbann_callback_timer::timing_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__variable__minibatch_1a4f5d8ab04ab3e1cc3aa66327d3712f51" compoundref="callback__variable__minibatch_8cpp" startline="40" endline="64">lbann::lbann_callback_variable_minibatch::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__variable__minibatch_1a091e7563b5a7a90638e2521fe39cbf8f" compoundref="callback__variable__minibatch_8cpp" startline="66" endline="125">lbann::lbann_callback_variable_minibatch::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__step__minibatch_1a9ed85aa78f6e4fe4cf3427f9257a4610" compoundref="callback__variable__minibatch_8cpp" startline="153" endline="163">lbann::lbann_callback_step_minibatch::schedule</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__minibatch__schedule_1af95cbe83a587590219174cb17828ea4b" compoundref="callback__variable__minibatch_8cpp" startline="174" endline="184">lbann::lbann_callback_minibatch_schedule::schedule</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::model::get_cur_step</definition>
        <argsstring>() const</argsstring>
        <name>get_cur_step</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current step for the model. </para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000026"><xreftitle>Todo</xreftitle><xrefdescription><para>This should be renamed to get_cur_training step and replaced with one that returns the current based on execution mode </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="132" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="132" bodyend="134"/>
        <references refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" compoundref="model_8hpp" startline="230">m_current_step</references>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1acedc222fc108c156d089f1baa8c040af" compoundref="callback__check__dataset_8cpp" startline="60" endline="62">lbann::lbann_callback_check_dataset::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a09388ae76566a6a93c957ab76cd54dcd" compoundref="callback__checknan_8cpp" startline="35" endline="49">lbann::lbann_callback_checknan::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a40d9a9fcc5849746570b99321e1c5488" compoundref="callback__checknan_8cpp" startline="51" endline="64">lbann::lbann_callback_checknan::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a1d1b3b082aa49016e7b80e0f267575da" compoundref="callback__checknan_8cpp" startline="66" endline="78">lbann::lbann_callback_checknan::on_batch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a335713a3df9194f657f98cccd2f695f5" compoundref="callback__checknan_8cpp" startline="99" endline="132">lbann::lbann_callback_checknan::dump_network</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checkpoint_1a2e5f396667ccc45f7203263b06c5e216" compoundref="callback__checkpoint_8cpp" startline="64" endline="106">lbann::lbann_callback_checkpoint::need_checkpoint</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checkpoint_1a23b6f5abb924b2c4d0694e98c7d6f4d5" compoundref="callback__checkpoint_8cpp" startline="145" endline="202">lbann::lbann_callback_checkpoint::checkpointShared</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checksmall_1a2f50695feb1444145bae251f2e94b721" compoundref="callback__checksmall_8cpp" startline="35" endline="48">lbann::lbann_callback_checksmall::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checksmall_1aade56a328c4b9df28c0cd979eed9e5ff" compoundref="callback__checksmall_8cpp" startline="50" endline="62">lbann::lbann_callback_checksmall::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checksmall_1a00f1e6ad712638a107667a3e6695a6f0" compoundref="callback__checksmall_8cpp" startline="64" endline="75">lbann::lbann_callback_checksmall::on_batch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac3e88ef582a7e3949b6e016ca2b17459" compoundref="callback__debug_8cpp" startline="37" endline="41">lbann::lbann_callback_debug::on_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1acb3d05be6c600f4d61957ccf10606ddc" compoundref="callback__debug_8cpp" startline="43" endline="47">lbann::lbann_callback_debug::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1adaf60c995d2638a40d9c87a923c53865" compoundref="callback__debug_8cpp" startline="49" endline="53">lbann::lbann_callback_debug::on_backward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19a8ec63f55fc86024c9ab8fe0836500" compoundref="callback__debug_8cpp" startline="55" endline="59">lbann::lbann_callback_debug::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a3c9897a583441381f82a11246aea4424" compoundref="callback__debug__io_8cpp" startline="54" endline="84">lbann::lbann_callback_debug_io::print_fp_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a528f4aea5f657f40b27c58a164d4095a" compoundref="callback__debug__io_8cpp" startline="87" endline="143">lbann::lbann_callback_debug_io::print_phase_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__activations_1acf4429a44ead6ffea303528618bc6572" compoundref="callback__dump__activations_8cpp" startline="35" endline="55">lbann::lbann_callback_dump_activations::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__gradients_1a2485599f66842eda62c8bc8d4d44ef02" compoundref="callback__dump__gradients_8cpp" startline="34" endline="48">lbann::lbann_callback_dump_gradients::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__minibatch__sample__indices_1a34d4564309168b3ab0b2e3092e2f9355" compoundref="callback__dump__minibatch__sample__indices_8cpp" startline="37" endline="58">lbann::lbann_callback_dump_minibatch_sample_indices::dump_to_file</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__minibatch__sample__indices_1ac1a1359c0016eb0bcbdb767fc57e9154" compoundref="callback__dump__minibatch__sample__indices_8cpp" startline="60" endline="62">lbann::lbann_callback_dump_minibatch_sample_indices::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" compoundref="callback__imcomm_8cpp" startline="207" endline="264">lbann::lbann_callback_imcomm::do_summary</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__poly__learning__rate_1a55414af733e519be126572ec92492bf7" compoundref="callback__learning__rate_8cpp" startline="257" endline="264">lbann::lbann_callback_poly_learning_rate::optimizer_schedule</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__ltfb_1a7d2d1682c4a6a6b7e8ea1e3f4bf33c84" compoundref="callback__ltfb_8cpp" startline="156" endline="202">lbann::lbann_callback_ltfb::on_batch_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a89b18186fdaa7b6a7a0e9ab8ee334d88" compoundref="callback__summary_8cpp" startline="47" endline="68">lbann::lbann_callback_summary::on_batch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a404e64dcedfcba611510379f99dcace9" compoundref="callback__summary_8cpp" startline="70" endline="82">lbann::lbann_callback_summary::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a8dced0a202df3daaece138a7b958e544" compoundref="callback__summary_8cpp" startline="84" endline="100">lbann::lbann_callback_summary::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a72a46c51527a02516584ce1e49e5cd29" compoundref="callback__summary_8cpp" startline="102" endline="123">lbann::lbann_callback_summary::save_histograms</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timer_1afbf58bd4e1b4c1bcae2e50f78c9507f0" compoundref="callback__timer_8cpp" startline="39" endline="45">lbann::lbann_callback_timer::batch_timing_end</referencedby>
        <referencedby refid="classlbann_1_1model_1a156acfa740b92322d44b6c477636eb26" compoundref="model_8cpp" startline="907" endline="926">do_batch_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a3dc29e9751a53afda7e171aff335273e" compoundref="model_8cpp" startline="928" endline="947">do_batch_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1af3c45642bbacf1bd07e8504d7e689ec0" compoundref="model_8cpp" startline="949" endline="968">do_model_forward_prop_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a9d67f4f3a027327d2db8767759f9c2bf" compoundref="model_8cpp" startline="970" endline="989">do_model_forward_prop_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" compoundref="model_8cpp" startline="991" endline="1010">do_layer_forward_prop_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" compoundref="model_8cpp" startline="1012" endline="1031">do_layer_forward_prop_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a8a60eee343381e657b2c042637e56751" compoundref="model_8cpp" startline="1033" endline="1039">do_model_backward_prop_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a737a0129eadf52be476034888b3eedc2" compoundref="model_8cpp" startline="1041" endline="1047">do_model_backward_prop_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a51dc59ea8dd4bc689854732269aaf001" compoundref="model_8cpp" startline="1049" endline="1055">do_layer_backward_prop_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1ab0939d2668cca7efc2cc52355d34df3b" compoundref="model_8cpp" startline="1057" endline="1063">do_layer_backward_prop_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a19c96544ccf733646f3454be887f3a08" compoundref="model_8cpp" startline="1065" endline="1071">do_model_optimize_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1ac0b37e4f4881e274bd9c4889d4852fe8" compoundref="model_8cpp" startline="1073" endline="1079">do_model_optimize_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a24b668fa62ce0215d3b1773636b7eced" compoundref="model_8cpp" startline="1081" endline="1087">do_weight_optimize_begin_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1af1e22d2b06d0ca90ae79fd5cf1d82066" compoundref="model_8cpp" startline="1089" endline="1095">do_weight_optimize_end_cbs</referencedby>
        <referencedby refid="classlbann_1_1model_1a1eb5efcc8f73ba9478b2ce1efb9f2d8c" compoundref="model_8cpp" startline="1101" endline="1126">summarize_stats</referencedby>
        <referencedby refid="classlbann_1_1model_1a0824e757e4806fad77630d69926a8911" compoundref="model_8cpp" startline="1128" endline="1132">summarize_matrices</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a680ef8ecf644dbc821b5e7488d3bd2c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::model::get_cur_validation_step</definition>
        <argsstring>() const</argsstring>
        <name>get_cur_validation_step</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current validation step for the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="137" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="137" bodyend="139"/>
        <references refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" compoundref="model_8hpp" startline="231">m_current_validation_step</references>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a1223f07081d495d971cdf205f892c50d" compoundref="callback__check__dataset_8cpp" startline="64" endline="75">lbann::lbann_callback_check_dataset::on_evaluate_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac364fb6e77dc163e146af77bb670d74b" compoundref="callback__debug_8cpp" startline="64" endline="79">lbann::lbann_callback_debug::on_batch_evaluate_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a07a02eb525ebe9c06b361c48fc2977c8" compoundref="callback__debug_8cpp" startline="81" endline="96">lbann::lbann_callback_debug::on_batch_evaluate_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a83fe16882119a54afe59ba616fe1722a" compoundref="callback__debug_8cpp" startline="98" endline="113">lbann::lbann_callback_debug::on_evaluate_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19639823e288e7599947c0abfaa6d1f4" compoundref="callback__debug_8cpp" startline="115" endline="130">lbann::lbann_callback_debug::on_evaluate_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a3c9897a583441381f82a11246aea4424" compoundref="callback__debug__io_8cpp" startline="54" endline="84">lbann::lbann_callback_debug_io::print_fp_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a528f4aea5f657f40b27c58a164d4095a" compoundref="callback__debug__io_8cpp" startline="87" endline="143">lbann::lbann_callback_debug_io::print_phase_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__minibatch__sample__indices_1acb641b979a37cc703994103a4e8428a5" compoundref="callback__dump__minibatch__sample__indices_8cpp" startline="64" endline="75">lbann::lbann_callback_dump_minibatch_sample_indices::on_evaluate_forward_prop_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a4040b1f06a2a5d5187a72c06060124c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::model::get_cur_testing_step</definition>
        <argsstring>() const</argsstring>
        <name>get_cur_testing_step</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current testing step for the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="141" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="141" bodyend="143"/>
        <references refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" compoundref="model_8hpp" startline="232">m_current_testing_step</references>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a1223f07081d495d971cdf205f892c50d" compoundref="callback__check__dataset_8cpp" startline="64" endline="75">lbann::lbann_callback_check_dataset::on_evaluate_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac364fb6e77dc163e146af77bb670d74b" compoundref="callback__debug_8cpp" startline="64" endline="79">lbann::lbann_callback_debug::on_batch_evaluate_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a07a02eb525ebe9c06b361c48fc2977c8" compoundref="callback__debug_8cpp" startline="81" endline="96">lbann::lbann_callback_debug::on_batch_evaluate_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a83fe16882119a54afe59ba616fe1722a" compoundref="callback__debug_8cpp" startline="98" endline="113">lbann::lbann_callback_debug::on_evaluate_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19639823e288e7599947c0abfaa6d1f4" compoundref="callback__debug_8cpp" startline="115" endline="130">lbann::lbann_callback_debug::on_evaluate_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a3c9897a583441381f82a11246aea4424" compoundref="callback__debug__io_8cpp" startline="54" endline="84">lbann::lbann_callback_debug_io::print_fp_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a528f4aea5f657f40b27c58a164d4095a" compoundref="callback__debug__io_8cpp" startline="87" endline="143">lbann::lbann_callback_debug_io::print_phase_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__minibatch__sample__indices_1acb641b979a37cc703994103a4e8428a5" compoundref="callback__dump__minibatch__sample__indices_8cpp" startline="64" endline="75">lbann::lbann_callback_dump_minibatch_sample_indices::on_evaluate_forward_prop_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a375372b5b864ffbc4eaa0963f6939f65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::model::set_execution_mode</definition>
        <argsstring>(execution_mode mode)</argsstring>
        <name>set_execution_mode</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the model (and all layers&apos;) execution mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="145" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="145" bodyend="147"/>
        <references refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" compoundref="model_8hpp" startline="224">m_execution_mode</references>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2525bf058156612d7847d0754277e4fc" compoundref="callback__ltfb_8cpp" startline="94" endline="104">lbann::anonymous_namespace{callback_ltfb.cpp}::evaluate</referencedby>
        <referencedby refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" compoundref="model_8cpp" startline="705" endline="710">reset_mode_and_model</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
        <definition>execution_mode lbann::model::get_execution_mode</definition>
        <argsstring>() const</argsstring>
        <name>get_execution_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the model&apos;s execution mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="149" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="149" bodyend="151"/>
        <references refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" compoundref="model_8hpp" startline="224">m_execution_mode</references>
        <referencedby refid="classlbann_1_1generic__input__layer_1ae74c8c5a7e14b4fdd4902554bbc7bcef" compoundref="generic__input__layer_8hpp" startline="198" endline="241">lbann::generic_input_layer::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1aaf9ac19f7dd725230bde87d859ec0f35" compoundref="generic__input__layer_8hpp" startline="248" endline="250">lbann::generic_input_layer::update_compute</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" compoundref="generic__input__layer_8hpp" startline="277" endline="279">lbann::generic_input_layer::get_data_reader</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a5ed2e13553574ba9ff54565ebc049982" compoundref="generic__input__layer_8hpp" startline="286" endline="288">lbann::generic_input_layer::get_num_parallel_readers</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a82bd22c834c5ef526e0c740c80451e1b" compoundref="generic__input__layer_8hpp" startline="295" endline="297">lbann::generic_input_layer::get_num_iterations_per_epoch</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a660d82888a5c1eb72c2906d6367cbc35" compoundref="generic__input__layer_8hpp" startline="304" endline="306">lbann::generic_input_layer::get_current_step_in_epoch</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1aebca4bd6660ee5b7f99129bd84ed4f8d" compoundref="generic__input__layer_8hpp" startline="318" endline="320">lbann::generic_input_layer::get_last_mini_batch_size</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a41d278999fbd10d2cd95b9af04925cf7" compoundref="generic__input__layer_8hpp" startline="327" endline="329">lbann::generic_input_layer::get_current_mini_batch_size</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1aaaa60fb7b94353fccaff25e6a862d833" compoundref="generic__input__layer_8hpp" startline="346" endline="348">lbann::generic_input_layer::get_current_global_mini_batch_size</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a111abcde5f53746dfd6c5fe18187ee57" compoundref="generic__input__layer_8hpp" startline="355" endline="357">lbann::generic_input_layer::get_world_master_mini_batch_adjustment</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a6c14ea2a50c7e7989e8e394671e4531a" compoundref="generic__input__layer_8hpp" startline="364" endline="366">lbann::generic_input_layer::get_current_world_master_mini_batch_adjustment</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a654365ee97a64c75a547cfb7ef329304" compoundref="generic__input__layer_8hpp" startline="438" endline="438">lbann::generic_input_layer::select_dataset</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a57a60f5a28c9fb78d5151801123d4dba" compoundref="generic__target__layer_8hpp" startline="156" endline="183">lbann::generic_target_layer::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a43f4de7c1846b605aa9bb6daf9338c78" compoundref="generic__target__layer_8hpp" startline="187" endline="193">lbann::generic_target_layer::update_compute</referencedby>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a09bf00610af66810bf8bbb65424d1e1a" compoundref="reconstruction_8hpp" startline="94" endline="100">lbann::reconstruction_layer&lt; T_layout &gt;::summarize_stats</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1aacff2c47a5455a4c28b9695f4fb37249" compoundref="batch__normalization_8hpp" startline="332" endline="440">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a7d48ad1531825fc9745c77f9ae5f68d6" compoundref="batch__normalization_8hpp" startline="442" endline="556">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ae4cad47f456752e4ea20add0f6f38819" compoundref="batch__normalization_8hpp" startline="558" endline="670">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a83e40edd001a0b71c31fbc9a3acb2231" compoundref="batch__normalization_8hpp" startline="672" endline="801">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a478368964f515f5456324b6504a5358f" compoundref="dropout_8hpp" startline="166" endline="180">lbann::dropout&lt; T_layout &gt;::fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a358c502d8e7eeb1fed8b5df468793b09" compoundref="dropout_8hpp" startline="182" endline="216">lbann::dropout&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1aca0160de0c3db5c29a0c4c6bddd0cf4f" compoundref="dropout_8hpp" startline="219" endline="229">lbann::dropout&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1ad71de4282d2164171bbcad158a7bf1e7" compoundref="dropout_8hpp" startline="231" endline="262">lbann::dropout&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1aeafadecbcfc81734d0c1850b4004dcc3" compoundref="dropout_8hpp" startline="264" endline="310">lbann::dropout&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1a50ccce3672873a12ae69cc76c91e767a" compoundref="selu__dropout_8hpp" startline="102" endline="131">lbann::selu_dropout&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1afc80277386fef53296368579876bdb55" compoundref="selu__dropout_8hpp" startline="134" endline="154">lbann::selu_dropout&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1bernoulli__layer_1ad3b8939b6df375880247ef54f370ceb1" compoundref="bernoulli_8hpp" startline="89" endline="96">lbann::bernoulli_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1gaussian__layer_1a8a0f52d4f365180dbf11e9a09b359c5e" compoundref="gaussian_8hpp" startline="94" endline="101">lbann::gaussian_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1uniform__layer_1a975ba9cfcd974fe348ee9681d1feb879" compoundref="uniform_8hpp" startline="94" endline="103">lbann::uniform_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a1223f07081d495d971cdf205f892c50d" compoundref="callback__check__dataset_8cpp" startline="64" endline="75">lbann::lbann_callback_check_dataset::on_evaluate_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__reconstruction__error_1a8a6a72b8016d3ba3ad11b5e7e2f3f5df" compoundref="callback__check__reconstruction__error_8cpp" startline="38" endline="47">lbann::lbann_callback_check_reconstruction_error::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1abab8f3b9c1db3d0ef3a715afc7b880db" compoundref="callback__debug_8cpp" startline="31" endline="35">lbann::lbann_callback_debug::on_batch_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac3e88ef582a7e3949b6e016ca2b17459" compoundref="callback__debug_8cpp" startline="37" endline="41">lbann::lbann_callback_debug::on_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1acb3d05be6c600f4d61957ccf10606ddc" compoundref="callback__debug_8cpp" startline="43" endline="47">lbann::lbann_callback_debug::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1adaf60c995d2638a40d9c87a923c53865" compoundref="callback__debug_8cpp" startline="49" endline="53">lbann::lbann_callback_debug::on_backward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19a8ec63f55fc86024c9ab8fe0836500" compoundref="callback__debug_8cpp" startline="55" endline="59">lbann::lbann_callback_debug::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac364fb6e77dc163e146af77bb670d74b" compoundref="callback__debug_8cpp" startline="64" endline="79">lbann::lbann_callback_debug::on_batch_evaluate_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a07a02eb525ebe9c06b361c48fc2977c8" compoundref="callback__debug_8cpp" startline="81" endline="96">lbann::lbann_callback_debug::on_batch_evaluate_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a83fe16882119a54afe59ba616fe1722a" compoundref="callback__debug_8cpp" startline="98" endline="113">lbann::lbann_callback_debug::on_evaluate_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19639823e288e7599947c0abfaa6d1f4" compoundref="callback__debug_8cpp" startline="115" endline="130">lbann::lbann_callback_debug::on_evaluate_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1aa31ee265d40edff982ebf38054394927" compoundref="callback__debug__io_8cpp" startline="38" endline="52">lbann::lbann_callback_debug_io::on_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a3c9897a583441381f82a11246aea4424" compoundref="callback__debug__io_8cpp" startline="54" endline="84">lbann::lbann_callback_debug_io::print_fp_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1ac9b36fc36ab6faa9de44db026addf02a" compoundref="callback__debug__io_8cpp" startline="154" endline="165">lbann::lbann_callback_debug_io::on_evaluate_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__minibatch__sample__indices_1a34d4564309168b3ab0b2e3092e2f9355" compoundref="callback__dump__minibatch__sample__indices_8cpp" startline="37" endline="58">lbann::lbann_callback_dump_minibatch_sample_indices::dump_to_file</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__minibatch__sample__indices_1acb641b979a37cc703994103a4e8428a5" compoundref="callback__dump__minibatch__sample__indices_8cpp" startline="64" endline="75">lbann::lbann_callback_dump_minibatch_sample_indices::on_evaluate_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__early__stopping_1a32eb9c5e763c97ab1162cfebea7ad049" compoundref="callback__early__stopping_8cpp" startline="38" endline="61">lbann::lbann_callback_early_stopping::on_validation_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__gradient__check_1a54ba40dd3b381d5c889d77edeffa37f9" compoundref="callback__gradient__check_8cpp" startline="182" endline="192">lbann::lbann_callback_gradient_check::compute_objective_function</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a3160dbf536def4f930e0ea0aabdebc11" compoundref="callback__imcomm_8cpp" startline="124" endline="154">lbann::lbann_callback_imcomm::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__imcomm_1a0a425ba562f7637b25cd6ba094e7885b" compoundref="callback__imcomm_8cpp" startline="156" endline="205">lbann::lbann_callback_imcomm::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__adaptive__learning__rate_1a6c64fae03736b8acba5c839f59d2ac6f" compoundref="callback__learning__rate_8cpp" startline="121" endline="150">lbann::lbann_callback_adaptive_learning_rate::global_schedule</referencedby>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2525bf058156612d7847d0754277e4fc" compoundref="callback__ltfb_8cpp" startline="94" endline="104">lbann::anonymous_namespace{callback_ltfb.cpp}::evaluate</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__ltfb_1a7d2d1682c4a6a6b7e8ea1e3f4bf33c84" compoundref="callback__ltfb_8cpp" startline="156" endline="202">lbann::lbann_callback_ltfb::on_batch_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__print_1a50117faa3edb961ddd87c5c5806820b2" compoundref="callback__print_8cpp" startline="130" endline="222">lbann::lbann_callback_print::report_results</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a404e64dcedfcba611510379f99dcace9" compoundref="callback__summary_8cpp" startline="70" endline="82">lbann::lbann_callback_summary::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a8dced0a202df3daaece138a7b958e544" compoundref="callback__summary_8cpp" startline="84" endline="100">lbann::lbann_callback_summary::on_test_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timer_1a955e59858c6803e96b21fe494cdf3971" compoundref="callback__timer_8cpp" startline="52" endline="166">lbann::lbann_callback_timer::timing_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a4f3cc91f8495870723389be15f77184a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::model::set_current_mini_batch_size</definition>
        <argsstring>(int mini_batch_size)</argsstring>
        <name>set_current_mini_batch_size</name>
        <param>
          <type>int</type>
          <declname>mini_batch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the model&apos;s current mini-batch size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="153" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="153" bodyend="155"/>
        <references refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" compoundref="model_8hpp" startline="240">m_current_mini_batch_size</references>
        <referencedby refid="classlbann_1_1generic__input__layer_1ad0b8ea79bc508bd227e08124359531c8" compoundref="generic__input__layer_8hpp" startline="170" endline="196">lbann::generic_input_layer::fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1ae74c8c5a7e14b4fdd4902554bbc7bcef" compoundref="generic__input__layer_8hpp" startline="198" endline="241">lbann::generic_input_layer::fp_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::model::get_current_mini_batch_size</definition>
        <argsstring>() const</argsstring>
        <name>get_current_mini_batch_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the model&apos;s current mini-batch size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="157" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="157" bodyend="159"/>
        <references refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" compoundref="model_8hpp" startline="240">m_current_mini_batch_size</references>
        <referencedby refid="classlbann_1_1generic__input__layer_1ae74c8c5a7e14b4fdd4902554bbc7bcef" compoundref="generic__input__layer_8hpp" startline="198" endline="241">lbann::generic_input_layer::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a57a60f5a28c9fb78d5151801123d4dba" compoundref="generic__target__layer_8hpp" startline="156" endline="183">lbann::generic_target_layer::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1evaluation__layer_1a6cb3ab97ec80b6cf8606b421d9761c1c" compoundref="evaluation_8hpp" startline="80" endline="98">lbann::evaluation_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__gradient__check_1ab62102d5ab30330386514161b9ee6586" compoundref="callback__gradient__check_8cpp" startline="40" endline="180">lbann::lbann_callback_gradient_check::on_test_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__gradient__check_1a54ba40dd3b381d5c889d77edeffa37f9" compoundref="callback__gradient__check_8cpp" startline="182" endline="192">lbann::lbann_callback_gradient_check::compute_objective_function</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" compoundref="layer_8cpp" startline="247" endline="275">lbann::Layer::forward_prop</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" compoundref="layer_8cpp" startline="277" endline="305">lbann::Layer::back_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" compoundref="model_8cpp" startline="720" endline="742">evaluate_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a8c311798ff4acaeafdfbf85162ba5084" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::model::get_max_mini_batch_size</definition>
        <argsstring>() const</argsstring>
        <name>get_max_mini_batch_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the model&apos;s maximum mini-batch size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="161" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="161" bodyend="163"/>
        <references refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" compoundref="model_8hpp" startline="238">m_max_mini_batch_size</references>
        <referencedby refid="classlbann_1_1generic__input__layer_1a8ca316b0369689949f3f4106920ec28f" compoundref="generic__input__layer_8hpp" startline="139" endline="165">lbann::generic_input_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a73b35ee4dcb97a166369426d975596b2" compoundref="generic__target__layer_8hpp" startline="127" endline="133">lbann::generic_target_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a8cbc105d8bd9d3b493ef34de7c387929" compoundref="callback__check__dataset_8cpp" startline="77" endline="143">lbann::lbann_callback_check_dataset::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__variable__minibatch_1a4f5d8ab04ab3e1cc3aa66327d3712f51" compoundref="callback__variable__minibatch_8cpp" startline="40" endline="64">lbann::lbann_callback_variable_minibatch::on_train_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__variable__minibatch_1a091e7563b5a7a90638e2521fe39cbf8f" compoundref="callback__variable__minibatch_8cpp" startline="66" endline="125">lbann::lbann_callback_variable_minibatch::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" compoundref="layer_8cpp" startline="600" endline="635">lbann::Layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">lbann::Layer::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">lbann::Layer::get_bp_output</referencedby>
        <referencedby refid="classlbann_1_1categorical__accuracy__metric_1a328a63ccc21c31efd511445f5b060960" compoundref="categorical__accuracy_8cpp" startline="59" endline="78">lbann::categorical_accuracy_metric::setup</referencedby>
        <referencedby refid="classlbann_1_1pearson__correlation__metric_1a4394c0ebb3cacdcec934e4ae322f9bb6" compoundref="pearson__correlation_8cpp" startline="103" endline="133">lbann::pearson_correlation_metric::setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a2a9b4cfa1c8c91e4131908751f9c4a6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::model::get_effective_mini_batch_size</definition>
        <argsstring>() const</argsstring>
        <name>get_effective_mini_batch_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the model&apos;s effective mini-batch size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="165" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="165" bodyend="167"/>
        <references refid="classlbann_1_1model_1a4887fd2816e7c51b24cb8bf8e4a80a1c" compoundref="model_8hpp" startline="246">m_effective_mini_batch_size</references>
        <referencedby refid="classlbann_1_1base__convolution__layer_1ae46e6a975c443792c606817878dc4446" compoundref="base__convolution_8hpp" startline="519" endline="622">lbann::base_convolution_layer::compute_gradients_cudnn</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a8cb0b4fb33f058ce6c211ebaf6a17f63" compoundref="base__convolution_8hpp" startline="779" endline="879">lbann::base_convolution_layer::compute_gradients_im2col</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a7d48ad1531825fc9745c77f9ae5f68d6" compoundref="batch__normalization_8hpp" startline="442" endline="556">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a83e40edd001a0b71c31fbc9a3acb2231" compoundref="batch__normalization_8hpp" startline="672" endline="801">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_cpu</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1aa64829cba8a84928a396893172a1d116" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::model::set_effective_mini_batch_size</definition>
        <argsstring>(int mini_batch_size)</argsstring>
        <name>set_effective_mini_batch_size</name>
        <param>
          <type>int</type>
          <declname>mini_batch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the model&apos;s effective mini-batch size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="169" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="169" bodyend="171"/>
        <references refid="classlbann_1_1model_1a4887fd2816e7c51b24cb8bf8e4a80a1c" compoundref="model_8hpp" startline="246">m_effective_mini_batch_size</references>
        <references refid="classlbann_1_1model_1a32a189033b8ff92d233781b1039c70f1" compoundref="model_8cpp" startline="626" endline="637">get_num_iterations_per_epoch</references>
        <referencedby refid="classlbann_1_1generic__input__layer_1ad0b8ea79bc508bd227e08124359531c8" compoundref="generic__input__layer_8hpp" startline="170" endline="196">lbann::generic_input_layer::fp_setup_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a32a189033b8ff92d233781b1039c70f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::model::get_num_iterations_per_epoch</definition>
        <argsstring>(execution_mode mode) const</argsstring>
        <name>get_num_iterations_per_epoch</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="172" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="626" bodyend="637"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1generic__input__layer_1aa0fa6597ffce537f7cfba29dcc754ee1" compoundref="generic__input__layer_8hpp" startline="290" endline="293">lbann::generic_input_layer::get_num_iterations_per_epoch</references>
        <referencedby refid="classlbann_1_1model_1aa64829cba8a84928a396893172a1d116" compoundref="model_8hpp" startline="169" endline="171">set_effective_mini_batch_size</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__poly__learning__rate_1a47d3d2a94157f1992bf4a964620208f3" compoundref="callback__learning__rate_8cpp" startline="238" endline="243">lbann::lbann_callback_poly_learning_rate::setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1afd569027be9b7a6adb08f486331384ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::model::get_current_phase</definition>
        <argsstring>() const</argsstring>
        <name>get_current_phase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current phase (multiple epochs) in layer-wise model training. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="175" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="175" bodyend="177"/>
        <references refid="classlbann_1_1model_1a150ef033f81982936e007b10c421f488" compoundref="model_8hpp" startline="248">m_current_phase</references>
        <references refid="classlbann_1_1model_1a1eb5efcc8f73ba9478b2ce1efb9f2d8c" compoundref="model_8cpp" startline="1101" endline="1126">summarize_stats</references>
        <references refid="classlbann_1_1model_1a0824e757e4806fad77630d69926a8911" compoundref="model_8cpp" startline="1128" endline="1132">summarize_matrices</references>
        <referencedby refid="classlbann_1_1lbann__callback__save__images_1a4591438de0b52467988e2bd34b55c0dd" compoundref="callback__save__images_8cpp" startline="49" endline="57">lbann::lbann_callback_save_images::on_phase_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a1eb5efcc8f73ba9478b2ce1efb9f2d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::summarize_stats</definition>
        <argsstring>(lbann_summary &amp;summarizer)</argsstring>
        <name>summarize_stats</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref> &amp;</type>
          <declname>summarizer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Summarize statistics (e.g. timers, counters); these should be computable quickly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="183" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1101" bodyend="1126"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <references refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" compoundref="summary_8hpp" startline="204" endline="204">lbann::lbann_summary::reduce_scalar</references>
        <references refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" compoundref="model_8hpp" startline="221">m_objective_function</references>
        <references refid="classlbann_1_1objective__function_1a0aa271e497363e97ba3741292961d47d" compoundref="objective__function_8cpp" startline="113" endline="122">lbann::objective_function::get_mean_value</references>
        <references refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" compoundref="model_8hpp" startline="224">m_execution_mode</references>
        <references refid="classlbann_1_1objective__function_1a4a23b4c51fe61584c97a471d28f7b8d7" compoundref="objective__function_8hpp" startline="109" endline="109">lbann::objective_function::get_evaluation_time</references>
        <references refid="classlbann_1_1objective__function_1af968b6949c170721d04895f1268b03dd" compoundref="objective__function_8hpp" startline="111" endline="111">lbann::objective_function::get_differentiation_time</references>
        <references refid="classlbann_1_1objective__function_1a92b248be17049b1d7e82accbd913d6f1" compoundref="objective__function_8hpp" startline="113" endline="116">lbann::objective_function::reset_counters</references>
        <references refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" compoundref="model_8hpp" startline="264">m_metrics</references>
        <referencedby refid="classlbann_1_1model_1afd569027be9b7a6adb08f486331384ac" compoundref="model_8hpp" startline="175" endline="177">get_current_phase</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a89b18186fdaa7b6a7a0e9ab8ee334d88" compoundref="callback__summary_8cpp" startline="47" endline="68">lbann::lbann_callback_summary::on_batch_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a0824e757e4806fad77630d69926a8911" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::summarize_matrices</definition>
        <argsstring>(lbann_summary &amp;summarizer)</argsstring>
        <name>summarize_matrices</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref> &amp;</type>
          <declname>summarizer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Summarize matrices (e.g. means); these are called less frequently and can be more expensive. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="188" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1128" bodyend="1132"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <referencedby refid="classlbann_1_1model_1afd569027be9b7a6adb08f486331384ac" compoundref="model_8hpp" startline="175" endline="177">get_current_phase</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__summary_1a89b18186fdaa7b6a7a0e9ab8ee334d88" compoundref="callback__summary_8cpp" startline="47" endline="68">lbann::lbann_callback_summary::on_batch_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a90363b6a20269cf7197701e49f1f52a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::model::get_terminate_training</definition>
        <argsstring>() const</argsstring>
        <name>get_terminate_training</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if the flag to stop training is set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="191" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="191" bodyend="193"/>
        <references refid="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" compoundref="model_8hpp" startline="226">m_terminate_training</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">lbann::greedy_layerwise_autoencoder::train</referencedby>
        <referencedby refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" compoundref="model_8cpp" startline="679" endline="701">train</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a5bafc4e84671490c6118959becb22e16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::model::set_terminate_training</definition>
        <argsstring>(bool f)</argsstring>
        <name>set_terminate_training</name>
        <param>
          <type>bool</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the terminate training flag (on or off). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="195" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="195" bodyend="197"/>
        <references refid="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" compoundref="model_8hpp" startline="226">m_terminate_training</references>
        <references refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" compoundref="model_8cpp" startline="679" endline="701">train</references>
        <references refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" compoundref="model_8cpp" startline="643" endline="661">evaluate</references>
        <references refid="classlbann_1_1model_1aa819e0d7c8bb178155e40e33037cf054" compoundref="model_8cpp" startline="664" endline="676">collect_indices</references>
        <references refid="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" compoundref="model_8cpp" startline="1151" endline="1171">save_to_checkpoint_shared</references>
        <references refid="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" compoundref="model_8cpp" startline="1173" endline="1209">load_from_checkpoint_shared</references>
        <references refid="classlbann_1_1model_1a488da86420421a4890c8fd7a95849acc" compoundref="model_8cpp" startline="1211" endline="1215">write_proto</references>
        <referencedby refid="classlbann_1_1lbann__callback__early__stopping_1a32eb9c5e763c97ab1162cfebea7ad049" compoundref="callback__early__stopping_8cpp" startline="38" endline="61">lbann::lbann_callback_early_stopping::on_validation_end</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::train</definition>
        <argsstring>(int num_epochs)</argsstring>
        <name>train</name>
        <reimplementedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353">train</reimplementedby>
        <param>
          <type>int</type>
          <declname>num_epochs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Train model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="200" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="679" bodyend="701"/>
        <references refid="classlbann_1_1model_1a780395fa740102adda5537aa5d257698" compoundref="model_8cpp" startline="851" endline="855">do_train_begin_cbs</references>
        <references refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" compoundref="model_8hpp" startline="228">m_current_epoch</references>
        <references refid="classlbann_1_1model_1a90363b6a20269cf7197701e49f1f52a3" compoundref="model_8hpp" startline="191" endline="193">get_terminate_training</references>
        <references refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" compoundref="model_8cpp" startline="705" endline="710">reset_mode_and_model</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1model_1a6f975af3ff4921d78a9eb1aca12eaf5e" compoundref="model_8cpp" startline="895" endline="899">do_epoch_begin_cbs</references>
        <references refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</references>
        <references refid="classlbann_1_1model_1a93e43a6c5aaf8ad890ef50ff97dfa176" compoundref="model_8cpp" startline="901" endline="905">do_epoch_end_cbs</references>
        <references refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" compoundref="model_8cpp" startline="713" endline="718">reset_epoch_statistics</references>
        <references refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" compoundref="model_8cpp" startline="643" endline="661">evaluate</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="classlbann_1_1model_1a13bb6edae42c719b78454a8af9549122" compoundref="model_8cpp" startline="857" endline="861">do_train_end_cbs</references>
        <referencedby refid="classlbann_1_1model_1a5bafc4e84671490c6118959becb22e16" compoundref="model_8hpp" startline="195" endline="197">set_terminate_training</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::evaluate</definition>
        <argsstring>(execution_mode mode)</argsstring>
        <name>evaluate</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="202" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="643" bodyend="661"/>
        <references refid="classlbann_1_1model_1a2c82c9def03b1c60e48f52fca7708833" compoundref="model_8cpp" startline="257" endline="266">is_execution_mode_valid</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <references refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" compoundref="model_8cpp" startline="713" endline="718">reset_epoch_statistics</references>
        <references refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" compoundref="model_8cpp" startline="705" endline="710">reset_mode_and_model</references>
        <references refid="classlbann_1_1model_1ab14bedea05bd5ef549d95ceb2b57b7a4" compoundref="model_8cpp" startline="863" endline="877">do_evaluate_begin_cbs</references>
        <references refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" compoundref="model_8cpp" startline="720" endline="742">evaluate_mini_batch</references>
        <references refid="classlbann_1_1model_1ab123ed691fb6e9f52d468914a1f4460c" compoundref="model_8cpp" startline="879" endline="893">do_evaluate_end_cbs</references>
        <referencedby refid="classlbann_1_1model_1a5bafc4e84671490c6118959becb22e16" compoundref="model_8hpp" startline="195" endline="197">set_terminate_training</referencedby>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2525bf058156612d7847d0754277e4fc" compoundref="callback__ltfb_8cpp" startline="94" endline="104">lbann::anonymous_namespace{callback_ltfb.cpp}::evaluate</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">lbann::greedy_layerwise_autoencoder::train</referencedby>
        <referencedby refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" compoundref="model_8cpp" startline="679" endline="701">train</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1aa819e0d7c8bb178155e40e33037cf054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::model::collect_indices</definition>
        <argsstring>(execution_mode mode)</argsstring>
        <name>collect_indices</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run one epoch using only the input layer; this supports data_store functionality </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="207" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="664" bodyend="676"/>
        <references refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" compoundref="model_8cpp" startline="705" endline="710">reset_mode_and_model</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" compoundref="model_8cpp" startline="713" endline="718">reset_epoch_statistics</references>
        <referencedby refid="classlbann_1_1model_1a5bafc4e84671490c6118959becb22e16" compoundref="model_8hpp" startline="195" endline="197">set_terminate_training</referencedby>
        <referencedby refid="classlbann_1_1generic__data__store_1a1cff17def02ee21b6ca0befeb04bb582" compoundref="generic__data__store_8cpp" startline="93" endline="124">lbann::generic_data_store::setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::model::save_to_checkpoint_shared</definition>
        <argsstring>(persist &amp;p, bool val_end)</argsstring>
        <name>save_to_checkpoint_shared</name>
        <reimplementedby refid="classlbann_1_1sequential__model_1a226032d9890b8770c6fca54bf70d69eb">save_to_checkpoint_shared</reimplementedby>
        <param>
          <type><ref refid="classlbann_1_1persist" kindref="compound">persist</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>val_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checkpoint model to given file descriptor, return number of bytes written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="210" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1151" bodyend="1171"/>
        <references refid="classlbann_1_1persist_1a34eb918a890ab49dcbeedddf27ec1616" compoundref="persist_8hpp" startline="60" endline="62">lbann::persist::get_rank</references>
        <references refid="classlbann_1_1persist_1a742334568de0aca958dbaf7bbabd3cba" compoundref="persist_8cpp" startline="415" endline="417">lbann::persist::write_uint32</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64">lbann::train</references>
        <references refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" compoundref="model_8hpp" startline="224">m_execution_mode</references>
        <references refid="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" compoundref="model_8hpp" startline="226">m_terminate_training</references>
        <references refid="classlbann_1_1persist_1aced95e3bc711276b072af97b65ef9fc1" compoundref="persist_8cpp" startline="423" endline="425">lbann::persist::write_uint64</references>
        <references refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" compoundref="model_8hpp" startline="228">m_current_epoch</references>
        <references refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" compoundref="model_8hpp" startline="230">m_current_step</references>
        <references refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" compoundref="model_8hpp" startline="232">m_current_testing_step</references>
        <references refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" compoundref="model_8hpp" startline="238">m_max_mini_batch_size</references>
        <references refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" compoundref="model_8hpp" startline="240">m_current_mini_batch_size</references>
        <references refid="classlbann_1_1model_1a150ef033f81982936e007b10c421f488" compoundref="model_8hpp" startline="248">m_current_phase</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56af9ab05454998236921a6b0e281fae632">lbann::validate</references>
        <references refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" compoundref="model_8hpp" startline="231">m_current_validation_step</references>
        <references refid="namespacelbann_1af68acf5b249e5360289d4c6a7bfa8985" compoundref="random_8cpp" startline="72" endline="87">lbann::save_rng_to_checkpoint_shared</references>
        <referencedby refid="classlbann_1_1model_1a5bafc4e84671490c6118959becb22e16" compoundref="model_8hpp" startline="195" endline="197">set_terminate_training</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checkpoint_1a23b6f5abb924b2c4d0694e98c7d6f4d5" compoundref="callback__checkpoint_8cpp" startline="145" endline="202">lbann::lbann_callback_checkpoint::checkpointShared</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1a226032d9890b8770c6fca54bf70d69eb" compoundref="sequential_8cpp" startline="117" endline="150">lbann::sequential_model::save_to_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::model::load_from_checkpoint_shared</definition>
        <argsstring>(persist &amp;p)</argsstring>
        <name>load_from_checkpoint_shared</name>
        <reimplementedby refid="classlbann_1_1sequential__model_1aa52cca299012c67f88483206d50abb21">load_from_checkpoint_shared</reimplementedby>
        <param>
          <type><ref refid="classlbann_1_1persist" kindref="compound">persist</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Restore model by reading checkpoint from given file descriptor, return number of bytes read </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="212" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1173" bodyend="1209"/>
        <references refid="classlbann_1_1persist_1a34eb918a890ab49dcbeedddf27ec1616" compoundref="persist_8hpp" startline="60" endline="62">lbann::persist::get_rank</references>
        <references refid="classlbann_1_1persist_1ace1ebb58e2570693cdce0ebd2817113b" compoundref="persist_8cpp" startline="419" endline="421">lbann::persist::read_uint32</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64">lbann::train</references>
        <references refid="structlbann_1_1lbann__model__header_1a70b35a6df7370854031470dfbd9bfc9f" compoundref="model_8cpp" startline="1140">lbann::lbann_model_header::execution_mode</references>
        <references refid="structlbann_1_1lbann__model__header_1af2f1bf6aa2757a032ae57e45f6ed1492" compoundref="model_8cpp" startline="1141">lbann::lbann_model_header::terminate_training</references>
        <references refid="classlbann_1_1persist_1aa6d996db3714a7ae055adac0d8e8ac63" compoundref="persist_8cpp" startline="427" endline="429">lbann::persist::read_uint64</references>
        <references refid="structlbann_1_1lbann__model__header_1a72aeacf8c97595c1dffa7a15ed0dd050" compoundref="model_8cpp" startline="1142">lbann::lbann_model_header::current_epoch</references>
        <references refid="structlbann_1_1lbann__model__header_1ab8771bd77cc16b6653a1104ab32dcc03" compoundref="model_8cpp" startline="1143">lbann::lbann_model_header::current_step</references>
        <references refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56af9ab05454998236921a6b0e281fae632">lbann::validate</references>
        <references refid="structlbann_1_1lbann__model__header_1abab193479ad299b6e92989cb28e2c8f7" compoundref="model_8cpp" startline="1144">lbann::lbann_model_header::current_validation_step</references>
        <references refid="structlbann_1_1lbann__model__header_1aa5c0383d2e3992037fc622f632e56f04" compoundref="model_8cpp" startline="1145">lbann::lbann_model_header::current_testing_step</references>
        <references refid="structlbann_1_1lbann__model__header_1a3d2c22795b490f339ff1171db43399b2" compoundref="model_8cpp" startline="1146">lbann::lbann_model_header::max_mini_batch_size</references>
        <references refid="structlbann_1_1lbann__model__header_1abe843d9cecf1916028026cb1f0069245" compoundref="model_8cpp" startline="1147">lbann::lbann_model_header::current_mini_batch_size</references>
        <references refid="structlbann_1_1lbann__model__header_1adadd68a882ba782a3899fdd6c83e2a59" compoundref="model_8cpp" startline="1148">lbann::lbann_model_header::current_phase</references>
        <references refid="namespacelbann_1ab76114a0e8cc90c28bcb9e7d01eec89a" compoundref="random_8cpp" startline="89" endline="104">lbann::load_rng_from_checkpoint_shared</references>
        <references refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" compoundref="model_8hpp" startline="224">m_execution_mode</references>
        <references refid="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" compoundref="model_8hpp" startline="226">m_terminate_training</references>
        <references refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" compoundref="model_8hpp" startline="228">m_current_epoch</references>
        <references refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" compoundref="model_8hpp" startline="230">m_current_step</references>
        <references refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" compoundref="model_8hpp" startline="231">m_current_validation_step</references>
        <references refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" compoundref="model_8hpp" startline="232">m_current_testing_step</references>
        <references refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" compoundref="model_8hpp" startline="238">m_max_mini_batch_size</references>
        <references refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" compoundref="model_8hpp" startline="240">m_current_mini_batch_size</references>
        <references refid="classlbann_1_1model_1a150ef033f81982936e007b10c421f488" compoundref="model_8hpp" startline="248">m_current_phase</references>
        <referencedby refid="classlbann_1_1model_1a5bafc4e84671490c6118959becb22e16" compoundref="model_8hpp" startline="195" endline="197">set_terminate_training</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checkpoint_1a40d369278bc5963ba2f3cca1750ba004" compoundref="callback__checkpoint_8cpp" startline="203" endline="256">lbann::lbann_callback_checkpoint::restartShared</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1aa52cca299012c67f88483206d50abb21" compoundref="sequential_8cpp" startline="165" endline="202">lbann::sequential_model::load_from_checkpoint_shared</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a488da86420421a4890c8fd7a95849acc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::write_proto</definition>
        <argsstring>(lbann_data::Model *proto)</argsstring>
        <name>write_proto</name>
        <reimplementedby refid="classlbann_1_1sequential__model_1a53a83327a1115a53affa78c93344e641">write_proto</reimplementedby>
        <param>
          <type>lbann_data::Model *</type>
          <declname>proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write model to proto file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="215" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1211" bodyend="1215"/>
        <references refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" compoundref="model_8hpp" startline="250">m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <references refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" compoundref="model_8hpp" startline="238">m_max_mini_batch_size</references>
        <referencedby refid="classlbann_1_1model_1a5bafc4e84671490c6118959becb22e16" compoundref="model_8hpp" startline="195" endline="197">set_terminate_training</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__save__model_1ae047ee35b65e9bda4080a83833612699" compoundref="callback__save__model_8cpp" startline="41" endline="49">lbann::lbann_callback_save_model::on_epoch_end</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1a53a83327a1115a53affa78c93344e641" compoundref="sequential_8cpp" startline="152" endline="163">lbann::sequential_model::write_proto</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classlbann_1_1model_1a2c82c9def03b1c60e48f52fca7708833" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::model::is_execution_mode_valid</definition>
        <argsstring>(execution_mode mode) const</argsstring>
        <name>is_execution_mode_valid</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the model execution mode is valid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="274" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="257" bodyend="266"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <referencedby refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" compoundref="model_8cpp" startline="643" endline="661">evaluate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::model::print_layer_description</definition>
        <argsstring>(const Layer *layer) const</argsstring>
        <name>print_layer_description</name>
        <param>
          <type>const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print out the description of a layer set up. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="276" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="294" bodyend="310"/>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">lbann::Layer::get_name</references>
        <references refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239">lbann::Layer::get_type</references>
        <references refid="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" compoundref="layer_8hpp" startline="165" endline="167">lbann::Layer::get_num_prev_neurons</references>
        <references refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" compoundref="layer_8hpp" startline="177" endline="179">lbann::Layer::get_num_neurons</references>
        <references refid="classlbann_1_1Layer_1a147a7f7dcf0027a60f10109439e5dcea" compoundref="layer_8cpp" startline="215" endline="245">lbann::Layer::get_topo_description</references>
        <references refid="classlbann_1_1Layer_1af3c0f9f32eb631f4fdf34ad040ef8637" compoundref="layer_8cpp" startline="492" endline="499">lbann::Layer::is_frozen</references>
        <referencedby refid="classlbann_1_1model_1a989ab581e359f65c9238d627cce5b589" compoundref="model_8cpp" startline="457" endline="466">setup_layers</referencedby>
        <referencedby refid="classlbann_1_1recurrent__model_1a712dabb1c1e90f6e268b42f6abaedd93" compoundref="recurrent_8cpp" startline="395" endline="442">lbann::recurrent_model::setup_layers</referencedby>
        <referencedby refid="classlbann_1_1siamese__model_1afefdbaf473d40e571b2b58539001c9c0" compoundref="siamese_8cpp" startline="148" endline="158">lbann::siamese_model::setup_layers</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1aef7a4775c70f96610bfc5a4605b946a5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::construct_layer_graph</definition>
        <argsstring>(std::set&lt; int &gt; &amp;nodes, std::map&lt; int, std::set&lt; int &gt;&gt; &amp;edges) const</argsstring>
        <name>construct_layer_graph</name>
        <param>
          <type>std::set&lt; int &gt; &amp;</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type>std::map&lt; int, std::set&lt; int &gt;&gt; &amp;</type>
          <declname>edges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a layer graph. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="278" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="268" bodyend="284"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <referencedby refid="classlbann_1_1directed__acyclic__graph__model_1a2a70d5719832c481db9fa962f6e5f2bd" compoundref="directed__acyclic__graph_8cpp" startline="41" endline="48">lbann::directed_acyclic_graph_model::setup_layer_execution_order</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1a3801a58530388fb6a8cb3e1c018e827d" compoundref="sequential_8cpp" startline="40" endline="65">lbann::sequential_model::setup_layer_topology</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a31c281b63593a0ec7110664f7309b01a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::permute_layers</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;permutation)</argsstring>
        <name>permute_layers</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>permutation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reorder layers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="281" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="286" bodyend="292"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <referencedby refid="classlbann_1_1directed__acyclic__graph__model_1a2a70d5719832c481db9fa962f6e5f2bd" compoundref="directed__acyclic__graph_8cpp" startline="41" endline="48">lbann::directed_acyclic_graph_model::setup_layer_execution_order</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::remap_pointers</definition>
        <argsstring>(const std::unordered_map&lt; Layer *, Layer *&gt; &amp;layer_map, const std::unordered_map&lt; weights *, weights *&gt; &amp;weights_map)</argsstring>
        <name>remap_pointers</name>
        <param>
          <type>const std::unordered_map&lt; <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *, <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>layer_map</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> *, <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> *&gt; &amp;</type>
          <declname>weights_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remap pointers. <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> and weights pointers are remapped using the provided maps. If a pointer is not a key in the corresponding map, the pointer is not changed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="288" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="312" bodyend="362"/>
        <references refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" compoundref="model_8hpp" startline="221">m_objective_function</references>
        <references refid="classlbann_1_1objective__function_1a1055da2236a7faf79c5a2632f8dfc683" compoundref="objective__function_8cpp" startline="132" endline="139">lbann::objective_function::get_layer_pointers</references>
        <references refid="classlbann_1_1objective__function_1a0f934e078b55528dd0ec1ec8ad34c73b" compoundref="objective__function_8cpp" startline="141" endline="157">lbann::objective_function::set_layer_pointers</references>
        <references refid="classlbann_1_1objective__function_1a8e37f76e42f6f341ea3592001b3794e5" compoundref="objective__function_8cpp" startline="159" endline="166">lbann::objective_function::get_weights_pointers</references>
        <references refid="classlbann_1_1objective__function_1a9c3211354ca1cee8a7ba219f4e56e03c" compoundref="objective__function_8cpp" startline="168" endline="184">lbann::objective_function::set_weights_pointers</references>
        <references refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" compoundref="model_8hpp" startline="264">m_metrics</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <referencedby refid="classlbann_1_1model_1a03fd1dc3edddb414b040bc009cf73371" compoundref="model_8cpp" startline="69" endline="112">model</referencedby>
        <referencedby refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" compoundref="model_8cpp" startline="114" endline="163">operator=</referencedby>
        <referencedby refid="classlbann_1_1model_1aaed20219476dc1458bbd058be36de1ec" compoundref="model_8cpp" startline="221" endline="247">replace_weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ad0131e36e763470a7bbf67e83b42cd14" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::freeze_layers_under_frozen_surface</definition>
        <argsstring>()</argsstring>
        <name>freeze_layers_under_frozen_surface</name>
        <reimplementedby refid="classlbann_1_1recurrent__model_1aa4e43de8bf0d11a0f51dedbcf22a73cc">freeze_layers_under_frozen_surface</reimplementedby>
        <reimplementedby refid="classlbann_1_1siamese__model_1a3960a32fd45059516f3acb41549e1e92">freeze_layers_under_frozen_surface</reimplementedby>
        <reimplementedby refid="classlbann_1_1directed__acyclic__graph__model_1a9f2a6e9472235ec91c5a50356471b3cb">freeze_layers_under_frozen_surface</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In case that a layer is frozen, also freeze layers that precede it if that makes senses for the particular model, such as sequential or siamese. For othe models, users can manually control the behaivor by indicating whether to freeze each layer in the model description prototext. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="296" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="364" bodyend="380"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <referencedby refid="classlbann_1_1sequential__model_1a3801a58530388fb6a8cb3e1c018e827d" compoundref="sequential_8cpp" startline="40" endline="65">lbann::sequential_model::setup_layer_topology</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a7b3e2a643c658dcaa7478d2568f29784" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::setup_layer_topology</definition>
        <argsstring>()</argsstring>
        <name>setup_layer_topology</name>
        <reimplementedby refid="classlbann_1_1recurrent__model_1ac89ddfa607e5cb6b940eb389ebbce6f6">setup_layer_topology</reimplementedby>
        <reimplementedby refid="classlbann_1_1siamese__model_1a7ff41cffb060500605124959f1a2a6cf">setup_layer_topology</reimplementedby>
        <reimplementedby refid="classlbann_1_1sequential__model_1a3801a58530388fb6a8cb3e1c018e827d">setup_layer_topology</reimplementedby>
        <reimplementedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a115607e435ae4685531a81852ce01fe7">setup_layer_topology</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set up topology of layer graph. Called in setup function. All layers in connected component of layer graph are added to the model and all parent/child relationships between layers are reciprocated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="303" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="411" bodyend="430"/>
        <references refid="classlbann_1_1model_1a3fb0304e6426dd28a436f50559ef2bef" compoundref="model_8cpp" startline="504" endline="539">add_connected_layers</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1a6ba9a836e5ba52c999c5234cfa5e62c2" compoundref="model_8cpp" startline="541" endline="576">add_dummy_layers</references>
        <references refid="classlbann_1_1model_1ac56d43e457cd4dfc3b88122bd10d286e" compoundref="model_8cpp" startline="578" endline="624">add_split_layers</references>
        <referencedby refid="classlbann_1_1model_1afd9dbca79503a40b7aa5c78da4d6f391" compoundref="model_8cpp" startline="386" endline="409">setup</referencedby>
        <referencedby refid="classlbann_1_1recurrent__model_1ac89ddfa607e5cb6b940eb389ebbce6f6" compoundref="recurrent_8cpp" startline="361" endline="393">lbann::recurrent_model::setup_layer_topology</referencedby>
        <referencedby refid="classlbann_1_1sequential__model_1a3801a58530388fb6a8cb3e1c018e827d" compoundref="sequential_8cpp" startline="40" endline="65">lbann::sequential_model::setup_layer_topology</referencedby>
        <referencedby refid="classlbann_1_1siamese__model_1a7ff41cffb060500605124959f1a2a6cf" compoundref="siamese_8cpp" startline="56" endline="146">lbann::siamese_model::setup_layer_topology</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ab0e8af146d4121c1b8b04b4a3c2a455c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::setup_layer_execution_order</definition>
        <argsstring>()</argsstring>
        <name>setup_layer_execution_order</name>
        <reimplementedby refid="classlbann_1_1directed__acyclic__graph__model_1a2a70d5719832c481db9fa962f6e5f2bd">setup_layer_execution_order</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set up layer execution order. Called in setup function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="307" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="432" bodyend="455"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <referencedby refid="classlbann_1_1directed__acyclic__graph__model_1a2a70d5719832c481db9fa962f6e5f2bd" compoundref="directed__acyclic__graph_8cpp" startline="41" endline="48">lbann::directed_acyclic_graph_model::setup_layer_execution_order</referencedby>
        <referencedby refid="classlbann_1_1model_1afd9dbca79503a40b7aa5c78da4d6f391" compoundref="model_8cpp" startline="386" endline="409">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a989ab581e359f65c9238d627cce5b589" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::setup_layers</definition>
        <argsstring>()</argsstring>
        <name>setup_layers</name>
        <reimplementedby refid="classlbann_1_1recurrent__model_1a712dabb1c1e90f6e268b42f6abaedd93">setup_layers</reimplementedby>
        <reimplementedby refid="classlbann_1_1siamese__model_1afefdbaf473d40e571b2b58539001c9c0">setup_layers</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set up layers. Called in setup function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="311" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="457" bodyend="466"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" compoundref="model_8hpp" startline="250">m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <references refid="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" compoundref="model_8cpp" startline="294" endline="310">print_layer_description</references>
        <referencedby refid="classlbann_1_1model_1afd9dbca79503a40b7aa5c78da4d6f391" compoundref="model_8cpp" startline="386" endline="409">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a582edc0f930e1594381ecc7922e91b08" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::setup_weights</definition>
        <argsstring>()</argsstring>
        <name>setup_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set up weights. Called in setup function. All weights being used by layers or the objective function are added to the model and all unused weights are deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="317" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="468" bodyend="502"/>
        <references refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" compoundref="model_8hpp" startline="271">m_weights</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" compoundref="model_8hpp" startline="221">m_objective_function</references>
        <references refid="classlbann_1_1objective__function_1a8e37f76e42f6f341ea3592001b3794e5" compoundref="objective__function_8cpp" startline="159" endline="166">lbann::objective_function::get_weights_pointers</references>
        <referencedby refid="classlbann_1_1model_1afd9dbca79503a40b7aa5c78da4d6f391" compoundref="model_8cpp" startline="386" endline="409">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::reset_mode_and_model</definition>
        <argsstring>(execution_mode mode)</argsstring>
        <name>reset_mode_and_model</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset model pointer and execution mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="320" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="705" bodyend="710"/>
        <references refid="classlbann_1_1model_1a375372b5b864ffbc4eaa0963f6939f65" compoundref="model_8hpp" startline="145" endline="147">set_execution_mode</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">lbann::greedy_layerwise_autoencoder::train</referencedby>
        <referencedby refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" compoundref="model_8cpp" startline="643" endline="661">evaluate</referencedby>
        <referencedby refid="classlbann_1_1model_1aa819e0d7c8bb178155e40e33037cf054" compoundref="model_8cpp" startline="664" endline="676">collect_indices</referencedby>
        <referencedby refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" compoundref="model_8cpp" startline="679" endline="701">train</referencedby>
        <referencedby refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" compoundref="model_8cpp" startline="720" endline="742">evaluate_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::reset_epoch_statistics</definition>
        <argsstring>(execution_mode mode)</argsstring>
        <name>reset_epoch_statistics</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset model statistics for an epoch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="322" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="713" bodyend="718"/>
        <references refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" compoundref="model_8hpp" startline="221">m_objective_function</references>
        <references refid="classlbann_1_1objective__function_1acf7a6c67e7a45a1fd03684ca897d6324" compoundref="objective__function_8hpp" startline="87" endline="87">lbann::objective_function::reset_statistics</references>
        <references refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" compoundref="model_8hpp" startline="264">m_metrics</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">lbann::greedy_layerwise_autoencoder::train</referencedby>
        <referencedby refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" compoundref="model_8cpp" startline="643" endline="661">evaluate</referencedby>
        <referencedby refid="classlbann_1_1model_1aa819e0d7c8bb178155e40e33037cf054" compoundref="model_8cpp" startline="664" endline="676">collect_indices</referencedby>
        <referencedby refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" compoundref="model_8cpp" startline="679" endline="701">train</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::model::evaluate_mini_batch</definition>
        <argsstring>(execution_mode mode)</argsstring>
        <name>evaluate_mini_batch</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate model on a mini-batch </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="324" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="720" bodyend="742"/>
        <references refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" compoundref="model_8cpp" startline="705" endline="710">reset_mode_and_model</references>
        <references refid="classlbann_1_1model_1a156acfa740b92322d44b6c477636eb26" compoundref="model_8cpp" startline="907" endline="926">do_batch_begin_cbs</references>
        <references refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" compoundref="model_8cpp" startline="791" endline="799">forward_prop</references>
        <references refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" compoundref="model_8hpp" startline="221">m_objective_function</references>
        <references refid="classlbann_1_1objective__function_1a3edb6708894d31ec2a014c6eb8a61df2" compoundref="objective__function_8cpp" startline="75" endline="82">lbann::objective_function::start_evaluation</references>
        <references refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" compoundref="model_8hpp" startline="157" endline="159">get_current_mini_batch_size</references>
        <references refid="classlbann_1_1objective__function_1ad35ce9b7daa87d197d00b1762b691a02" compoundref="objective__function_8cpp" startline="84" endline="95">lbann::objective_function::finish_evaluation</references>
        <references refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" compoundref="model_8hpp" startline="264">m_metrics</references>
        <references refid="classlbann_1_1model_1a7518775e0fd29ed682319193e2d264cc" compoundref="model_8cpp" startline="839" endline="845">update_layers</references>
        <references refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" compoundref="model_8hpp" startline="224">m_execution_mode</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" compoundref="model_8hpp" startline="231">m_current_validation_step</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <references refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" compoundref="model_8hpp" startline="232">m_current_testing_step</references>
        <references refid="classlbann_1_1model_1a3dc29e9751a53afda7e171aff335273e" compoundref="model_8cpp" startline="928" endline="947">do_batch_end_cbs</references>
        <referencedby refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" compoundref="model_8cpp" startline="643" endline="661">evaluate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::model::train_mini_batch</definition>
        <argsstring>()</argsstring>
        <name>train_mini_batch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Train model on a mini-batch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="326" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="744" bodyend="776"/>
        <references refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" compoundref="model_8cpp" startline="705" endline="710">reset_mode_and_model</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1model_1a156acfa740b92322d44b6c477636eb26" compoundref="model_8cpp" startline="907" endline="926">do_batch_begin_cbs</references>
        <references refid="classlbann_1_1model_1ae4ca41f514498a37503ecc6ba1600bab" compoundref="model_8cpp" startline="778" endline="783">clear_gradients</references>
        <references refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" compoundref="model_8cpp" startline="791" endline="799">forward_prop</references>
        <references refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" compoundref="model_8hpp" startline="221">m_objective_function</references>
        <references refid="classlbann_1_1objective__function_1a3edb6708894d31ec2a014c6eb8a61df2" compoundref="objective__function_8cpp" startline="75" endline="82">lbann::objective_function::start_evaluation</references>
        <references refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" compoundref="model_8hpp" startline="157" endline="159">get_current_mini_batch_size</references>
        <references refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" compoundref="model_8hpp" startline="264">m_metrics</references>
        <references refid="classlbann_1_1model_1a43b3ed176749e0aab6065f274ec2a717" compoundref="model_8cpp" startline="785" endline="789">clear_error_signals</references>
        <references refid="classlbann_1_1objective__function_1ae8b7314bdc12ba52d270b46a35acd138" compoundref="objective__function_8cpp" startline="97" endline="103">lbann::objective_function::differentiate</references>
        <references refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" compoundref="model_8cpp" startline="801" endline="824">backward_prop</references>
        <references refid="classlbann_1_1objective__function_1a7b7f8869bf110846e971fef995db51e1" compoundref="objective__function_8cpp" startline="105" endline="111">lbann::objective_function::compute_weight_regularization</references>
        <references refid="classlbann_1_1objective__function_1ad35ce9b7daa87d197d00b1762b691a02" compoundref="objective__function_8cpp" startline="84" endline="95">lbann::objective_function::finish_evaluation</references>
        <references refid="classlbann_1_1model_1a38d8924938fa69857d3f9ed83ac98ee9" compoundref="model_8cpp" startline="826" endline="837">update_weights</references>
        <references refid="classlbann_1_1model_1a7518775e0fd29ed682319193e2d264cc" compoundref="model_8cpp" startline="839" endline="845">update_layers</references>
        <references refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" compoundref="model_8hpp" startline="230">m_current_step</references>
        <references refid="classlbann_1_1model_1a3dc29e9751a53afda7e171aff335273e" compoundref="model_8cpp" startline="928" endline="947">do_batch_end_cbs</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">lbann::greedy_layerwise_autoencoder::train</referencedby>
        <referencedby refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" compoundref="model_8cpp" startline="679" endline="701">train</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::forward_prop</definition>
        <argsstring>(execution_mode mode)</argsstring>
        <name>forward_prop</name>
        <reimplementedby refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e">forward_prop</reimplementedby>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forward propagation step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="329" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="791" bodyend="799"/>
        <references refid="classlbann_1_1model_1af3c45642bbacf1bd07e8504d7e689ec0" compoundref="model_8cpp" startline="949" endline="968">do_model_forward_prop_begin_cbs</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" compoundref="model_8cpp" startline="991" endline="1010">do_layer_forward_prop_begin_cbs</references>
        <references refid="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" compoundref="model_8cpp" startline="1012" endline="1031">do_layer_forward_prop_end_cbs</references>
        <references refid="classlbann_1_1model_1a9d67f4f3a027327d2db8767759f9c2bf" compoundref="model_8cpp" startline="970" endline="989">do_model_forward_prop_end_cbs</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" compoundref="greedy__layerwise__autoencoder_8cpp" startline="246" endline="292">lbann::greedy_layerwise_autoencoder::forward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" compoundref="model_8cpp" startline="720" endline="742">evaluate_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::backward_prop</definition>
        <argsstring>()</argsstring>
        <name>backward_prop</name>
        <reimplementedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062">backward_prop</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Backward propagation step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="331" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="801" bodyend="824"/>
        <references refid="classlbann_1_1model_1a8a60eee343381e657b2c042637e56751" compoundref="model_8cpp" startline="1033" endline="1039">do_model_backward_prop_begin_cbs</references>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1a51dc59ea8dd4bc689854732269aaf001" compoundref="model_8cpp" startline="1049" endline="1055">do_layer_backward_prop_begin_cbs</references>
        <references refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" compoundref="layer_8cpp" startline="277" endline="305">lbann::Layer::back_prop</references>
        <references refid="classlbann_1_1model_1ab0939d2668cca7efc2cc52355d34df3b" compoundref="model_8cpp" startline="1057" endline="1063">do_layer_backward_prop_end_cbs</references>
        <references refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" compoundref="model_8hpp" startline="271">m_weights</references>
        <references refid="classlbann_1_1model_1a737a0129eadf52be476034888b3eedc2" compoundref="model_8cpp" startline="1041" endline="1047">do_model_backward_prop_end_cbs</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" compoundref="greedy__layerwise__autoencoder_8cpp" startline="294" endline="332">lbann::greedy_layerwise_autoencoder::backward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ae4ca41f514498a37503ecc6ba1600bab" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::clear_gradients</definition>
        <argsstring>()</argsstring>
        <name>clear_gradients</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear each optimizer&apos;s gradient. This must be called before training forward prop since layers set an optimizer flag during forward prop. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="336" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="778" bodyend="783"/>
        <references refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" compoundref="model_8hpp" startline="271">m_weights</references>
        <references refid="classlbann_1_1optimizer_1a3f41360479fbd46c704342bb4ef36d09" compoundref="optimizer_8cpp" startline="261" endline="277">lbann::optimizer::clear_gradient</references>
        <referencedby refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a43b3ed176749e0aab6065f274ec2a717" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::clear_error_signals</definition>
        <argsstring>()</argsstring>
        <name>clear_error_signals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear each layer&apos;s error signal tensor. This must be called after the input layer&apos;s forward prop since it determines the current mini-batch size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="341" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="785" bodyend="789"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" compoundref="model_8hpp" startline="240">m_current_mini_batch_size</references>
        <referencedby refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a38d8924938fa69857d3f9ed83ac98ee9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::update_weights</definition>
        <argsstring>()</argsstring>
        <name>update_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update weights step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="343" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="826" bodyend="837"/>
        <references refid="classlbann_1_1model_1a19c96544ccf733646f3454be887f3a08" compoundref="model_8cpp" startline="1065" endline="1071">do_model_optimize_begin_cbs</references>
        <references refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" compoundref="model_8hpp" startline="271">m_weights</references>
        <references refid="classlbann_1_1model_1a24b668fa62ce0215d3b1773636b7eced" compoundref="model_8cpp" startline="1081" endline="1087">do_weight_optimize_begin_cbs</references>
        <references refid="classlbann_1_1optimizer_1aa9f43ca3f22edc0a25d0509b6514a411" compoundref="optimizer_8cpp" startline="444" endline="470">lbann::optimizer::step</references>
        <references refid="classlbann_1_1model_1af1e22d2b06d0ca90ae79fd5cf1d82066" compoundref="model_8cpp" startline="1089" endline="1095">do_weight_optimize_end_cbs</references>
        <references refid="classlbann_1_1model_1ac0b37e4f4881e274bd9c4889d4852fe8" compoundref="model_8cpp" startline="1073" endline="1079">do_model_optimize_end_cbs</references>
        <referencedby refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a7518775e0fd29ed682319193e2d264cc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::model::update_layers</definition>
        <argsstring>()</argsstring>
        <name>update_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update layers step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="345" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="839" bodyend="845"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <referencedby refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" compoundref="model_8cpp" startline="720" endline="742">evaluate_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a780395fa740102adda5537aa5d257698" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_train_begin_cbs</definition>
        <argsstring>()</argsstring>
        <name>do_train_begin_cbs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at start of training. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="352" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="851" bodyend="855"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">lbann::greedy_layerwise_autoencoder::train</referencedby>
        <referencedby refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" compoundref="model_8cpp" startline="679" endline="701">train</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a13bb6edae42c719b78454a8af9549122" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_train_end_cbs</definition>
        <argsstring>()</argsstring>
        <name>do_train_end_cbs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at end of training. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="354" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="857" bodyend="861"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">lbann::greedy_layerwise_autoencoder::train</referencedby>
        <referencedby refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" compoundref="model_8cpp" startline="679" endline="701">train</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ab14bedea05bd5ef549d95ceb2b57b7a4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_evaluate_begin_cbs</definition>
        <argsstring>(execution_mode mode)</argsstring>
        <name>do_evaluate_begin_cbs</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at start of evaluation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="356" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="863" bodyend="877"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <referencedby refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" compoundref="model_8cpp" startline="643" endline="661">evaluate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ab123ed691fb6e9f52d468914a1f4460c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_evaluate_end_cbs</definition>
        <argsstring>(execution_mode mode)</argsstring>
        <name>do_evaluate_end_cbs</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at end of evaluation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="358" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="879" bodyend="893"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <referencedby refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" compoundref="model_8cpp" startline="643" endline="661">evaluate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a6f975af3ff4921d78a9eb1aca12eaf5e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_epoch_begin_cbs</definition>
        <argsstring>()</argsstring>
        <name>do_epoch_begin_cbs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at start of epoch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="360" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="895" bodyend="899"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">lbann::greedy_layerwise_autoencoder::train</referencedby>
        <referencedby refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" compoundref="model_8cpp" startline="679" endline="701">train</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a93e43a6c5aaf8ad890ef50ff97dfa176" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_epoch_end_cbs</definition>
        <argsstring>()</argsstring>
        <name>do_epoch_end_cbs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at end of epoch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="362" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="901" bodyend="905"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" compoundref="greedy__layerwise__autoencoder_8cpp" startline="137" endline="158">lbann::greedy_layerwise_autoencoder::train</referencedby>
        <referencedby refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" compoundref="model_8cpp" startline="679" endline="701">train</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a156acfa740b92322d44b6c477636eb26" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_batch_begin_cbs</definition>
        <argsstring>(execution_mode mode)</argsstring>
        <name>do_batch_begin_cbs</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at start of mini-batch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="364" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="907" bodyend="926"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <referencedby refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" compoundref="model_8cpp" startline="720" endline="742">evaluate_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a3dc29e9751a53afda7e171aff335273e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_batch_end_cbs</definition>
        <argsstring>(execution_mode mode)</argsstring>
        <name>do_batch_end_cbs</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at end of mini-batch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="366" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="928" bodyend="947"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <referencedby refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" compoundref="model_8cpp" startline="720" endline="742">evaluate_mini_batch</referencedby>
        <referencedby refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" compoundref="model_8cpp" startline="744" endline="776">train_mini_batch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1af3c45642bbacf1bd07e8504d7e689ec0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_model_forward_prop_begin_cbs</definition>
        <argsstring>(execution_mode mode)</argsstring>
        <name>do_model_forward_prop_begin_cbs</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at start of model forward propagation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="368" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="949" bodyend="968"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" compoundref="greedy__layerwise__autoencoder_8cpp" startline="246" endline="292">lbann::greedy_layerwise_autoencoder::forward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" compoundref="model_8cpp" startline="791" endline="799">forward_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a9d67f4f3a027327d2db8767759f9c2bf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_model_forward_prop_end_cbs</definition>
        <argsstring>(execution_mode mode)</argsstring>
        <name>do_model_forward_prop_end_cbs</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at end of model forward propagation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="370" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="970" bodyend="989"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" compoundref="greedy__layerwise__autoencoder_8cpp" startline="246" endline="292">lbann::greedy_layerwise_autoencoder::forward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" compoundref="model_8cpp" startline="791" endline="799">forward_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_layer_forward_prop_begin_cbs</definition>
        <argsstring>(execution_mode mode, Layer *l)</argsstring>
        <name>do_layer_forward_prop_begin_cbs</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at start of layer forward propagation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="372" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="991" bodyend="1010"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" compoundref="greedy__layerwise__autoencoder_8cpp" startline="246" endline="292">lbann::greedy_layerwise_autoencoder::forward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" compoundref="model_8cpp" startline="791" endline="799">forward_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_layer_forward_prop_end_cbs</definition>
        <argsstring>(execution_mode mode, Layer *l)</argsstring>
        <name>do_layer_forward_prop_end_cbs</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at end of layer forward propagation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="374" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1012" bodyend="1031"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" compoundref="greedy__layerwise__autoencoder_8cpp" startline="246" endline="292">lbann::greedy_layerwise_autoencoder::forward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" compoundref="model_8cpp" startline="791" endline="799">forward_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a8a60eee343381e657b2c042637e56751" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_model_backward_prop_begin_cbs</definition>
        <argsstring>()</argsstring>
        <name>do_model_backward_prop_begin_cbs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at start of model backward propagation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="376" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1033" bodyend="1039"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" compoundref="greedy__layerwise__autoencoder_8cpp" startline="294" endline="332">lbann::greedy_layerwise_autoencoder::backward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" compoundref="model_8cpp" startline="801" endline="824">backward_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a737a0129eadf52be476034888b3eedc2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_model_backward_prop_end_cbs</definition>
        <argsstring>()</argsstring>
        <name>do_model_backward_prop_end_cbs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at end of model backward propagation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="378" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1041" bodyend="1047"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" compoundref="greedy__layerwise__autoencoder_8cpp" startline="294" endline="332">lbann::greedy_layerwise_autoencoder::backward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" compoundref="model_8cpp" startline="801" endline="824">backward_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a51dc59ea8dd4bc689854732269aaf001" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_layer_backward_prop_begin_cbs</definition>
        <argsstring>(Layer *l)</argsstring>
        <name>do_layer_backward_prop_begin_cbs</name>
        <param>
          <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at start of layer backward propagation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="380" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1049" bodyend="1055"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" compoundref="greedy__layerwise__autoencoder_8cpp" startline="294" endline="332">lbann::greedy_layerwise_autoencoder::backward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" compoundref="model_8cpp" startline="801" endline="824">backward_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ab0939d2668cca7efc2cc52355d34df3b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_layer_backward_prop_end_cbs</definition>
        <argsstring>(Layer *l)</argsstring>
        <name>do_layer_backward_prop_end_cbs</name>
        <param>
          <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at end of layer backward propagation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="382" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1057" bodyend="1063"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" compoundref="greedy__layerwise__autoencoder_8cpp" startline="294" endline="332">lbann::greedy_layerwise_autoencoder::backward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" compoundref="model_8cpp" startline="801" endline="824">backward_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a19c96544ccf733646f3454be887f3a08" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_model_optimize_begin_cbs</definition>
        <argsstring>()</argsstring>
        <name>do_model_optimize_begin_cbs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at start of model optimization. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="384" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1065" bodyend="1071"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <referencedby refid="classlbann_1_1model_1a38d8924938fa69857d3f9ed83ac98ee9" compoundref="model_8cpp" startline="826" endline="837">update_weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ac0b37e4f4881e274bd9c4889d4852fe8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_model_optimize_end_cbs</definition>
        <argsstring>()</argsstring>
        <name>do_model_optimize_end_cbs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at end of model optimization. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="386" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1073" bodyend="1079"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <referencedby refid="classlbann_1_1model_1a38d8924938fa69857d3f9ed83ac98ee9" compoundref="model_8cpp" startline="826" endline="837">update_weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a24b668fa62ce0215d3b1773636b7eced" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_weight_optimize_begin_cbs</definition>
        <argsstring>(weights *w)</argsstring>
        <name>do_weight_optimize_begin_cbs</name>
        <param>
          <type><ref refid="classlbann_1_1weights" kindref="compound">weights</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at the start of weight optimization. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="388" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1081" bodyend="1087"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <referencedby refid="classlbann_1_1model_1a38d8924938fa69857d3f9ed83ac98ee9" compoundref="model_8cpp" startline="826" endline="837">update_weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1af1e22d2b06d0ca90ae79fd5cf1d82066" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::model::do_weight_optimize_end_cbs</definition>
        <argsstring>(weights *w)</argsstring>
        <name>do_weight_optimize_end_cbs</name>
        <param>
          <type><ref refid="classlbann_1_1weights" kindref="compound">weights</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute callbacks at the end of weight optimization. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="390" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="1089" bodyend="1095"/>
        <references refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" compoundref="model_8hpp" startline="252">m_callbacks</references>
        <references refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" compoundref="model_8hpp" startline="132" endline="134">get_cur_step</references>
        <referencedby refid="classlbann_1_1model_1a38d8924938fa69857d3f9ed83ac98ee9" compoundref="model_8cpp" startline="826" endline="837">update_weights</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlbann_1_1model_1a3fb0304e6426dd28a436f50559ef2bef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::model::add_connected_layers</definition>
        <argsstring>()</argsstring>
        <name>add_connected_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search layer graph and add all connected layers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="394" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="504" bodyend="539"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" compoundref="layer_8hpp" startline="260" endline="260">lbann::Layer::get_parent_layers</references>
        <references refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" compoundref="layer_8hpp" startline="264" endline="264">lbann::Layer::get_child_layers</references>
        <referencedby refid="classlbann_1_1model_1a7b3e2a643c658dcaa7478d2568f29784" compoundref="model_8cpp" startline="411" endline="430">setup_layer_topology</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1a6ba9a836e5ba52c999c5234cfa5e62c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::model::add_dummy_layers</definition>
        <argsstring>()</argsstring>
        <name>add_dummy_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert dummy layers after layers with too few children. If a layer expects more child layers than it has, add dummy layers until it has enough children. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="399" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="541" bodyend="576"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" compoundref="layer_8hpp" startline="348" endline="348">lbann::Layer::get_cudnn_manager</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638">DATA_PARALLEL</references>
        <references refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" compoundref="model_8hpp" startline="250">m_comm</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0">MODEL_PARALLEL</references>
        <references refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">lbann::Layer::set_name</references>
        <references refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" compoundref="layer_8cpp" startline="1227" endline="1236">lbann::Layer::add_parent_layer</references>
        <referencedby refid="classlbann_1_1model_1a7b3e2a643c658dcaa7478d2568f29784" compoundref="model_8cpp" startline="411" endline="430">setup_layer_topology</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1model_1ac56d43e457cd4dfc3b88122bd10d286e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::model::add_split_layers</definition>
        <argsstring>()</argsstring>
        <name>add_split_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert split layers after layers with too many children. If a layer expects one child layer but has multiple, add a split layer. The split layer will be the original layer&apos;s child and the split layer&apos;s children will be the original children. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="405" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp" bodystart="578" bodyend="624"/>
        <references refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" compoundref="model_8hpp" startline="269">m_layers</references>
        <references refid="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" compoundref="layer_8hpp" startline="348" endline="348">lbann::Layer::get_cudnn_manager</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638">DATA_PARALLEL</references>
        <references refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" compoundref="model_8hpp" startline="250">m_comm</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0">MODEL_PARALLEL</references>
        <references refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">lbann::Layer::set_name</references>
        <references refid="classlbann_1_1Layer_1ace0346ac56fd7ce7b6b44f27f224f35e" compoundref="layer_8cpp" startline="1238" endline="1247">lbann::Layer::add_child_layer</references>
        <references refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" compoundref="layer_8hpp" startline="260" endline="260">lbann::Layer::get_parent_layers</references>
        <references refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" compoundref="layer_8cpp" startline="1227" endline="1236">lbann::Layer::add_parent_layer</references>
        <referencedby refid="classlbann_1_1model_1a7b3e2a643c658dcaa7478d2568f29784" compoundref="model_8cpp" startline="411" endline="430">setup_layer_topology</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base class for LBANN models. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1745">
        <label>lbann::model</label>
        <link refid="classlbann_1_1model"/>
      </node>
      <node id="1748">
        <label>lbann::siamese_model</label>
        <link refid="classlbann_1_1siamese__model"/>
        <childnode refid="1746" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1747">
        <label>lbann::recurrent_model</label>
        <link refid="classlbann_1_1recurrent__model"/>
        <childnode refid="1746" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1746">
        <label>lbann::directed_acyclic_graph_model</label>
        <link refid="classlbann_1_1directed__acyclic__graph__model"/>
        <childnode refid="1745" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1749">
        <label>lbann::sequential_model</label>
        <link refid="classlbann_1_1sequential__model"/>
        <childnode refid="1745" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1750">
        <label>lbann::greedy_layerwise_autoencoder</label>
        <link refid="classlbann_1_1greedy__layerwise__autoencoder"/>
        <childnode refid="1749" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1751">
        <label>lbann::model</label>
        <link refid="classlbann_1_1model"/>
        <childnode refid="1752" relation="usage">
          <edgelabel>m_default_optimizer</edgelabel>
        </childnode>
        <childnode refid="1753" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1758" relation="usage">
          <edgelabel>m_objective_function</edgelabel>
        </childnode>
      </node>
      <node id="1752">
        <label>lbann::optimizer</label>
        <link refid="classlbann_1_1optimizer"/>
        <childnode refid="1753" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1754" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
        <childnode refid="1755" relation="usage">
          <edgelabel>m_gradient_allreduce_req</edgelabel>
        </childnode>
        <childnode refid="1756" relation="usage">
          <edgelabel>m_weights</edgelabel>
        </childnode>
      </node>
      <node id="1754">
        <label>lbann::cudnn::cudnn_manager</label>
        <link refid="classlbann_1_1cudnn_1_1cudnn__manager"/>
      </node>
      <node id="1757">
        <label>lbann::weights_initializer</label>
        <link refid="classlbann_1_1weights__initializer"/>
        <childnode refid="1753" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
      <node id="1756">
        <label>lbann::weights</label>
        <link refid="classlbann_1_1weights"/>
        <childnode refid="1752" relation="usage">
          <edgelabel>m_optimizer</edgelabel>
        </childnode>
        <childnode refid="1753" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1757" relation="usage">
          <edgelabel>m_initializer</edgelabel>
        </childnode>
        <childnode refid="1754" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="1753">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="1755">
        <label>lbann::Al::request</label>
        <link refid="structlbann_1_1Al_1_1request"/>
      </node>
      <node id="1758">
        <label>lbann::objective_function</label>
        <link refid="classlbann_1_1objective__function"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" line="54" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/models/model.hpp" bodystart="54" bodyend="407"/>
    <listofallmembers>
      <member refid="classlbann_1_1model_1a8f45cdca82dbc0cc1f519898474cc6ec" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>add_callback</name></member>
      <member refid="classlbann_1_1model_1a3fb0304e6426dd28a436f50559ef2bef" prot="private" virt="non-virtual"><scope>lbann::model</scope><name>add_connected_layers</name></member>
      <member refid="classlbann_1_1model_1a6ba9a836e5ba52c999c5234cfa5e62c2" prot="private" virt="non-virtual"><scope>lbann::model</scope><name>add_dummy_layers</name></member>
      <member refid="classlbann_1_1model_1a5dfa9895024f07d273062b67d7a0dc01" prot="public" virt="virtual"><scope>lbann::model</scope><name>add_layer</name></member>
      <member refid="classlbann_1_1model_1a2ad536c9aeb5a1dfaa5a96107d62c4a4" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>add_metric</name></member>
      <member refid="classlbann_1_1model_1ac56d43e457cd4dfc3b88122bd10d286e" prot="private" virt="non-virtual"><scope>lbann::model</scope><name>add_split_layers</name></member>
      <member refid="classlbann_1_1model_1af35fca77e75eb6dd570e4727aa3d5b6b" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>add_weights</name></member>
      <member refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" prot="protected" virt="virtual"><scope>lbann::model</scope><name>backward_prop</name></member>
      <member refid="classlbann_1_1model_1a43b3ed176749e0aab6065f274ec2a717" prot="protected" virt="virtual"><scope>lbann::model</scope><name>clear_error_signals</name></member>
      <member refid="classlbann_1_1model_1ae4ca41f514498a37503ecc6ba1600bab" prot="protected" virt="virtual"><scope>lbann::model</scope><name>clear_gradients</name></member>
      <member refid="classlbann_1_1model_1aa819e0d7c8bb178155e40e33037cf054" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>collect_indices</name></member>
      <member refid="classlbann_1_1model_1aef7a4775c70f96610bfc5a4605b946a5" prot="protected" virt="virtual"><scope>lbann::model</scope><name>construct_layer_graph</name></member>
      <member refid="classlbann_1_1model_1aacd024c11f0897b33a7e7838b9433ba2" prot="public" virt="pure-virtual"><scope>lbann::model</scope><name>copy</name></member>
      <member refid="classlbann_1_1model_1a0d2d5a1eac592e5721a81a9b9ea4b7f2" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>create_optimizer</name></member>
      <member refid="classlbann_1_1model_1a156acfa740b92322d44b6c477636eb26" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_batch_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1a3dc29e9751a53afda7e171aff335273e" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_batch_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a6f975af3ff4921d78a9eb1aca12eaf5e" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_epoch_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1a93e43a6c5aaf8ad890ef50ff97dfa176" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_epoch_end_cbs</name></member>
      <member refid="classlbann_1_1model_1ab14bedea05bd5ef549d95ceb2b57b7a4" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_evaluate_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1ab123ed691fb6e9f52d468914a1f4460c" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_evaluate_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a51dc59ea8dd4bc689854732269aaf001" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_layer_backward_prop_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1ab0939d2668cca7efc2cc52355d34df3b" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_layer_backward_prop_end_cbs</name></member>
      <member refid="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_layer_forward_prop_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_layer_forward_prop_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a8a60eee343381e657b2c042637e56751" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_model_backward_prop_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1a737a0129eadf52be476034888b3eedc2" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_model_backward_prop_end_cbs</name></member>
      <member refid="classlbann_1_1model_1af3c45642bbacf1bd07e8504d7e689ec0" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_model_forward_prop_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1a9d67f4f3a027327d2db8767759f9c2bf" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_model_forward_prop_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a19c96544ccf733646f3454be887f3a08" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_model_optimize_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1ac0b37e4f4881e274bd9c4889d4852fe8" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_model_optimize_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a780395fa740102adda5537aa5d257698" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_train_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1a13bb6edae42c719b78454a8af9549122" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_train_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a24b668fa62ce0215d3b1773636b7eced" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_weight_optimize_begin_cbs</name></member>
      <member refid="classlbann_1_1model_1af1e22d2b06d0ca90ae79fd5cf1d82066" prot="protected" virt="virtual"><scope>lbann::model</scope><name>do_weight_optimize_end_cbs</name></member>
      <member refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" prot="public" virt="virtual"><scope>lbann::model</scope><name>evaluate</name></member>
      <member refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" prot="protected" virt="virtual"><scope>lbann::model</scope><name>evaluate_mini_batch</name></member>
      <member refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" prot="protected" virt="virtual"><scope>lbann::model</scope><name>forward_prop</name></member>
      <member refid="classlbann_1_1model_1ad0131e36e763470a7bbf67e83b42cd14" prot="protected" virt="virtual"><scope>lbann::model</scope><name>freeze_layers_under_frozen_surface</name></member>
      <member refid="classlbann_1_1model_1a38c71a455870e087c4c07acb78e4477c" prot="public" virt="virtual"><scope>lbann::model</scope><name>get_callbacks</name></member>
      <member refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_cur_epoch</name></member>
      <member refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_cur_step</name></member>
      <member refid="classlbann_1_1model_1a4040b1f06a2a5d5187a72c06060124c1" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_cur_testing_step</name></member>
      <member refid="classlbann_1_1model_1a680ef8ecf644dbc821b5e7488d3bd2c4" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_cur_validation_step</name></member>
      <member refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_current_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1afd569027be9b7a6adb08f486331384ac" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_current_phase</name></member>
      <member refid="classlbann_1_1model_1a2a9b4cfa1c8c91e4131908751f9c4a6a" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_effective_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_execution_mode</name></member>
      <member refid="classlbann_1_1model_1ae14f4b2cc8882b3739d4aeb25d9e73c9" prot="public" virt="virtual"><scope>lbann::model</scope><name>get_layers</name></member>
      <member refid="classlbann_1_1model_1a8c311798ff4acaeafdfbf85162ba5084" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_max_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1a84c738fd219b8c2936e76a9360f68936" prot="public" virt="virtual"><scope>lbann::model</scope><name>get_metrics</name></member>
      <member refid="classlbann_1_1model_1a32a189033b8ff92d233781b1039c70f1" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_num_iterations_per_epoch</name></member>
      <member refid="classlbann_1_1model_1aee5530467523924a662dec891b9a7993" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_objective_function</name></member>
      <member refid="classlbann_1_1model_1a90363b6a20269cf7197701e49f1f52a3" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_terminate_training</name></member>
      <member refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>get_weights</name></member>
      <member refid="classlbann_1_1model_1a2c82c9def03b1c60e48f52fca7708833" prot="protected" virt="virtual"><scope>lbann::model</scope><name>is_execution_mode_valid</name></member>
      <member refid="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" prot="public" virt="virtual"><scope>lbann::model</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_callbacks</name></member>
      <member refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_comm</name></member>
      <member refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_current_epoch</name></member>
      <member refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_current_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1a150ef033f81982936e007b10c421f488" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_current_phase</name></member>
      <member refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_current_step</name></member>
      <member refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_current_testing_step</name></member>
      <member refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_current_validation_step</name></member>
      <member refid="classlbann_1_1model_1a68df9efe547f53f7bf2a03ac64527990" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_default_optimizer</name></member>
      <member refid="classlbann_1_1model_1a4887fd2816e7c51b24cb8bf8e4a80a1c" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_effective_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_execution_mode</name></member>
      <member refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_layers</name></member>
      <member refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_max_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_metrics</name></member>
      <member refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_objective_function</name></member>
      <member refid="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_terminate_training</name></member>
      <member refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" prot="protected" virt="non-virtual"><scope>lbann::model</scope><name>m_weights</name></member>
      <member refid="classlbann_1_1model_1a6feaee921c434bbfc32451ed874cc051" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>model</name></member>
      <member refid="classlbann_1_1model_1a03fd1dc3edddb414b040bc009cf73371" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>model</name></member>
      <member refid="classlbann_1_1model_1a7e471599eded909c4ce7178689dd13b6" prot="public" virt="pure-virtual"><scope>lbann::model</scope><name>name</name></member>
      <member refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>operator=</name></member>
      <member refid="classlbann_1_1model_1a31c281b63593a0ec7110664f7309b01a" prot="protected" virt="virtual"><scope>lbann::model</scope><name>permute_layers</name></member>
      <member refid="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" prot="protected" virt="virtual"><scope>lbann::model</scope><name>print_layer_description</name></member>
      <member refid="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" prot="protected" virt="virtual"><scope>lbann::model</scope><name>remap_pointers</name></member>
      <member refid="classlbann_1_1model_1aaed20219476dc1458bbd058be36de1ec" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>replace_weights</name></member>
      <member refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" prot="protected" virt="virtual"><scope>lbann::model</scope><name>reset_epoch_statistics</name></member>
      <member refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" prot="protected" virt="virtual"><scope>lbann::model</scope><name>reset_mode_and_model</name></member>
      <member refid="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" prot="public" virt="virtual"><scope>lbann::model</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1model_1a4f3cc91f8495870723389be15f77184a" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>set_current_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1aa64829cba8a84928a396893172a1d116" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>set_effective_mini_batch_size</name></member>
      <member refid="classlbann_1_1model_1a375372b5b864ffbc4eaa0963f6939f65" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>set_execution_mode</name></member>
      <member refid="classlbann_1_1model_1a95fb74f678f69b763d51b2ce987c8fde" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>set_layers</name></member>
      <member refid="classlbann_1_1model_1a5bafc4e84671490c6118959becb22e16" prot="public" virt="non-virtual"><scope>lbann::model</scope><name>set_terminate_training</name></member>
      <member refid="classlbann_1_1model_1afd9dbca79503a40b7aa5c78da4d6f391" prot="public" virt="virtual"><scope>lbann::model</scope><name>setup</name></member>
      <member refid="classlbann_1_1model_1ab0e8af146d4121c1b8b04b4a3c2a455c" prot="protected" virt="virtual"><scope>lbann::model</scope><name>setup_layer_execution_order</name></member>
      <member refid="classlbann_1_1model_1a7b3e2a643c658dcaa7478d2568f29784" prot="protected" virt="virtual"><scope>lbann::model</scope><name>setup_layer_topology</name></member>
      <member refid="classlbann_1_1model_1a989ab581e359f65c9238d627cce5b589" prot="protected" virt="virtual"><scope>lbann::model</scope><name>setup_layers</name></member>
      <member refid="classlbann_1_1model_1a582edc0f930e1594381ecc7922e91b08" prot="protected" virt="virtual"><scope>lbann::model</scope><name>setup_weights</name></member>
      <member refid="classlbann_1_1model_1a0824e757e4806fad77630d69926a8911" prot="public" virt="virtual"><scope>lbann::model</scope><name>summarize_matrices</name></member>
      <member refid="classlbann_1_1model_1a1eb5efcc8f73ba9478b2ce1efb9f2d8c" prot="public" virt="virtual"><scope>lbann::model</scope><name>summarize_stats</name></member>
      <member refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" prot="public" virt="virtual"><scope>lbann::model</scope><name>train</name></member>
      <member refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" prot="protected" virt="virtual"><scope>lbann::model</scope><name>train_mini_batch</name></member>
      <member refid="classlbann_1_1model_1a7518775e0fd29ed682319193e2d264cc" prot="protected" virt="virtual"><scope>lbann::model</scope><name>update_layers</name></member>
      <member refid="classlbann_1_1model_1a38d8924938fa69857d3f9ed83ac98ee9" prot="protected" virt="virtual"><scope>lbann::model</scope><name>update_weights</name></member>
      <member refid="classlbann_1_1model_1a488da86420421a4890c8fd7a95849acc" prot="public" virt="virtual"><scope>lbann::model</scope><name>write_proto</name></member>
      <member refid="classlbann_1_1model_1ae97a8048de182af3ed8a6fbd92212958" prot="public" virt="virtual"><scope>lbann::model</scope><name>~model</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
