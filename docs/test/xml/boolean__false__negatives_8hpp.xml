<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="boolean__false__negatives_8hpp" kind="file" language="C++">
    <compoundname>boolean_false_negatives.hpp</compoundname>
    <includes refid="metric_8hpp" local="yes">lbann/metrics/metric.hpp</includes>
    <includedby refid="boolean__false__negatives_8cpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/src/metrics/boolean_false_negatives.cpp</includedby>
    <includedby refid="lbann_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</includedby>
    <incdepgraph>
      <node id="10091">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="10072" relation="include">
        </childnode>
        <childnode refid="10073" relation="include">
        </childnode>
      </node>
      <node id="10073">
        <label>El.hpp</label>
      </node>
      <node id="10072">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="10073" relation="include">
        </childnode>
        <childnode refid="10074" relation="include">
        </childnode>
        <childnode refid="10075" relation="include">
        </childnode>
        <childnode refid="10080" relation="include">
        </childnode>
      </node>
      <node id="10071">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="10072" relation="include">
        </childnode>
        <childnode refid="10081" relation="include">
        </childnode>
        <childnode refid="10085" relation="include">
        </childnode>
        <childnode refid="10091" relation="include">
        </childnode>
      </node>
      <node id="10088">
        <label>string</label>
      </node>
      <node id="10083">
        <label>map</label>
      </node>
      <node id="10090">
        <label>exception</label>
      </node>
      <node id="10077">
        <label>cstdio</label>
      </node>
      <node id="10086">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="10087" relation="include">
        </childnode>
        <childnode refid="10088" relation="include">
        </childnode>
      </node>
      <node id="10079">
        <label>cxxabi.h</label>
      </node>
      <node id="10085">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="10072" relation="include">
        </childnode>
        <childnode refid="10081" relation="include">
        </childnode>
        <childnode refid="10086" relation="include">
        </childnode>
        <childnode refid="10089" relation="include">
        </childnode>
        <childnode refid="10090" relation="include">
        </childnode>
      </node>
      <node id="10082">
        <label>vector</label>
      </node>
      <node id="10081">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="10082" relation="include">
        </childnode>
        <childnode refid="10083" relation="include">
        </childnode>
        <childnode refid="10084" relation="include">
        </childnode>
        <childnode refid="10072" relation="include">
        </childnode>
      </node>
      <node id="10076">
        <label>cstdlib</label>
      </node>
      <node id="10089">
        <label>iostream</label>
      </node>
      <node id="10070">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp</label>
        <link refid="boolean__false__negatives_8hpp"/>
        <childnode refid="10071" relation="include">
        </childnode>
      </node>
      <node id="10087">
        <label>csignal</label>
      </node>
      <node id="10080">
        <label>lbann_config.hpp</label>
      </node>
      <node id="10075">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="10076" relation="include">
        </childnode>
        <childnode refid="10077" relation="include">
        </childnode>
        <childnode refid="10078" relation="include">
        </childnode>
        <childnode refid="10079" relation="include">
        </childnode>
      </node>
      <node id="10074">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="10073" relation="include">
        </childnode>
      </node>
      <node id="10084">
        <label>typeindex</label>
      </node>
      <node id="10078">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10100">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="10101" relation="include">
        </childnode>
        <childnode refid="10102" relation="include">
        </childnode>
        <childnode refid="10103" relation="include">
        </childnode>
        <childnode refid="10104" relation="include">
        </childnode>
        <childnode refid="10105" relation="include">
        </childnode>
        <childnode refid="10106" relation="include">
        </childnode>
        <childnode refid="10107" relation="include">
        </childnode>
        <childnode refid="10108" relation="include">
        </childnode>
        <childnode refid="10098" relation="include">
        </childnode>
      </node>
      <node id="10105">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/model_factory.cpp</label>
        <link refid="model__factory_8cpp"/>
      </node>
      <node id="10097">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="10098">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10099" relation="include">
        </childnode>
        <childnode refid="10100" relation="include">
        </childnode>
        <childnode refid="10109" relation="include">
        </childnode>
      </node>
      <node id="10096">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="10097" relation="include">
        </childnode>
        <childnode refid="10094" relation="include">
        </childnode>
      </node>
      <node id="10102">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp</label>
        <link refid="layer__factory_8cpp"/>
      </node>
      <node id="10099">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/utils/protobuf_utils.cpp</label>
        <link refid="protobuf__utils_8cpp"/>
      </node>
      <node id="10110">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/init_image_data_readers.cpp</label>
        <link refid="init__image__data__readers_8cpp"/>
      </node>
      <node id="10106">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/objective_function_factory.cpp</label>
        <link refid="objective__function__factory_8cpp"/>
      </node>
      <node id="10095">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp</label>
        <link refid="proto__common_8cpp"/>
      </node>
      <node id="10104">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/metric_factory.cpp</label>
        <link refid="metric__factory_8cpp"/>
      </node>
      <node id="10093">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/metrics/boolean_false_negatives.cpp</label>
        <link refid="boolean__false__negatives_8cpp"/>
      </node>
      <node id="10094">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10096" relation="include">
        </childnode>
        <childnode refid="10098" relation="include">
        </childnode>
        <childnode refid="10111" relation="include">
        </childnode>
      </node>
      <node id="10109">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/init_image_data_readers.hpp</label>
        <link refid="init__image__data__readers_8hpp"/>
        <childnode refid="10110" relation="include">
        </childnode>
        <childnode refid="10095" relation="include">
        </childnode>
      </node>
      <node id="10107">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/optimizer_factory.cpp</label>
        <link refid="optimizer__factory_8cpp"/>
      </node>
      <node id="10092">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp</label>
        <link refid="boolean__false__negatives_8hpp"/>
        <childnode refid="10093" relation="include">
        </childnode>
        <childnode refid="10094" relation="include">
        </childnode>
      </node>
      <node id="10108">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/weights_factory.cpp</label>
        <link refid="weights__factory_8cpp"/>
      </node>
      <node id="10101">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp</label>
        <link refid="callback__factory_8cpp"/>
      </node>
      <node id="10111">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/protobuf_utils.hpp</label>
        <link refid="protobuf__utils_8hpp"/>
        <childnode refid="10099" relation="include">
        </childnode>
      </node>
      <node id="10103">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_graph_factory.cpp</label>
        <link refid="layer__graph__factory_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlbann_1_1boolean__false__negatives__metric" prot="public">lbann::boolean_false_negatives_metric</innerclass>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LBANN_METRIC_BOOLEAN_FALSE_NEGATIVES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LBANN_METRIC_BOOLEAN_FALSE_NEGATIVES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="metric_8hpp" kindref="compound">lbann/metrics/metric.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classlbann_1_1boolean__false__negatives__metric" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1boolean__false__negatives__metric" kindref="compound">boolean_false_negatives_metric</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1metric" kindref="compound">metric</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43" refid="classlbann_1_1boolean__false__negatives__metric_1abb7220421c393713e5a79a3da3b4b79c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1boolean__false__negatives__metric_1abb7220421c393713e5a79a3da3b4b79c" kindref="member">boolean_false_negatives_metric</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>)<sp/>:<sp/><ref refid="classlbann_1_1metric" kindref="compound">metric</ref>(comm)<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1boolean__false__negatives__metric_1abb7220421c393713e5a79a3da3b4b79c" kindref="member">boolean_false_negatives_metric</ref>(</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1boolean__false__negatives__metric" kindref="compound">boolean_false_negatives_metric</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1boolean__false__negatives__metric" kindref="compound">boolean_false_negatives_metric</ref>&amp;<sp/><ref refid="classlbann_1_1boolean__false__negatives__metric_1a3182852b817e1e4edc5593220ab84e58" kindref="member">operator=</ref>(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1boolean__false__negatives__metric" kindref="compound">boolean_false_negatives_metric</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1boolean__false__negatives__metric_1a85ce390a99cba31c006e148de4a9354c" kindref="member">~boolean_false_negatives_metric</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49" refid="classlbann_1_1boolean__false__negatives__metric_1abd0e7a6040232d5b6d8b10e79a3208c1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1boolean__false__negatives__metric" kindref="compound">boolean_false_negatives_metric</ref>*<sp/><ref refid="classlbann_1_1boolean__false__negatives__metric_1abd0e7a6040232d5b6d8b10e79a3208c1" kindref="member">copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1boolean__false__negatives__metric_1abb7220421c393713e5a79a3da3b4b79c" kindref="member">boolean_false_negatives_metric</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classlbann_1_1boolean__false__negatives__metric_1a7e7f60e7babfbaad2dce5def175a8fbd" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1boolean__false__negatives__metric_1a7e7f60e7babfbaad2dce5def175a8fbd" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;boolean<sp/>false<sp/>negatives&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="55" refid="classlbann_1_1boolean__false__negatives__metric_1abe2bdb0c15ff481caa234e13fe7df2b9" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1boolean__false__negatives__metric_1abe2bdb0c15ff481caa234e13fe7df2b9" kindref="member">get_unit</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/><ref refid="classlbann_1_1boolean__false__negatives__metric_1a598dfc1ee40c4e11f001cbf8899e0e0a" kindref="member">evaluate_compute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac41b9ec75e920b610e8907e066074b30" kindref="member">prediction</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>ground_truth)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>LBANN_METRIC_BOOLEAN_FALSE_NEGATIVES_HPP</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/metrics/boolean_false_negatives.hpp"/>
  </compounddef>
</doxygen>
