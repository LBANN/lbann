<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1partitioned__io__buffer" kind="class" language="C++" prot="public">
    <compoundname>lbann::partitioned_io_buffer</compoundname>
    <basecompoundref refid="classlbann_1_1generic__io__buffer" prot="public" virt="non-virtual">lbann::generic_io_buffer</basecompoundref>
    <includes refid="partitioned__io__buffer_8hpp" local="no">partitioned_io_buffer.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classlbann_1_1partitioned__io__buffer_1a80d8916c269b26e605637353abe322b2" prot="public" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> *</type>
        <definition>Mat* lbann::partitioned_io_buffer::M_local</definition>
        <argsstring></argsstring>
        <name>M_local</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="60" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" bodystart="60" bodyend="-1"/>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a58412c3f37ea3fbcf492f127781c7617" compoundref="partitioned__io__buffer_8hpp" startline="48" endline="48">set_local_matrix_bypass</referencedby>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a777719c9cebe912dc4c005e2c78d77c8" compoundref="partitioned__io__buffer_8cpp" startline="34" endline="53">fetch_to_local_matrix</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1a2dd39b740a3c0ea613cef9540d3c3e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::partitioned_io_buffer::partitioned_io_buffer</definition>
        <argsstring>(lbann_comm *comm, int num_parallel_readers, std::map&lt; execution_mode, generic_data_reader *&gt; data_readers)</argsstring>
        <name>partitioned_io_buffer</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_parallel_readers</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>, <ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *&gt;</type>
          <declname>data_readers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="39" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/partitioned_io_buffer.cpp" bodystart="30" bodyend="32"/>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1afce1a8859516dfaa482159806b75c263" compoundref="partitioned__io__buffer_8hpp" startline="45" endline="45">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1a54a675792e2ae8d2ac4bb044b6209dcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::partitioned_io_buffer::partitioned_io_buffer</definition>
        <argsstring>(const partitioned_io_buffer &amp;)=default</argsstring>
        <name>partitioned_io_buffer</name>
        <param>
          <type>const <ref refid="classlbann_1_1partitioned__io__buffer" kindref="compound">partitioned_io_buffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1a69379e060f2ab7294c55f105f2c8d06c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1partitioned__io__buffer" kindref="compound">partitioned_io_buffer</ref> &amp;</type>
        <definition>partitioned_io_buffer&amp; lbann::partitioned_io_buffer::operator=</definition>
        <argsstring>(const partitioned_io_buffer &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1partitioned__io__buffer" kindref="compound">partitioned_io_buffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1ada9c5ec93d1b6fbdbb6d4642f0809c1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::partitioned_io_buffer::~partitioned_io_buffer</definition>
        <argsstring>() override</argsstring>
        <name>~partitioned_io_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="44" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1afce1a8859516dfaa482159806b75c263" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1partitioned__io__buffer" kindref="compound">partitioned_io_buffer</ref> *</type>
        <definition>partitioned_io_buffer* lbann::partitioned_io_buffer::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1a9d8020b82cf467c9148b0b37e7229262">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="45" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" bodystart="45" bodyend="45"/>
        <references refid="classlbann_1_1partitioned__io__buffer_1a2dd39b740a3c0ea613cef9540d3c3e5d" compoundref="partitioned__io__buffer_8cpp" startline="30" endline="32">partitioned_io_buffer</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1a55120307848cabf8ef12558594b4e9e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::partitioned_io_buffer::get_type</definition>
        <argsstring>() const override</argsstring>
        <name>get_type</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1adc77c0a280f8a200a8d8495c3a371ebb">get_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return this buffer&apos;s type, e.g: &quot;partitioned_io_buffer,&quot; &quot;distributed_io_buffer,&quot; etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="47" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1a58412c3f37ea3fbcf492f127781c7617" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::partitioned_io_buffer::set_local_matrix_bypass</definition>
        <argsstring>(Mat *m) override</argsstring>
        <name>set_local_matrix_bypass</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1af84c26ab5ee77d1d9ed9ea5d62823815">set_local_matrix_bypass</reimplements>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="48" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" bodystart="48" bodyend="48"/>
        <references refid="classlbann_1_1partitioned__io__buffer_1a80d8916c269b26e605637353abe322b2" compoundref="partitioned__io__buffer_8hpp" startline="60">M_local</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1aa0a1d61dcecdd5c4091e0a97eb2d075a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::partitioned_io_buffer::set_std_matrix_view</definition>
        <argsstring>(El::Int cur_mini_batch_size) override</argsstring>
        <name>set_std_matrix_view</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1a458d9bf722effce4177a0ac0aee9124f">set_std_matrix_view</reimplements>
        <param>
          <type>El::Int</type>
          <declname>cur_mini_batch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="49" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1a06a204fbf82f092b0225ab10c1bec98e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::partitioned_io_buffer::setup_data</definition>
        <argsstring>(El::Int num_neurons, El::Int max_minibatch_size) override</argsstring>
        <name>setup_data</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1a00f3920147f7f19eceb5336bd6ddb421">setup_data</reimplements>
        <param>
          <type>El::Int</type>
          <declname>num_neurons</declname>
        </param>
        <param>
          <type>El::Int</type>
          <declname>max_minibatch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="50" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" bodystart="50" bodyend="50"/>
        <references refid="classlbann_1_1partitioned__io__buffer_1a777719c9cebe912dc4c005e2c78d77c8" compoundref="partitioned__io__buffer_8cpp" startline="34" endline="53">fetch_to_local_matrix</references>
        <references refid="classlbann_1_1partitioned__io__buffer_1a906b8b13a8b9a9e8080d4e4d4bba25bc" compoundref="partitioned__io__buffer_8cpp" startline="55" endline="59">distribute_from_local_matrix</references>
        <references refid="classlbann_1_1partitioned__io__buffer_1a0944161f90eb65286974c3e85155608f" compoundref="partitioned__io__buffer_8cpp" startline="61" endline="72">is_data_set_processed</references>
        <references refid="classlbann_1_1partitioned__io__buffer_1a50b6e2b7a82927526758f7cfb18a1ded" compoundref="partitioned__io__buffer_8cpp" startline="104" endline="196">calculate_num_iterations_per_epoch_spanning_models</references>
        <references refid="classlbann_1_1partitioned__io__buffer_1ad707e54827d6e537127341b10407b716" compoundref="partitioned__io__buffer_8cpp" startline="198" endline="243">calculate_num_iterations_per_epoch_single_model</references>
        <references refid="classlbann_1_1partitioned__io__buffer_1a5048100fb7cdc13908ecba6b4415b977" compoundref="partitioned__io__buffer_8cpp" startline="74" endline="102">compute_max_num_parallel_readers</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1a777719c9cebe912dc4c005e2c78d77c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int lbann::partitioned_io_buffer::fetch_to_local_matrix</definition>
        <argsstring>(generic_data_reader *data_reader, execution_mode mode) override</argsstring>
        <name>fetch_to_local_matrix</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1af9fc2100d41328fe399acf7bced950d7">fetch_to_local_matrix</reimplements>
        <param>
          <type><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *</type>
          <declname>data_reader</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Coordinate all available readers so that the perform I/O in the same step Check to make sure that the local matrix has space for data</para><para>Each data reader needs to either have independent / split data, or take an offset / stride </para>        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="52" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/partitioned_io_buffer.cpp" bodystart="34" bodyend="53"/>
        <references refid="classlbann_1_1generic__data__reader_1ad15887cc31657d03925835aab0d4b675" compoundref="data__reader_8hpp" startline="405" endline="407">lbann::generic_data_reader::get_num_parallel_readers</references>
        <references refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" compoundref="generic__io__buffer_8hpp" startline="105">lbann::generic_io_buffer::m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="classlbann_1_1partitioned__io__buffer_1a80d8916c269b26e605637353abe322b2" compoundref="partitioned__io__buffer_8hpp" startline="60">M_local</references>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a06a204fbf82f092b0225ab10c1bec98e" compoundref="partitioned__io__buffer_8hpp" startline="50" endline="50">setup_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1a906b8b13a8b9a9e8080d4e4d4bba25bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::partitioned_io_buffer::distribute_from_local_matrix</definition>
        <argsstring>(AbsDistMat &amp;Ms, generic_data_reader *data_reader, execution_mode mode) override</argsstring>
        <name>distribute_from_local_matrix</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1a08c2bb93b86d2926df52ef9272a07d87">distribute_from_local_matrix</reimplements>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>Ms</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *</type>
          <declname>data_reader</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Nothing to do here, it is already done </para>        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="53" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/partitioned_io_buffer.cpp" bodystart="55" bodyend="59"/>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a06a204fbf82f092b0225ab10c1bec98e" compoundref="partitioned__io__buffer_8hpp" startline="50" endline="50">setup_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1a0944161f90eb65286974c3e85155608f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::partitioned_io_buffer::is_data_set_processed</definition>
        <argsstring>(generic_data_reader *data_reader, execution_mode mode) override</argsstring>
        <name>is_data_set_processed</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1a9a038d40aec50dbc24c0abe21ad0c0a9">is_data_set_processed</reimplements>
        <param>
          <type><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *</type>
          <declname>data_reader</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="54" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/partitioned_io_buffer.cpp" bodystart="61" bodyend="72"/>
        <references refid="classlbann_1_1generic__data__reader_1a06fb58d1c0b84b8c76f5b4d160751f34" compoundref="data__reader_8hpp" startline="461" endline="463">lbann::generic_data_reader::get_num_iterations_per_epoch</references>
        <references refid="classlbann_1_1generic__data__reader_1a7c884d3646396a05d9e01e3b7a260419" compoundref="data__reader_8hpp" startline="466" endline="468">lbann::generic_data_reader::get_current_step_in_epoch</references>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a06a204fbf82f092b0225ab10c1bec98e" compoundref="partitioned__io__buffer_8hpp" startline="50" endline="50">setup_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1a50b6e2b7a82927526758f7cfb18a1ded" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::partitioned_io_buffer::calculate_num_iterations_per_epoch_spanning_models</definition>
        <argsstring>(int max_mini_batch_size, generic_data_reader *data_reader) override</argsstring>
        <name>calculate_num_iterations_per_epoch_spanning_models</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1ac943184cf364f7922648e3acb760b41e">calculate_num_iterations_per_epoch_spanning_models</reimplements>
        <param>
          <type>int</type>
          <declname>max_mini_batch_size</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *</type>
          <declname>data_reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Make sure that the mini-batch size is not larger than the data set</para><para>Check to make sure that there is enough data for all of the parallel readers</para><para>Set the basic parameters for stride and offset of the data reader</para><para>Set mini-batch size and stride</para><para>Set data reader base offset and model offset</para><para>Given that each model has to have at least one reader, what is the minimum stride</para><para>The global mini-batch is a full mini-batch per model</para><para>By default the last mini-batch is a full one</para><para>By default the last mini-batch is a full one per model</para><para>Note that m_comm-&gt;get_model_rank() + m_comm-&gt;get_rank_in_model() is not equivalent to m_comm-&gt;get_world_rank() from a parallel I/O perspective Given the data readers model rank, how many models have a higher rank</para><para>By default the last stride of each reader is part of a regular (full) round</para><para>BVE FIXME - I feel like this is wrong I don&apos;t think that the -1 should be there</para><para>The last mini-batch may be partial and thus may have a smaller stride </para>        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="56" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/partitioned_io_buffer.cpp" bodystart="104" bodyend="196"/>
        <references refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" compoundref="data__reader_8hpp" startline="441" endline="443">lbann::generic_data_reader::get_num_data</references>
        <references refid="classlbann_1_1partitioned__io__buffer_1a5048100fb7cdc13908ecba6b4415b977" compoundref="partitioned__io__buffer_8cpp" startline="74" endline="102">compute_max_num_parallel_readers</references>
        <references refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" compoundref="generic__io__buffer_8hpp" startline="105">lbann::generic_io_buffer::m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" compoundref="comm_8hpp" startline="156" endline="158">lbann::lbann_comm::get_procs_per_model</references>
        <references refid="classlbann_1_1generic__data__reader_1a9b348d52852062dbc66b0accde5c6e8a" compoundref="data__reader_8hpp" startline="401" endline="403">lbann::generic_data_reader::set_num_parallel_readers</references>
        <references refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" compoundref="comm_8hpp" startline="152" endline="154">lbann::lbann_comm::get_num_models</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" compoundref="comm_8hpp" startline="112" endline="114">lbann::lbann_comm::get_model_rank</references>
        <references refid="classlbann_1_1generic__data__reader_1adf161cca4b80eb95f9748050e7fe1809" compoundref="data__reader_8hpp" startline="301" endline="303">lbann::generic_data_reader::set_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1add5bd1d488967ebab5852b636e07db15" compoundref="data__reader_8hpp" startline="329" endline="331">lbann::generic_data_reader::set_stride_to_next_mini_batch</references>
        <references refid="classlbann_1_1generic__data__reader_1adb90391e3e9c8e3c2aba4d4a0911ca82" compoundref="data__reader_8hpp" startline="337" endline="339">lbann::generic_data_reader::set_sample_stride</references>
        <references refid="classlbann_1_1generic__data__reader_1ac1f3f81ca0e2920658cba026fe09a95b" compoundref="data__reader_8hpp" startline="345" endline="347">lbann::generic_data_reader::set_iteration_stride</references>
        <references refid="classlbann_1_1generic__data__reader_1adcf4c6012f44c78589bb75ea530cf518" compoundref="data__reader_8hpp" startline="353" endline="355">lbann::generic_data_reader::set_base_offset</references>
        <references refid="classlbann_1_1generic__data__reader_1ab20e835e0e0565717e0fd74da09d4890" compoundref="data__reader_8hpp" startline="361" endline="363">lbann::generic_data_reader::set_model_offset</references>
        <references refid="classlbann_1_1generic__data__reader_1ac6d4a5ba1d4e1134620cddcac343bf59" compoundref="data__reader_8hpp" startline="425" endline="429">lbann::generic_data_reader::set_initial_position</references>
        <references refid="classlbann_1_1generic__data__reader_1a03388338e75d37e1b28389d22bd5b604" compoundref="data__reader_8hpp" startline="321" endline="323">lbann::generic_data_reader::set_global_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1a357389ee93428b68f9400de708f6915d" compoundref="data__reader_8hpp" startline="369" endline="371">lbann::generic_data_reader::set_last_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1a4455d137b469287bf964436f9fcc6d94" compoundref="data__reader_8hpp" startline="377" endline="379">lbann::generic_data_reader::set_global_last_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1a91573d9599b503a6bdf2939e69659e8b" compoundref="data__reader_8hpp" startline="457" endline="459">lbann::generic_data_reader::set_num_iterations_per_epoch</references>
        <references refid="classlbann_1_1generic__data__reader_1a79cb3bee4e0d19006ef9213763dc8af2" compoundref="data__reader_8hpp" startline="373" endline="375">lbann::generic_data_reader::get_last_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1af2fc6b35ad8139d15729b19db2895827" compoundref="data__reader_8hpp" startline="393" endline="395">lbann::generic_data_reader::set_stride_to_last_mini_batch</references>
        <references refid="classlbann_1_1generic__data__reader_1a2d1d5657e8b9bf8b8a9d51b33aedf017" compoundref="data__reader_8hpp" startline="333" endline="335">lbann::generic_data_reader::get_stride_to_next_mini_batch</references>
        <references refid="classlbann_1_1generic__data__reader_1a65b9d39e7585ec325eb40a123cd70891" compoundref="data__reader_8hpp" startline="357" endline="359">lbann::generic_data_reader::get_base_offset</references>
        <references refid="classlbann_1_1generic__data__reader_1a9e78b6062be9746c81eabf0f9d28264e" compoundref="data__reader_8hpp" startline="365" endline="367">lbann::generic_data_reader::get_model_offset</references>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a06a204fbf82f092b0225ab10c1bec98e" compoundref="partitioned__io__buffer_8hpp" startline="50" endline="50">setup_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1ad707e54827d6e537127341b10407b716" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::partitioned_io_buffer::calculate_num_iterations_per_epoch_single_model</definition>
        <argsstring>(int max_mini_batch_size, generic_data_reader *data_reader) override</argsstring>
        <name>calculate_num_iterations_per_epoch_single_model</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1a4c71135fada7f0da0b315d538d327e59">calculate_num_iterations_per_epoch_single_model</reimplements>
        <param>
          <type>int</type>
          <declname>max_mini_batch_size</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *</type>
          <declname>data_reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Check to make sure that there is enough data for all of the parallel readers</para><para>Set the basic parameters for stride and offset of the data reader</para><para>Set mini-batch size and stride</para><para>Set data reader base offset and model offset</para><para>By default each data reader will plan to process the entire data set </para>        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="57" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/partitioned_io_buffer.cpp" bodystart="198" bodyend="243"/>
        <references refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" compoundref="data__reader_8hpp" startline="441" endline="443">lbann::generic_data_reader::get_num_data</references>
        <references refid="classlbann_1_1partitioned__io__buffer_1a5048100fb7cdc13908ecba6b4415b977" compoundref="partitioned__io__buffer_8cpp" startline="74" endline="102">compute_max_num_parallel_readers</references>
        <references refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" compoundref="generic__io__buffer_8hpp" startline="105">lbann::generic_io_buffer::m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" compoundref="comm_8hpp" startline="156" endline="158">lbann::lbann_comm::get_procs_per_model</references>
        <references refid="classlbann_1_1generic__data__reader_1a9b348d52852062dbc66b0accde5c6e8a" compoundref="data__reader_8hpp" startline="401" endline="403">lbann::generic_data_reader::set_num_parallel_readers</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="classlbann_1_1generic__data__reader_1adf161cca4b80eb95f9748050e7fe1809" compoundref="data__reader_8hpp" startline="301" endline="303">lbann::generic_data_reader::set_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1add5bd1d488967ebab5852b636e07db15" compoundref="data__reader_8hpp" startline="329" endline="331">lbann::generic_data_reader::set_stride_to_next_mini_batch</references>
        <references refid="classlbann_1_1generic__data__reader_1adb90391e3e9c8e3c2aba4d4a0911ca82" compoundref="data__reader_8hpp" startline="337" endline="339">lbann::generic_data_reader::set_sample_stride</references>
        <references refid="classlbann_1_1generic__data__reader_1ac1f3f81ca0e2920658cba026fe09a95b" compoundref="data__reader_8hpp" startline="345" endline="347">lbann::generic_data_reader::set_iteration_stride</references>
        <references refid="classlbann_1_1generic__data__reader_1adcf4c6012f44c78589bb75ea530cf518" compoundref="data__reader_8hpp" startline="353" endline="355">lbann::generic_data_reader::set_base_offset</references>
        <references refid="classlbann_1_1generic__data__reader_1ab20e835e0e0565717e0fd74da09d4890" compoundref="data__reader_8hpp" startline="361" endline="363">lbann::generic_data_reader::set_model_offset</references>
        <references refid="classlbann_1_1generic__data__reader_1ac6d4a5ba1d4e1134620cddcac343bf59" compoundref="data__reader_8hpp" startline="425" endline="429">lbann::generic_data_reader::set_initial_position</references>
        <references refid="classlbann_1_1generic__data__reader_1a91573d9599b503a6bdf2939e69659e8b" compoundref="data__reader_8hpp" startline="457" endline="459">lbann::generic_data_reader::set_num_iterations_per_epoch</references>
        <references refid="classlbann_1_1generic__data__reader_1a357389ee93428b68f9400de708f6915d" compoundref="data__reader_8hpp" startline="369" endline="371">lbann::generic_data_reader::set_last_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1af2fc6b35ad8139d15729b19db2895827" compoundref="data__reader_8hpp" startline="393" endline="395">lbann::generic_data_reader::set_stride_to_last_mini_batch</references>
        <references refid="classlbann_1_1generic__data__reader_1a2d1d5657e8b9bf8b8a9d51b33aedf017" compoundref="data__reader_8hpp" startline="333" endline="335">lbann::generic_data_reader::get_stride_to_next_mini_batch</references>
        <references refid="classlbann_1_1generic__data__reader_1a03388338e75d37e1b28389d22bd5b604" compoundref="data__reader_8hpp" startline="321" endline="323">lbann::generic_data_reader::set_global_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1a4455d137b469287bf964436f9fcc6d94" compoundref="data__reader_8hpp" startline="377" endline="379">lbann::generic_data_reader::set_global_last_mini_batch_size</references>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a06a204fbf82f092b0225ab10c1bec98e" compoundref="partitioned__io__buffer_8hpp" startline="50" endline="50">setup_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1partitioned__io__buffer_1a5048100fb7cdc13908ecba6b4415b977" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int lbann::partitioned_io_buffer::compute_max_num_parallel_readers</definition>
        <argsstring>(long data_set_size, int mini_batch_size, int requested_num_parallel_readers) const override</argsstring>
        <name>compute_max_num_parallel_readers</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1affc26b29e3f9eaaae5c033648e1a0141">compute_max_num_parallel_readers</reimplements>
        <param>
          <type>long</type>
          <declname>data_set_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mini_batch_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>requested_num_parallel_readers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="58" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/partitioned_io_buffer.cpp" bodystart="74" bodyend="102"/>
        <references refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" compoundref="generic__io__buffer_8hpp" startline="105">lbann::generic_io_buffer::m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" compoundref="comm_8hpp" startline="156" endline="158">lbann::lbann_comm::get_procs_per_model</references>
        <references refid="classlbann_1_1lbann__comm_1ad8a5790dfa9191d4b4f889e8707e57f1" compoundref="comm_8hpp" startline="140" endline="142">lbann::lbann_comm::am_model_master</references>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a06a204fbf82f092b0225ab10c1bec98e" compoundref="partitioned__io__buffer_8hpp" startline="50" endline="50">setup_data</referencedby>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1a50b6e2b7a82927526758f7cfb18a1ded" compoundref="partitioned__io__buffer_8cpp" startline="104" endline="196">calculate_num_iterations_per_epoch_spanning_models</referencedby>
        <referencedby refid="classlbann_1_1partitioned__io__buffer_1ad707e54827d6e537127341b10407b716" compoundref="partitioned__io__buffer_8cpp" startline="198" endline="243">calculate_num_iterations_per_epoch_single_model</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Parallel I/O routines for managing partitioned minibatches </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1816">
        <label>lbann::generic_io_buffer</label>
        <link refid="classlbann_1_1generic__io__buffer"/>
      </node>
      <node id="1815">
        <label>lbann::partitioned_io_buffer</label>
        <link refid="classlbann_1_1partitioned__io__buffer"/>
        <childnode refid="1816" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1819">
        <label>lbann::fetch_data_functor</label>
        <link refid="classlbann_1_1fetch__data__functor"/>
      </node>
      <node id="1818">
        <label>lbann::generic_io_buffer</label>
        <link refid="classlbann_1_1generic__io__buffer"/>
        <childnode refid="1819" relation="usage">
          <edgelabel>fetch_data_fn</edgelabel>
        </childnode>
        <childnode refid="1820" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1821" relation="usage">
          <edgelabel>update_data_reader_fn</edgelabel>
        </childnode>
      </node>
      <node id="1817">
        <label>lbann::partitioned_io_buffer</label>
        <link refid="classlbann_1_1partitioned__io__buffer"/>
        <childnode refid="1818" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1820">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="1821">
        <label>lbann::update_data_reader_functor</label>
        <link refid="classlbann_1_1update__data__reader__functor"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" line="37" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/partitioned_io_buffer.hpp" bodystart="37" bodyend="61"/>
    <listofallmembers>
      <member refid="classlbann_1_1partitioned__io__buffer_1ad707e54827d6e537127341b10407b716" prot="public" virt="virtual"><scope>lbann::partitioned_io_buffer</scope><name>calculate_num_iterations_per_epoch_single_model</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1a50b6e2b7a82927526758f7cfb18a1ded" prot="public" virt="virtual"><scope>lbann::partitioned_io_buffer</scope><name>calculate_num_iterations_per_epoch_spanning_models</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1a5048100fb7cdc13908ecba6b4415b977" prot="public" virt="virtual"><scope>lbann::partitioned_io_buffer</scope><name>compute_max_num_parallel_readers</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1afce1a8859516dfaa482159806b75c263" prot="public" virt="virtual"><scope>lbann::partitioned_io_buffer</scope><name>copy</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1a906b8b13a8b9a9e8080d4e4d4bba25bc" prot="public" virt="virtual"><scope>lbann::partitioned_io_buffer</scope><name>distribute_from_local_matrix</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1a267170b4fd11dc60c782a9cb2b7b06cc" prot="public" virt="non-virtual"><scope>lbann::partitioned_io_buffer</scope><name>fetch_data_fn</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1a777719c9cebe912dc4c005e2c78d77c8" prot="public" virt="virtual"><scope>lbann::partitioned_io_buffer</scope><name>fetch_to_local_matrix</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1a21e2ef867da6fb0fa334d751ae6b692f" prot="public" virt="non-virtual"><scope>lbann::partitioned_io_buffer</scope><name>generic_io_buffer</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1a0810bd8f8c803aa992e4c29b4eee3506" prot="public" virt="non-virtual"><scope>lbann::partitioned_io_buffer</scope><name>generic_io_buffer</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1a55120307848cabf8ef12558594b4e9e5" prot="public" virt="virtual"><scope>lbann::partitioned_io_buffer</scope><name>get_type</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1a0944161f90eb65286974c3e85155608f" prot="public" virt="virtual"><scope>lbann::partitioned_io_buffer</scope><name>is_data_set_processed</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" prot="public" virt="non-virtual"><scope>lbann::partitioned_io_buffer</scope><name>m_comm</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1a80d8916c269b26e605637353abe322b2" prot="public" virt="non-virtual"><scope>lbann::partitioned_io_buffer</scope><name>M_local</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1a69379e060f2ab7294c55f105f2c8d06c" prot="public" virt="non-virtual"><scope>lbann::partitioned_io_buffer</scope><name>operator=</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1ae8d2b80e11cf780def151a425a6b1fa0" prot="public" virt="non-virtual" ambiguityscope="lbann::generic_io_buffer::"><scope>lbann::partitioned_io_buffer</scope><name>operator=</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1a2dd39b740a3c0ea613cef9540d3c3e5d" prot="public" virt="non-virtual"><scope>lbann::partitioned_io_buffer</scope><name>partitioned_io_buffer</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1a54a675792e2ae8d2ac4bb044b6209dcd" prot="public" virt="non-virtual"><scope>lbann::partitioned_io_buffer</scope><name>partitioned_io_buffer</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1a58412c3f37ea3fbcf492f127781c7617" prot="public" virt="virtual"><scope>lbann::partitioned_io_buffer</scope><name>set_local_matrix_bypass</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1aa0a1d61dcecdd5c4091e0a97eb2d075a" prot="public" virt="virtual"><scope>lbann::partitioned_io_buffer</scope><name>set_std_matrix_view</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1a06a204fbf82f092b0225ab10c1bec98e" prot="public" virt="virtual"><scope>lbann::partitioned_io_buffer</scope><name>setup_data</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1a031eda7559a9e241afb3958b56088560" prot="public" virt="non-virtual"><scope>lbann::partitioned_io_buffer</scope><name>update_data_reader_fn</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1a0b531621374f697db06d8a3feec095cf" prot="public" virt="virtual"><scope>lbann::partitioned_io_buffer</scope><name>~generic_io_buffer</name></member>
      <member refid="classlbann_1_1partitioned__io__buffer_1ada9c5ec93d1b6fbdbb6d4642f0809c1b" prot="public" virt="non-virtual"><scope>lbann::partitioned_io_buffer</scope><name>~partitioned_io_buffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
