<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="polya__negloglike_8cpp" kind="file" language="C++">
    <compoundname>polya_negloglike.cpp</compoundname>
    <includes refid="polya__negloglike_8hpp" local="yes">lbann/objective_functions/loss_functions/polya_negloglike.hpp</includes>
    <incdepgraph>
      <node id="22409">
        <label>sys/stat.h</label>
      </node>
      <node id="22386">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="22387" relation="include">
        </childnode>
        <childnode refid="22383" relation="include">
        </childnode>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
      </node>
      <node id="22429">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="22426" relation="include">
        </childnode>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
        <childnode refid="22401" relation="include">
        </childnode>
        <childnode refid="22390" relation="include">
        </childnode>
        <childnode refid="22430" relation="include">
        </childnode>
        <childnode refid="22431" relation="include">
        </childnode>
      </node>
      <node id="22368">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/polya_negloglike.cpp</label>
        <link refid="polya__negloglike_8cpp"/>
        <childnode refid="22369" relation="include">
        </childnode>
      </node>
      <node id="22412">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="22380" relation="include">
        </childnode>
        <childnode refid="22372" relation="include">
        </childnode>
      </node>
      <node id="22370">
        <label>lbann/objective_functions/loss_functions/loss_function.hpp</label>
        <link refid="loss__function_8hpp"/>
        <childnode refid="22371" relation="include">
        </childnode>
        <childnode refid="22403" relation="include">
        </childnode>
      </node>
      <node id="22398">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22373" relation="include">
        </childnode>
      </node>
      <node id="22373">
        <label>El.hpp</label>
      </node>
      <node id="22372">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="22373" relation="include">
        </childnode>
        <childnode refid="22374" relation="include">
        </childnode>
        <childnode refid="22375" relation="include">
        </childnode>
        <childnode refid="22380" relation="include">
        </childnode>
      </node>
      <node id="22420">
        <label>lbann/io/data_buffers/distributed_io_buffer.hpp</label>
        <link refid="distributed__io__buffer_8hpp"/>
        <childnode refid="22418" relation="include">
        </childnode>
      </node>
      <node id="22427">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="22383" relation="include">
        </childnode>
        <childnode refid="22400" relation="include">
        </childnode>
        <childnode refid="22426" relation="include">
        </childnode>
        <childnode refid="22428" relation="include">
        </childnode>
        <childnode refid="22429" relation="include">
        </childnode>
      </node>
      <node id="22413">
        <label>cassert</label>
      </node>
      <node id="22411">
        <label>fcntl.h</label>
      </node>
      <node id="22425">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
        <childnode refid="22390" relation="include">
        </childnode>
        <childnode refid="22398" relation="include">
        </childnode>
      </node>
      <node id="22404">
        <label>lbann/layers/io/io_layer.hpp</label>
        <link refid="io__layer_8hpp"/>
        <childnode refid="22381" relation="include">
        </childnode>
        <childnode refid="22405" relation="include">
        </childnode>
        <childnode refid="22416" relation="include">
        </childnode>
        <childnode refid="22398" relation="include">
        </childnode>
        <childnode refid="22390" relation="include">
        </childnode>
        <childnode refid="22387" relation="include">
        </childnode>
        <childnode refid="22410" relation="include">
        </childnode>
        <childnode refid="22409" relation="include">
        </childnode>
        <childnode refid="22415" relation="include">
        </childnode>
        <childnode refid="22377" relation="include">
        </childnode>
      </node>
      <node id="22387">
        <label>string</label>
      </node>
      <node id="22418">
        <label>lbann/io/data_buffers/generic_io_buffer.hpp</label>
        <link refid="generic__io__buffer_8hpp"/>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
        <childnode refid="22405" relation="include">
        </childnode>
      </node>
      <node id="22369">
        <label>lbann/objective_functions/loss_functions/polya_negloglike.hpp</label>
        <link refid="polya__negloglike_8hpp"/>
        <childnode refid="22370" relation="include">
        </childnode>
      </node>
      <node id="22395">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="22383" relation="include">
        </childnode>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
        <childnode refid="22390" relation="include">
        </childnode>
      </node>
      <node id="22401">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="22402" relation="include">
        </childnode>
      </node>
      <node id="22384">
        <label>map</label>
      </node>
      <node id="22400">
        <label>unordered_set</label>
      </node>
      <node id="22430">
        <label>omp.h</label>
      </node>
      <node id="22394">
        <label>exception</label>
      </node>
      <node id="22407">
        <label>random</label>
      </node>
      <node id="22397">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
        <childnode refid="22390" relation="include">
        </childnode>
        <childnode refid="22395" relation="include">
        </childnode>
      </node>
      <node id="22410">
        <label>sys/types.h</label>
      </node>
      <node id="22428">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22386" relation="include">
        </childnode>
        <childnode refid="22421" relation="include">
        </childnode>
        <childnode refid="22381" relation="include">
        </childnode>
      </node>
      <node id="22422">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="22393" relation="include">
        </childnode>
        <childnode refid="22383" relation="include">
        </childnode>
        <childnode refid="22423" relation="include">
        </childnode>
        <childnode refid="22384" relation="include">
        </childnode>
      </node>
      <node id="22377">
        <label>cstdio</label>
      </node>
      <node id="22419">
        <label>lbann/io/data_buffers/partitioned_io_buffer.hpp</label>
        <link refid="partitioned__io__buffer_8hpp"/>
        <childnode refid="22418" relation="include">
        </childnode>
      </node>
      <node id="22391">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="22392" relation="include">
        </childnode>
        <childnode refid="22387" relation="include">
        </childnode>
      </node>
      <node id="22379">
        <label>cxxabi.h</label>
      </node>
      <node id="22390">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
        <childnode refid="22391" relation="include">
        </childnode>
        <childnode refid="22393" relation="include">
        </childnode>
        <childnode refid="22394" relation="include">
        </childnode>
      </node>
      <node id="22415">
        <label>unistd.h</label>
      </node>
      <node id="22383">
        <label>vector</label>
      </node>
      <node id="22382">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="22383" relation="include">
        </childnode>
        <childnode refid="22384" relation="include">
        </childnode>
        <childnode refid="22385" relation="include">
        </childnode>
        <childnode refid="22372" relation="include">
        </childnode>
      </node>
      <node id="22424">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="22371" relation="include">
        </childnode>
        <childnode refid="22425" relation="include">
        </childnode>
      </node>
      <node id="22408">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="22409" relation="include">
        </childnode>
        <childnode refid="22410" relation="include">
        </childnode>
        <childnode refid="22411" relation="include">
        </childnode>
      </node>
      <node id="22399">
        <label>lbann.pb.h</label>
      </node>
      <node id="22376">
        <label>cstdlib</label>
      </node>
      <node id="22417">
        <label>lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="22404" relation="include">
        </childnode>
        <childnode refid="22418" relation="include">
        </childnode>
        <childnode refid="22419" relation="include">
        </childnode>
        <childnode refid="22420" relation="include">
        </childnode>
        <childnode refid="22421" relation="include">
        </childnode>
        <childnode refid="22427" relation="include">
        </childnode>
      </node>
      <node id="22393">
        <label>iostream</label>
      </node>
      <node id="22388">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="22389" relation="include">
        </childnode>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
        <childnode refid="22390" relation="include">
        </childnode>
        <childnode refid="22395" relation="include">
        </childnode>
        <childnode refid="22396" relation="include">
        </childnode>
        <childnode refid="22387" relation="include">
        </childnode>
        <childnode refid="22400" relation="include">
        </childnode>
      </node>
      <node id="22426">
        <label>unordered_map</label>
      </node>
      <node id="22406">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
        <childnode refid="22398" relation="include">
        </childnode>
        <childnode refid="22407" relation="include">
        </childnode>
      </node>
      <node id="22381">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
        <childnode refid="22386" relation="include">
        </childnode>
        <childnode refid="22388" relation="include">
        </childnode>
        <childnode refid="22390" relation="include">
        </childnode>
        <childnode refid="22395" relation="include">
        </childnode>
        <childnode refid="22401" relation="include">
        </childnode>
        <childnode refid="22398" relation="include">
        </childnode>
        <childnode refid="22399" relation="include">
        </childnode>
        <childnode refid="22387" relation="include">
        </childnode>
        <childnode refid="22383" relation="include">
        </childnode>
      </node>
      <node id="22402">
        <label>chrono</label>
      </node>
      <node id="22371">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22381" relation="include">
        </childnode>
        <childnode refid="22396" relation="include">
        </childnode>
      </node>
      <node id="22392">
        <label>csignal</label>
      </node>
      <node id="22416">
        <label>lbann/utils/dataset.hpp</label>
        <link refid="dataset_8hpp"/>
        <childnode refid="22405" relation="include">
        </childnode>
      </node>
      <node id="22396">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="22387" relation="include">
        </childnode>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
        <childnode refid="22390" relation="include">
        </childnode>
        <childnode refid="22395" relation="include">
        </childnode>
        <childnode refid="22397" relation="include">
        </childnode>
        <childnode refid="22398" relation="include">
        </childnode>
        <childnode refid="22399" relation="include">
        </childnode>
      </node>
      <node id="22405">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22406" relation="include">
        </childnode>
        <childnode refid="22390" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
        <childnode refid="22408" relation="include">
        </childnode>
        <childnode refid="22398" relation="include">
        </childnode>
        <childnode refid="22412" relation="include">
        </childnode>
        <childnode refid="22413" relation="include">
        </childnode>
        <childnode refid="22414" relation="include">
        </childnode>
        <childnode refid="22387" relation="include">
        </childnode>
        <childnode refid="22383" relation="include">
        </childnode>
        <childnode refid="22415" relation="include">
        </childnode>
      </node>
      <node id="22380">
        <label>lbann_config.hpp</label>
      </node>
      <node id="22423">
        <label>set</label>
      </node>
      <node id="22421">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
        <childnode refid="22381" relation="include">
        </childnode>
        <childnode refid="22386" relation="include">
        </childnode>
        <childnode refid="22422" relation="include">
        </childnode>
        <childnode refid="22408" relation="include">
        </childnode>
        <childnode refid="22398" relation="include">
        </childnode>
        <childnode refid="22424" relation="include">
        </childnode>
        <childnode refid="22425" relation="include">
        </childnode>
        <childnode refid="22396" relation="include">
        </childnode>
        <childnode refid="22388" relation="include">
        </childnode>
        <childnode refid="22399" relation="include">
        </childnode>
        <childnode refid="22383" relation="include">
        </childnode>
        <childnode refid="22387" relation="include">
        </childnode>
        <childnode refid="22426" relation="include">
        </childnode>
      </node>
      <node id="22389">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="22414">
        <label>algorithm</label>
      </node>
      <node id="22375">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="22376" relation="include">
        </childnode>
        <childnode refid="22377" relation="include">
        </childnode>
        <childnode refid="22378" relation="include">
        </childnode>
        <childnode refid="22379" relation="include">
        </childnode>
      </node>
      <node id="22374">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="22373" relation="include">
        </childnode>
      </node>
      <node id="22403">
        <label>lbann/layers/io/target/generic_target_layer.hpp</label>
        <link refid="generic__target__layer_8hpp"/>
        <childnode refid="22404" relation="include">
        </childnode>
        <childnode refid="22417" relation="include">
        </childnode>
        <childnode refid="22419" relation="include">
        </childnode>
        <childnode refid="22420" relation="include">
        </childnode>
        <childnode refid="22390" relation="include">
        </childnode>
        <childnode refid="22421" relation="include">
        </childnode>
        <childnode refid="22387" relation="include">
        </childnode>
        <childnode refid="22410" relation="include">
        </childnode>
        <childnode refid="22409" relation="include">
        </childnode>
        <childnode refid="22415" relation="include">
        </childnode>
      </node>
      <node id="22431">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="22430" relation="include">
        </childnode>
      </node>
      <node id="22385">
        <label>typeindex</label>
      </node>
      <node id="22378">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="polya__negloglike_8cpp_1afcc4e1443ca078661f655ac37772ffc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double digamma</definition>
        <argsstring>(double x)</argsstring>
        <name>digamma</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/polya_negloglike.cpp" line="29" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/polya_negloglike.cpp" bodystart="29" bodyend="43"/>
        <referencedby refid="classlbann_1_1polya__negloglike_1a95fea60663d86cab31d89531046cc32c" compoundref="polya__negloglike_8cpp" startline="188" endline="218">lbann::polya_negloglike::differentiate_compute</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="polya__negloglike_8hpp" kindref="compound">lbann/objective_functions/loss_functions/polya_negloglike.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="polya__negloglike_8cpp_1afcc4e1443ca078661f655ac37772ffc4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="polya__negloglike_8cpp_1afcc4e1443ca078661f655ac37772ffc4" kindref="member">digamma</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(z<sp/>&lt;<sp/>8.0)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>-=<sp/>1.0/z;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>z<sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>1.0/z;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2<sp/>=<sp/>s*s;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s4<sp/>=<sp/>s2*s2;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s6<sp/>=<sp/>s2*s4;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s8<sp/>=<sp/>s4*s4;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/>std::log(z)<sp/>-<sp/>s/2.0<sp/>-<sp/>s2/12.0<sp/>+<sp/>s4/120.0<sp/>-<sp/>s6/252.0<sp/>+<sp/>s8/240.0<sp/>-<sp/>(5.0/660.0)*s4*s6<sp/>+(691.0/32760.0)*s6*s6<sp/>-<sp/>s6*s8/12.0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classlbann_1_1polya__negloglike_1a3f3c7f775d548ac8e011fb1b637804cb" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1polya__negloglike_1a3f3c7f775d548ac8e011fb1b637804cb" kindref="member">polya_negloglike::polya_negloglike</ref>(<ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>scale_factor)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1loss__function" kindref="compound">loss_function</ref>(scale_factor),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>m_counts(nullptr),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alpha_sums(nullptr),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lgamma_alpha_sums(nullptr),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lgamma_alpha_level_count_sums(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classlbann_1_1polya__negloglike_1a35d76a08dea5203c4f70e48260adf1ec" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1polya__negloglike_1a3f3c7f775d548ac8e011fb1b637804cb" kindref="member">polya_negloglike::polya_negloglike</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1polya__negloglike" kindref="compound">polya_negloglike</ref>&amp;<sp/>other)<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1loss__function" kindref="compound">loss_function</ref>(other),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref>(other.<ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref>),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref>(other.<ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref>),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref>(other.<ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref>),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref>(other.<ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref><sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref><sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref><sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref><sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classlbann_1_1polya__negloglike_1a13d1e4b96c6e99bb39afc2b349ad9588" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1polya__negloglike" kindref="compound">polya_negloglike</ref>&amp;<sp/><ref refid="classlbann_1_1polya__negloglike_1a13d1e4b96c6e99bb39afc2b349ad9588" kindref="member">polya_negloglike::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1polya__negloglike" kindref="compound">polya_negloglike</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1loss__function_1ab882c642619ea4285b61e735d84e401c" kindref="member">loss_function::operator=</ref>(other);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref><sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref><sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref><sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref><sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classlbann_1_1polya__negloglike_1a0c00f1f9cac0b0c6a638b86e031768e3" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1polya__negloglike_1a0c00f1f9cac0b0c6a638b86e031768e3" kindref="member">polya_negloglike::~polya_negloglike</ref>()<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classlbann_1_1polya__negloglike_1a4a7ae8eef1ef216f60b158acb1853355" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1polya__negloglike_1a4a7ae8eef1ef216f60b158acb1853355" kindref="member">polya_negloglike::setup</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref>&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1loss__function_1a17a3629e8519c4215ad776a0c7b522ae" kindref="member">loss_function::setup</ref>(m);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::DistData<sp/>dist(*<ref refid="classlbann_1_1loss__function_1ac6ac9f8f2cef7a4daa1b282dba914975" kindref="member">m_gradient</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist.colDist<sp/>==<sp/>El::MC<sp/>&amp;&amp;<sp/>dist.rowDist<sp/>==<sp/>El::MR)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a638c3ca7c22f916d23415b234420b9f1" kindref="member">StarMRMat</ref>(*dist.grid);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a638c3ca7c22f916d23415b234420b9f1" kindref="member">StarMRMat</ref>(*dist.grid);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a638c3ca7c22f916d23415b234420b9f1" kindref="member">StarMRMat</ref>(*dist.grid);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a638c3ca7c22f916d23415b234420b9f1" kindref="member">StarMRMat</ref>(*dist.grid);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist.colDist<sp/>==<sp/>El::STAR<sp/>&amp;&amp;<sp/>dist.rowDist<sp/>==<sp/>El::VC)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1aa4ec814c4a8f15b4ea2b24b3af94ef23" kindref="member">StarVCMat</ref>(*dist.grid);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1aa4ec814c4a8f15b4ea2b24b3af94ef23" kindref="member">StarVCMat</ref>(*dist.grid);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1aa4ec814c4a8f15b4ea2b24b3af94ef23" kindref="member">StarVCMat</ref>(*dist.grid);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1aa4ec814c4a8f15b4ea2b24b3af94ef23" kindref="member">StarVCMat</ref>(*dist.grid);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>matrix<sp/>distribution&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classlbann_1_1polya__negloglike_1a81dbe71fef52ee0874549c4cf96c01e3" refkind="member"><highlight class="normal"><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/><ref refid="classlbann_1_1polya__negloglike_1a81dbe71fef52ee0874549c4cf96c01e3" kindref="member">polya_negloglike::finish_evaluate_compute</ref>(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>predictions,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>ground_truth)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>workspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref>-&gt;Resize(1,<sp/>predictions.Width());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref>-&gt;Resize(1,<sp/>predictions.Width());</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref>-&gt;Resize(1,<sp/>predictions.Width());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref>-&gt;Resize(1,<sp/>predictions.Width());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>counts_local<sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref>-&gt;Matrix();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>alpha_sums_local<sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref>-&gt;Matrix();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>lgamma_alpha_sums_local<sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref>-&gt;Matrix();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>lgamma_alpha_level_count_sums_local<sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref>-&gt;Matrix();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Local<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>predictions_local<sp/>=<sp/>predictions.LockedMatrix();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>ground_truth_local<sp/>=<sp/>ground_truth.LockedMatrix();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrix<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>predictions.Width();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_height<sp/>=<sp/>predictions_local.Height();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_width<sp/>=<sp/>predictions_local.Width();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType<sp/>count<sp/>=<sp/>DataType(0);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType<sp/>alpha_sum<sp/>=<sp/>DataType(0);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType<sp/>lgamma_alpha_sum<sp/>=<sp/>DataType(0);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType<sp/>lgamma_alpha_level_count_sum<sp/>=<sp/>DataType(0);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>local_height;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>true_val<sp/>=<sp/>ground_truth_local(row,<sp/>col);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>pred_val<sp/>=<sp/>predictions_local(row,<sp/>col);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>true_val;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alpha_sum<sp/>+=<sp/>pred_val;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lgamma_alpha_sum<sp/>+=<sp/>std::lgamma(pred_val);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lgamma_alpha_level_count_sum<sp/>+=<sp/>std::lgamma(pred_val<sp/>+<sp/>true_val);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>counts_local(0,<sp/>col)<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha_sums_local(0,<sp/>col)<sp/>=<sp/>alpha_sum;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>lgamma_alpha_sums_local(0,<sp/>col)<sp/>=<sp/>lgamma_alpha_sum;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>lgamma_alpha_level_count_sums_local(0,<sp/>col)<sp/>=<sp/>lgamma_alpha_level_count_sum;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" kindref="member">get_comm</ref>().<ref refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" kindref="member">allreduce</ref>(*<ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref>,<sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref>-&gt;RedundantComm());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" kindref="member">get_comm</ref>().<ref refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" kindref="member">allreduce</ref>(*<ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref>,<sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref>-&gt;RedundantComm());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" kindref="member">get_comm</ref>().<ref refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" kindref="member">allreduce</ref>(*<ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref>,<sp/><ref refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" kindref="member">m_lgamma_alpha_sums</ref>-&gt;RedundantComm());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" kindref="member">get_comm</ref>().<ref refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" kindref="member">allreduce</ref>(*<ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref>,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" kindref="member">m_lgamma_alpha_level_count_sums</ref>-&gt;RedundantComm());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>mean<sp/>objective<sp/>function<sp/>value<sp/>across<sp/>mini-batch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>local_sum<sp/>=<sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>local_sum<sp/>+=<sp/>(-<sp/>std::lgamma(alpha_sums_local(0,<sp/>col))</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::lgamma(counts_local(0,<sp/>col)<sp/>+<sp/>alpha_sums_local(0,<sp/>col))</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>lgamma_alpha_level_count_sums_local(0,<sp/>col)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>lgamma_alpha_sums_local(0,<sp/>col));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" kindref="member">get_comm</ref>().<ref refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" kindref="member">allreduce</ref>(local_sum<sp/>/<sp/>width,<sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref>-&gt;DistComm());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classlbann_1_1polya__negloglike_1a95fea60663d86cab31d89531046cc32c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1polya__negloglike_1a95fea60663d86cab31d89531046cc32c" kindref="member">polya_negloglike::differentiate_compute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>predictions,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>ground_truth,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>gradient)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Local<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>predictions_local<sp/>=<sp/>predictions.LockedMatrix();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>ground_truth_local<sp/>=<sp/>ground_truth.LockedMatrix();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>counts_local<sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" kindref="member">m_counts</ref>-&gt;LockedMatrix();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>alpha_sums_local<sp/>=<sp/><ref refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" kindref="member">m_alpha_sums</ref>-&gt;LockedMatrix();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>gradient_local<sp/>=<sp/>gradient.Matrix();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrix<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>local_height<sp/>=<sp/>gradient_local.Height();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>local_width<sp/>=<sp/>gradient_local.Width();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>gradient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(El::Int<sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(El::Int<sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>local_height;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>true_val<sp/>=<sp/>ground_truth_local(row,<sp/>col);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>pred_val<sp/>=<sp/>predictions_local(row,<sp/>col);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>alpha_sum<sp/>=<sp/>alpha_sums_local(0,<sp/>col);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>count<sp/>=<sp/>counts_local(0,<sp/>col);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gradient_local(row,<sp/>col)<sp/>=<sp/>(-<sp/><ref refid="polya__negloglike_8cpp_1afcc4e1443ca078661f655ac37772ffc4" kindref="member">digamma</ref>(alpha_sum)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="polya__negloglike_8cpp_1afcc4e1443ca078661f655ac37772ffc4" kindref="member">digamma</ref>(count<sp/>+<sp/>alpha_sum)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><ref refid="polya__negloglike_8cpp_1afcc4e1443ca078661f655ac37772ffc4" kindref="member">digamma</ref>(true_val<sp/>+<sp/>pred_val)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="polya__negloglike_8cpp_1afcc4e1443ca078661f655ac37772ffc4" kindref="member">digamma</ref>(pred_val));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/polya_negloglike.cpp"/>
  </compounddef>
</doxygen>
