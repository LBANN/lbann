<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="proto__common_8cpp" kind="file" language="C++">
    <compoundname>proto_common.cpp</compoundname>
    <includes refid="proto__common_8hpp" local="yes">lbann/proto/proto_common.hpp</includes>
    <includes refid="lbann_8hpp" local="yes">lbann/lbann.hpp</includes>
    <includes refid="base_8hpp" local="yes">lbann/base.hpp</includes>
    <includes refid="comm_8hpp" local="yes">lbann/comm.hpp</includes>
    <includes refid="init__image__data__readers_8hpp" local="yes">lbann/proto/init_image_data_readers.hpp</includes>
    <includes local="no">google/protobuf/io/coded_stream.h</includes>
    <includes local="no">google/protobuf/io/zero_copy_stream_impl.h</includes>
    <includes local="no">google/protobuf/text_format.h</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">sys/stat.h</includes>
    <incdepgraph>
      <node id="25173">
        <label>sys/stat.h</label>
      </node>
      <node id="25362">
        <label>lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="25135" relation="include">
        </childnode>
      </node>
      <node id="25358">
        <label>glob.h</label>
      </node>
      <node id="25256">
        <label>cv_process.hpp</label>
        <link refid="cv__process_8hpp"/>
        <childnode refid="25257" relation="include">
        </childnode>
        <childnode refid="25260" relation="include">
        </childnode>
        <childnode refid="25263" relation="include">
        </childnode>
        <childnode refid="25264" relation="include">
        </childnode>
        <childnode refid="25267" relation="include">
        </childnode>
        <childnode refid="25268" relation="include">
        </childnode>
        <childnode refid="25269" relation="include">
        </childnode>
        <childnode refid="25270" relation="include">
        </childnode>
        <childnode refid="25272" relation="include">
        </childnode>
        <childnode refid="25273" relation="include">
        </childnode>
      </node>
      <node id="25219">
        <label>lbann/layers/transform/pooling.hpp</label>
        <link refid="pooling_8hpp"/>
        <childnode refid="25220" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25218" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25215" relation="include">
        </childnode>
      </node>
      <node id="25324">
        <label>lbann/callbacks/callback_checkpoint.hpp</label>
        <link refid="callback__checkpoint_8hpp"/>
        <childnode refid="25248" relation="include">
        </childnode>
        <childnode refid="25165" relation="include">
        </childnode>
      </node>
      <node id="25209">
        <label>lbann/weights/fan_in_fan_out_initializers.hpp</label>
        <link refid="fan__in__fan__out__initializers_8hpp"/>
        <childnode refid="25164" relation="include">
        </childnode>
      </node>
      <node id="25270">
        <label>cv_mean_extractor.hpp</label>
        <link refid="cv__mean__extractor_8hpp"/>
        <childnode refid="25257" relation="include">
        </childnode>
        <childnode refid="25271" relation="include">
        </childnode>
      </node>
      <node id="25199">
        <label>lbann/layers/activations/selu.hpp</label>
        <link refid="selu_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
      </node>
      <node id="25273">
        <label>limits</label>
      </node>
      <node id="25153">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
      </node>
      <node id="25306">
        <label>lbann/callbacks/callback_io.hpp</label>
        <link refid="callback__io_8hpp"/>
        <childnode refid="25167" relation="include">
        </childnode>
        <childnode refid="25179" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25249">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="25179" relation="include">
        </childnode>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25168" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25214" relation="include">
        </childnode>
        <childnode refid="25250" relation="include">
        </childnode>
      </node>
      <node id="25327">
        <label>lbann/optimizers/adagrad.hpp</label>
        <link refid="adagrad_8hpp"/>
        <childnode refid="25155" relation="include">
        </childnode>
      </node>
      <node id="25198">
        <label>lbann/layers/activations/relu.hpp</label>
        <link refid="relu_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
      </node>
      <node id="25195">
        <label>lbann/layers/activations/exponential.hpp</label>
        <link refid="exponential_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
      </node>
      <node id="25323">
        <label>lbann/callbacks/callback_timeline.hpp</label>
        <link refid="callback__timeline_8hpp"/>
        <childnode refid="25179" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25338">
        <label>lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp</label>
        <link refid="objective__functions_2loss__functions_2mean__absolute__deviation_8hpp"/>
        <childnode refid="25333" relation="include">
        </childnode>
      </node>
      <node id="25284">
        <label>offline_patches_npz.hpp</label>
        <link refid="offline__patches__npz_8hpp"/>
        <childnode refid="25285" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
      </node>
      <node id="25302">
        <label>lbann/callbacks/callback_checksmall.hpp</label>
        <link refid="callback__checksmall_8hpp"/>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25283">
        <label>lbann/data_readers/data_reader_triplet.hpp</label>
        <link refid="data__reader__triplet_8hpp"/>
        <childnode refid="25281" relation="include">
        </childnode>
        <childnode refid="25256" relation="include">
        </childnode>
        <childnode refid="25284" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25220" relation="include">
        </childnode>
        <childnode refid="25160" relation="include">
        </childnode>
      </node>
      <node id="25183">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="25147" relation="include">
        </childnode>
        <childnode refid="25139" relation="include">
        </childnode>
      </node>
      <node id="25278">
        <label>patchworks/patchworks_patch_descriptor.hpp</label>
        <link refid="patchworks__patch__descriptor_8hpp"/>
        <childnode refid="25147" relation="include">
        </childnode>
      </node>
      <node id="25342">
        <label>lbann/objective_functions/weight_regularization/l1.hpp</label>
        <link refid="l1_8hpp"/>
        <childnode refid="25177" relation="include">
        </childnode>
      </node>
      <node id="25357">
        <label>lbann/utils/glob.hpp</label>
        <link refid="glob_8hpp"/>
        <childnode refid="25358" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
      </node>
      <node id="25225">
        <label>lbann/layers/transform/concatenation.hpp</label>
        <link refid="concatenation_8hpp"/>
        <childnode refid="25218" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25210" relation="include">
        </childnode>
      </node>
      <node id="25333">
        <label>lbann/objective_functions/loss_functions/loss_function.hpp</label>
        <link refid="loss__function_8hpp"/>
        <childnode refid="25177" relation="include">
        </childnode>
        <childnode refid="25252" relation="include">
        </childnode>
      </node>
      <node id="25297">
        <label>lbann/data_store/generic_data_store.hpp</label>
        <link refid="generic__data__store_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25167" relation="include">
        </childnode>
      </node>
      <node id="25217">
        <label>lbann/layers/transform/reshape.hpp</label>
        <link refid="reshape_8hpp"/>
        <childnode refid="25218" relation="include">
        </childnode>
      </node>
      <node id="25165">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25140" relation="include">
        </childnode>
      </node>
      <node id="25361">
        <label>cstdint</label>
      </node>
      <node id="25298">
        <label>lbann/data_store/data_store_imagenet.hpp</label>
        <link refid="data__store__imagenet_8hpp"/>
        <childnode refid="25299" relation="include">
        </childnode>
      </node>
      <node id="25140">
        <label>El.hpp</label>
      </node>
      <node id="25343">
        <label>lbann/objective_functions/weight_regularization/l2.hpp</label>
        <link refid="l2_8hpp"/>
        <childnode refid="25177" relation="include">
        </childnode>
      </node>
      <node id="25262">
        <label>lbann/utils/mild_exception.hpp</label>
        <link refid="mild__exception_8hpp"/>
        <childnode refid="25160" relation="include">
        </childnode>
      </node>
      <node id="25196">
        <label>lbann/layers/activations/identity.hpp</label>
        <link refid="identity_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
      </node>
      <node id="25304">
        <label>lbann/callbacks/callback_print.hpp</label>
        <link refid="callback__print_8hpp"/>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25301">
        <label>lbann/callbacks/callback_checknan.hpp</label>
        <link refid="callback__checknan_8hpp"/>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25139">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="25140" relation="include">
        </childnode>
        <childnode refid="25141" relation="include">
        </childnode>
        <childnode refid="25142" relation="include">
        </childnode>
        <childnode refid="25147" relation="include">
        </childnode>
      </node>
      <node id="25135">
        <label>lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="25136" relation="include">
        </childnode>
        <childnode refid="25166" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
        <childnode refid="25362" relation="include">
        </childnode>
      </node>
      <node id="25228">
        <label>lbann/layers/transform/safe_inv.hpp</label>
        <link refid="safe__inv_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25218" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
      </node>
      <node id="25237">
        <label>lbann/layers/regularizers/dropout.hpp</label>
        <link refid="dropout_8hpp"/>
        <childnode refid="25236" relation="include">
        </childnode>
      </node>
      <node id="25366">
        <label>google/protobuf/text_format.h</label>
      </node>
      <node id="25360">
        <label>lbann/utils/omp_diagnostics.hpp</label>
        <link refid="omp__diagnostics_8hpp"/>
        <childnode refid="25361" relation="include">
        </childnode>
      </node>
      <node id="25246">
        <label>lbann/io/data_buffers/distributed_io_buffer.hpp</label>
        <link refid="distributed__io__buffer_8hpp"/>
        <childnode refid="25244" relation="include">
        </childnode>
      </node>
      <node id="25230">
        <label>lbann/layers/transform/reduction.hpp</label>
        <link refid="reduction_8hpp"/>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25218" relation="include">
        </childnode>
      </node>
      <node id="25240">
        <label>lbann/layers/io/input/input_layer.hpp</label>
        <link refid="input__layer_8hpp"/>
        <childnode refid="25241" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25138" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25174" relation="include">
        </childnode>
        <childnode refid="25173" relation="include">
        </childnode>
        <childnode refid="25186" relation="include">
        </childnode>
      </node>
      <node id="25247">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25167" relation="include">
        </childnode>
        <childnode refid="25179" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
        <childnode refid="25249" relation="include">
        </childnode>
      </node>
      <node id="25255">
        <label>data_reader_image.hpp</label>
        <link refid="data__reader__image_8hpp"/>
        <childnode refid="25180" relation="include">
        </childnode>
        <childnode refid="25183" relation="include">
        </childnode>
        <childnode refid="25256" relation="include">
        </childnode>
      </node>
      <node id="25184">
        <label>cassert</label>
      </node>
      <node id="25305">
        <label>lbann/callbacks/callback_timer.hpp</label>
        <link refid="callback__timer_8hpp"/>
        <childnode refid="25169" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25308">
        <label>lbann/callbacks/callback_learning_rate.hpp</label>
        <link refid="callback__learning__rate_8hpp"/>
        <childnode refid="25167" relation="include">
        </childnode>
        <childnode refid="25179" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25175">
        <label>fcntl.h</label>
      </node>
      <node id="25335">
        <label>lbann/objective_functions/loss_functions/binary_cross_entropy.hpp</label>
        <link refid="binary__cross__entropy_8hpp"/>
        <childnode refid="25333" relation="include">
        </childnode>
      </node>
      <node id="25178">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25165" relation="include">
        </childnode>
      </node>
      <node id="25259">
        <label>opencv_extensions.hpp</label>
        <link refid="opencv__extensions_8hpp"/>
      </node>
      <node id="25267">
        <label>cv_colorizer.hpp</label>
        <link refid="cv__colorizer_8hpp"/>
        <childnode refid="25257" relation="include">
        </childnode>
      </node>
      <node id="25242">
        <label>lbann/layers/io/io_layer.hpp</label>
        <link refid="io__layer_8hpp"/>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25180" relation="include">
        </childnode>
        <childnode refid="25243" relation="include">
        </childnode>
        <childnode refid="25165" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25174" relation="include">
        </childnode>
        <childnode refid="25173" relation="include">
        </childnode>
        <childnode refid="25186" relation="include">
        </childnode>
        <childnode refid="25144" relation="include">
        </childnode>
      </node>
      <node id="25325">
        <label>lbann/callbacks/callback_save_model.hpp</label>
        <link refid="callback__save__model_8hpp"/>
        <childnode refid="25220" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
        <childnode refid="25166" relation="include">
        </childnode>
        <childnode refid="25326" relation="include">
        </childnode>
      </node>
      <node id="25359">
        <label>lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="25136" relation="include">
        </childnode>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
      </node>
      <node id="25154">
        <label>string</label>
      </node>
      <node id="25244">
        <label>lbann/io/data_buffers/generic_io_buffer.hpp</label>
        <link refid="generic__io__buffer_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25180" relation="include">
        </childnode>
      </node>
      <node id="25236">
        <label>lbann/layers/regularizers/regularizer.hpp</label>
        <link refid="regularizer_8hpp"/>
        <childnode refid="25152" relation="include">
        </childnode>
      </node>
      <node id="25341">
        <label>lbann/objective_functions/loss_functions/polya_negloglike.hpp</label>
        <link refid="polya__negloglike_8hpp"/>
        <childnode refid="25333" relation="include">
        </childnode>
      </node>
      <node id="25201">
        <label>lbann/layers/activations/smooth_relu.hpp</label>
        <link refid="smooth__relu_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
      </node>
      <node id="25162">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
      </node>
      <node id="25314">
        <label>lbann/callbacks/callback_dump_minibatch_sample_indices.hpp</label>
        <link refid="callback__dump__minibatch__sample__indices_8hpp"/>
        <childnode refid="25220" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25346">
        <label>lbann/objective_functions/layer_term.hpp</label>
        <link refid="layer__term_8hpp"/>
        <childnode refid="25177" relation="include">
        </childnode>
        <childnode refid="25231" relation="include">
        </childnode>
      </node>
      <node id="25168">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="25169" relation="include">
        </childnode>
      </node>
      <node id="25150">
        <label>map</label>
      </node>
      <node id="25364">
        <label>google/protobuf/io/coded_stream.h</label>
      </node>
      <node id="25292">
        <label>compound_data_reader.hpp</label>
        <link refid="compound__data__reader_8hpp"/>
        <childnode refid="25180" relation="include">
        </childnode>
        <childnode refid="25220" relation="include">
        </childnode>
      </node>
      <node id="25210">
        <label>lbann/utils/cublas_wrapper.hpp</label>
        <link refid="cublas__wrapper_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
      </node>
      <node id="25187">
        <label>lbann/models/directed_acyclic_graph.hpp</label>
        <link refid="directed__acyclic__graph_8hpp"/>
        <childnode refid="25138" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
      </node>
      <node id="25167">
        <label>unordered_set</label>
      </node>
      <node id="25238">
        <label>lbann/layers/regularizers/selu_dropout.hpp</label>
        <link refid="selu__dropout_8hpp"/>
        <childnode refid="25236" relation="include">
        </childnode>
      </node>
      <node id="25336">
        <label>lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp</label>
        <link refid="cross__entropy__with__uncertainty_8hpp"/>
        <childnode refid="25333" relation="include">
        </childnode>
      </node>
      <node id="25353">
        <label>lbann/metrics/boolean_accuracy.hpp</label>
        <link refid="boolean__accuracy_8hpp"/>
        <childnode refid="25178" relation="include">
        </childnode>
      </node>
      <node id="25290">
        <label>lbann/data_readers/data_reader_numpy.hpp</label>
        <link refid="data__reader__numpy_8hpp"/>
        <childnode refid="25180" relation="include">
        </childnode>
        <childnode refid="25285" relation="include">
        </childnode>
      </node>
      <node id="25251">
        <label>lbann/layers/io/target/target_layer.hpp</label>
        <link refid="target__layer_8hpp"/>
        <childnode refid="25252" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25138" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25174" relation="include">
        </childnode>
        <childnode refid="25173" relation="include">
        </childnode>
        <childnode refid="25186" relation="include">
        </childnode>
      </node>
      <node id="25214">
        <label>omp.h</label>
      </node>
      <node id="25213">
        <label>lbann/layers/learning/base_convolution.hpp</label>
        <link refid="base__convolution_8hpp"/>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25214" relation="include">
        </childnode>
        <childnode refid="25208" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25164" relation="include">
        </childnode>
        <childnode refid="25209" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25168" relation="include">
        </childnode>
        <childnode refid="25215" relation="include">
        </childnode>
      </node>
      <node id="25212">
        <label>lbann/layers/learning/convolution.hpp</label>
        <link refid="convolution_8hpp"/>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25213" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25168" relation="include">
        </childnode>
      </node>
      <node id="25203">
        <label>lbann/layers/activations/softplus.hpp</label>
        <link refid="softplus_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
      </node>
      <node id="25263">
        <label>cv_subtractor.hpp</label>
        <link refid="cv__subtractor_8hpp"/>
        <childnode refid="25257" relation="include">
        </childnode>
        <childnode refid="25139" relation="include">
        </childnode>
      </node>
      <node id="25161">
        <label>exception</label>
      </node>
      <node id="25265">
        <label>ostream</label>
      </node>
      <node id="25202">
        <label>lbann/layers/activations/softmax.hpp</label>
        <link refid="softmax_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25172" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25138" relation="include">
        </childnode>
        <childnode refid="25186" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25184" relation="include">
        </childnode>
      </node>
      <node id="25319">
        <label>lbann/callbacks/callback_check_reconstruction_error.hpp</label>
        <link refid="callback__check__reconstruction__error_8hpp"/>
        <childnode refid="25167" relation="include">
        </childnode>
        <childnode refid="25179" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25348">
        <label>lbann/metrics/top_k_categorical_accuracy.hpp</label>
        <link refid="top__k__categorical__accuracy_8hpp"/>
        <childnode refid="25178" relation="include">
        </childnode>
      </node>
      <node id="25282">
        <label>lbann/data_readers/data_reader_mnist_siamese.hpp</label>
        <link refid="data__reader__mnist__siamese_8hpp"/>
        <childnode refid="25281" relation="include">
        </childnode>
        <childnode refid="25256" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25220" relation="include">
        </childnode>
        <childnode refid="25160" relation="include">
        </childnode>
      </node>
      <node id="25215">
        <label>lbann/utils/im2col.hpp</label>
        <link refid="im2col_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
      </node>
      <node id="25218">
        <label>lbann/layers/transform/transform.hpp</label>
        <link refid="transform_8hpp"/>
        <childnode refid="25152" relation="include">
        </childnode>
      </node>
      <node id="25253">
        <label>lbann/layers/io/target/reconstruction.hpp</label>
        <link refid="reconstruction_8hpp"/>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25252" relation="include">
        </childnode>
        <childnode refid="25138" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
      </node>
      <node id="25279">
        <label>lbann/data_readers/data_reader_cifar10.hpp</label>
        <link refid="data__reader__cifar10_8hpp"/>
        <childnode refid="25255" relation="include">
        </childnode>
      </node>
      <node id="25352">
        <label>lbann/metrics/r2.hpp</label>
        <link refid="r2_8hpp"/>
        <childnode refid="25178" relation="include">
        </childnode>
      </node>
      <node id="25188">
        <label>lbann/models/recurrent.hpp</label>
        <link refid="recurrent_8hpp"/>
        <childnode refid="25187" relation="include">
        </childnode>
      </node>
      <node id="25231">
        <label>lbann/layers/transform/evaluation.hpp</label>
        <link refid="evaluation_8hpp"/>
        <childnode refid="25218" relation="include">
        </childnode>
      </node>
      <node id="25354">
        <label>lbann/metrics/boolean_false_positives.hpp</label>
        <link refid="boolean__false__positives_8hpp"/>
        <childnode refid="25178" relation="include">
        </childnode>
      </node>
      <node id="25321">
        <label>lbann/callbacks/callback_variable_minibatch.hpp</label>
        <link refid="callback__variable__minibatch_8hpp"/>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25330">
        <label>lbann/optimizers/rmsprop.hpp</label>
        <link refid="rmsprop_8hpp"/>
        <childnode refid="25155" relation="include">
        </childnode>
        <childnode refid="25173" relation="include">
        </childnode>
      </node>
      <node id="25293">
        <label>lbann/data_readers/data_reader_merge_features.hpp</label>
        <link refid="data__reader__merge__features_8hpp"/>
        <childnode refid="25292" relation="include">
        </childnode>
      </node>
      <node id="25204">
        <label>lbann/layers/activations/swish.hpp</label>
        <link refid="swish_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
      </node>
      <node id="25216">
        <label>lbann/layers/learning/deconvolution.hpp</label>
        <link refid="deconvolution_8hpp"/>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25213" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25168" relation="include">
        </childnode>
      </node>
      <node id="25182">
        <label>random</label>
      </node>
      <node id="25312">
        <label>lbann/callbacks/callback_dump_activations.hpp</label>
        <link refid="callback__dump__activations_8hpp"/>
        <childnode refid="25220" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25349">
        <label>lbann/metrics/mean_squared_error.hpp</label>
        <link refid="metrics_2mean__squared__error_8hpp"/>
        <childnode refid="25178" relation="include">
        </childnode>
      </node>
      <node id="25164">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
      </node>
      <node id="25347">
        <label>lbann/metrics/categorical_accuracy.hpp</label>
        <link refid="categorical__accuracy_8hpp"/>
        <childnode refid="25178" relation="include">
        </childnode>
      </node>
      <node id="25276">
        <label>lbann/data_readers/data_reader_imagenet_patches.hpp</label>
        <link refid="data__reader__imagenet__patches_8hpp"/>
        <childnode refid="25255" relation="include">
        </childnode>
        <childnode refid="25277" relation="include">
        </childnode>
      </node>
      <node id="25274">
        <label>lbann/data_readers/data_reader_imagenet.hpp</label>
        <link refid="data__reader__imagenet_8hpp"/>
        <childnode refid="25255" relation="include">
        </childnode>
        <childnode refid="25256" relation="include">
        </childnode>
      </node>
      <node id="25174">
        <label>sys/types.h</label>
      </node>
      <node id="25248">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25153" relation="include">
        </childnode>
        <childnode refid="25138" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
      </node>
      <node id="25307">
        <label>lbann/callbacks/callback_summary.hpp</label>
        <link refid="callback__summary_8hpp"/>
        <childnode refid="25248" relation="include">
        </childnode>
        <childnode refid="25153" relation="include">
        </childnode>
      </node>
      <node id="25170">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="25160" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25171" relation="include">
        </childnode>
        <childnode refid="25150" relation="include">
        </childnode>
      </node>
      <node id="25134">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp</label>
        <link refid="proto__common_8cpp"/>
        <childnode refid="25135" relation="include">
        </childnode>
        <childnode refid="25136" relation="include">
        </childnode>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25363" relation="include">
        </childnode>
        <childnode refid="25364" relation="include">
        </childnode>
        <childnode refid="25365" relation="include">
        </childnode>
        <childnode refid="25366" relation="include">
        </childnode>
        <childnode refid="25179" relation="include">
        </childnode>
        <childnode refid="25167" relation="include">
        </childnode>
        <childnode refid="25173" relation="include">
        </childnode>
      </node>
      <node id="25261">
        <label>typeinfo</label>
      </node>
      <node id="25235">
        <label>lbann/layers/regularizers/local_response_normalization.hpp</label>
        <link refid="local__response__normalization_8hpp"/>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25236" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
      </node>
      <node id="25144">
        <label>cstdio</label>
      </node>
      <node id="25268">
        <label>cv_decolorizer.hpp</label>
        <link refid="cv__decolorizer_8hpp"/>
        <childnode refid="25147" relation="include">
        </childnode>
        <childnode refid="25257" relation="include">
        </childnode>
      </node>
      <node id="25245">
        <label>lbann/io/data_buffers/partitioned_io_buffer.hpp</label>
        <link refid="partitioned__io__buffer_8hpp"/>
        <childnode refid="25244" relation="include">
        </childnode>
      </node>
      <node id="25158">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="25159" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
      </node>
      <node id="25344">
        <label>lbann/objective_functions/weight_regularization/group_lasso.hpp</label>
        <link refid="group__lasso_8hpp"/>
        <childnode refid="25177" relation="include">
        </childnode>
      </node>
      <node id="25146">
        <label>cxxabi.h</label>
      </node>
      <node id="25223">
        <label>lbann/layers/transform/sum.hpp</label>
        <link refid="sum_8hpp"/>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25218" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
      </node>
      <node id="25157">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25158" relation="include">
        </childnode>
        <childnode refid="25160" relation="include">
        </childnode>
        <childnode refid="25161" relation="include">
        </childnode>
      </node>
      <node id="25194">
        <label>lbann/layers/activations/elu.hpp</label>
        <link refid="elu_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
      </node>
      <node id="25286">
        <label>lbann/data_readers/data_reader_synthetic.hpp</label>
        <link refid="data__reader__synthetic_8hpp"/>
        <childnode refid="25180" relation="include">
        </childnode>
      </node>
      <node id="25254">
        <label>lbann/data_readers/data_reader_imagenet_org.hpp</label>
        <link refid="data__reader__imagenet__org_8hpp"/>
        <childnode refid="25255" relation="include">
        </childnode>
        <childnode refid="25183" relation="include">
        </childnode>
      </node>
      <node id="25287">
        <label>lbann/data_readers/data_reader_jag.hpp</label>
        <link refid="data__reader__jag_8hpp"/>
        <childnode refid="25285" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25258" relation="include">
        </childnode>
        <childnode refid="25180" relation="include">
        </childnode>
      </node>
      <node id="25281">
        <label>lbann/data_readers/data_reader_multi_images.hpp</label>
        <link refid="data__reader__multi__images_8hpp"/>
        <childnode refid="25274" relation="include">
        </childnode>
        <childnode refid="25256" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25220" relation="include">
        </childnode>
        <childnode refid="25160" relation="include">
        </childnode>
      </node>
      <node id="25186">
        <label>unistd.h</label>
      </node>
      <node id="25192">
        <label>lbann/layers/activations/activation.hpp</label>
        <link refid="activation_8hpp"/>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
      </node>
      <node id="25365">
        <label>google/protobuf/io/zero_copy_stream_impl.h</label>
      </node>
      <node id="25149">
        <label>vector</label>
      </node>
      <node id="25229">
        <label>lbann/layers/transform/hadamard.hpp</label>
        <link refid="hadamard_8hpp"/>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25218" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
      </node>
      <node id="25222">
        <label>lbann/layers/transform/split.hpp</label>
        <link refid="split_8hpp"/>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25218" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25210" relation="include">
        </childnode>
      </node>
      <node id="25148">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25150" relation="include">
        </childnode>
        <childnode refid="25151" relation="include">
        </childnode>
        <childnode refid="25139" relation="include">
        </childnode>
      </node>
      <node id="25136">
        <label>lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="25137" relation="include">
        </childnode>
        <childnode refid="25187" relation="include">
        </childnode>
        <childnode refid="25188" relation="include">
        </childnode>
        <childnode refid="25189" relation="include">
        </childnode>
        <childnode refid="25190" relation="include">
        </childnode>
        <childnode refid="25191" relation="include">
        </childnode>
        <childnode refid="25193" relation="include">
        </childnode>
        <childnode refid="25194" relation="include">
        </childnode>
        <childnode refid="25195" relation="include">
        </childnode>
        <childnode refid="25196" relation="include">
        </childnode>
        <childnode refid="25197" relation="include">
        </childnode>
        <childnode refid="25198" relation="include">
        </childnode>
        <childnode refid="25199" relation="include">
        </childnode>
        <childnode refid="25200" relation="include">
        </childnode>
        <childnode refid="25201" relation="include">
        </childnode>
        <childnode refid="25202" relation="include">
        </childnode>
        <childnode refid="25203" relation="include">
        </childnode>
        <childnode refid="25204" relation="include">
        </childnode>
        <childnode refid="25205" relation="include">
        </childnode>
        <childnode refid="25206" relation="include">
        </childnode>
        <childnode refid="25207" relation="include">
        </childnode>
        <childnode refid="25212" relation="include">
        </childnode>
        <childnode refid="25216" relation="include">
        </childnode>
        <childnode refid="25217" relation="include">
        </childnode>
        <childnode refid="25219" relation="include">
        </childnode>
        <childnode refid="25221" relation="include">
        </childnode>
        <childnode refid="25222" relation="include">
        </childnode>
        <childnode refid="25223" relation="include">
        </childnode>
        <childnode refid="25224" relation="include">
        </childnode>
        <childnode refid="25225" relation="include">
        </childnode>
        <childnode refid="25226" relation="include">
        </childnode>
        <childnode refid="25227" relation="include">
        </childnode>
        <childnode refid="25228" relation="include">
        </childnode>
        <childnode refid="25229" relation="include">
        </childnode>
        <childnode refid="25230" relation="include">
        </childnode>
        <childnode refid="25231" relation="include">
        </childnode>
        <childnode refid="25232" relation="include">
        </childnode>
        <childnode refid="25233" relation="include">
        </childnode>
        <childnode refid="25234" relation="include">
        </childnode>
        <childnode refid="25235" relation="include">
        </childnode>
        <childnode refid="25237" relation="include">
        </childnode>
        <childnode refid="25238" relation="include">
        </childnode>
        <childnode refid="25239" relation="include">
        </childnode>
        <childnode refid="25240" relation="include">
        </childnode>
        <childnode refid="25251" relation="include">
        </childnode>
        <childnode refid="25253" relation="include">
        </childnode>
        <childnode refid="25254" relation="include">
        </childnode>
        <childnode refid="25274" relation="include">
        </childnode>
        <childnode refid="25275" relation="include">
        </childnode>
        <childnode refid="25276" relation="include">
        </childnode>
        <childnode refid="25279" relation="include">
        </childnode>
        <childnode refid="25280" relation="include">
        </childnode>
        <childnode refid="25281" relation="include">
        </childnode>
        <childnode refid="25282" relation="include">
        </childnode>
        <childnode refid="25283" relation="include">
        </childnode>
        <childnode refid="25286" relation="include">
        </childnode>
        <childnode refid="25287" relation="include">
        </childnode>
        <childnode refid="25288" relation="include">
        </childnode>
        <childnode refid="25290" relation="include">
        </childnode>
        <childnode refid="25289" relation="include">
        </childnode>
        <childnode refid="25291" relation="include">
        </childnode>
        <childnode refid="25293" relation="include">
        </childnode>
        <childnode refid="25294" relation="include">
        </childnode>
        <childnode refid="25295" relation="include">
        </childnode>
        <childnode refid="25296" relation="include">
        </childnode>
        <childnode refid="25297" relation="include">
        </childnode>
        <childnode refid="25298" relation="include">
        </childnode>
        <childnode refid="25300" relation="include">
        </childnode>
        <childnode refid="25301" relation="include">
        </childnode>
        <childnode refid="25302" relation="include">
        </childnode>
        <childnode refid="25303" relation="include">
        </childnode>
        <childnode refid="25304" relation="include">
        </childnode>
        <childnode refid="25305" relation="include">
        </childnode>
        <childnode refid="25306" relation="include">
        </childnode>
        <childnode refid="25307" relation="include">
        </childnode>
        <childnode refid="25308" relation="include">
        </childnode>
        <childnode refid="25309" relation="include">
        </childnode>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25247" relation="include">
        </childnode>
        <childnode refid="25311" relation="include">
        </childnode>
        <childnode refid="25312" relation="include">
        </childnode>
        <childnode refid="25313" relation="include">
        </childnode>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25315" relation="include">
        </childnode>
        <childnode refid="25316" relation="include">
        </childnode>
        <childnode refid="25317" relation="include">
        </childnode>
        <childnode refid="25318" relation="include">
        </childnode>
        <childnode refid="25319" relation="include">
        </childnode>
        <childnode refid="25320" relation="include">
        </childnode>
        <childnode refid="25321" relation="include">
        </childnode>
        <childnode refid="25322" relation="include">
        </childnode>
        <childnode refid="25323" relation="include">
        </childnode>
        <childnode refid="25324" relation="include">
        </childnode>
        <childnode refid="25325" relation="include">
        </childnode>
        <childnode refid="25163" relation="include">
        </childnode>
        <childnode refid="25164" relation="include">
        </childnode>
        <childnode refid="25209" relation="include">
        </childnode>
        <childnode refid="25327" relation="include">
        </childnode>
        <childnode refid="25328" relation="include">
        </childnode>
        <childnode refid="25329" relation="include">
        </childnode>
        <childnode refid="25330" relation="include">
        </childnode>
        <childnode refid="25331" relation="include">
        </childnode>
        <childnode refid="25176" relation="include">
        </childnode>
        <childnode refid="25332" relation="include">
        </childnode>
        <childnode refid="25334" relation="include">
        </childnode>
        <childnode refid="25335" relation="include">
        </childnode>
        <childnode refid="25336" relation="include">
        </childnode>
        <childnode refid="25337" relation="include">
        </childnode>
        <childnode refid="25338" relation="include">
        </childnode>
        <childnode refid="25339" relation="include">
        </childnode>
        <childnode refid="25340" relation="include">
        </childnode>
        <childnode refid="25341" relation="include">
        </childnode>
        <childnode refid="25342" relation="include">
        </childnode>
        <childnode refid="25343" relation="include">
        </childnode>
        <childnode refid="25344" relation="include">
        </childnode>
        <childnode refid="25345" relation="include">
        </childnode>
        <childnode refid="25346" relation="include">
        </childnode>
        <childnode refid="25347" relation="include">
        </childnode>
        <childnode refid="25348" relation="include">
        </childnode>
        <childnode refid="25349" relation="include">
        </childnode>
        <childnode refid="25350" relation="include">
        </childnode>
        <childnode refid="25351" relation="include">
        </childnode>
        <childnode refid="25352" relation="include">
        </childnode>
        <childnode refid="25353" relation="include">
        </childnode>
        <childnode refid="25354" relation="include">
        </childnode>
        <childnode refid="25355" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25153" relation="include">
        </childnode>
        <childnode refid="25356" relation="include">
        </childnode>
        <childnode refid="25357" relation="include">
        </childnode>
        <childnode refid="25359" relation="include">
        </childnode>
        <childnode refid="25172" relation="include">
        </childnode>
        <childnode refid="25165" relation="include">
        </childnode>
        <childnode refid="25156" relation="include">
        </childnode>
        <childnode refid="25360" relation="include">
        </childnode>
      </node>
      <node id="25239">
        <label>lbann/layers/regularizers/batch_normalization.hpp</label>
        <link refid="batch__normalization_8hpp"/>
        <childnode refid="25236" relation="include">
        </childnode>
      </node>
      <node id="25334">
        <label>lbann/objective_functions/loss_functions/mean_squared_error.hpp</label>
        <link refid="objective__functions_2loss__functions_2mean__squared__error_8hpp"/>
        <childnode refid="25333" relation="include">
        </childnode>
      </node>
      <node id="25205">
        <label>lbann/layers/activations/tanh.hpp</label>
        <link refid="tanh_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
      </node>
      <node id="25207">
        <label>lbann/layers/learning/fully_connected.hpp</label>
        <link refid="fully__connected_8hpp"/>
        <childnode refid="25208" relation="include">
        </childnode>
        <childnode refid="25192" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
        <childnode refid="25138" relation="include">
        </childnode>
        <childnode refid="25164" relation="include">
        </childnode>
        <childnode refid="25209" relation="include">
        </childnode>
        <childnode refid="25210" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25211" relation="include">
        </childnode>
      </node>
      <node id="25232">
        <label>lbann/layers/transform/gaussian.hpp</label>
        <link refid="gaussian_8hpp"/>
        <childnode refid="25218" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
      </node>
      <node id="25176">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="25177" relation="include">
        </childnode>
        <childnode refid="25178" relation="include">
        </childnode>
      </node>
      <node id="25220">
        <label>utility</label>
      </node>
      <node id="25172">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="25173" relation="include">
        </childnode>
        <childnode refid="25174" relation="include">
        </childnode>
        <childnode refid="25175" relation="include">
        </childnode>
      </node>
      <node id="25340">
        <label>lbann/objective_functions/loss_functions/poisson_negloglike.hpp</label>
        <link refid="poisson__negloglike_8hpp"/>
        <childnode refid="25333" relation="include">
        </childnode>
      </node>
      <node id="25363">
        <label>lbann/proto/init_image_data_readers.hpp</label>
        <link refid="init__image__data__readers_8hpp"/>
        <childnode refid="25135" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
      </node>
      <node id="25211">
        <label>sstream</label>
      </node>
      <node id="25206">
        <label>lbann/layers/activations/power.hpp</label>
        <link refid="power_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
      </node>
      <node id="25291">
        <label>lbann/data_readers/data_reader_merge_samples.hpp</label>
        <link refid="data__reader__merge__samples_8hpp"/>
        <childnode refid="25292" relation="include">
        </childnode>
      </node>
      <node id="25233">
        <label>lbann/layers/transform/bernoulli.hpp</label>
        <link refid="bernoulli_8hpp"/>
        <childnode refid="25218" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
      </node>
      <node id="25329">
        <label>lbann/optimizers/hypergradient_adam.hpp</label>
        <link refid="hypergradient__adam_8hpp"/>
        <childnode refid="25155" relation="include">
        </childnode>
      </node>
      <node id="25224">
        <label>lbann/layers/transform/slice.hpp</label>
        <link refid="slice_8hpp"/>
        <childnode refid="25218" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25210" relation="include">
        </childnode>
      </node>
      <node id="25300">
        <label>lbann/callbacks/callback_check_init.hpp</label>
        <link refid="callback__check__init_8hpp"/>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25166">
        <label>lbann.pb.h</label>
      </node>
      <node id="25309">
        <label>lbann/callbacks/callback_debug.hpp</label>
        <link refid="callback__debug_8hpp"/>
        <childnode refid="25169" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25288">
        <label>lbann/data_readers/data_reader_nci.hpp</label>
        <link refid="data__reader__nci_8hpp"/>
        <childnode refid="25289" relation="include">
        </childnode>
      </node>
      <node id="25295">
        <label>lbann/data_readers/data_reader_pilot2_molecular.hpp</label>
        <link refid="data__reader__pilot2__molecular_8hpp"/>
        <childnode refid="25180" relation="include">
        </childnode>
        <childnode refid="25285" relation="include">
        </childnode>
      </node>
      <node id="25143">
        <label>cstdlib</label>
      </node>
      <node id="25318">
        <label>lbann/callbacks/profiler.hpp</label>
        <link refid="profiler_8hpp"/>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25303">
        <label>lbann/callbacks/callback_check_dataset.hpp</label>
        <link refid="callback__check__dataset_8hpp"/>
        <childnode refid="25171" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25241">
        <label>lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="25242" relation="include">
        </childnode>
        <childnode refid="25244" relation="include">
        </childnode>
        <childnode refid="25245" relation="include">
        </childnode>
        <childnode refid="25246" relation="include">
        </childnode>
        <childnode refid="25138" relation="include">
        </childnode>
        <childnode refid="25247" relation="include">
        </childnode>
      </node>
      <node id="25258">
        <label>opencv.hpp</label>
        <link refid="opencv_8hpp"/>
        <childnode refid="25147" relation="include">
        </childnode>
      </node>
      <node id="25315">
        <label>lbann/callbacks/callback_early_stopping.hpp</label>
        <link refid="callback__early__stopping_8hpp"/>
        <childnode refid="25167" relation="include">
        </childnode>
        <childnode refid="25179" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25160">
        <label>iostream</label>
      </node>
      <node id="25200">
        <label>lbann/layers/activations/sigmoid.hpp</label>
        <link refid="sigmoid_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
      </node>
      <node id="25190">
        <label>lbann/models/siamese.hpp</label>
        <link refid="siamese_8hpp"/>
        <childnode refid="25187" relation="include">
        </childnode>
      </node>
      <node id="25289">
        <label>data_reader_csv.hpp</label>
        <link refid="data__reader__csv_8hpp"/>
        <childnode refid="25180" relation="include">
        </childnode>
        <childnode refid="25183" relation="include">
        </childnode>
        <childnode refid="25179" relation="include">
        </childnode>
      </node>
      <node id="25277">
        <label>cv_process_patches.hpp</label>
        <link refid="cv__process__patches_8hpp"/>
        <childnode refid="25256" relation="include">
        </childnode>
        <childnode refid="25278" relation="include">
        </childnode>
        <childnode refid="25273" relation="include">
        </childnode>
      </node>
      <node id="25155">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="25156" relation="include">
        </childnode>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
        <childnode refid="25163" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25167" relation="include">
        </childnode>
      </node>
      <node id="25179">
        <label>unordered_map</label>
      </node>
      <node id="25260">
        <label>cv_normalizer.hpp</label>
        <link refid="cv__normalizer_8hpp"/>
        <childnode refid="25261" relation="include">
        </childnode>
        <childnode refid="25257" relation="include">
        </childnode>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25262" relation="include">
        </childnode>
      </node>
      <node id="25181">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25165" relation="include">
        </childnode>
        <childnode refid="25182" relation="include">
        </childnode>
      </node>
      <node id="25221">
        <label>lbann/layers/transform/unpooling.hpp</label>
        <link refid="unpooling_8hpp"/>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25219" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25215" relation="include">
        </childnode>
      </node>
      <node id="25257">
        <label>cv_transform.hpp</label>
        <link refid="cv__transform_8hpp"/>
        <childnode refid="25258" relation="include">
        </childnode>
        <childnode refid="25259" relation="include">
        </childnode>
      </node>
      <node id="25322">
        <label>lbann/callbacks/callback_gradient_check.hpp</label>
        <link refid="callback__gradient__check_8hpp"/>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25328">
        <label>lbann/optimizers/adam.hpp</label>
        <link refid="adam_8hpp"/>
        <childnode refid="25155" relation="include">
        </childnode>
      </node>
      <node id="25355">
        <label>lbann/metrics/boolean_false_negatives.hpp</label>
        <link refid="boolean__false__negatives_8hpp"/>
        <childnode refid="25178" relation="include">
        </childnode>
      </node>
      <node id="25152">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25153" relation="include">
        </childnode>
        <childnode refid="25155" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
        <childnode refid="25168" relation="include">
        </childnode>
        <childnode refid="25165" relation="include">
        </childnode>
        <childnode refid="25166" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
      </node>
      <node id="25332">
        <label>lbann/objective_functions/loss_functions/cross_entropy.hpp</label>
        <link refid="cross__entropy_8hpp"/>
        <childnode refid="25333" relation="include">
        </childnode>
      </node>
      <node id="25226">
        <label>lbann/layers/transform/constant.hpp</label>
        <link refid="constant_8hpp"/>
        <childnode refid="25218" relation="include">
        </childnode>
      </node>
      <node id="25189">
        <label>lbann/models/greedy_layerwise_autoencoder.hpp</label>
        <link refid="greedy__layerwise__autoencoder_8hpp"/>
        <childnode refid="25137" relation="include">
        </childnode>
      </node>
      <node id="25264">
        <label>cv_augmenter.hpp</label>
        <link refid="cv__augmenter_8hpp"/>
        <childnode refid="25257" relation="include">
        </childnode>
        <childnode refid="25160" relation="include">
        </childnode>
        <childnode refid="25265" relation="include">
        </childnode>
        <childnode refid="25266" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
      </node>
      <node id="25169">
        <label>chrono</label>
      </node>
      <node id="25299">
        <label>lbann/data_store/data_store_image.hpp</label>
        <link refid="data__store__image_8hpp"/>
        <childnode refid="25297" relation="include">
        </childnode>
        <childnode refid="25179" relation="include">
        </childnode>
      </node>
      <node id="25227">
        <label>lbann/layers/transform/dummy.hpp</label>
        <link refid="dummy_8hpp"/>
        <childnode refid="25218" relation="include">
        </childnode>
      </node>
      <node id="25320">
        <label>lbann/callbacks/callback_hang.hpp</label>
        <link refid="callback__hang_8hpp"/>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25177">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25163" relation="include">
        </childnode>
      </node>
      <node id="25159">
        <label>csignal</label>
      </node>
      <node id="25269">
        <label>cv_cropper.hpp</label>
        <link refid="cv__cropper_8hpp"/>
        <childnode refid="25257" relation="include">
        </childnode>
        <childnode refid="25220" relation="include">
        </childnode>
        <childnode refid="25265" relation="include">
        </childnode>
      </node>
      <node id="25243">
        <label>lbann/utils/dataset.hpp</label>
        <link refid="dataset_8hpp"/>
        <childnode refid="25180" relation="include">
        </childnode>
      </node>
      <node id="25356">
        <label>lbann/utils/options.hpp</label>
        <link refid="options_8hpp"/>
        <childnode refid="25160" relation="include">
        </childnode>
        <childnode refid="25150" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
      </node>
      <node id="25163">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25162" relation="include">
        </childnode>
        <childnode refid="25164" relation="include">
        </childnode>
        <childnode refid="25165" relation="include">
        </childnode>
        <childnode refid="25166" relation="include">
        </childnode>
      </node>
      <node id="25351">
        <label>lbann/metrics/pearson_correlation.hpp</label>
        <link refid="pearson__correlation_8hpp"/>
        <childnode refid="25178" relation="include">
        </childnode>
      </node>
      <node id="25180">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25172" relation="include">
        </childnode>
        <childnode refid="25165" relation="include">
        </childnode>
        <childnode refid="25183" relation="include">
        </childnode>
        <childnode refid="25184" relation="include">
        </childnode>
        <childnode refid="25185" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25186" relation="include">
        </childnode>
      </node>
      <node id="25280">
        <label>lbann/data_readers/data_reader_mnist.hpp</label>
        <link refid="data__reader__mnist_8hpp"/>
        <childnode refid="25255" relation="include">
        </childnode>
        <childnode refid="25183" relation="include">
        </childnode>
      </node>
      <node id="25147">
        <label>lbann_config.hpp</label>
      </node>
      <node id="25271">
        <label>type_traits</label>
      </node>
      <node id="25326">
        <label>google/protobuf/message.h</label>
      </node>
      <node id="25171">
        <label>set</label>
      </node>
      <node id="25275">
        <label>lbann/data_readers/data_reader_imagenet_single.hpp</label>
        <link refid="data__reader__imagenet__single_8hpp"/>
        <childnode refid="25274" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
      </node>
      <node id="25339">
        <label>lbann/objective_functions/loss_functions/mean_absolute_error.hpp</label>
        <link refid="mean__absolute__error_8hpp"/>
        <childnode refid="25333" relation="include">
        </childnode>
      </node>
      <node id="25138">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="25139" relation="include">
        </childnode>
        <childnode refid="25148" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25153" relation="include">
        </childnode>
        <childnode refid="25170" relation="include">
        </childnode>
        <childnode refid="25172" relation="include">
        </childnode>
        <childnode refid="25165" relation="include">
        </childnode>
        <childnode refid="25176" relation="include">
        </childnode>
        <childnode refid="25178" relation="include">
        </childnode>
        <childnode refid="25163" relation="include">
        </childnode>
        <childnode refid="25155" relation="include">
        </childnode>
        <childnode refid="25166" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25179" relation="include">
        </childnode>
      </node>
      <node id="25316">
        <label>lbann/callbacks/callback_ltfb.hpp</label>
        <link refid="callback__ltfb_8hpp"/>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25317">
        <label>lbann/callbacks/callback_save_images.hpp</label>
        <link refid="callback__save__images_8hpp"/>
        <childnode refid="25220" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
        <childnode refid="25180" relation="include">
        </childnode>
      </node>
      <node id="25156">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="25208">
        <label>lbann/layers/learning/learning.hpp</label>
        <link refid="learning_8hpp"/>
        <childnode refid="25152" relation="include">
        </childnode>
      </node>
      <node id="25185">
        <label>algorithm</label>
      </node>
      <node id="25142">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="25143" relation="include">
        </childnode>
        <childnode refid="25144" relation="include">
        </childnode>
        <childnode refid="25145" relation="include">
        </childnode>
        <childnode refid="25146" relation="include">
        </childnode>
      </node>
      <node id="25285">
        <label>cnpy.h</label>
      </node>
      <node id="25234">
        <label>lbann/layers/transform/uniform.hpp</label>
        <link refid="uniform_8hpp"/>
        <childnode refid="25218" relation="include">
        </childnode>
        <childnode refid="25181" relation="include">
        </childnode>
      </node>
      <node id="25137">
        <label>lbann/models/sequential.hpp</label>
        <link refid="sequential_8hpp"/>
        <childnode refid="25138" relation="include">
        </childnode>
        <childnode refid="25152" relation="include">
        </childnode>
        <childnode refid="25180" relation="include">
        </childnode>
        <childnode refid="25165" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
      </node>
      <node id="25310">
        <label>lbann/callbacks/callback_debug_io.hpp</label>
        <link refid="callback__debug__io_8hpp"/>
        <childnode refid="25169" relation="include">
        </childnode>
        <childnode refid="25149" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
        <childnode refid="25240" relation="include">
        </childnode>
      </node>
      <node id="25191">
        <label>lbann/layers/activations/atan.hpp</label>
        <link refid="atan_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
      </node>
      <node id="25266">
        <label>cstring</label>
      </node>
      <node id="25141">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="25140" relation="include">
        </childnode>
      </node>
      <node id="25252">
        <label>lbann/layers/io/target/generic_target_layer.hpp</label>
        <link refid="generic__target__layer_8hpp"/>
        <childnode refid="25242" relation="include">
        </childnode>
        <childnode refid="25241" relation="include">
        </childnode>
        <childnode refid="25245" relation="include">
        </childnode>
        <childnode refid="25246" relation="include">
        </childnode>
        <childnode refid="25157" relation="include">
        </childnode>
        <childnode refid="25138" relation="include">
        </childnode>
        <childnode refid="25154" relation="include">
        </childnode>
        <childnode refid="25174" relation="include">
        </childnode>
        <childnode refid="25173" relation="include">
        </childnode>
        <childnode refid="25186" relation="include">
        </childnode>
      </node>
      <node id="25345">
        <label>lbann/objective_functions/kl_divergence.hpp</label>
        <link refid="kl__divergence_8hpp"/>
        <childnode refid="25177" relation="include">
        </childnode>
        <childnode refid="25251" relation="include">
        </childnode>
      </node>
      <node id="25350">
        <label>lbann/metrics/mean_absolute_deviation.hpp</label>
        <link refid="metrics_2mean__absolute__deviation_8hpp"/>
        <childnode refid="25178" relation="include">
        </childnode>
      </node>
      <node id="25197">
        <label>lbann/layers/activations/leaky_relu.hpp</label>
        <link refid="leaky__relu_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
      </node>
      <node id="25294">
        <label>lbann/data_readers/data_reader_ascii.hpp</label>
        <link refid="data__reader__ascii_8hpp"/>
        <childnode refid="25180" relation="include">
        </childnode>
      </node>
      <node id="25337">
        <label>lbann/objective_functions/loss_functions/geom_negloglike.hpp</label>
        <link refid="geom__negloglike_8hpp"/>
        <childnode refid="25333" relation="include">
        </childnode>
      </node>
      <node id="25250">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="25214" relation="include">
        </childnode>
      </node>
      <node id="25296">
        <label>lbann/data_readers/data_reader_mesh.hpp</label>
        <link refid="data__reader__mesh_8hpp"/>
        <childnode refid="25180" relation="include">
        </childnode>
      </node>
      <node id="25193">
        <label>lbann/layers/activations/bent_identity.hpp</label>
        <link refid="bent__identity_8hpp"/>
        <childnode refid="25192" relation="include">
        </childnode>
      </node>
      <node id="25272">
        <label>memory</label>
      </node>
      <node id="25311">
        <label>lbann/callbacks/callback_dump_weights.hpp</label>
        <link refid="callback__dump__weights_8hpp"/>
        <childnode refid="25220" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25331">
        <label>lbann/optimizers/sgd.hpp</label>
        <link refid="sgd_8hpp"/>
        <childnode refid="25155" relation="include">
        </childnode>
      </node>
      <node id="25151">
        <label>typeindex</label>
      </node>
      <node id="25313">
        <label>lbann/callbacks/callback_dump_gradients.hpp</label>
        <link refid="callback__dump__gradients_8hpp"/>
        <childnode refid="25220" relation="include">
        </childnode>
        <childnode refid="25248" relation="include">
        </childnode>
      </node>
      <node id="25145">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="proto__common_8cpp_1a1b10b844cb4e440144a2d53746c6f4a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool has_motifs</definition>
        <argsstring>(lbann_comm *comm, const lbann_data::LbannPB &amp;p)</argsstring>
        <name>has_motifs</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>const lbann_data::LbannPB &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Returns true if the Model contains at least one MotifLayer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" line="18" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" bodystart="18" bodyend="30"/>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
      </memberdef>
      <memberdef kind="function" id="proto__common_8cpp_1a57cf77cd2e121575fff7883f90d64258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void expand_motifs</definition>
        <argsstring>(lbann_comm *comm, lbann_data::LbannPB &amp;pb)</argsstring>
        <name>expand_motifs</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>lbann_data::LbannPB &amp;</type>
          <declname>pb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" line="32" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" bodystart="32" bodyend="39"/>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
      </memberdef>
      <memberdef kind="function" id="proto__common_8cpp_1af4bc832c06a5e90a9c963b5168f6a606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_data_readers</definition>
        <argsstring>(lbann::lbann_comm *comm, const lbann_data::LbannPB &amp;p, std::map&lt; execution_mode, generic_data_reader *&gt; &amp;data_readers)</argsstring>
        <name>init_data_readers</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann::lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>const lbann_data::LbannPB &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>, <ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *&gt; &amp;</type>
          <declname>data_readers</declname>
        </param>
        <briefdescription>
<para>instantiates one or more generic_data_readers and inserts them in &amp;data_readers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" line="41" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" bodystart="41" bodyend="270"/>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <references refid="init__image__data__readers_8cpp_1a671d9d841466d2bf6ee67336e7d45cd6" compoundref="init__image__data__readers_8cpp" startline="413" endline="452">init_org_image_data_reader</references>
        <references refid="init__image__data__readers_8cpp_1afbbec9e8aa0c25aac424999eae6c39df" compoundref="init__image__data__readers_8cpp" startline="263" endline="331">init_image_data_reader</references>
        <references refid="namespacelbann_1a02f197bc772ef04f1ac51eb191a02cab" compoundref="base_8hpp" startline="142" endline="149">lbann::endsWith</references>
        <references refid="namespacelbann_1a840c9f1d5f27bc30d081fb90529889e6" compoundref="glob_8hpp" startline="42" endline="59">lbann::glob</references>
        <references refid="classlbann_1_1generic__data__reader_1a74b7ef4fe0dc7d3a96868ca3b5fbf897" compoundref="data__reader_8cpp" startline="423" endline="425">lbann::generic_data_reader::set_data_filename</references>
        <references refid="classlbann_1_1generic__data__reader_1af45f301cc9adc2f8184b81d8d2600b8f" compoundref="data__reader_8cpp" startline="436" endline="438">lbann::generic_data_reader::set_label_filename</references>
        <references refid="classlbann_1_1generic__data__reader_1a94a6db0b62d4c98202ef309eb76b220c" compoundref="data__reader_8cpp" startline="411" endline="417">lbann::generic_data_reader::set_file_dir</references>
        <references refid="classlbann_1_1generic__data__reader_1aa2d83c4ffc58534e0c193b6b9f9fb925" compoundref="data__reader_8cpp" startline="453" endline="455">lbann::generic_data_reader::set_absolute_sample_count</references>
        <references refid="classlbann_1_1generic__data__reader_1ae6929a8bd2e59da72a8c2e537f0b2b37" compoundref="data__reader_8cpp" startline="477" endline="485">lbann::generic_data_reader::set_use_percent</references>
        <references refid="classlbann_1_1generic__data__reader_1aca4e6c31df0a1579079274bc48fbbf26" compoundref="data__reader_8cpp" startline="449" endline="451">lbann::generic_data_reader::set_first_n</references>
        <references refid="init__image__data__readers_8cpp_1a0e66a70e8fd1805c0a7433d359f73b85" compoundref="init__image__data__readers_8cpp" startline="334" endline="410">init_generic_preprocessor</references>
        <references refid="classlbann_1_1generic__data__reader_1adeb9413be971a0c1454fdeb46fea0716" compoundref="data__reader_8hpp" startline="211" endline="213">lbann::generic_data_reader::set_role</references>
        <references refid="classlbann_1_1generic__data__reader_1a18b67bfa426eb4d2c8195d115c4df49f" compoundref="data__reader_8cpp" startline="462" endline="470">lbann::generic_data_reader::set_validation_percent</references>
        <references refid="classlbann_1_1generic__data__reader_1a343f7d791a04aa1ef30ff829a899e2ae" compoundref="data__reader_8hpp" startline="471" endline="473">lbann::generic_data_reader::set_master</references>
        <references refid="classlbann_1_1generic__data__reader_1a39f4d80661a2c8e24d8d167ad5bd6c6b" compoundref="data__reader_8hpp" startline="98" endline="101">lbann::generic_data_reader::set_comm</references>
        <references refid="classlbann_1_1generic__data__reader_1afeb47703d988a230a59859cbfc178215">lbann::generic_data_reader::load</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <references refid="classlbann_1_1generic__data__reader_1afa621af16f1a582b5a22405b79dbe052" compoundref="data__reader_8cpp" startline="378" endline="382">lbann::generic_data_reader::use_unused_index_set</references>
        <references refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" compoundref="data__reader_8hpp" startline="441" endline="443">lbann::generic_data_reader::get_num_data</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
      </memberdef>
      <memberdef kind="function" id="proto__common_8cpp_1addbf693bd6d4a399daa599ba03509569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void read_prototext_file</definition>
        <argsstring>(std::string fn, lbann_data::LbannPB &amp;pb, bool master)</argsstring>
        <name>read_prototext_file</name>
        <param>
          <type>std::string</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>lbann_data::LbannPB &amp;</type>
          <declname>pb</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>master</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" line="272" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" bodystart="272" bodyend="292"/>
        <referencedby refid="classlbann_1_1protobuf__utils_1ab8470c35e353af71b04e1e853b99f8ae" compoundref="protobuf__utils_8cpp" startline="116" endline="137">lbann::protobuf_utils::read_in_prototext_files</referencedby>
      </memberdef>
      <memberdef kind="function" id="proto__common_8cpp_1a91203c337da08d1c40828157f80cd7c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool write_prototext_file</definition>
        <argsstring>(const char *fn, lbann_data::LbannPB &amp;pb)</argsstring>
        <name>write_prototext_file</name>
        <param>
          <type>const char *</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>lbann_data::LbannPB &amp;</type>
          <declname>pb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" line="294" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" bodystart="294" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="proto__common_8cpp_1ae5ac4c13a36b3222afacd8d7b4786140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_num_parallel_readers</definition>
        <argsstring>(lbann::lbann_comm *comm, lbann_data::LbannPB &amp;p)</argsstring>
        <name>set_num_parallel_readers</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann::lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>lbann_data::LbannPB &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>adjusts the number of parallel data readers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" line="311" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" bodystart="311" bodyend="330"/>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <references refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" compoundref="comm_8hpp" startline="156" endline="158">lbann::lbann_comm::get_procs_per_model</references>
      </memberdef>
      <memberdef kind="function" id="proto__common_8cpp_1a2b1366b9ab5913e4db6afc8833ca4054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_data_readers_filenames</definition>
        <argsstring>(std::string which, lbann_data::LbannPB &amp;p)</argsstring>
        <name>set_data_readers_filenames</name>
        <param>
          <type>std::string</type>
          <declname>which</declname>
        </param>
        <param>
          <type>lbann_data::LbannPB &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" line="332" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" bodystart="332" bodyend="366"/>
        <references refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" compoundref="options_8hpp" startline="20" endline="22">options::get</references>
        <references refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" compoundref="options_8cpp" startline="259" endline="263">options::has_string</references>
        <references refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" compoundref="options_8cpp" startline="182" endline="192">options::get_string</references>
        <referencedby refid="proto__common_8hpp_1a46fd41f635ff8f352065adc85eb3d1df" compoundref="proto__common_8cpp" startline="386" endline="539">get_cmdline_overrides</referencedby>
      </memberdef>
      <memberdef kind="function" id="proto__common_8cpp_1a900e005e45b3debc2444ded1c3ff6e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_data_readers_percent</definition>
        <argsstring>(lbann_data::LbannPB &amp;p)</argsstring>
        <name>set_data_readers_percent</name>
        <param>
          <type>lbann_data::LbannPB &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" line="368" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" bodystart="368" bodyend="384"/>
        <references refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" compoundref="options_8hpp" startline="20" endline="22">options::get</references>
        <references refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" compoundref="options_8hpp" startline="58" endline="58">options::get_float</references>
        <referencedby refid="proto__common_8hpp_1a46fd41f635ff8f352065adc85eb3d1df" compoundref="proto__common_8cpp" startline="386" endline="539">get_cmdline_overrides</referencedby>
      </memberdef>
      <memberdef kind="function" id="proto__common_8cpp_1a46fd41f635ff8f352065adc85eb3d1df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_cmdline_overrides</definition>
        <argsstring>(lbann::lbann_comm *comm, lbann_data::LbannPB &amp;p)</argsstring>
        <name>get_cmdline_overrides</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann::lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>lbann_data::LbannPB &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>adjusts the values in p by querying the options db </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" line="386" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" bodystart="386" bodyend="539"/>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <references refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" compoundref="options_8hpp" startline="20" endline="22">options::get</references>
        <references refid="classoptions_1a01020aa5bd82bcff1b1c950b20578883" compoundref="options_8cpp" startline="245" endline="250">options::has_int</references>
        <references refid="classoptions_1a797bc1915004bdbc34c5eea3fe488952" compoundref="options_8cpp" startline="138" endline="149">options::get_int</references>
        <references refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" compoundref="options_8cpp" startline="259" endline="263">options::has_string</references>
        <references refid="proto__common_8cpp_1a2b1366b9ab5913e4db6afc8833ca4054" compoundref="proto__common_8cpp" startline="332" endline="366">set_data_readers_filenames</references>
        <references refid="proto__common_8cpp_1a900e005e45b3debc2444ded1c3ff6e1f" compoundref="proto__common_8cpp" startline="368" endline="384">set_data_readers_percent</references>
        <references refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" compoundref="options_8cpp" startline="182" endline="192">options::get_string</references>
        <references refid="classoptions_1aafb1d2a7ccde0b1bf786230ba4080ecd" compoundref="options_8cpp" startline="252" endline="257">options::has_bool</references>
        <references refid="classoptions_1a99aa190102de33e2aed39723929f9fad" compoundref="options_8cpp" startline="111" endline="126">options::get_bool</references>
        <references refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" compoundref="options_8hpp" startline="37" endline="37">options::has_float</references>
        <references refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" compoundref="options_8hpp" startline="58" endline="58">options::get_float</references>
      </memberdef>
      <memberdef kind="function" id="proto__common_8cpp_1adf83ffea572cec61b853b61aa68bea27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_parameters</definition>
        <argsstring>(lbann::lbann_comm *comm, lbann_data::LbannPB &amp;p)</argsstring>
        <name>print_parameters</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann::lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>lbann_data::LbannPB &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>print various params (learn_rate, etc) to cout </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" line="541" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" bodystart="541" bodyend="601"/>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
      </memberdef>
      <memberdef kind="function" id="proto__common_8cpp_1a403b98ced142a0afa3b939e7af1095b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_help</definition>
        <argsstring>(lbann::lbann_comm *comm)</argsstring>
        <name>print_help</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann::lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <briefdescription>
<para>prints usage information </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" line="603" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" bodystart="603" bodyend="679"/>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
      </memberdef>
      <memberdef kind="function" id="proto__common_8cpp_1aee6432eeb669d7a8571c095d8761bc26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void copy_file</definition>
        <argsstring>(std::string fn, std::ofstream &amp;out)</argsstring>
        <name>copy_file</name>
        <param>
          <type>std::string</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" line="681" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" bodystart="681" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="proto__common_8cpp_1a4f1af470c45e9ed06039685e5f72ea4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void save_session</definition>
        <argsstring>(lbann::lbann_comm *comm, int argc, char **argv, lbann_data::LbannPB &amp;p)</argsstring>
        <name>save_session</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann::lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>lbann_data::LbannPB &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>prints prototext file, cmd line, etc to file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" line="695" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp" bodystart="695" bodyend="779"/>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <references refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" compoundref="options_8hpp" startline="20" endline="22">options::get</references>
        <references refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" compoundref="options_8cpp" startline="259" endline="263">options::has_string</references>
        <references refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" compoundref="options_8cpp" startline="182" endline="192">options::get_string</references>
        <references refid="namespacelbann_1aefae2a9fc9d742ece0fa8ca7ed9ee137" compoundref="file__io_8cpp" startline="79" endline="96">lbann::exists</references>
        <references refid="base_8hpp_1a78b291de8c80b35c360c22d46d44498a" compoundref="base_8hpp" startline="188">LBANN_MAKE_STR</references>
        <references refid="classlbann_1_1lbann__comm_1a1eb92927a8f8bcbdd677ccecc1a33c59" compoundref="comm_8hpp" startline="164" endline="166">lbann::lbann_comm::get_procs_in_world</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="proto__common_8hpp" kindref="compound">lbann/proto/proto_common.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lbann_8hpp" kindref="compound">lbann/lbann.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_8hpp" kindref="compound">lbann/base.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="comm_8hpp" kindref="compound">lbann/comm.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init__image__data__readers_8hpp" kindref="compound">lbann/proto/init_image_data_readers.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;google/protobuf/io/coded_stream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;google/protobuf/io/zero_copy_stream_impl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;google/protobuf/text_format.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="proto__common_8hpp_1a9a9d7504db9e1b819fcddac197da3252" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="proto__common_8cpp_1a1b10b844cb4e440144a2d53746c6f4a2" kindref="member">has_motifs</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::LbannPB&amp;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>master<sp/>=<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;starting<sp/>has_motifs\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Model&amp;<sp/>m<sp/>=<sp/>p.model();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_layers<sp/>=<sp/>m.layer_size();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;num_layers;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Layer&amp;<sp/>layer<sp/>=<sp/>m.layer(j);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer.has_motif_layer())<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="proto__common_8hpp_1a9454e517d698ec0960588364b9b42d6a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="proto__common_8cpp_1a57cf77cd2e121575fff7883f90d64258" kindref="member">expand_motifs</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>lbann_data::LbannPB&amp;<sp/>pb)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>master<sp/>=<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;starting<sp/>expand_motifs\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::MotifDefinitions&amp;<sp/>m<sp/>=<sp/>pb.motif_definitions();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_motifs<sp/>=<sp/>m.motif_size();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;num_motifs;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="proto__common_8hpp_1a32d4c032abc19c091fa65ace580fc057" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="proto__common_8cpp_1af4bc832c06a5e90a9c963b5168f6a606" kindref="member">init_data_readers</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann::lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::LbannPB&amp;<sp/>p,<sp/>std::map&lt;execution_mode,<sp/>generic_data_reader<sp/>*&gt;&amp;<sp/>data_readers)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>master<sp/>=<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::DataReader<sp/>&amp;<sp/>d_reader<sp/>=<sp/>p.data_reader();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>d_reader.reader_size();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;size;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Reader&amp;<sp/>readme<sp/>=<sp/>d_reader.reader(j);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>temporary<sp/>measure<sp/>until<sp/>we<sp/>individually<sp/>setup<sp/>data<sp/>reader<sp/>specific<sp/>preprocessors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_up_generic_preprocessor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name<sp/>=<sp/>readme.name();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffle<sp/>=<sp/>readme.shuffle();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*reader<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref><sp/>*reader_validation<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;imagenet_org&quot;</highlight><highlight class="normal">)<sp/>||<sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mnist&quot;</highlight><highlight class="normal">)<sp/>||<sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cifar10&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="init__image__data__readers_8cpp_1a671d9d841466d2bf6ee67336e7d45cd6" kindref="member">init_org_image_data_reader</ref>(readme,<sp/>master,<sp/>reader);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_up_generic_preprocessor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;imagenet&quot;</highlight><highlight class="normal">)<sp/>||<sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;imagenet_single&quot;</highlight><highlight class="normal">)<sp/>||<sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;imagenet_patches&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;triplet&quot;</highlight><highlight class="normal">)<sp/>||<sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mnist_siamese&quot;</highlight><highlight class="normal">)<sp/>||<sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;multi_images&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="init__image__data__readers_8cpp_1afbbec9e8aa0c25aac424999eae6c39df" kindref="member">init_image_data_reader</ref>(readme,<sp/>master,<sp/>reader);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_up_generic_preprocessor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;jag&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>reader_jag<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag" kindref="compound">data_reader_jag</ref>(shuffle);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_jag-&gt;set_model_mode(static_cast&lt;data_reader_jag::model_mode_t&gt;(readme.modeling_mode()));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::ImagePreprocessor&amp;<sp/>pb_preproc<sp/>=<sp/>readme.image_preprocessor();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_jag-&gt;set_image_dims(pb_preproc.raw_width(),<sp/>pb_preproc.raw_height());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_jag-&gt;set_normalization_mode(pb_preproc.early_normalization());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader<sp/>=<sp/>reader_jag;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_up_generic_preprocessor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nci&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__nci" kindref="compound">data_reader_nci</ref>(shuffle);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;csv&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>reader_csv<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1csv__reader" kindref="compound">csv_reader</ref>(shuffle);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;set_label_col(readme.label_col());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;set_response_col(readme.response_col());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;disable_labels(readme.disable_labels());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;enable_responses(readme.disable_responses());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;set_separator(readme.separator()[0]);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;set_skip_cols(readme.skip_cols());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;set_skip_rows(readme.skip_rows());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;set_has_header(readme.has_header());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader<sp/>=<sp/>reader_csv;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;numpy&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>reader_numpy<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1numpy__reader" kindref="compound">numpy_reader</ref>(shuffle);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_numpy-&gt;set_has_labels(!readme.disable_labels());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_numpy-&gt;set_has_responses(!readme.disable_responses());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader<sp/>=<sp/>reader_numpy;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;pilot2_molecular_reader&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1pilot2__molecular__reader" kindref="compound">pilot2_molecular_reader</ref>*<sp/>reader_pilot2_molecular<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1pilot2__molecular__reader" kindref="compound">pilot2_molecular_reader</ref>(readme.num_neighbors(),<sp/>readme.max_neighborhood(),<sp/>shuffle);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader<sp/>=<sp/>reader_pilot2_molecular;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;merge_samples&quot;</highlight><highlight class="normal"><sp/>||<sp/>name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;merge_features&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>verify<sp/>how<sp/>much<sp/>of<sp/>wildcard<sp/>conflict<sp/>with<sp/>label<sp/>file,<sp/>label<sp/>file<sp/>should<sp/>be<sp/>loaded<sp/>separately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>filedir<sp/>=<sp/>readme.data_filedir();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="namespacelbann_1a02f197bc772ef04f1ac51eb191a02cab" kindref="member">endsWith</ref>(filedir,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filedir<sp/>=<sp/>filedir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>paths<sp/>=<sp/><ref refid="namespacelbann_1a840c9f1d5f27bc30d081fb90529889e6" kindref="member">glob</ref>(filedir<sp/>+<sp/>readme.data_file_pattern());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;generic_data_reader*&gt;<sp/>npy_readers;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>path<sp/>:<sp/>paths)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(master)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Loading<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>path<sp/>&lt;&lt;<sp/>std::endl;<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readme.format()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;numpy&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*reader_numpy<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1numpy__reader" kindref="compound">numpy_reader</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_numpy-&gt;set_data_filename(path);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_numpy-&gt;set_has_labels(!readme.disable_labels());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_numpy-&gt;set_has_responses(!readme.disable_responses());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>npy_readers.push_back(reader_numpy);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readme.format()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;pilot2_molecular_reader&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1pilot2__molecular__reader" kindref="compound">pilot2_molecular_reader</ref>*<sp/>reader_pilot2_molecular<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1pilot2__molecular__reader" kindref="compound">pilot2_molecular_reader</ref>(readme.num_neighbors(),<sp/>readme.max_neighborhood(),<sp/>shuffle);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_pilot2_molecular-&gt;<ref refid="classlbann_1_1generic__data__reader_1a74b7ef4fe0dc7d3a96868ca3b5fbf897" kindref="member">set_data_filename</ref>(path);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>npy_readers.push_back(reader_pilot2_molecular);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readme.format()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;csv&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>reader_csv<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1csv__reader" kindref="compound">csv_reader</ref>(shuffle);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;set_data_filename(path);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;set_label_col(readme.label_col());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;set_response_col(readme.response_col());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;disable_labels(readme.disable_labels());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;enable_responses(readme.disable_responses());</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;set_separator(readme.separator()[0]);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;set_skip_cols(readme.skip_cols());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;set_skip_rows(readme.skip_rows());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_csv-&gt;set_has_header(readme.has_header());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>npy_readers.push_back(reader_csv);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>unknown<sp/>format<sp/>for<sp/>merged<sp/>data<sp/>reader:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;merge_samples&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__merge__samples" kindref="compound">data_reader_merge_samples</ref>*<sp/>merged_samples<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__samples" kindref="compound">data_reader_merge_samples</ref>(npy_readers,<sp/>shuffle);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader<sp/>=<sp/>merged_samples;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>label<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>label_csv<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1csv__reader" kindref="compound">csv_reader</ref>(shuffle);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label_csv-&gt;set_data_filename(readme.label_filename());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label_csv-&gt;disable_labels(readme.disable_labels());</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label_csv-&gt;enable_responses(readme.disable_responses());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label_csv-&gt;set_has_header(readme.has_header());<sp/></highlight><highlight class="comment">//use<sp/>same<sp/>as<sp/>parent<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label_csv-&gt;set_label_col(0);<sp/></highlight><highlight class="comment">//assume<sp/>there<sp/>is<sp/>only<sp/>one<sp/>label<sp/>file<sp/>and<sp/>the<sp/>column<sp/>and<sp/>is<sp/>label<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label_csv-&gt;set_response_col(0);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1data__reader__merge__features" kindref="compound">data_reader_merge_features</ref>*<sp/>merged_features<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__features" kindref="compound">data_reader_merge_features</ref>(npy_readers,label_csv,<sp/>shuffle);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader<sp/>=<sp/>merged_features;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;synthetic&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__synthetic" kindref="compound">data_reader_synthetic</ref>(readme.num_samples(),<sp/>readme.num_features(),<sp/>shuffle);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ascii&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1ascii__reader" kindref="compound">ascii_reader</ref>(p.model().recurrent().unroll_depth(),<sp/>shuffle);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1mesh__reader" kindref="compound">mesh_reader</ref>(shuffle);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>unknown<sp/>name<sp/>for<sp/>data<sp/>reader:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readme.data_filename()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a74b7ef4fe0dc7d3a96868ca3b5fbf897" kindref="member">set_data_filename</ref>(<sp/>readme.data_filename()<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readme.label_filename()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>name<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;merge_features&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//label_file<sp/>set<sp/>differently<sp/>for<sp/>merge_features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1af45f301cc9adc2f8184b81d8d2600b8f" kindref="member">set_label_filename</ref>(<sp/>readme.label_filename()<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readme.data_filedir()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a94a6db0b62d4c98202ef309eb76b220c" kindref="member">set_file_dir</ref>(<sp/>readme.data_filedir()<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1aa2d83c4ffc58534e0c193b6b9f9fb925" kindref="member">set_absolute_sample_count</ref>(<sp/>readme.absolute_sample_count()<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1ae6929a8bd2e59da72a8c2e537f0b2b37" kindref="member">set_use_percent</ref>(<sp/>readme.percent_of_data_to_use()<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1aca4e6c31df0a1579079274bc48fbbf26" kindref="member">set_first_n</ref>(<sp/>readme.first_n()<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set_up_generic_preprocessor)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="init__image__data__readers_8cpp_1a0e66a70e8fd1805c0a7433d359f73b85" kindref="member">init_generic_preprocessor</ref>(readme,<sp/>master,<sp/>reader);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readme.role()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adeb9413be971a0c1454fdeb46fea0716" kindref="member">set_role</ref>(</highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readme.role()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adeb9413be971a0c1454fdeb46fea0716" kindref="member">set_role</ref>(</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adeb9413be971a0c1454fdeb46fea0716" kindref="member">set_role</ref>(</highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readme.role()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a18b67bfa426eb4d2c8195d115c4df49f" kindref="member">set_validation_percent</ref>(<sp/>readme.validation_percent()<sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a343f7d791a04aa1ef30ff829a899e2ae" kindref="member">set_master</ref>(master);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1a39f4d80661a2c8e24d8d167ad5bd6c6b" kindref="member">set_comm</ref>(comm);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1afeb47703d988a230a59859cbfc178215" kindref="member">load</ref>();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readme.role()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_readers[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>]<sp/>=<sp/>reader;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readme.role()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_readers[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>]<sp/>=<sp/>reader;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readme.role()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mnist&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1mnist__reader" kindref="compound">mnist_reader</ref>(shuffle);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(<ref refid="classlbann_1_1mnist__reader" kindref="compound">mnist_reader</ref><sp/>*)reader_validation)<sp/>=<sp/>(*(<ref refid="classlbann_1_1mnist__reader" kindref="compound">mnist_reader</ref><sp/>*)reader);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;imagenet_org&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1imagenet__reader__org" kindref="compound">imagenet_reader_org</ref>(shuffle);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(<ref refid="classlbann_1_1imagenet__reader__org" kindref="compound">imagenet_reader_org</ref><sp/>*)reader_validation)<sp/>=<sp/>(*(<ref refid="classlbann_1_1imagenet__reader__org" kindref="compound">imagenet_reader_org</ref><sp/>*)reader);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;imagenet&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1imagenet__reader" kindref="compound">imagenet_reader</ref>(*dynamic_cast&lt;const<sp/>imagenet_reader*&gt;(reader));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;imagenet_single&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1imagenet__reader__single" kindref="compound">imagenet_reader_single</ref>(*dynamic_cast&lt;const<sp/>imagenet_reader_single*&gt;(reader));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;imagenet_patches&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1imagenet__reader__patches" kindref="compound">imagenet_reader_patches</ref>(*dynamic_cast&lt;const<sp/>imagenet_reader_patches*&gt;(reader));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;triplet&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__triplet" kindref="compound">data_reader_triplet</ref>(*dynamic_cast&lt;const<sp/>data_reader_triplet*&gt;(reader));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mnist_siamese&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__mnist__siamese" kindref="compound">data_reader_mnist_siamese</ref>(*dynamic_cast&lt;const<sp/>data_reader_mnist_siamese*&gt;(reader));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;multi_images&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__multi__images" kindref="compound">data_reader_multi_images</ref>(*dynamic_cast&lt;const<sp/>data_reader_multi_images*&gt;(reader));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;jag&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__jag" kindref="compound">data_reader_jag</ref>(shuffle);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1data__reader__jag" kindref="compound">data_reader_jag</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(reader_validation)<sp/>=<sp/>*dynamic_cast&lt;const<sp/>data_reader_jag*&gt;(reader);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nci&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__nci" kindref="compound">data_reader_nci</ref>(shuffle);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(<ref refid="classlbann_1_1data__reader__nci" kindref="compound">data_reader_nci</ref><sp/>*)reader_validation)<sp/>=<sp/>(*(<ref refid="classlbann_1_1data__reader__nci" kindref="compound">data_reader_nci</ref><sp/>*)reader);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;csv&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1csv__reader" kindref="compound">csv_reader</ref>(shuffle);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(<ref refid="classlbann_1_1csv__reader" kindref="compound">csv_reader</ref><sp/>*)reader_validation)<sp/>=<sp/>(*(<ref refid="classlbann_1_1csv__reader" kindref="compound">csv_reader</ref><sp/>*)reader);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;numpy&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1numpy__reader" kindref="compound">numpy_reader</ref>(shuffle);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(<ref refid="classlbann_1_1numpy__reader" kindref="compound">numpy_reader</ref><sp/>*)reader_validation)<sp/>=<sp/>(*(<ref refid="classlbann_1_1numpy__reader" kindref="compound">numpy_reader</ref><sp/>*)reader);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;merge_samples&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__samples" kindref="compound">data_reader_merge_samples</ref>(*(<ref refid="classlbann_1_1data__reader__merge__samples" kindref="compound">data_reader_merge_samples</ref><sp/>*)reader);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;merge_features&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1data__reader__merge__features" kindref="compound">data_reader_merge_features</ref>(*(<ref refid="classlbann_1_1data__reader__merge__features" kindref="compound">data_reader_merge_features</ref><sp/>*)reader);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cifar10&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1cifar10__reader" kindref="compound">cifar10_reader</ref>(shuffle);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(<ref refid="classlbann_1_1cifar10__reader" kindref="compound">cifar10_reader</ref><sp/>*)reader_validation)<sp/>=<sp/>(*(<ref refid="classlbann_1_1cifar10__reader" kindref="compound">cifar10_reader</ref><sp/>*)reader);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(name<sp/>==<sp/>&quot;synthetic&quot;)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/>new<sp/>data_reader_synthetic(shuffle);</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ascii&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1ascii__reader" kindref="compound">ascii_reader</ref>(p.model().recurrent().unroll_depth(),<sp/>shuffle);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(<ref refid="classlbann_1_1ascii__reader" kindref="compound">ascii_reader</ref><sp/>*)reader_validation)<sp/>=<sp/>(*(<ref refid="classlbann_1_1ascii__reader" kindref="compound">ascii_reader</ref><sp/>*)reader);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1mesh__reader" kindref="compound">mesh_reader</ref>(shuffle);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(<ref refid="classlbann_1_1mesh__reader" kindref="compound">mesh_reader</ref><sp/>*)reader_validation)<sp/>=<sp/>(*(<ref refid="classlbann_1_1mesh__reader" kindref="compound">mesh_reader</ref><sp/>*)reader);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation-&gt;<ref refid="classlbann_1_1generic__data__reader_1adeb9413be971a0c1454fdeb46fea0716" kindref="member">set_role</ref>(</highlight><highlight class="stringliteral">&quot;validate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_validation-&gt;<ref refid="classlbann_1_1generic__data__reader_1afa621af16f1a582b5a22405b79dbe052" kindref="member">use_unused_index_set</ref>();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_train<sp/>=<sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" kindref="member">get_num_data</ref>();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_validate<sp/>=<sp/>reader_validation-&gt;<ref refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" kindref="member">get_num_data</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>validate_percent<sp/>=<sp/>((double)<sp/>num_validate<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>(num_train+num_validate))*100.0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>train_percent<sp/>=<sp/>((double)<sp/>num_train<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>(num_train+num_validate))*100.0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Training<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>train_percent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%<sp/>of<sp/>the<sp/>training<sp/>data<sp/>set,<sp/>which<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>reader-&gt;<ref refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" kindref="member">get_num_data</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>samples.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Validating<sp/>training<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>validate_percent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%<sp/>of<sp/>the<sp/>training<sp/>data<sp/>set,<sp/>which<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>reader_validation-&gt;<ref refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" kindref="member">get_num_data</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>samples.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_readers[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>]<sp/>=<sp/>reader_validation;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="proto__common_8hpp_1addbf693bd6d4a399daa599ba03509569" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="proto__common_8cpp_1addbf693bd6d4a399daa599ba03509569" kindref="member">read_prototext_file</ref>(std::string<sp/>fn,<sp/>lbann_data::LbannPB&amp;<sp/>pb,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>master)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>open(fn.c_str(),<sp/>O_RDONLY);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/><sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>failed<sp/>to<sp/>open<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>reading&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*input<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>google::protobuf::io::FileInputStream(fd);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/>google::protobuf::TextFormat::Parse(input,<sp/>&amp;pb);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/><sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>failed<sp/>to<sp/>read<sp/>or<sp/>parse<sp/>prototext<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fn<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>input-&gt;Close();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>input;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="proto__common_8cpp_1a91203c337da08d1c40828157f80cd7c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="proto__common_8cpp_1a91203c337da08d1c40828157f80cd7c1" kindref="member">write_prototext_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn,<sp/>lbann_data::LbannPB&amp;<sp/>pb)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>open(fn,<sp/>O_APPEND<sp/>|<sp/>O_CREAT<sp/>|<sp/>O_TRUNC,<sp/>0644);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*output<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>google::protobuf::io::FileOutputStream(fd);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!google::protobuf::TextFormat::Print(pb,<sp/>output))<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="proto__common_8hpp_1ae5ac4c13a36b3222afacd8d7b4786140" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="proto__common_8cpp_1ae5ac4c13a36b3222afacd8d7b4786140" kindref="member">set_num_parallel_readers</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann::lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>lbann_data::LbannPB&amp;<sp/>p)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>master<sp/>=<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>lbann_data::Model<sp/>*<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>=<sp/>p.mutable_model();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parallel_io<sp/>=<sp/>model-&gt;num_parallel_readers();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parallel_io<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tMax<sp/>Parallel<sp/>I/O<sp/>Fetch:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" kindref="member">get_procs_per_model</ref>()<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(Limited<sp/>to<sp/>#<sp/>Processes)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>parallel_io<sp/>=<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" kindref="member">get_procs_per_model</ref>();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;set_num_parallel_readers(parallel_io);<sp/></highlight><highlight class="comment">//adjust<sp/>the<sp/>prototext</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tMax<sp/>Parallel<sp/>I/O<sp/>Fetch:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parallel_io<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="proto__common_8cpp_1a2b1366b9ab5913e4db6afc8833ca4054" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="proto__common_8cpp_1a2b1366b9ab5913e4db6afc8833ca4054" kindref="member">set_data_readers_filenames</ref>(std::string<sp/>which,<sp/>lbann_data::LbannPB&amp;<sp/>p)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="classoptions" kindref="compound">options</ref><sp/>*opts<sp/>=<sp/><ref refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" kindref="member">options::get</ref>();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>lbann_data::DataReader<sp/>*readers<sp/>=<sp/>p.mutable_data_reader();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>readers-&gt;reader_size();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;size;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>lbann_data::Reader<sp/>*r<sp/>=<sp/>readers-&gt;mutable_reader(j);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r-&gt;role()<sp/>==<sp/>which)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>s;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;data_filedir_&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>which;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(s.str()))<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;set_data_filedir(opts-&gt;<ref refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" kindref="member">get_string</ref>(s.str()));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.clear();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.str(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;data_filedir&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(s.str()))<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;set_data_filedir(opts-&gt;<ref refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" kindref="member">get_string</ref>(s.str()));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.clear();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.str(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;data_filename_&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>which;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(s.str()))<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;set_data_filename(opts-&gt;<ref refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" kindref="member">get_string</ref>(s.str()));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.clear();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.str(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;label_filename_&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>which;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(s.str()))<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;set_label_filename(opts-&gt;<ref refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" kindref="member">get_string</ref>(s.str()));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="proto__common_8cpp_1a900e005e45b3debc2444ded1c3ff6e1f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="proto__common_8cpp_1a900e005e45b3debc2444ded1c3ff6e1f" kindref="member">set_data_readers_percent</ref>(lbann_data::LbannPB&amp;<sp/>p)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><ref refid="classoptions" kindref="compound">options</ref><sp/>*opts<sp/>=<sp/><ref refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" kindref="member">options::get</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>percent<sp/>=<sp/>opts-&gt;<ref refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" kindref="member">get_float</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_percent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(percent<sp/>&lt;=<sp/>0<sp/>||<sp/>percent<sp/>&gt;<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--data_reader_percent=&lt;float&gt;<sp/>must<sp/>be<sp/>&gt;<sp/>0<sp/>and<sp/>&lt;=<sp/>1.0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>lbann_data::DataReader<sp/>*readers<sp/>=<sp/>p.mutable_data_reader();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>readers-&gt;reader_size();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;size;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>lbann_data::Reader<sp/>*r<sp/>=<sp/>readers-&gt;mutable_reader(j);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;set_percent_of_data_to_use(<sp/>percent<sp/>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="proto__common_8hpp_1a46fd41f635ff8f352065adc85eb3d1df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="proto__common_8cpp_1a46fd41f635ff8f352065adc85eb3d1df" kindref="member">get_cmdline_overrides</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann::lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>lbann_data::LbannPB&amp;<sp/>p)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>master<sp/>=<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="classoptions" kindref="compound">options</ref><sp/>*opts<sp/>=<sp/><ref refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" kindref="member">options::get</ref>();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>lbann_data::Model<sp/>*<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>=<sp/>p.mutable_model();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>lbann_data::DataReader<sp/>*d_reader<sp/>=<sp/>p.mutable_data_reader();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>d_reader-&gt;reader_size();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a01020aa5bd82bcff1b1c950b20578883" kindref="member">has_int</ref>(</highlight><highlight class="stringliteral">&quot;absolute_sample_count&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;size;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>opts-&gt;<ref refid="classoptions_1a797bc1915004bdbc34c5eea3fe488952" kindref="member">get_int</ref>(</highlight><highlight class="stringliteral">&quot;absolute_sample_count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lbann_data::Reader<sp/>*readme<sp/>=<sp/>d_reader-&gt;mutable_reader(j);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readme-&gt;set_percent_of_data_to_use(0.0);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readme-&gt;set_absolute_sample_count(n);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;dag_model&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sanity<sp/>=<sp/>model-&gt;name();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sanity<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;dnn&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>the<sp/>current<sp/>network<sp/>model<sp/>is:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model-&gt;name()</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>you<sp/>can<sp/>only<sp/>change<sp/>the<sp/>model<sp/>to<sp/>&apos;dag_model&apos;<sp/>if<sp/>the<sp/>current<sp/>model<sp/>is<sp/>&apos;dnn&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nchanging<sp/>model<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model-&gt;name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to:<sp/>dag\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;set_name(</highlight><highlight class="stringliteral">&quot;dag_model&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;data_filedir&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;data_filedir_train&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;data_filename_train&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;label_filename_train&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="proto__common_8cpp_1a2b1366b9ab5913e4db6afc8833ca4054" kindref="member">set_data_readers_filenames</ref>(</highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal">,<sp/>p);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;data_filedir&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;data_filedir_test&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;data_filename_test&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;label_filename_test&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="proto__common_8cpp_1a2b1366b9ab5913e4db6afc8833ca4054" kindref="member">set_data_readers_filenames</ref>(</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">,<sp/>p);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;data_reader_percent&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="proto__common_8cpp_1a900e005e45b3debc2444ded1c3ff6e1f" kindref="member">set_data_readers_percent</ref>(p);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;image_dir&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>model-&gt;callback_size();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;sz;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lbann_data::Callback<sp/>*c<sp/>=<sp/>model-&gt;mutable_callback(j);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;has_save_images())<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lbann_data::CallbackSaveImages<sp/>*i<sp/>=<sp/>c-&gt;mutable_save_images();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;set_image_dir(opts-&gt;<ref refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" kindref="member">get_string</ref>(</highlight><highlight class="stringliteral">&quot;image_dir&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1aafb1d2a7ccde0b1bf786230ba4080ecd" kindref="member">has_bool</ref>(</highlight><highlight class="stringliteral">&quot;no_im_comm&quot;</highlight><highlight class="normal">)<sp/>and<sp/>opts-&gt;<ref refid="classoptions_1a99aa190102de33e2aed39723929f9fad" kindref="member">get_bool</ref>(</highlight><highlight class="stringliteral">&quot;no_im_comm&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>model-&gt;callback_size();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;sz;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lbann_data::Callback<sp/>*c<sp/>=<sp/>model-&gt;mutable_callback(j);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;has_imcomm())<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;clear_imcomm();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a01020aa5bd82bcff1b1c950b20578883" kindref="member">has_int</ref>(</highlight><highlight class="stringliteral">&quot;mini_batch_size&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;set_mini_batch_size(opts-&gt;<ref refid="classoptions_1a797bc1915004bdbc34c5eea3fe488952" kindref="member">get_int</ref>(</highlight><highlight class="stringliteral">&quot;mini_batch_size&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a01020aa5bd82bcff1b1c950b20578883" kindref="member">has_int</ref>(</highlight><highlight class="stringliteral">&quot;num_epochs&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;set_num_epochs(opts-&gt;<ref refid="classoptions_1a797bc1915004bdbc34c5eea3fe488952" kindref="member">get_int</ref>(</highlight><highlight class="stringliteral">&quot;num_epochs&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a01020aa5bd82bcff1b1c950b20578883" kindref="member">has_int</ref>(</highlight><highlight class="stringliteral">&quot;block_size&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;set_block_size(opts-&gt;<ref refid="classoptions_1a797bc1915004bdbc34c5eea3fe488952" kindref="member">get_int</ref>(</highlight><highlight class="stringliteral">&quot;block_size&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a01020aa5bd82bcff1b1c950b20578883" kindref="member">has_int</ref>(</highlight><highlight class="stringliteral">&quot;procs_per_model&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;set_procs_per_model(opts-&gt;<ref refid="classoptions_1a797bc1915004bdbc34c5eea3fe488952" kindref="member">get_int</ref>(</highlight><highlight class="stringliteral">&quot;procs_per_model&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a01020aa5bd82bcff1b1c950b20578883" kindref="member">has_int</ref>(</highlight><highlight class="stringliteral">&quot;num_gpus&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;set_num_gpus(opts-&gt;<ref refid="classoptions_1a797bc1915004bdbc34c5eea3fe488952" kindref="member">get_int</ref>(</highlight><highlight class="stringliteral">&quot;num_gpus&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a01020aa5bd82bcff1b1c950b20578883" kindref="member">has_int</ref>(</highlight><highlight class="stringliteral">&quot;num_parallel_readers&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;set_num_parallel_readers(opts-&gt;<ref refid="classoptions_1a797bc1915004bdbc34c5eea3fe488952" kindref="member">get_int</ref>(</highlight><highlight class="stringliteral">&quot;num_parallel_readers&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1aafb1d2a7ccde0b1bf786230ba4080ecd" kindref="member">has_bool</ref>(</highlight><highlight class="stringliteral">&quot;disable_cuda&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;set_disable_cuda(opts-&gt;<ref refid="classoptions_1a99aa190102de33e2aed39723929f9fad" kindref="member">get_bool</ref>(</highlight><highlight class="stringliteral">&quot;disable_cuda&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a01020aa5bd82bcff1b1c950b20578883" kindref="member">has_int</ref>(</highlight><highlight class="stringliteral">&quot;random_seed&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;set_random_seed(opts-&gt;<ref refid="classoptions_1a797bc1915004bdbc34c5eea3fe488952" kindref="member">get_int</ref>(</highlight><highlight class="stringliteral">&quot;random_seed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;opt&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>learn_rate<sp/>=<sp/>opts-&gt;<ref refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" kindref="member">has_float</ref>(</highlight><highlight class="stringliteral">&quot;learn_rate&quot;</highlight><highlight class="normal">)<sp/>?<sp/>opts-&gt;<ref refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" kindref="member">get_float</ref>(</highlight><highlight class="stringliteral">&quot;learn_rate&quot;</highlight><highlight class="normal">)<sp/>:<sp/>0.01;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/>opts-&gt;<ref refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" kindref="member">has_float</ref>(</highlight><highlight class="stringliteral">&quot;eps&quot;</highlight><highlight class="normal">)<sp/>?<sp/>opts-&gt;<ref refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" kindref="member">get_float</ref>(</highlight><highlight class="stringliteral">&quot;eps&quot;</highlight><highlight class="normal">)<sp/>:<sp/>1e-8;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta1<sp/>=<sp/>opts-&gt;<ref refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" kindref="member">has_float</ref>(</highlight><highlight class="stringliteral">&quot;beta1&quot;</highlight><highlight class="normal">)<sp/>?<sp/>opts-&gt;<ref refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" kindref="member">get_float</ref>(</highlight><highlight class="stringliteral">&quot;beta1&quot;</highlight><highlight class="normal">)<sp/>:<sp/>0.9;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta2<sp/>=<sp/>opts-&gt;<ref refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" kindref="member">has_float</ref>(</highlight><highlight class="stringliteral">&quot;beta2&quot;</highlight><highlight class="normal">)<sp/>?<sp/>opts-&gt;<ref refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" kindref="member">get_float</ref>(</highlight><highlight class="stringliteral">&quot;beta2&quot;</highlight><highlight class="normal">)<sp/>:<sp/>0.99;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>init_learning_rate<sp/>=<sp/>opts-&gt;<ref refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" kindref="member">has_float</ref>(</highlight><highlight class="stringliteral">&quot;init_learning_rate&quot;</highlight><highlight class="normal">)<sp/>?<sp/>opts-&gt;<ref refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" kindref="member">get_float</ref>(</highlight><highlight class="stringliteral">&quot;init_learning_rate&quot;</highlight><highlight class="normal">)<sp/>:<sp/>0.01;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hyper_learning_rate<sp/>=<sp/>opts-&gt;<ref refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" kindref="member">has_float</ref>(</highlight><highlight class="stringliteral">&quot;hyper_learning_rate&quot;</highlight><highlight class="normal">)<sp/>?<sp/>opts-&gt;<ref refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" kindref="member">get_float</ref>(</highlight><highlight class="stringliteral">&quot;hyper_learning_rate&quot;</highlight><highlight class="normal">)<sp/>:<sp/>1e-7;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>momentum<sp/>=<sp/>opts-&gt;<ref refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" kindref="member">has_float</ref>(</highlight><highlight class="stringliteral">&quot;momentum&quot;</highlight><highlight class="normal">)<sp/>?<sp/>opts-&gt;<ref refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" kindref="member">get_float</ref>(</highlight><highlight class="stringliteral">&quot;momentum&quot;</highlight><highlight class="normal">)<sp/>:<sp/>0.9;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>decay_rate<sp/>=<sp/>opts-&gt;<ref refid="classoptions_1ae6f1f714c9ad1dc01cb5509df0c4c838" kindref="member">has_float</ref>(</highlight><highlight class="stringliteral">&quot;decay_rate&quot;</highlight><highlight class="normal">)<sp/>?<sp/>opts-&gt;<ref refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" kindref="member">get_float</ref>(</highlight><highlight class="stringliteral">&quot;decay_rate&quot;</highlight><highlight class="normal">)<sp/>:<sp/>0.5;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nesterov<sp/>=<sp/>opts-&gt;<ref refid="classoptions_1aafb1d2a7ccde0b1bf786230ba4080ecd" kindref="member">has_bool</ref>(</highlight><highlight class="stringliteral">&quot;nesterov&quot;</highlight><highlight class="normal">)<sp/>?<sp/>opts-&gt;<ref refid="classoptions_1a31607533d0c6d2fa331f4e7f52d34bc8" kindref="member">get_float</ref>(</highlight><highlight class="stringliteral">&quot;nesterov&quot;</highlight><highlight class="normal">)<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*opt<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>lbann_data::Optimizer;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//construct<sp/>the<sp/>new<sp/>optimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>opt_string<sp/>=<sp/>opts-&gt;<ref refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" kindref="member">get_string</ref>(</highlight><highlight class="stringliteral">&quot;opt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt_string<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;adagrad&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>lbann_data::Adagrad;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_learn_rate(learn_rate);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_eps(eps);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;set_allocated_adagrad(a);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt_string<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;adam&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>lbann_data::Adam;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_learn_rate(learn_rate);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_eps(eps);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_beta1(beta1);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_beta2(beta2);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;set_allocated_adam(a);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt_string<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;hypergradient_adam&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>lbann_data::HypergradientAdam;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_init_learning_rate(init_learning_rate);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_hyper_learning_rate(hyper_learning_rate);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_beta1(beta1);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_beta2(beta2);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_eps(eps);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;set_allocated_hypergradient_adam(a);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt_string<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;rmsprop&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>lbann_data::Rmsprop;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_learn_rate(learn_rate);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_decay_rate(decay_rate);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_eps(eps);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;set_allocated_rmsprop(a);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt_string<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sgd&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master)<sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\nsetting:<sp/>sgd\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>lbann_data::Sgd;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_learn_rate(learn_rate);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_momentum(momentum);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_decay_rate(decay_rate);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;set_nesterov(nesterov);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;set_allocated_sgd(a);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>unknown<sp/>string<sp/>for<sp/>--optimizer:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>opt_string</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>should<sp/>be<sp/>on<sp/>of:<sp/>adagrad,<sp/>adam,<sp/>hypergradient_adam,<sp/>rmsprop,<sp/>sgd&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>p.set_allocated_optimizer(opt);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541" refid="proto__common_8hpp_1adf83ffea572cec61b853b61aa68bea27" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="proto__common_8cpp_1adf83ffea572cec61b853b61aa68bea27" kindref="member">print_parameters</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann::lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>lbann_data::LbannPB&amp;<sp/>p)</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Model<sp/>&amp;m<sp/>=<sp/>p.model();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>with<sp/>these<sp/>parameters:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>General:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>datatype<sp/>size:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>mini_batch_size:<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.mini_batch_size()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>num_epochs:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.num_epochs()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>block_size:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.block_size()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>procs_per_model:<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.procs_per_model()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>num_gpus:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.num_gpus()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>num_parallel_readers:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.num_parallel_readers()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>disable_cuda:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.disable_cuda()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>random_seed:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.random_seed()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>data_layout:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.data_layout()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>(only<sp/>used<sp/>for<sp/>metrics)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Optimizer:<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Optimizer<sp/>&amp;o<sp/>=<sp/>p.optimizer();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.has_adagrad())<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Adagrad<sp/>&amp;a<sp/>=<sp/>o.adagrad();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Adagrad\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>learn_rate:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.learn_rate()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>eps:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.eps()<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.has_rmsprop())<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Rmsprop<sp/>&amp;a<sp/>=<sp/>o.rmsprop();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Rmsprop\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>learn_rate:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.learn_rate()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>decay_rate:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.decay_rate()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>eps:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.eps()<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.has_adam())<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Adam<sp/>&amp;a<sp/>=<sp/>o.adam();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Adam\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>learn_rate:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.learn_rate()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>beta1:<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.beta1()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>beta2:<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.beta2()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>eps:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.eps()<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.has_hypergradient_adam())<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::HypergradientAdam<sp/>&amp;a<sp/>=<sp/>o.hypergradient_adam();</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>HypergradientAdam\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>init_learning_rate:<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.init_learning_rate()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>hyper_learning_rate:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.hyper_learning_rate()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>beta1:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.beta1()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>beta2:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.beta2()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>eps:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.eps()<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.has_sgd())<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Sgd<sp/>&amp;a<sp/>=<sp/>o.sgd();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Sgd\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>learn_rate:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.learn_rate()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>momentum:<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.momentum()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>decay_rate:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.decay_rate()<sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>nesterov:<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.nesterov()<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="proto__common_8hpp_1a403b98ced142a0afa3b939e7af1095b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="proto__common_8cpp_1a403b98ced142a0afa3b939e7af1095b0" kindref="member">print_help</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann::lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>)</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>std::cerr<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;General<sp/>usage:<sp/>you<sp/>need<sp/>to<sp/>specify<sp/>three<sp/>prototext<sp/>files,<sp/>e.g:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>srun<sp/>-n#<sp/>proto<sp/>--model=&lt;string&gt;<sp/>--optimizer=&lt;string&gt;<sp/>--reader=&lt;string&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>However,<sp/>if<sp/>you<sp/>are<sp/>re-running<sp/>an<sp/>experiment<sp/>from<sp/>a<sp/>previously<sp/>saved\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>file,<sp/>you<sp/>only<sp/>need<sp/>to<sp/>specify<sp/>--model=&lt;string&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>When<sp/>proto<sp/>is<sp/>run,<sp/>an<sp/>output<sp/>file<sp/>containing<sp/>the<sp/>concatenated<sp/>prototext\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>files,<sp/>along<sp/>with<sp/>other<sp/>data<sp/>is<sp/>written.<sp/>The<sp/>default<sp/>name<sp/>for<sp/>this<sp/>file\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>is<sp/>&apos;data.prototext&apos;<sp/><sp/>You<sp/>can<sp/>specify<sp/>an<sp/>alternative<sp/>name<sp/>via<sp/>the<sp/>option:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--saveme=&lt;string&gt;<sp/><sp/>You<sp/>can<sp/>suppress<sp/>writing<sp/>the<sp/>file<sp/>via<sp/>the<sp/>option:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--saveme=0\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Some<sp/>prototext<sp/>values<sp/>can<sp/>be<sp/>over-riden<sp/>on<sp/>the<sp/>command<sp/>line;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(notes:<sp/>use<sp/>&apos;1&apos;<sp/>or<sp/>&apos;0&apos;<sp/>for<sp/>bool;<sp/>if<sp/>no<sp/>value<sp/>is<sp/>given<sp/>for<sp/>a<sp/>flag,\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.g:<sp/>--disable_cuda,<sp/>then<sp/>a<sp/>value<sp/>of<sp/>&apos;1&apos;<sp/>is<sp/>assigned)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;General:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--dag_model\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--mini_batch_size=&lt;int&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--num_epochs=&lt;int&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--block_size=&lt;int&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--procs_per_model=&lt;int&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--num_gpus=&lt;int&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--disable_cuda=&lt;bool&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>has<sp/>no<sp/>effect<sp/>unless<sp/>lbann<sp/>was<sp/>compiled<sp/>with:<sp/>LBANN_HAS_CUDNN\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--random_seed=&lt;int&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--objective_function&lt;string&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>&lt;string&gt;<sp/>must<sp/>be:<sp/>categorical_cross_entropy<sp/>or<sp/>mean_squared_error\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--data_layout&lt;string&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>&lt;string&gt;<sp/>must<sp/>be:<sp/>data_parallel<sp/>or<sp/>model_parallel\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>note:<sp/>this<sp/>will<sp/>be<sp/>applied<sp/>to<sp/>all<sp/>layers,<sp/>metrics<sp/>(and<sp/>others)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>take<sp/>DATA_PARALLEL<sp/>or<sp/>MODEL_PARALLEL<sp/>as<sp/>a<sp/>template<sp/>parameter\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--print_affinity\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>display<sp/>information<sp/>on<sp/>how<sp/>OpenMP<sp/>threads<sp/>are<sp/>provisioned\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DataReaders:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--data_filedir=&lt;string&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>the<sp/>file<sp/>directory<sp/>for<sp/>train<sp/>and<sp/>test<sp/>data\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--data_filedir_train=&lt;string&gt;<sp/><sp/><sp/>--data_filedir_test=&lt;string&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--data_filename_train=&lt;string&gt;<sp/><sp/>--data_filename_test=&lt;string&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--label_filename_train=&lt;string&gt;<sp/>--label_filename_test=&lt;string&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--data_reader_percent=&lt;float&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Callbacks:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--image_dir=&lt;string&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>model<sp/>has<sp/>callback_save_images,<sp/>this<sp/>determines<sp/>where<sp/>the\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>images<sp/>are<sp/>saved\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--no_im_comm=&lt;bool&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>removes<sp/>ImComm<sp/>callback,<sp/>if<sp/>present;<sp/>this<sp/>is<sp/>intended<sp/>for\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>running<sp/>alexnet<sp/>with<sp/>a<sp/>single<sp/>model,<sp/>but<sp/>may<sp/>be<sp/>useful<sp/>elsewhere\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Optimizers;<sp/>all<sp/>values<sp/>except<sp/>for<sp/>nesterov<sp/>are<sp/>floats;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>values<sp/>shown<sp/>in<sp/>&lt;...&gt;<sp/>are<sp/>the<sp/>default<sp/>values,<sp/>that<sp/>will<sp/>be\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>if<sp/>the<sp/>option<sp/>is<sp/>not<sp/>specified<sp/>on<sp/>the<sp/>cmd<sp/>line.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>you<sp/>specify<sp/>an<sp/>option<sp/>that<sp/>is<sp/>not<sp/>applicable<sp/>to<sp/>your<sp/>choice\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>optimizer,<sp/>the<sp/>option<sp/>is<sp/>ignored\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--opt=&lt;string&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&lt;string&gt;<sp/>must<sp/>be<sp/>one<sp/>of:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adagrad,<sp/>adam,<sp/>hypergradient_adam,<sp/>rmsprop,<sp/>sgd\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--learn_rate=&lt;<sp/>0.01<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(all<sp/>except<sp/>hypergradient_adam)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--eps=&lt;<sp/>1e-8<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(all<sp/>except<sp/>sgd)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--beta1=&lt;<sp/>0.9<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(adam,<sp/>hypergradient_adam)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--beta2=&lt;<sp/>0.99<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(adam,<sp/>hypergradient_adam)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--init_learning_rate=&lt;<sp/>0.01<sp/>&gt;<sp/><sp/>(hypergradient_adam)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--hyper_learning_rate=&lt;<sp/>1e-7<sp/>&gt;<sp/>(hypergradient_adam)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--momentum=&lt;<sp/>0.9<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sgd)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--decay_rate=&lt;<sp/>0.5<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sgd,<sp/>rmsprop)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--nesterov=&lt;<sp/>false<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sgd)\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="proto__common_8cpp_1aee6432eeb669d7a8571c095d8761bc26" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="proto__common_8cpp_1aee6432eeb669d7a8571c095d8761bc26" kindref="member">copy_file</ref>(std::string<sp/>fn,<sp/>std::ofstream<sp/>&amp;out)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>in(fn.c_str());</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!in.is_open())<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>failed<sp/>to<sp/>open<sp/>file<sp/>for<sp/>reading:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fn;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(err.str());</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>s;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>s<sp/>&lt;&lt;<sp/>in.rdbuf();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/>s.str();</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695" refid="proto__common_8hpp_1a4f1af470c45e9ed06039685e5f72ea4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="proto__common_8cpp_1a4f1af470c45e9ed06039685e5f72ea4a" kindref="member">save_session</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann::lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/>lbann_data::LbannPB&amp;<sp/>p)</highlight></codeline>
<codeline lineno="696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><ref refid="classoptions" kindref="compound">options</ref><sp/>*opts<sp/>=<sp/><ref refid="classoptions_1a9ecfe9c365269df68a41b961c31ae3f5" kindref="member">options::get</ref>();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//do<sp/>not<sp/>write<sp/>output<sp/>file<sp/>for<sp/>a<sp/>repeated<sp/>experiment;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//may<sp/>want<sp/>to<sp/>revisit<sp/>this<sp/>decision<sp/>later<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;loadme&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//get<sp/>output<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>std::string<sp/>base<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!opts-&gt;<ref refid="classoptions_1a5db5b27267c27ffe1b029948f64e54c1" kindref="member">has_string</ref>(</highlight><highlight class="stringliteral">&quot;saveme&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nNOT<sp/>WRITING<sp/>SAVE_SESSION<sp/>FILE<sp/>since<sp/>option<sp/>--saveme=&lt;string&gt;<sp/>is<sp/>absent\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>std::string<sp/>name<sp/>=<sp/>opts-&gt;<ref refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" kindref="member">get_string</ref>(</highlight><highlight class="stringliteral">&quot;saveme&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nNOT<sp/>WRITING<sp/>SAVE_SESSION<sp/>FILE<sp/>due<sp/>to<sp/>option:<sp/>--saveme=0\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>&quot;name&quot;<sp/>exists;<sp/>if<sp/>yes,<sp/>append<sp/>&quot;_1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacelbann_1aefae2a9fc9d742ece0fa8ca7ed9ee137" kindref="member">exists</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>in(name.c_str());</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>exists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>in.close();</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exists)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;_1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//opts[&quot;saveme&quot;]<sp/>=<sp/>name;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//open<sp/>output<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>out(name.c_str());</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out.is_open())<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>failed<sp/>to<sp/>open<sp/>file<sp/>for<sp/>writing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(err.str());</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>options<sp/>and<sp/>prototext<sp/>to<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//output<sp/>all<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>cmd<sp/>line<sp/>for<sp/>original<sp/>experiment:\n#<sp/><sp/>$<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h=0;<sp/>h&lt;argc;<sp/>h++)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>argv[h]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>std::string<sp/>lbann_version(</highlight><highlight class="stringliteral">&quot;unknown:<sp/>LBANN_VERSION<sp/>is<sp/>not<sp/>defined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>lbann_version<sp/>=<sp/><ref refid="base_8hpp_1a78b291de8c80b35c360c22d46d44498a" kindref="member">LBANN_MAKE_STR</ref>(LBANN_VERSION);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>std::time_t<sp/>r<sp/>=<sp/>std::time(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tm<sp/>=<sp/>std::ctime(&amp;r);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fixme<sp/>=<sp/>strlen(tm);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>tm[fixme-1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n#\n#<sp/>Experiment<sp/>conducted<sp/>at:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>tm</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n#\n#\n#<sp/>Experiment<sp/>was<sp/>run<sp/>with<sp/>lbann<sp/>version:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>lbann_version<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n#\n#\n#<sp/>To<sp/>rerun<sp/>the<sp/>experiment:<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/><sp/>$<sp/>srun<sp/>-n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1eb92927a8f8bcbdd677ccecc1a33c59" kindref="member">get_procs_in_world</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[0]</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--loadme=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>opts-&gt;<ref refid="classoptions_1aeb84be21a30b0dd41d7d9f3f52c0f3f7" kindref="member">get_string</ref>(</highlight><highlight class="stringliteral">&quot;saveme&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n#\n#\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Selected<sp/>SLURM<sp/>Environment<sp/>Variables:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>v<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;HOST&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SLURM_NODELIST&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SLURM_NNODES&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SLURM_NTASKS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SLURM_TASKS_PER_NODE&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>i<sp/>:<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c<sp/>=<sp/>std::getenv(i.c_str());</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>c<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n#\n#\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>std::string<sp/>s;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>google::protobuf::TextFormat::PrintToString(p,<sp/>&amp;s);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/>s;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>out.close();</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp"/>
  </compounddef>
</doxygen>
