<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1fully__connected__layer" kind="class" language="C++" prot="public">
    <compoundname>lbann::fully_connected_layer</compoundname>
    <basecompoundref refid="classlbann_1_1learning__layer" prot="public" virt="non-virtual">lbann::learning_layer</basecompoundref>
    <includes refid="fully__connected_8hpp" local="no">fully_connected.hpp</includes>
    <templateparamlist>
      <param>
        <type><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08db" kindref="member">data_layout</ref></type>
        <declname>T_layout</declname>
        <defname>T_layout</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlbann_1_1fully__connected__layer_1ae02eaffd5528bf572883f8b06d1b40c0" prot="private" static="no" mutable="no">
        <type>DataType</type>
        <definition>DataType lbann::fully_connected_layer&lt; T_layout &gt;::m_bias_scaling_factor</definition>
        <argsstring></argsstring>
        <name>m_bias_scaling_factor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scaling factor for bias term. If the scaling factor is zero, bias is not applied. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="55" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="55" bodyend="-1"/>
        <referencedby refid="classlbann_1_1fully__connected__layer_1ab06d01021d4e89cd2f4f64c330e7cc31" compoundref="fully__connected_8hpp" startline="132" endline="153">lbann::fully_connected_layer&lt; T_layout &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1fully__connected__layer_1ab80f9cb94662ce4d90aa6d8b5cfa0803" prot="private" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> *</type>
        <definition>AbsDistMat* lbann::fully_connected_layer&lt; T_layout &gt;::m_linearity_gradient</definition>
        <argsstring></argsstring>
        <name>m_linearity_gradient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Linearity gradient. This is this layer&apos;s contribution to the objective function gradient w.r.t. the linearity weights (i.e. its matrix weights). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="61" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="61" bodyend="-1"/>
        <referencedby refid="classlbann_1_1fully__connected__layer_1a377e44ab7eccb1aec467be5667bef6fe" compoundref="fully__connected_8hpp" startline="111" endline="130">lbann::fully_connected_layer&lt; T_layout &gt;::fully_connected_layer</referencedby>
        <referencedby refid="classlbann_1_1fully__connected__layer_1ab06d01021d4e89cd2f4f64c330e7cc31" compoundref="fully__connected_8hpp" startline="132" endline="153">lbann::fully_connected_layer&lt; T_layout &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1fully__connected__layer_1a6510917c573378f40789a1d16db22b4e" prot="private" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> *</type>
        <definition>AbsDistMat* lbann::fully_connected_layer&lt; T_layout &gt;::m_bias_gradient</definition>
        <argsstring></argsstring>
        <name>m_bias_gradient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bias weights gradient. This is this layer&apos;s contribution to the objective function gradient w.r.t. the bias weights. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="66" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="66" bodyend="-1"/>
        <referencedby refid="classlbann_1_1fully__connected__layer_1a377e44ab7eccb1aec467be5667bef6fe" compoundref="fully__connected_8hpp" startline="111" endline="130">lbann::fully_connected_layer&lt; T_layout &gt;::fully_connected_layer</referencedby>
        <referencedby refid="classlbann_1_1fully__connected__layer_1ab06d01021d4e89cd2f4f64c330e7cc31" compoundref="fully__connected_8hpp" startline="132" endline="153">lbann::fully_connected_layer&lt; T_layout &gt;::operator=</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1ae5d9a0f2851f3c55abe47aa65afbe66c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::fully_connected_layer&lt; T_layout &gt;::fully_connected_layer</definition>
        <argsstring>(lbann_comm *comm, int num_neurons, weights *weight=nullptr, bool has_bias=true, cudnn::cudnn_manager *cudnn=nullptr)</argsstring>
        <name>fully_connected_layer</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_neurons</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1weights" kindref="compound">weights</ref> *</type>
          <declname>weight</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>has_bias</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref> *</type>
          <declname>cudnn</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="77" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="77" bodyend="100"/>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638">DATA_PARALLEL</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a7ce678ec7560dd145244ffd8813d5edb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::fully_connected_layer&lt; T_layout &gt;::get_description</definition>
        <argsstring>() const override</argsstring>
        <name>get_description</name>
        <reimplements refid="classlbann_1_1Layer_1acc0803d3428914ca1eb5988c4309174a">get_description</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns description of ctor params </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="103" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="103" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a377e44ab7eccb1aec467be5667bef6fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::fully_connected_layer&lt; T_layout &gt;::fully_connected_layer</definition>
        <argsstring>(const fully_connected_layer &amp;other)</argsstring>
        <name>fully_connected_layer</name>
        <param>
          <type>const <ref refid="classlbann_1_1fully__connected__layer" kindref="compound">fully_connected_layer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="111" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="111" bodyend="130"/>
        <references refid="classlbann_1_1fully__connected__layer_1ab80f9cb94662ce4d90aa6d8b5cfa0803" compoundref="fully__connected_8hpp" startline="61">lbann::fully_connected_layer&lt; T_layout &gt;::m_linearity_gradient</references>
        <references refid="classlbann_1_1fully__connected__layer_1a6510917c573378f40789a1d16db22b4e" compoundref="fully__connected_8hpp" startline="66">lbann::fully_connected_layer&lt; T_layout &gt;::m_bias_gradient</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1ab06d01021d4e89cd2f4f64c330e7cc31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlbann_1_1fully__connected__layer" kindref="compound">fully_connected_layer</ref> &amp;</type>
        <definition>fully_connected_layer&amp; lbann::fully_connected_layer&lt; T_layout &gt;::operator=</definition>
        <argsstring>(const fully_connected_layer &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1fully__connected__layer" kindref="compound">fully_connected_layer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="132" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="132" bodyend="153"/>
        <references refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">lbann::Layer::operator=</references>
        <references refid="classlbann_1_1fully__connected__layer_1ae02eaffd5528bf572883f8b06d1b40c0" compoundref="fully__connected_8hpp" startline="55">lbann::fully_connected_layer&lt; T_layout &gt;::m_bias_scaling_factor</references>
        <references refid="classlbann_1_1fully__connected__layer_1ab80f9cb94662ce4d90aa6d8b5cfa0803" compoundref="fully__connected_8hpp" startline="61">lbann::fully_connected_layer&lt; T_layout &gt;::m_linearity_gradient</references>
        <references refid="classlbann_1_1fully__connected__layer_1a6510917c573378f40789a1d16db22b4e" compoundref="fully__connected_8hpp" startline="66">lbann::fully_connected_layer&lt; T_layout &gt;::m_bias_gradient</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a5b133629f448a289bba6ebb6ab13941d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::fully_connected_layer&lt; T_layout &gt;::~fully_connected_layer</definition>
        <argsstring>() override</argsstring>
        <name>~fully_connected_layer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="155" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a7e838b85cb7bf075def5a88fba2ace20" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1fully__connected__layer" kindref="compound">fully_connected_layer</ref> *</type>
        <definition>fully_connected_layer* lbann::fully_connected_layer&lt; T_layout &gt;::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1Layer_1af420f22bbac801c85483ade84588a23f">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy function. This function dynamically allocates memory for a layer instance and instantiates a copy. The caller is responsible for deallocating the instance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="159" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1abd51271a19a8cce44ba4f2d11eaaaee7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::fully_connected_layer&lt; T_layout &gt;::get_type</definition>
        <argsstring>() const override</argsstring>
        <name>get_type</name>
        <reimplements refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239">get_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the layer type&apos;s name. A layer type name should be brief, human-readable description of the layer&apos;s mathematical operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="163" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a0d84bbfa7df80e879da13f54d465a603" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08db" kindref="member">data_layout</ref></type>
        <definition>data_layout lbann::fully_connected_layer&lt; T_layout &gt;::get_data_layout</definition>
        <argsstring>() const override</argsstring>
        <name>get_data_layout</name>
        <reimplements refid="classlbann_1_1Layer_1a5dfb66e81fc085997402a5e2241316bd">get_data_layout</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get data layout of the data tensors. We assume that the data layouts of the previous activations, activations, previous error signals, and error signals are the same. Each concrete layer that is templated on its data layout should override this function to return its template parameter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="165" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a4f26e5923a82f11c2c7658a27903f83b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; T_layout &gt;::setup_matrices</definition>
        <argsstring>(const El::Grid &amp;grid) override</argsstring>
        <name>setup_matrices</name>
        <reimplements refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e">setup_matrices</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9951bb1719d534e0401b1f06cad19eab" kindref="member">El::Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instantiate distributed matrices. If the layer has already been setup, this function should destroy all matrices and reinstantiate them. However, it is not guaranteed that derived classes will obey this behavior. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="167" column="1"/>
        <referencedby refid="classlbann_1_1fully__connected__layer_1a1f0ae7a5f172e5ced011eaa2755fd04e" compoundref="fully__connected_8cpp" startline="33" endline="38">lbann::fully_connected_layer&lt; T_layout &gt;::setup_matrices</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1aaf38e55b232b1bb2a6336ff1807b5a17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; T_layout &gt;::setup_dims</definition>
        <argsstring>() override</argsstring>
        <name>setup_dims</name>
        <reimplements refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746">setup_dims</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup tensor dimensions Called by the setup function. The base method sets the dimensions of the activation tensors equal to the dimensions of the first previous activation tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="169" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="169" bodyend="182"/>
        <references refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" compoundref="layer_8cpp" startline="535" endline="554">lbann::Layer::setup_dims</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1aec4298146845489597126503177d3127" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; T_layout &gt;::setup_data</definition>
        <argsstring>() override</argsstring>
        <name>setup_data</name>
        <reimplements refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81">setup_data</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup layer data. Called by the setup function. The base method sets the previous activation, activation, previous error signal, and error signal matrices to zero matrices with the proper dimensions. Matrix buffers are pinned if needed for GPU transfers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="184" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="184" bodyend="250"/>
        <references refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" compoundref="layer_8cpp" startline="600" endline="635">lbann::Layer::setup_data</references>
        <references refid="classlbann_1_1fan__in__fan__out__initializer_1a6da7299bd2fb6aa1b549125fc62ffafc" compoundref="fan__in__fan__out__initializers_8hpp" startline="50" endline="50">lbann::fan_in_fan_out_initializer::set_fan_in</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0">MODEL_PARALLEL</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a95c96742a67f2e9398e608b244c2d121" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; T_layout &gt;::setup_gpu</definition>
        <argsstring>() override</argsstring>
        <name>setup_gpu</name>
        <reimplements refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863">setup_gpu</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup GPU objects. Called by the setup function if GPUs are enabled. The base method initializes GPU matrices for the previous activations, activations, previous error signals, and error signals. It also initializes cuDNN tensor descriptors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="252" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="252" bodyend="266"/>
        <references refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">lbann::Layer::setup_gpu</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a6dac6598c6b4ad3f766c5f0e88035f10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; T_layout &gt;::fp_compute</definition>
        <argsstring>() override</argsstring>
        <name>fp_compute</name>
        <reimplements refid="classlbann_1_1Layer_1a523319dd1bd87a0612afa1912bb5aad7">fp_compute</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the computation for the forward propagation step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="268" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="268" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a8cc9a10e336f61ef54d5e3f4a9ffdfb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; T_layout &gt;::bp_compute</definition>
        <argsstring>() override</argsstring>
        <name>bp_compute</name>
        <reimplements refid="classlbann_1_1Layer_1a7442e01f9ee1294df2de811efcf5171e">bp_compute</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the computation for the backward propagation step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="276" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="276" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a1f0ae7a5f172e5ced011eaa2755fd04e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; data_layout::MODEL_PARALLEL &gt;::setup_matrices</definition>
        <argsstring>(const El::Grid &amp;grid)</argsstring>
        <name>setup_matrices</name>
        <reimplements refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e">setup_matrices</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9951bb1719d534e0401b1f06cad19eab" kindref="member">El::Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instantiate distributed matrices. If the layer has already been setup, this function should destroy all matrices and reinstantiate them. However, it is not guaranteed that derived classes will obey this behavior. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/layers/learning/fully_connected.cpp" line="33" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/learning/fully_connected.cpp" bodystart="33" bodyend="38"/>
        <references refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e" compoundref="layer_8cpp" startline="580" endline="598">lbann::Layer::setup_matrices</references>
        <references refid="classlbann_1_1fully__connected__layer_1a4f26e5923a82f11c2c7658a27903f83b">lbann::fully_connected_layer&lt; T_layout &gt;::setup_matrices</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a9af60f901a84d5604badf078ecbae082" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; data_layout::DATA_PARALLEL &gt;::setup_matrices</definition>
        <argsstring>(const El::Grid &amp;grid)</argsstring>
        <name>setup_matrices</name>
        <reimplements refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e">setup_matrices</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9951bb1719d534e0401b1f06cad19eab" kindref="member">El::Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instantiate distributed matrices. If the layer has already been setup, this function should destroy all matrices and reinstantiate them. However, it is not guaranteed that derived classes will obey this behavior. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/layers/learning/fully_connected.cpp" line="42" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/learning/fully_connected.cpp" bodystart="42" bodyend="47"/>
        <references refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e" compoundref="layer_8cpp" startline="580" endline="598">lbann::Layer::setup_matrices</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a732ac5715ba0cea535c2bd062f634527" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; T_layout &gt;::fp_compute_cpu</definition>
        <argsstring>()</argsstring>
        <name>fp_compute_cpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CPU implementation of forward prop computation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="287" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1affbaa1ecb08e45ff6f9ab195227d0084" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; T_layout &gt;::bp_compute_cpu</definition>
        <argsstring>()</argsstring>
        <name>bp_compute_cpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CPU implementation of backward prop computation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a720c048ee32b5620a99886177be4f577" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; T_layout &gt;::fp_compute_cuda</definition>
        <argsstring>()</argsstring>
        <name>fp_compute_cuda</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GPU implementation of forward prop computation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="292" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="292" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a521aa4a5b88ef00f554fe21a850f6596" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; T_layout &gt;::bp_compute_cuda</definition>
        <argsstring>()</argsstring>
        <name>bp_compute_cuda</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GPU implementation of backward prop computation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="353" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="353" bodyend="435"/>
        <references refid="classlbann_1_1optimizer_1ac23ebde61a225f70c27ab937df5755ed" compoundref="optimizer_8cpp" startline="322" endline="366">lbann::optimizer::add_to_gradient_staging</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a91f359a41cfbab6f21bd67bccb8409b1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; T_layout &gt;::deallocate_matrices</definition>
        <argsstring>()</argsstring>
        <name>deallocate_matrices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deallocate distributed matrices. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="438" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="438" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a6c2be8390e58d9b224e901b8500b2b3c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; data_layout::MODEL_PARALLEL &gt;::fp_compute_cpu</definition>
        <argsstring>()</argsstring>
        <name>fp_compute_cpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/layers/learning/fully_connected.cpp" line="50" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/learning/fully_connected.cpp" bodystart="50" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a4c5b0eea2036c41b15ec03594dac8dc2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; data_layout::MODEL_PARALLEL &gt;::bp_compute_cpu</definition>
        <argsstring>()</argsstring>
        <name>bp_compute_cpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/layers/learning/fully_connected.cpp" line="84" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/learning/fully_connected.cpp" bodystart="84" bodyend="143"/>
        <references refid="namespaceEl_1a584f088a3325a8222d4d6ac37be04b04" compoundref="Elemental__extensions_8cpp" startline="85" endline="112">El::RowSum</references>
        <references refid="classlbann_1_1optimizer_1ac23ebde61a225f70c27ab937df5755ed" compoundref="optimizer_8cpp" startline="322" endline="366">lbann::optimizer::add_to_gradient_staging</references>
        <references refid="classlbann_1_1optimizer_1a435d31e3b7a0302e36439ee36f62dba8" compoundref="optimizer_8cpp" startline="279" endline="300">lbann::optimizer::add_to_gradient</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1a97243a5aa3474ff70c6f2d7f7e995e65" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; data_layout::DATA_PARALLEL &gt;::fp_compute_cpu</definition>
        <argsstring>()</argsstring>
        <name>fp_compute_cpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/layers/learning/fully_connected.cpp" line="146" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/learning/fully_connected.cpp" bodystart="146" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1fully__connected__layer_1af65e177e5f2b1a1d2854a04b433f7dae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::fully_connected_layer&lt; data_layout::DATA_PARALLEL &gt;::bp_compute_cpu</definition>
        <argsstring>()</argsstring>
        <name>bp_compute_cpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/src/layers/learning/fully_connected.cpp" line="173" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/learning/fully_connected.cpp" bodystart="173" bodyend="211"/>
        <references refid="namespaceEl_1a584f088a3325a8222d4d6ac37be04b04" compoundref="Elemental__extensions_8cpp" startline="85" endline="112">El::RowSum</references>
        <references refid="classlbann_1_1optimizer_1ac23ebde61a225f70c27ab937df5755ed" compoundref="optimizer_8cpp" startline="322" endline="366">lbann::optimizer::add_to_gradient_staging</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Fully-connected layer. This layer applies an affine transformation. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="795">
        <label>lbann::fully_connected_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1fully__connected__layer"/>
        <childnode refid="796" relation="public-inheritance">
        </childnode>
      </node>
      <node id="796">
        <label>lbann::learning_layer</label>
        <link refid="classlbann_1_1learning__layer"/>
        <childnode refid="797" relation="public-inheritance">
        </childnode>
      </node>
      <node id="797">
        <label>lbann::Layer</label>
        <link refid="classlbann_1_1Layer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="802">
        <label>lbann::model</label>
        <link refid="classlbann_1_1model"/>
        <childnode refid="803" relation="usage">
          <edgelabel>m_default_optimizer</edgelabel>
        </childnode>
        <childnode refid="801" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="808" relation="usage">
          <edgelabel>m_objective_function</edgelabel>
        </childnode>
      </node>
      <node id="803">
        <label>lbann::optimizer</label>
        <link refid="classlbann_1_1optimizer"/>
        <childnode refid="801" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="804" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
        <childnode refid="805" relation="usage">
          <edgelabel>m_gradient_allreduce_req</edgelabel>
        </childnode>
        <childnode refid="806" relation="usage">
          <edgelabel>m_weights</edgelabel>
        </childnode>
      </node>
      <node id="798">
        <label>lbann::fully_connected_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1fully__connected__layer"/>
        <childnode refid="799" relation="public-inheritance">
        </childnode>
      </node>
      <node id="804">
        <label>lbann::cudnn::cudnn_manager</label>
        <link refid="classlbann_1_1cudnn_1_1cudnn__manager"/>
      </node>
      <node id="799">
        <label>lbann::learning_layer</label>
        <link refid="classlbann_1_1learning__layer"/>
        <childnode refid="800" relation="public-inheritance">
        </childnode>
      </node>
      <node id="807">
        <label>lbann::weights_initializer</label>
        <link refid="classlbann_1_1weights__initializer"/>
        <childnode refid="801" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
      <node id="800">
        <label>lbann::Layer</label>
        <link refid="classlbann_1_1Layer"/>
        <childnode refid="801" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="802" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
        <childnode refid="804" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="806">
        <label>lbann::weights</label>
        <link refid="classlbann_1_1weights"/>
        <childnode refid="803" relation="usage">
          <edgelabel>m_optimizer</edgelabel>
        </childnode>
        <childnode refid="801" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="807" relation="usage">
          <edgelabel>m_initializer</edgelabel>
        </childnode>
        <childnode refid="804" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="801">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="805">
        <label>lbann::Al::request</label>
        <link refid="structlbann_1_1Al_1_1request"/>
      </node>
      <node id="808">
        <label>lbann::objective_function</label>
        <link refid="classlbann_1_1objective__function"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" line="49" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/learning/fully_connected.hpp" bodystart="49" bodyend="443"/>
    <listofallmembers>
      <member refid="classlbann_1_1Layer_1ace0346ac56fd7ce7b6b44f27f224f35e" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>add_child_layer</name></member>
      <member refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>add_parent_layer</name></member>
      <member refid="classlbann_1_1Layer_1a8d942eb2cd37c346edc5ff473e0494a2" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>add_to_error_signal</name></member>
      <member refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>back_prop</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a8cc9a10e336f61ef54d5e3f4a9ffdfb8" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>bp_compute</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1affbaa1ecb08e45ff6f9ab195227d0084" prot="private" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>bp_compute_cpu</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a4c5b0eea2036c41b15ec03594dac8dc2" prot="private" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>bp_compute_cpu</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1af65e177e5f2b1a1d2854a04b433f7dae" prot="private" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>bp_compute_cpu</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a521aa4a5b88ef00f554fe21a850f6596" prot="private" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>bp_compute_cuda</name></member>
      <member refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" prot="protected" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>bp_setup_data</name></member>
      <member refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>check_setup</name></member>
      <member refid="classlbann_1_1Layer_1a040bf53e261b1ef796739c09b3362a3a" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>clear_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>clear_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a7336909c78e438ba5332c6c1bddeadd2" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>clear_parent_layers</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a7e838b85cb7bf075def5a88fba2ace20" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>copy</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a91f359a41cfbab6f21bd67bccb8409b1" prot="private" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>deallocate_matrices</name></member>
      <member refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>forward_prop</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a6dac6598c6b4ad3f766c5f0e88035f10" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>fp_compute</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a732ac5715ba0cea535c2bd062f634527" prot="private" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>fp_compute_cpu</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a6c2be8390e58d9b224e901b8500b2b3c" prot="private" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>fp_compute_cpu</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a97243a5aa3474ff70c6f2d7f7e995e65" prot="private" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>fp_compute_cpu</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a720c048ee32b5620a99886177be4f577" prot="private" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>fp_compute_cuda</name></member>
      <member refid="classlbann_1_1Layer_1a22d31298912405660ebb210c0d7c5373" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>fp_output_dims</name></member>
      <member refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" prot="protected" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>fp_setup_data</name></member>
      <member refid="classlbann_1_1Layer_1ad55c455dbae0d082cedfa68511709aae" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>freeze</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1ae5d9a0f2851f3c55abe47aa65afbe66c" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>fully_connected_layer</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a377e44ab7eccb1aec467be5667bef6fe" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>fully_connected_layer</name></member>
      <member refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_activations</name></member>
      <member refid="classlbann_1_1Layer_1af69a4773804c6982e8acaf5810eaa150" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_activations</name></member>
      <member refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_bp_output</name></member>
      <member refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a0ad6c5253a4545a7322766d586a4bd33" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1afc7bf4e2a61a6f47f9e1f185bf92439a" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_child_names</name></member>
      <member refid="classlbann_1_1Layer_1a1b528e5872357a82176ee487596b363c" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_cudnn_manager</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a0d84bbfa7df80e879da13f54d465a603" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_data_layout</name></member>
      <member refid="classlbann_1_1Layer_1ae3f4a5602df821f4221614b1e3782dc1" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_data_layout_string</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a7ce678ec7560dd145244ffd8813d5edb" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_description</name></member>
      <member refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ae09bc5a240e9042371203ba5ff19990c" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1aaeef8c7631204fc415a94dcdfbcfe93d" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_expected_num_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa30dbf20929aaa58b5be98b98217ca88" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_expected_num_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1ac6b43c63399f717cc1a4a0a2007350f2" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_fp_output</name></member>
      <member refid="classlbann_1_1Layer_1af4a093d91552cf079217eb346bbb847f" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_layer_names</name></member>
      <member refid="classlbann_1_1Layer_1a9f94210cbb973f1df89ef649899094a1" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_layer_pointers</name></member>
      <member refid="classlbann_1_1Layer_1a4248f27acebf72b7b7b3ee39c8bcb62a" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_local_activations</name></member>
      <member refid="classlbann_1_1Layer_1aadbc466c72f455c10b53bf45dca56332" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_local_activations</name></member>
      <member refid="classlbann_1_1Layer_1af178d00b9d878aa7d87754bff2a91f3a" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_local_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1acf76bc7fba1e8ab74947ef83a3c8a141" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_local_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a35397843bb0c84030000c7d872229acb" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_local_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1ab0f7b4d0fdb06004dfde5358781eeece" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_local_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a82827edc5e869960144f3ccb2172bfcd" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_local_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1af3490fe9011ef620b827970bc5dcc7a7" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_local_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1afcfb6f55d12c728a59d107fe2d2fff0d" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_model</name></member>
      <member refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_name</name></member>
      <member refid="classlbann_1_1Layer_1a54f53393fadbfdc73b4e72489c868433" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_num_children</name></member>
      <member refid="classlbann_1_1Layer_1aa35561e662de84deae26045ccb53d862" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_num_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_num_neurons</name></member>
      <member refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_num_parents</name></member>
      <member refid="classlbann_1_1Layer_1ace32c7df942a8d97d7a25cb8ff8ce71d" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_num_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_num_prev_neurons</name></member>
      <member refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1a233ceaf4e6c6b5c24dd097ffff511579" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1afdf36947beec676a71ecd6167c3bb724" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_parent_names</name></member>
      <member refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1afc0611b7c3b1537914f25a538486a8cd" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1aff2c8983548364c978acb09ddf58a6fc" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a1acc0fa44acdeffbac158fdac3467973" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a0ac13af6f5ee8316d64c550bef919ee0" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_sample_indices_per_mb</name></member>
      <member refid="classlbann_1_1Layer_1a147a7f7dcf0027a60f10109439e5dcea" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_topo_description</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1abd51271a19a8cce44ba4f2d11eaaaee7" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>get_type</name></member>
      <member refid="classlbann_1_1Layer_1a4ee78d42284421519dd18d27b4da0957" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_weights</name></member>
      <member refid="classlbann_1_1Layer_1ab9fe05ad8d21ba5d6dd4d22ee2e0dca0" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>get_weights</name></member>
      <member refid="classlbann_1_1Layer_1af3c0f9f32eb631f4fdf34ad040ef8637" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>is_frozen</name></member>
      <member refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>Layer</name></member>
      <member refid="classlbann_1_1Layer_1a247cc68c730284f10a2cb42985fe5f3a" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>Layer</name></member>
      <member refid="classlbann_1_1learning__layer_1a818a96b1d3daabb22b1e82c1c54c6268" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>learning_layer</name></member>
      <member refid="classlbann_1_1Layer_1a9e262970ecc64166e8b6610e2502ad30" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1Layer_1a7ac9335d75d817fc2d5cf171da9b7e22" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>loadFromCheckpoint</name></member>
      <member refid="classlbann_1_1Layer_1a1ae0e6015dd427c63236a07f8cbd3878" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>loadFromFile</name></member>
      <member refid="classlbann_1_1Layer_1a7caf08e938141d1584e6939cefa4baed" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_activations</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a6510917c573378f40789a1d16db22b4e" prot="private" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_bias_gradient</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1ae02eaffd5528bf572883f8b06d1b40c0" prot="private" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_bias_scaling_factor</name></member>
      <member refid="classlbann_1_1Layer_1ae28626457a58943b25e7a2920fc271f0" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_bp_compute_time</name></member>
      <member refid="classlbann_1_1Layer_1aa60fc41627bcaa9c345775bf5737bb45" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_bp_time</name></member>
      <member refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_comm</name></member>
      <member refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_cudnn</name></member>
      <member refid="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ac08f133dddd150319650e220ab9a523a" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_expected_num_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a841b96b25555247f52921c7f13ae1dfa" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_expected_num_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa4e439c1d6a656e709dc4736c9380476" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_fp_compute_time</name></member>
      <member refid="classlbann_1_1Layer_1ab1bd9ab0a6f9e554f4dc936d8316028e" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_fp_time</name></member>
      <member refid="classlbann_1_1Layer_1afdc60df9731a3ecdeeeb8175fa483676" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_frozen</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1ab80f9cb94662ce4d90aa6d8b5cfa0803" prot="private" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_linearity_gradient</name></member>
      <member refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_model</name></member>
      <member refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_name</name></member>
      <member refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_num_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_num_neurons</name></member>
      <member refid="classlbann_1_1Layer_1adc052afb38f170e839db00d3c8151d1e" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_num_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_num_prev_neurons</name></member>
      <member refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1a52314601c3458268f56e017dc2ade357" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a6fdcbf884150d0b20cffe678fefd7caa" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1ab7d84533662b02d01ba6685ad6f20935" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_update_time</name></member>
      <member refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_using_gpus</name></member>
      <member refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" prot="protected" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>m_weights</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1ab06d01021d4e89cd2f4f64c330e7cc31" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>operator=</name></member>
      <member refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" prot="public" virt="non-virtual" ambiguityscope="lbann::learning_layer::"><scope>lbann::fully_connected_layer</scope><name>operator=</name></member>
      <member refid="classlbann_1_1Layer_1ae9df4e0b0fe7c276c79575f9e11c53af" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>replace_weights</name></member>
      <member refid="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>reset_counters</name></member>
      <member refid="classlbann_1_1Layer_1afce0efa0f1c8f3b1c61069536b2fa8cc" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1Layer_1a994a4beabbace598193b1611eb06b07e" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>saveToCheckpoint</name></member>
      <member refid="classlbann_1_1Layer_1a131876b692c0e68c95d9ae1a86c446df" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>saveToFile</name></member>
      <member refid="classlbann_1_1Layer_1a001ea76cdd05e2d0d475f408f24702ee" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>set_layer_pointers</name></member>
      <member refid="classlbann_1_1Layer_1a8eed87b25ea902b223c6b7a23abf78b3" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>set_model</name></member>
      <member refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>set_name</name></member>
      <member refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>set_weights</name></member>
      <member refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>setup</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1aec4298146845489597126503177d3127" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>setup_data</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1aaf38e55b232b1bb2a6336ff1807b5a17" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>setup_dims</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a95c96742a67f2e9398e608b244c2d121" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>setup_gpu</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a4f26e5923a82f11c2c7658a27903f83b" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>setup_matrices</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a1f0ae7a5f172e5ced011eaa2755fd04e" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>setup_matrices</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a9af60f901a84d5604badf078ecbae082" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>setup_matrices</name></member>
      <member refid="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" prot="protected" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>setup_pointers</name></member>
      <member refid="classlbann_1_1Layer_1af7e50932bb60d4cab3b21ab3fb0707ea" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>summarize_matrices</name></member>
      <member refid="classlbann_1_1Layer_1a7f3f26e2ae0497f9a00fd6bc56b50543" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>summarize_stats</name></member>
      <member refid="classlbann_1_1Layer_1aa43ecf9fc67eb1d596c1a69cf35d1245" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>unfreeze</name></member>
      <member refid="classlbann_1_1Layer_1ae4a050e51e3a9bec431cf8b7a5660f2c" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>update</name></member>
      <member refid="classlbann_1_1Layer_1a70e08fc96a612f67ade6ba3809536d85" prot="protected" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>update_compute</name></member>
      <member refid="classlbann_1_1Layer_1a6a75532bdaa2ca3879034f2a76085a06" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>using_gpus</name></member>
      <member refid="classlbann_1_1Layer_1ab94eb4ac28bac0c472a1da83ade4adf1" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>write_proto</name></member>
      <member refid="classlbann_1_1fully__connected__layer_1a5b133629f448a289bba6ebb6ab13941d" prot="public" virt="non-virtual"><scope>lbann::fully_connected_layer</scope><name>~fully_connected_layer</name></member>
      <member refid="classlbann_1_1Layer_1a68c3f57587956da938406812f13ecb78" prot="public" virt="virtual"><scope>lbann::fully_connected_layer</scope><name>~Layer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
