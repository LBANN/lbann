<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="callback__imcomm_8cpp" kind="file" language="C++">
    <compoundname>callback_imcomm.cpp</compoundname>
    <includes local="no">typeinfo</includes>
    <includes local="no">typeindex</includes>
    <includes refid="callback__imcomm_8hpp" local="yes">lbann/callbacks/callback_imcomm.hpp</includes>
    <includes refid="timer_8hpp" local="yes">lbann/utils/timer.hpp</includes>
    <includes refid="exception_8hpp" local="yes">lbann/utils/exception.hpp</includes>
    <incdepgraph>
      <node id="18071">
        <label>sys/stat.h</label>
      </node>
      <node id="18048">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
      </node>
      <node id="18077">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="18037" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18066" relation="include">
        </childnode>
        <childnode refid="18056" relation="include">
        </childnode>
        <childnode refid="18078" relation="include">
        </childnode>
        <childnode refid="18079" relation="include">
        </childnode>
      </node>
      <node id="18064">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18040" relation="include">
        </childnode>
      </node>
      <node id="18040">
        <label>El.hpp</label>
      </node>
      <node id="18039">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="18040" relation="include">
        </childnode>
        <childnode refid="18041" relation="include">
        </childnode>
        <childnode refid="18042" relation="include">
        </childnode>
        <childnode refid="18047" relation="include">
        </childnode>
      </node>
      <node id="18034">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18036" relation="include">
        </childnode>
        <childnode refid="18037" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18077" relation="include">
        </childnode>
      </node>
      <node id="18073">
        <label>fcntl.h</label>
      </node>
      <node id="18076">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18056" relation="include">
        </childnode>
        <childnode refid="18064" relation="include">
        </childnode>
      </node>
      <node id="18049">
        <label>string</label>
      </node>
      <node id="18061">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18056" relation="include">
        </childnode>
      </node>
      <node id="18066">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="18067" relation="include">
        </childnode>
      </node>
      <node id="18051">
        <label>map</label>
      </node>
      <node id="18036">
        <label>unordered_set</label>
      </node>
      <node id="18078">
        <label>omp.h</label>
      </node>
      <node id="18060">
        <label>exception</label>
      </node>
      <node id="18031">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_imcomm.cpp</label>
        <link refid="callback__imcomm_8cpp"/>
        <childnode refid="18032" relation="include">
        </childnode>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18066" relation="include">
        </childnode>
        <childnode refid="18056" relation="include">
        </childnode>
      </node>
      <node id="18063">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18056" relation="include">
        </childnode>
        <childnode refid="18061" relation="include">
        </childnode>
      </node>
      <node id="18072">
        <label>sys/types.h</label>
      </node>
      <node id="18038">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18048" relation="include">
        </childnode>
        <childnode refid="18052" relation="include">
        </childnode>
        <childnode refid="18053" relation="include">
        </childnode>
      </node>
      <node id="18068">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="18059" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18069" relation="include">
        </childnode>
        <childnode refid="18051" relation="include">
        </childnode>
      </node>
      <node id="18032">
        <label>typeinfo</label>
      </node>
      <node id="18044">
        <label>cstdio</label>
      </node>
      <node id="18057">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="18058" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
      </node>
      <node id="18046">
        <label>cxxabi.h</label>
      </node>
      <node id="18056">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18057" relation="include">
        </childnode>
        <childnode refid="18059" relation="include">
        </childnode>
        <childnode refid="18060" relation="include">
        </childnode>
      </node>
      <node id="18035">
        <label>vector</label>
      </node>
      <node id="18050">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18051" relation="include">
        </childnode>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
      </node>
      <node id="18074">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="18075" relation="include">
        </childnode>
        <childnode refid="18076" relation="include">
        </childnode>
      </node>
      <node id="18070">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="18071" relation="include">
        </childnode>
        <childnode refid="18072" relation="include">
        </childnode>
        <childnode refid="18073" relation="include">
        </childnode>
      </node>
      <node id="18065">
        <label>lbann.pb.h</label>
      </node>
      <node id="18043">
        <label>cstdlib</label>
      </node>
      <node id="18059">
        <label>iostream</label>
      </node>
      <node id="18054">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="18055" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18056" relation="include">
        </childnode>
        <childnode refid="18061" relation="include">
        </childnode>
        <childnode refid="18062" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18036" relation="include">
        </childnode>
      </node>
      <node id="18037">
        <label>unordered_map</label>
      </node>
      <node id="18053">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18048" relation="include">
        </childnode>
        <childnode refid="18054" relation="include">
        </childnode>
        <childnode refid="18056" relation="include">
        </childnode>
        <childnode refid="18061" relation="include">
        </childnode>
        <childnode refid="18066" relation="include">
        </childnode>
        <childnode refid="18064" relation="include">
        </childnode>
        <childnode refid="18065" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
      </node>
      <node id="18067">
        <label>chrono</label>
      </node>
      <node id="18075">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18053" relation="include">
        </childnode>
        <childnode refid="18062" relation="include">
        </childnode>
      </node>
      <node id="18058">
        <label>csignal</label>
      </node>
      <node id="18062">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18056" relation="include">
        </childnode>
        <childnode refid="18061" relation="include">
        </childnode>
        <childnode refid="18063" relation="include">
        </childnode>
        <childnode refid="18064" relation="include">
        </childnode>
        <childnode refid="18065" relation="include">
        </childnode>
      </node>
      <node id="18047">
        <label>lbann_config.hpp</label>
      </node>
      <node id="18069">
        <label>set</label>
      </node>
      <node id="18052">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18053" relation="include">
        </childnode>
        <childnode refid="18048" relation="include">
        </childnode>
        <childnode refid="18068" relation="include">
        </childnode>
        <childnode refid="18070" relation="include">
        </childnode>
        <childnode refid="18064" relation="include">
        </childnode>
        <childnode refid="18074" relation="include">
        </childnode>
        <childnode refid="18076" relation="include">
        </childnode>
        <childnode refid="18062" relation="include">
        </childnode>
        <childnode refid="18054" relation="include">
        </childnode>
        <childnode refid="18065" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18037" relation="include">
        </childnode>
      </node>
      <node id="18055">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="18042">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="18043" relation="include">
        </childnode>
        <childnode refid="18044" relation="include">
        </childnode>
        <childnode refid="18045" relation="include">
        </childnode>
        <childnode refid="18046" relation="include">
        </childnode>
      </node>
      <node id="18041">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="18040" relation="include">
        </childnode>
      </node>
      <node id="18079">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="18078" relation="include">
        </childnode>
      </node>
      <node id="18033">
        <label>typeindex</label>
      </node>
      <node id="18045">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lbann_callback_imcomm<sp/>.hpp<sp/>.cpp<sp/>-<sp/>Send<sp/>gradient<sp/>updates<sp/>between<sp/>models</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeindex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callback__imcomm_8hpp" kindref="compound">lbann/callbacks/callback_imcomm.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8hpp" kindref="compound">lbann/utils/timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">lbann/utils/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classlbann_1_1lbann__callback__imcomm_1a06dc9efdcd77c9e1cf714ecf709a6e3a" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1lbann__callback__imcomm_1a06dc9efdcd77c9e1cf714ecf709a6e3a" kindref="member">lbann_callback_imcomm::lbann_callback_imcomm</ref>(<ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6a" kindref="member">lbann_callback_imcomm::comm_type</ref><sp/>ct,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref><sp/>*summarizer)<sp/>:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback" kindref="compound">lbann_callback</ref>(1,<sp/>summarizer),<sp/>m_default_ct(ct)<sp/>{}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classlbann_1_1lbann__callback__imcomm_1aadc785d2f27ad0b03fce8c2785cff4fb" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1lbann__callback__imcomm_1a06dc9efdcd77c9e1cf714ecf709a6e3a" kindref="member">lbann_callback_imcomm::lbann_callback_imcomm</ref>(<ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6a" kindref="member">lbann_callback_imcomm::comm_type</ref><sp/>ct,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_set&lt;weights<sp/>*&gt;<sp/>weights_list,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref><sp/>*summarizer)<sp/>:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm" kindref="compound">lbann_callback_imcomm</ref>(ct,<sp/>summarizer)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w<sp/>:<sp/>weights_list)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w].ct<sp/>=<sp/>ct;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classlbann_1_1lbann__callback__imcomm_1a6ad492f30a34de2ac62fe459037e1d12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a6ad492f30a34de2ac62fe459037e1d12" kindref="member">lbann_callback_imcomm::set_weights_comm</ref>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6a" kindref="member">comm_type</ref><sp/>ct)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w].ct<sp/>=<sp/>ct;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classlbann_1_1lbann__callback__imcomm_1a5e0f7d9f85da8d2e579dbe4092bc3100" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a5e0f7d9f85da8d2e579dbe4092bc3100" kindref="member">lbann_callback_imcomm::set_weights_adaptive</ref>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proportion)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w].ct<sp/>=<sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6aaeb95973ab89fc579b91554cd783031b7" kindref="member">ADAPTIVE_QUANTIZATION</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w].proportion<sp/>=<sp/>proportion;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classlbann_1_1lbann__callback__imcomm_1acf71333f73d26714217ffcd93aa31830" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1acf71333f73d26714217ffcd93aa31830" kindref="member">lbann_callback_imcomm::set_weights_threshold</ref>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>pos_thresh,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>neg_thresh)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w].ct<sp/>=<sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6aa76420a96a3df1d5b60140bab6bc32dc4" kindref="member">THRESH_QUANTIZATION</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w].pos_thresh<sp/>=<sp/>pos_thresh;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w].neg_thresh<sp/>=<sp/>neg_thresh;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classlbann_1_1lbann__callback__imcomm_1a096555a87ce1bb011ceafb44081c4192" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a096555a87ce1bb011ceafb44081c4192" kindref="member">lbann_callback_imcomm::setup</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w<sp/>:<sp/>m-&gt;<ref refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" kindref="member">get_weights</ref>())<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>weights<sp/>if<sp/>not<sp/>already<sp/>in<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>.find(w)<sp/>==<sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w].ct<sp/>=<sp/>(w-&gt;get_optimizer()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>?</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1ac3df687b12721a7278877c303357bc09" kindref="member">m_default_ct</ref><sp/>:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6aafa59156bc4d5bcbf6bd80918d062da03" kindref="member">NONE</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>imcomm<sp/>parameters<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params" kindref="compound">imcomm_params</ref>&amp;<sp/>params<sp/>=<sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a11a805da5083e025171856111310d20d" kindref="member">ct</ref><sp/>!=<sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6aafa59156bc4d5bcbf6bd80918d062da03" kindref="member">NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref><sp/>*opt<sp/>=<sp/>w-&gt;get_optimizer();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;imcomm:<sp/>trying<sp/>to<sp/>do<sp/>inter-model<sp/>gradient<sp/>communication<sp/>on<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>w-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>which<sp/>has<sp/>no<sp/>optimizer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(err.str());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__callback__imcomm_1ab7106f5ee53672f5ef5a58371eb39f0b" kindref="member">ct_needs_reshape</ref>(params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a11a805da5083e025171856111310d20d" kindref="member">ct</ref>))<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently,<sp/>no<sp/>weights<sp/>need<sp/>reshaping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__callback__imcomm_1a8b29853e49c58cf737a741c503737705" kindref="member">ct_does_quantization</ref>(params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a11a805da5083e025171856111310d20d" kindref="member">ct</ref>))<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>gradients<sp/>=<sp/>opt-&gt;<ref refid="classlbann_1_1optimizer_1a12b7dbc72eb2de78d6ad798b8939f349" kindref="member">get_gradient</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a6e188e3683cb4d8cb562176417463cb5" kindref="member">reshape_height</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::Zeros(params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1ab62ef05ea8c9988e77e3a1943112c6b4" kindref="member">error</ref>,<sp/>params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a6e188e3683cb4d8cb562176417463cb5" kindref="member">reshape_height</ref>,<sp/>params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a3b2be3a390f473acdf1b9d72c5d240f0" kindref="member">reshape_width</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::Zeros(params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1ab62ef05ea8c9988e77e3a1943112c6b4" kindref="member">error</ref>,<sp/>gradients.LocalHeight(),<sp/>gradients.LocalWidth());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classlbann_1_1lbann__callback__imcomm_1a332ba4ceca91939c79fae2735fdc8ff3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a332ba4ceca91939c79fae2735fdc8ff3" kindref="member">lbann_callback_imcomm::on_train_begin</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref><sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" kindref="member">get_num_models</ref>()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>point<sp/>with<sp/>only<sp/>one<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w<sp/>:<sp/>m-&gt;<ref refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" kindref="member">get_weights</ref>())<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref><sp/>*values<sp/>=<sp/>w-&gt;get_values().Copy();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a4989229db1ee858c5a2170a989653d0b" kindref="member">intermodel_broadcast_matrix</ref>(*values,<sp/>0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>w-&gt;set_values(*values);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>values;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classlbann_1_1lbann__callback__imcomm_1a3160dbf536def4f930e0ea0aabdebc11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a3160dbf536def4f930e0ea0aabdebc11" kindref="member">lbann_callback_imcomm::on_epoch_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref><sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" kindref="member">get_num_models</ref>()<sp/>==<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>()<sp/>!=<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>point<sp/>with<sp/>only<sp/>one<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w<sp/>:<sp/>m-&gt;<ref refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" kindref="member">get_weights</ref>())<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params" kindref="compound">imcomm_params</ref>&amp;<sp/>params<sp/>=<sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref><sp/>*opt<sp/>=<sp/>w-&gt;get_optimizer();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__callback__imcomm_1a8b29853e49c58cf737a741c503737705" kindref="member">ct_does_quantization</ref>(params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a11a805da5083e025171856111310d20d" kindref="member">ct</ref>))<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a68b36ba64db34f33cb135bc64c4623e0" kindref="member">intermodel_sum_matrix</ref>(params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1ab62ef05ea8c9988e77e3a1943112c6b4" kindref="member">error</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="classlbann_1_1optimizer_1a3f41360479fbd46c704342bb4ef36d09" kindref="member">clear_gradient</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gradient<sp/>=<sp/>opt-&gt;<ref refid="classlbann_1_1optimizer_1a12b7dbc72eb2de78d6ad798b8939f349" kindref="member">get_gradient</ref>().Copy();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref><sp/>*local_gradients<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref><sp/>reshaped;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a6e188e3683cb4d8cb562176417463cb5" kindref="member">reshape_height</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a13fe710b841f72e28daf8de029f6c2f9" kindref="member">reshape_mat</ref>(gradient-&gt;Matrix(),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reshaped,<sp/>params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a6e188e3683cb4d8cb562176417463cb5" kindref="member">reshape_height</ref>,<sp/>params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a3b2be3a390f473acdf1b9d72c5d240f0" kindref="member">reshape_width</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_gradients<sp/>=<sp/>&amp;reshaped;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_gradients<sp/>=<sp/>&amp;(gradient-&gt;Matrix());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*local_gradients<sp/>=<sp/>params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1ab62ef05ea8c9988e77e3a1943112c6b4" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="classlbann_1_1optimizer_1a435d31e3b7a0302e36439ee36f62dba8" kindref="member">add_to_gradient</ref>(*gradient);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>gradient;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>optimizer<sp/>update<sp/>with<sp/>accumulated<sp/>gradient<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="classlbann_1_1optimizer_1aa9f43ca3f22edc0a25d0509b6514a411" kindref="member">step</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>El::Zero(params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1ab62ef05ea8c9988e77e3a1943112c6b4" kindref="member">error</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classlbann_1_1lbann__callback__imcomm_1a0a425ba562f7637b25cd6ba094e7885b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a0a425ba562f7637b25cd6ba094e7885b" kindref="member">lbann_callback_imcomm::on_backward_prop_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref><sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" kindref="member">get_num_models</ref>()<sp/>==<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>()<sp/>!=<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>point<sp/>with<sp/>only<sp/>one<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w<sp/>:<sp/>m-&gt;<ref refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" kindref="member">get_weights</ref>())<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>start_time<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params" kindref="compound">imcomm_params</ref>&amp;<sp/>params<sp/>=<sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a11a805da5083e025171856111310d20d" kindref="member">ct</ref><sp/>==<sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6aafa59156bc4d5bcbf6bd80918d062da03" kindref="member">NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref><sp/>*opt<sp/>=<sp/>w-&gt;get_optimizer();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gradient<sp/>=<sp/>opt-&gt;<ref refid="classlbann_1_1optimizer_1a12b7dbc72eb2de78d6ad798b8939f349" kindref="member">get_gradient</ref>().Copy();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>*<sp/>local_gradients<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref><sp/>reshaped;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a6e188e3683cb4d8cb562176417463cb5" kindref="member">reshape_height</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a13fe710b841f72e28daf8de029f6c2f9" kindref="member">reshape_mat</ref>(gradient-&gt;Matrix(),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reshaped,<sp/>params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a6e188e3683cb4d8cb562176417463cb5" kindref="member">reshape_height</ref>,<sp/>params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a3b2be3a390f473acdf1b9d72c5d240f0" kindref="member">reshape_width</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>local_gradients<sp/>=<sp/>&amp;reshaped;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>local_gradients<sp/>=<sp/>&amp;(gradient-&gt;Matrix());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a11a805da5083e025171856111310d20d" kindref="member">ct</ref>)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6aa5f19efb5bef79cea24be992a2137962e" kindref="member">NORMAL</ref>:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a68b36ba64db34f33cb135bc64c4623e0" kindref="member">intermodel_sum_matrix</ref>(*local_gradients);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6aa06f19090efbd982638c20bcb8a3c7d33" kindref="member">ONEBIT_QUANTIZATION</ref>:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a4994863d7f69e801c042c5d460bb3f34" kindref="member">m_quantizer</ref>.<ref refid="classlbann_1_1lbann__quantizer_1a4b326de1ca5b7eba6415b6f42f83335b" kindref="member">intermodel_sum_onebit_quantized</ref>(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm,<sp/>*local_gradients,<sp/>params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1ab62ef05ea8c9988e77e3a1943112c6b4" kindref="member">error</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6aa76420a96a3df1d5b60140bab6bc32dc4" kindref="member">THRESH_QUANTIZATION</ref>:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a4994863d7f69e801c042c5d460bb3f34" kindref="member">m_quantizer</ref>.<ref refid="classlbann_1_1lbann__quantizer_1a0bd572557675705c5e080b92d74b02ae" kindref="member">intermodel_sum_threshold_quantized</ref>(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm,<sp/>*local_gradients,<sp/>params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1ab62ef05ea8c9988e77e3a1943112c6b4" kindref="member">error</ref>,<sp/>params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a5b3b8285509cf1e5db630fd9616d07bc" kindref="member">pos_thresh</ref>,<sp/>params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a9c8af36d86f1abe95e5f2c1c40d95e8c" kindref="member">neg_thresh</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6aaeb95973ab89fc579b91554cd783031b7" kindref="member">ADAPTIVE_QUANTIZATION</ref>:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a4994863d7f69e801c042c5d460bb3f34" kindref="member">m_quantizer</ref>.<ref refid="classlbann_1_1lbann__quantizer_1a87e856d8bf5e8a678a39cdb8f547dfd9" kindref="member">intermodel_sum_adaptive_quantized</ref>(</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm,<sp/>*local_gradients,<sp/>params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1ab62ef05ea8c9988e77e3a1943112c6b4" kindref="member">error</ref>,<sp/>params.<ref refid="structlbann_1_1lbann__callback__imcomm_1_1imcomm__params_1a72725a9300a0c8e401497a1e2eef094f" kindref="member">proportion</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;imcomm:<sp/>unknown<sp/>comm<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="classlbann_1_1optimizer_1a3f41360479fbd46c704342bb4ef36d09" kindref="member">clear_gradient</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="classlbann_1_1optimizer_1a435d31e3b7a0302e36439ee36f62dba8" kindref="member">add_to_gradient</ref>(*gradient);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>gradient;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>im_time<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" kindref="member">do_summary</ref>(m,<sp/>w,<sp/>im_time);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1ad45c39a7a85fb8e1d99eca97aa4d9d09" kindref="member">lbann_callback_imcomm::do_summary</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m,<sp/><ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>im_time)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref><sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>std::string<sp/>prefix<sp/>=<sp/>w-&gt;<ref refid="classlbann_1_1weights_1a272f80766f31a5add7a970e5e8fcc352" kindref="member">get_name</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/imcomm_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref>-&gt;<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im_time,<sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_sent<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_received<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__callback__imcomm_1a8b29853e49c58cf737a741c503737705" kindref="member">ct_does_quantization</ref>(<ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w].ct))<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes_sent<sp/>=<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1ae0be48a03e4e8af43929c97a31a8f361" kindref="member">get_ar_bytes_sent</ref>();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes_received<sp/>=<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1b7c53c7c8e04543e1a262a01d847976" kindref="member">get_ar_bytes_received</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>same<sp/>approximation<sp/>the<sp/>comm<sp/>layer<sp/>does.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>local_gradients<sp/>=</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w-&gt;<ref refid="classlbann_1_1weights_1accdbbd16ada5b5b12890431b92c2e706" kindref="member">get_optimizer</ref>()-&gt;<ref refid="classlbann_1_1optimizer_1a12b7dbc72eb2de78d6ad798b8939f349" kindref="member">get_gradient</ref>().LockedMatrix();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes_sent<sp/>=</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>local_gradients.Height()<sp/>*<sp/>local_gradients.Width();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes_received<sp/>=</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>local_gradients.Height()<sp/>*<sp/>local_gradients.Width();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref>-&gt;<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;bytes_sent&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_sent,<sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref>-&gt;<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;bytes_received&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_received,<sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__callback__imcomm_1a8b29853e49c58cf737a741c503737705" kindref="member">ct_does_quantization</ref>(<ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w].ct))<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref>-&gt;<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;rs_bytes_sent&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a7b9827e5f46d535c8ab2cf2f6c576291" kindref="member">get_ar_rs_bytes_sent</ref>(),</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref>-&gt;<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;ag_bytes_sent&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1af745b91711014bf5a9f8d2466b5a6634" kindref="member">get_ar_ag_bytes_sent</ref>(),</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref>-&gt;<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;rs_bytes_received&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a4ed37b23401cd6df6502229bae0e5a1d" kindref="member">get_ar_rs_bytes_received</ref>(),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref>-&gt;<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;ag_bytes_received&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a7aaeb171cd6f08926a6919e9a7892a73" kindref="member">get_ar_ag_bytes_received</ref>(),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref>-&gt;<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;ar_send_trans_time&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1aed5d56c2b7205009c67ab37ea1c1556f" kindref="member">get_ar_send_transform_time</ref>(),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref>-&gt;<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;ar_recv_trans_time&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1afa5144a3d7bd40e1d78193d9f299e8ec" kindref="member">get_ar_recv_transform_time</ref>(),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref>-&gt;<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;ar_recv_apply_trans_time&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a893af1da4330be474871eeb8b2f9a7b5" kindref="member">get_ar_recv_apply_transform_time</ref>(),</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__callback__imcomm_1a32a0319c91aff324cb3468de4f31dd50" kindref="member">m_weights_params</ref>[w].ct<sp/>==<sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6aaeb95973ab89fc579b91554cd783031b7" kindref="member">ADAPTIVE_QUANTIZATION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" kindref="member">m_summarizer</ref>-&gt;<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;quantized_count&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a4994863d7f69e801c042c5d460bb3f34" kindref="member">m_quantizer</ref>.<ref refid="classlbann_1_1lbann__quantizer_1afe560823e51a64b1bb42c6f6cbd83ee0" kindref="member">get_quantized_count</ref>(),</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1a4994863d7f69e801c042c5d460bb3f34" kindref="member">m_quantizer</ref>.<ref refid="classlbann_1_1lbann__quantizer_1aee1ea46e3191ad25fd310938eaf5a2e0" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1adb9afab1b8af03276e6e6347f8021ef5" kindref="member">reset_stats_counters</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="namespacelbann_1add9e1dd52afa73f994d5d3a44c25a818" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="namespacelbann_1add9e1dd52afa73f994d5d3a44c25a818" kindref="member">comm_type_names</ref><sp/><sp/>=</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;onebit_quantization&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;thresh_quantization&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adaptive_quantization&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="namespacelbann_1ab5665dc52c53faca0caa55b509e2e654" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespacelbann_1ab5665dc52c53faca0caa55b509e2e654" kindref="member">get_comm_type_name</ref>(<ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6a" kindref="member">lbann_callback_imcomm::comm_type</ref><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m<sp/>&lt;<sp/>0<sp/>or<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)comm_type_names.size())<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>comm_type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comm_type_names[(int)m];</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_imcomm.cpp"/>
  </compounddef>
</doxygen>
