<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1data__reader__mnist__siamese" kind="class" language="C++" prot="public">
    <compoundname>lbann::data_reader_mnist_siamese</compoundname>
    <basecompoundref refid="classlbann_1_1data__reader__multi__images" prot="public" virt="non-virtual">lbann::data_reader_multi_images</basecompoundref>
    <includes refid="data__reader__mnist__siamese_8hpp" local="no">data_reader_mnist_siamese.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classlbann_1_1data__reader__mnist__siamese_1abc3253e1de3910bef9e317ef5a396a47" prot="public" static="no">
        <type>unsigned char</type>
        <definition>using lbann::data_reader_mnist_siamese::label_t =  unsigned char</definition>
        <argsstring></argsstring>
        <name>label_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="54" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlbann_1_1data__reader__mnist__siamese_1af159922f68098bfcb16a9df46d501103" prot="public" static="no">
        <type>std::pair&lt; int, int &gt;</type>
        <definition>using lbann::data_reader_mnist_siamese::sample_t =  std::pair&lt;int, int&gt;</definition>
        <argsstring></argsstring>
        <name>sample_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="55" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classlbann_1_1data__reader__mnist__siamese_1a42a4b1513a7305cc62d219ac0d9473c3" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; lbann::data_reader_mnist_siamese::m_shuffled_indices2</definition>
        <argsstring></argsstring>
        <name>m_shuffled_indices2</name>
        <briefdescription>
<para>To randomly choose the siamese pair input online. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="122" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" bodystart="122" bodyend="-1"/>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1ad41517c9c789bbf8d7e0696832e52d98" compoundref="data__reader__mnist__siamese_8cpp" startline="54" endline="65">operator=</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1ac44a7118e94338e14f7b6a9e33239155" compoundref="data__reader__mnist__siamese_8cpp" startline="90" endline="146">fetch_data</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a1709140fcdcea9baaaf1bab7a48f3bce" compoundref="data__reader__mnist__siamese_8cpp" startline="152" endline="195">fetch_labels</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1ad1949fc1a71af86d792e927c0181f87d" compoundref="data__reader__mnist__siamese_8cpp" startline="304" endline="318">shuffle_indices</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1data__reader__mnist__siamese_1a5b664a53047546c1be6d19ecabbd30dc" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; unsigned char &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;unsigned char&gt; &gt; lbann::data_reader_mnist_siamese::m_image_data</definition>
        <argsstring></argsstring>
        <name>m_image_data</name>
        <briefdescription>
<para>Store the preloaded data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="124" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" bodystart="124" bodyend="-1"/>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1ad41517c9c789bbf8d7e0696832e52d98" compoundref="data__reader__mnist__siamese_8cpp" startline="54" endline="65">operator=</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a1709140fcdcea9baaaf1bab7a48f3bce" compoundref="data__reader__mnist__siamese_8cpp" startline="152" endline="195">fetch_labels</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a0f4171af4c56100c1c78cb53e938222c" compoundref="data__reader__mnist__siamese_8cpp" startline="253" endline="257">fetch_label</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a2c60a89c5815fa24b34d4febfecfc3db" compoundref="data__reader__mnist__siamese_8cpp" startline="265" endline="301">load</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1af10a15ece71ae9c20069161a1c83abcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::data_reader_mnist_siamese::data_reader_mnist_siamese</definition>
        <argsstring>(const std::shared_ptr&lt; cv_process &gt; &amp;pp, bool shuffle=true)</argsstring>
        <name>data_reader_mnist_siamese</name>
        <param>
          <type>const std::shared_ptr&lt; cv_process &gt; &amp;</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shuffle</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="57" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp" bodystart="43" bodyend="46"/>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a7e1c9530b5d56a0835db8a30af980164" compoundref="data__reader__mnist__siamese_8cpp" startline="70" endline="77">set_defaults</references>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a0b9750c72f9fdb28499b6dfe70bc9a6f" compoundref="data__reader__mnist__siamese_8hpp" startline="62" endline="64">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1ac68ac9d831b8ac2209069fb4d407060a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::data_reader_mnist_siamese::data_reader_mnist_siamese</definition>
        <argsstring>(const data_reader_mnist_siamese &amp;)</argsstring>
        <name>data_reader_mnist_siamese</name>
        <param>
          <type>const <ref refid="classlbann_1_1data__reader__mnist__siamese" kindref="compound">data_reader_mnist_siamese</ref> &amp;</type>
          <defname>rhs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="58" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1ad41517c9c789bbf8d7e0696832e52d98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1data__reader__mnist__siamese" kindref="compound">data_reader_mnist_siamese</ref> &amp;</type>
        <definition>data_reader_mnist_siamese &amp; lbann::data_reader_mnist_siamese::operator=</definition>
        <argsstring>(const data_reader_mnist_siamese &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1data__reader__mnist__siamese" kindref="compound">data_reader_mnist_siamese</ref> &amp;</type>
          <defname>rhs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="59" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp" bodystart="54" bodyend="65"/>
        <references refid="classlbann_1_1data__reader__multi__images_1a8d9eae4dde10654c1f1bf7c1fe685e99" compoundref="data__reader__multi__images_8cpp" startline="51" endline="62">lbann::data_reader_multi_images::operator=</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a42a4b1513a7305cc62d219ac0d9473c3" compoundref="data__reader__mnist__siamese_8hpp" startline="122">m_shuffled_indices2</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a5b664a53047546c1be6d19ecabbd30dc" compoundref="data__reader__mnist__siamese_8hpp" startline="124">m_image_data</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1a308c0ac052f218a52da40043164fab1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::data_reader_mnist_siamese::~data_reader_mnist_siamese</definition>
        <argsstring>() override</argsstring>
        <name>~data_reader_mnist_siamese</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="60" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp" bodystart="67" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1a0b9750c72f9fdb28499b6dfe70bc9a6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1data__reader__mnist__siamese" kindref="compound">data_reader_mnist_siamese</ref> *</type>
        <definition>data_reader_mnist_siamese* lbann::data_reader_mnist_siamese::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1imagenet__reader_1a71be5220be24de5caf00d2e422b750f2">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="62" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" bodystart="62" bodyend="64"/>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1af10a15ece71ae9c20069161a1c83abcd" compoundref="data__reader__mnist__siamese_8cpp" startline="43" endline="46">data_reader_mnist_siamese</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::data_reader_mnist_siamese::get_type</definition>
        <argsstring>() const override</argsstring>
        <name>get_type</name>
        <reimplements refid="classlbann_1_1imagenet__reader_1a0afea0db8b4286b56211842f8f1d7678">get_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return this data_reader&apos;s type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="66" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" bodystart="66" bodyend="68"/>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1abe572754f0b1415407c1b698b0f83656" compoundref="data__reader__mnist__siamese_8cpp" startline="80" endline="83">set_input_params</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a2c60a89c5815fa24b34d4febfecfc3db" compoundref="data__reader__mnist__siamese_8cpp" startline="265" endline="301">load</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1ac44a7118e94338e14f7b6a9e33239155" compoundref="data__reader__mnist__siamese_8cpp" startline="90" endline="146">fetch_data</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a1709140fcdcea9baaaf1bab7a48f3bce" compoundref="data__reader__mnist__siamese_8cpp" startline="152" endline="195">fetch_labels</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a410d8aa510fb2f3f4d1a257d5b308819" compoundref="data__reader__mnist__siamese_8cpp" startline="321" endline="326">setup_data_store</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a7e1c9530b5d56a0835db8a30af980164" compoundref="data__reader__mnist__siamese_8cpp" startline="70" endline="77">set_defaults</references>
        <references refid="classlbann_1_1data__reader__multi__images_1a37ef2f4e641c074d0f3bd51f11682fc7" compoundref="data__reader__multi__images_8cpp" startline="101" endline="131">lbann::data_reader_multi_images::fetch_datum</references>
        <references refid="classlbann_1_1data__reader__multi__images_1a96baf61a6207a76060afeaa31b55b671" compoundref="data__reader__multi__images_8cpp" startline="133" endline="137">lbann::data_reader_multi_images::fetch_label</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a299dd32be165c5acf320b6f40404cb17" compoundref="data__reader__mnist__siamese_8cpp" startline="246" endline="250">fetch_datum</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a0f4171af4c56100c1c78cb53e938222c" compoundref="data__reader__mnist__siamese_8cpp" startline="253" endline="257">fetch_label</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1ad1949fc1a71af86d792e927c0181f87d" compoundref="data__reader__mnist__siamese_8cpp" startline="304" endline="318">shuffle_indices</references>
        <references refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" compoundref="data__reader_8hpp" startline="895">lbann::generic_data_reader::m_shuffled_indices</references>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1ac44a7118e94338e14f7b6a9e33239155" compoundref="data__reader__mnist__siamese_8cpp" startline="90" endline="146">fetch_data</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a1709140fcdcea9baaaf1bab7a48f3bce" compoundref="data__reader__mnist__siamese_8cpp" startline="152" endline="195">fetch_labels</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a299dd32be165c5acf320b6f40404cb17" compoundref="data__reader__mnist__siamese_8cpp" startline="246" endline="250">fetch_datum</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a0f4171af4c56100c1c78cb53e938222c" compoundref="data__reader__mnist__siamese_8cpp" startline="253" endline="257">fetch_label</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a2c60a89c5815fa24b34d4febfecfc3db" compoundref="data__reader__mnist__siamese_8cpp" startline="265" endline="301">load</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1abe572754f0b1415407c1b698b0f83656" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::data_reader_mnist_siamese::set_input_params</definition>
        <argsstring>(const int, const int, const int, const int) override</argsstring>
        <name>set_input_params</name>
        <reimplements refid="classlbann_1_1image__data__reader_1a6ed9b8b12ad3ffa93ad458d872f8c044">set_input_params</reimplements>
        <param>
          <type>const int</type>
        </param>
        <param>
          <type>const int</type>
        </param>
        <param>
          <type>const int</type>
        </param>
        <param>
          <type>const int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set up MNIST dataset-specific input parameters, which are pre-defined and also set as the default. This does not change the setup, but only preserves the default. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="74" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp" bodystart="80" bodyend="83"/>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a7e1c9530b5d56a0835db8a30af980164" compoundref="data__reader__mnist__siamese_8cpp" startline="70" endline="77">set_defaults</references>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1a2c60a89c5815fa24b34d4febfecfc3db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::data_reader_mnist_siamese::load</definition>
        <argsstring>() override</argsstring>
        <name>load</name>
        <reimplements refid="classlbann_1_1image__data__reader_1a99cb80242d7d20bc1e8baeaff25ff790">load</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load the dataset. Each data reader implementation should implement this to initialize its internal data structures, determine the number of samples and their dimensionality (if needed), and set up and shuffle samples. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="77" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp" bodystart="265" bodyend="301"/>
        <references refid="classlbann_1_1generic__data__reader_1ae82c40eebc05e2f0c1198afcc7a7f009" compoundref="data__reader_8hpp" startline="476" endline="478">lbann::generic_data_reader::is_master</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a5b664a53047546c1be6d19ecabbd30dc" compoundref="data__reader__mnist__siamese_8hpp" startline="124">m_image_data</references>
        <references refid="classlbann_1_1generic__data__reader_1ab4c6c2d4ba40ece809ce896828c8ff03" compoundref="data__reader_8cpp" startline="419" endline="421">lbann::generic_data_reader::get_file_dir</references>
        <references refid="classlbann_1_1generic__data__reader_1a56664e1b43f3fe923cf6d652f14b40a9" compoundref="data__reader_8cpp" startline="427" endline="434">lbann::generic_data_reader::get_data_filename</references>
        <references refid="classlbann_1_1generic__data__reader_1af0f82d719fcd6e0668414836f2673d5c" compoundref="data__reader_8cpp" startline="440" endline="447">lbann::generic_data_reader::get_label_filename</references>
        <references refid="namespacelbann_1a59f65281406da5bc57f49d8ec682be2d" compoundref="data__reader__mnist_8cpp" startline="74" endline="130">lbann::load_mnist_data</references>
        <references refid="classlbann_1_1generic__data__reader_1a51af253029b7daea29bc46cbbef686b3" compoundref="data__reader_8hpp" startline="923">lbann::generic_data_reader::m_first_n</references>
        <references refid="classlbann_1_1generic__data__reader_1ae6929a8bd2e59da72a8c2e537f0b2b37" compoundref="data__reader_8cpp" startline="477" endline="485">lbann::generic_data_reader::set_use_percent</references>
        <references refid="classlbann_1_1generic__data__reader_1aa2d83c4ffc58534e0c193b6b9f9fb925" compoundref="data__reader_8cpp" startline="453" endline="455">lbann::generic_data_reader::set_absolute_sample_count</references>
        <references refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" compoundref="data__reader_8hpp" startline="895">lbann::generic_data_reader::m_shuffled_indices</references>
        <references refid="classlbann_1_1generic__data__reader_1aa28fdeeb6af492540f507e49adff5d6c" compoundref="data__reader_8cpp" startline="328" endline="376">lbann::generic_data_reader::select_subset_of_data</references>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1ac44a7118e94338e14f7b6a9e33239155" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int lbann::data_reader_mnist_siamese::fetch_data</definition>
        <argsstring>(Mat &amp;X) override</argsstring>
        <name>fetch_data</name>
        <reimplements refid="classlbann_1_1generic__data__reader_1a46b658ba4f6b746632b683568ab76f77">fetch_data</reimplements>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
<para>Fetch this mini-batch&apos;s samples into X by calling the new overloaded <ref refid="classlbann_1_1data__reader__mnist__siamese_1a299dd32be165c5acf320b6f40404cb17" kindref="member">fetch_datum()</ref> </para>        </briefdescription>
        <detaileddescription>
<para>Fill the input minibatch matrix with the samples of image pairs by using the overloaded <ref refid="classlbann_1_1data__reader__mnist__siamese_1a299dd32be165c5acf320b6f40404cb17" kindref="member">fetch_datum()</ref> </para>        </detaileddescription>
        <inbodydescription>
<para>Allow each thread to perform any preprocessing necessary on the data source prior to fetching data</para><para>Allow each thread to perform any postprocessing necessary on the data source prior to fetching data </para>        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="80" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp" bodystart="90" bodyend="146"/>
        <references refid="classlbann_1_1generic__data__reader_1a2b10538440d784f0f12582a5407acef2" compoundref="data__reader_8hpp" startline="290" endline="292">lbann::generic_data_reader::position_valid</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</references>
        <references refid="classlbann_1_1generic__data__reader_1a2facf4e410099ac8c1fa586e797ec2e0" compoundref="data__reader_8hpp" startline="879">lbann::generic_data_reader::m_current_pos</references>
        <references refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" compoundref="data__reader_8hpp" startline="895">lbann::generic_data_reader::m_shuffled_indices</references>
        <references refid="classlbann_1_1generic__data__reader_1ad613f95666b973d8da77773fb34c9b66" compoundref="data__reader_8hpp" startline="869" endline="869">lbann::generic_data_reader::preprocess_data_source</references>
        <references refid="classlbann_1_1generic__data__reader_1a850e99110dd1e9df2985f09ea196fea8" compoundref="data__reader_8cpp" startline="281" endline="287">lbann::generic_data_reader::get_loaded_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1a58461c39de7e17eafc5b98aec99cbb9b" compoundref="data__reader_8hpp" startline="891">lbann::generic_data_reader::m_sample_stride</references>
        <references refid="classlbann_1_1generic__data__reader_1a4ee1a159c74561c15a5e0c267ad3cc6a" compoundref="data__reader_8hpp" startline="929">lbann::generic_data_reader::m_indices_fetched_per_mb</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a42a4b1513a7305cc62d219ac0d9473c3" compoundref="data__reader__mnist__siamese_8hpp" startline="122">m_shuffled_indices2</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a299dd32be165c5acf320b6f40404cb17" compoundref="data__reader__mnist__siamese_8cpp" startline="246" endline="250">fetch_datum</references>
        <references refid="namespacelbann_1aedccb3bf2d674ccb5573ab9960720731" compoundref="exception_8hpp" startline="55" endline="65">lbann::lbann_report_exception</references>
        <references refid="classlbann_1_1generic__data__reader_1a7bbf74725a96235dc1cd20ff440a69bd" compoundref="data__reader_8hpp" startline="873" endline="873">lbann::generic_data_reader::postprocess_data_source</references>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1a1709140fcdcea9baaaf1bab7a48f3bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int lbann::data_reader_mnist_siamese::fetch_labels</definition>
        <argsstring>(Mat &amp;Y) override</argsstring>
        <name>fetch_labels</name>
        <reimplements refid="classlbann_1_1generic__data__reader_1a7e624f92e38b0ee4224a6afaaf2acbdb">fetch_labels</reimplements>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>Y</declname>
        </param>
        <briefdescription>
<para>Fetch this mini-batch&apos;s labels into Y by calling the new overloaded <ref refid="classlbann_1_1data__reader__mnist__siamese_1a0f4171af4c56100c1c78cb53e938222c" kindref="member">fetch_label()</ref> </para>        </briefdescription>
        <detaileddescription>
<para>Fill the ground truth table by using the overloaded <ref refid="classlbann_1_1data__reader__mnist__siamese_1a0f4171af4c56100c1c78cb53e938222c" kindref="member">fetch_label()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="82" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp" bodystart="152" bodyend="195"/>
        <references refid="classlbann_1_1generic__data__reader_1a2b10538440d784f0f12582a5407acef2" compoundref="data__reader_8hpp" startline="290" endline="292">lbann::generic_data_reader::position_valid</references>
        <references refid="classlbann_1_1generic__data__reader_1a850e99110dd1e9df2985f09ea196fea8" compoundref="data__reader_8cpp" startline="281" endline="287">lbann::generic_data_reader::get_loaded_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1a2facf4e410099ac8c1fa586e797ec2e0" compoundref="data__reader_8hpp" startline="879">lbann::generic_data_reader::m_current_pos</references>
        <references refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" compoundref="data__reader_8hpp" startline="895">lbann::generic_data_reader::m_shuffled_indices</references>
        <references refid="classlbann_1_1generic__data__reader_1a58461c39de7e17eafc5b98aec99cbb9b" compoundref="data__reader_8hpp" startline="891">lbann::generic_data_reader::m_sample_stride</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a42a4b1513a7305cc62d219ac0d9473c3" compoundref="data__reader__mnist__siamese_8hpp" startline="122">m_shuffled_indices2</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a0f4171af4c56100c1c78cb53e938222c" compoundref="data__reader__mnist__siamese_8cpp" startline="253" endline="257">fetch_label</references>
        <references refid="namespacelbann_1aedccb3bf2d674ccb5573ab9960720731" compoundref="exception_8hpp" startline="55" endline="65">lbann::lbann_report_exception</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a299dd32be165c5acf320b6f40404cb17" compoundref="data__reader__mnist__siamese_8cpp" startline="246" endline="250">fetch_datum</references>
        <references refid="classlbann_1_1data__reader__multi__images_1a713e4cc80a2d3a2b721d0912e3773baa" compoundref="data__reader__multi__images_8cpp" startline="91" endline="99">lbann::data_reader_multi_images::create_datum_views</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a5b664a53047546c1be6d19ecabbd30dc" compoundref="data__reader__mnist__siamese_8hpp" startline="124">m_image_data</references>
        <references refid="classlbann_1_1image__utils_1a720f0987ec8eff333bf697ed18aafc93" compoundref="image__utils_8cpp" startline="284" endline="301">lbann::image_utils::import_image</references>
        <references refid="classlbann_1_1imagenet__reader_1a1e0d0ed4ac529de3e9f735512f5e3dd8" compoundref="data__reader__imagenet_8hpp" startline="61">lbann::imagenet_reader::m_pps</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</references>
        <references refid="classlbann_1_1image__data__reader_1af512f1f866c0f654309b7f28886dca9a" compoundref="data__reader__image_8hpp" startline="113">lbann::image_data_reader::m_image_linearized_size</references>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1a410d8aa510fb2f3f4d1a257d5b308819" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::data_reader_mnist_siamese::setup_data_store</definition>
        <argsstring>(model *m) override</argsstring>
        <name>setup_data_store</name>
        <reimplements refid="classlbann_1_1imagenet__reader_1a17af38eff1c3aee001d263248b8406a1">setup_data_store</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>sets up a data_store. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="85" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp" bodystart="321" bodyend="326"/>
        <references refid="classlbann_1_1generic__data__reader_1aefc076b842933a882214f4f709ca49c9" compoundref="data__reader_8hpp" startline="829">lbann::generic_data_reader::m_data_store</references>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1a7e1c9530b5d56a0835db8a30af980164" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::data_reader_mnist_siamese::set_defaults</definition>
        <argsstring>() override</argsstring>
        <name>set_defaults</name>
        <reimplements refid="classlbann_1_1imagenet__reader_1ad1e108315d659509a3e166c2f8a4941f">set_defaults</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the default configuration such as the width, height, and number of channels of the image sample. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="92" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp" bodystart="70" bodyend="77"/>
        <references refid="classlbann_1_1image__data__reader_1af001f3d1c0f1c580b66988233b3a64f0" compoundref="data__reader__image_8hpp" startline="110">lbann::image_data_reader::m_image_width</references>
        <references refid="classlbann_1_1image__data__reader_1a0632efa3deaa9d61e671f741909eb3fe" compoundref="data__reader__image_8hpp" startline="111">lbann::image_data_reader::m_image_height</references>
        <references refid="classlbann_1_1image__data__reader_1aab1a440f361521dc7bd583cefe1061f8" compoundref="data__reader__image_8hpp" startline="112">lbann::image_data_reader::m_image_num_channels</references>
        <references refid="classlbann_1_1image__data__reader_1a0164b0e3abbe92daef73b36fb925403e" compoundref="data__reader__image_8cpp" startline="63" endline="65">lbann::image_data_reader::set_linearized_image_size</references>
        <references refid="classlbann_1_1image__data__reader_1af280e8758a6ec3acee7c62e6351d17e0" compoundref="data__reader__image_8hpp" startline="114">lbann::image_data_reader::m_num_labels</references>
        <references refid="classlbann_1_1data__reader__multi__images_1a70752a5442e99333fec52def9eadc58f" compoundref="data__reader__multi__images_8hpp" startline="115">lbann::data_reader_multi_images::m_num_img_srcs</references>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1af10a15ece71ae9c20069161a1c83abcd" compoundref="data__reader__mnist__siamese_8cpp" startline="43" endline="46">data_reader_mnist_siamese</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1abe572754f0b1415407c1b698b0f83656" compoundref="data__reader__mnist__siamese_8cpp" startline="80" endline="83">set_input_params</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1a299dd32be165c5acf320b6f40404cb17" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::data_reader_mnist_siamese::fetch_datum</definition>
        <argsstring>(::Mat &amp;X, int data_id, int mb_idx, int tid) override</argsstring>
        <name>fetch_datum</name>
        <param>
          <type>::<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mb_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="98" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp" bodystart="246" bodyend="250"/>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</references>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1ac44a7118e94338e14f7b6a9e33239155" compoundref="data__reader__mnist__siamese_8cpp" startline="90" endline="146">fetch_data</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a1709140fcdcea9baaaf1bab7a48f3bce" compoundref="data__reader__mnist__siamese_8cpp" startline="152" endline="195">fetch_labels</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1a0f4171af4c56100c1c78cb53e938222c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::data_reader_mnist_siamese::fetch_label</definition>
        <argsstring>(::Mat &amp;Y, int data_id, int mb_idx, int tid) override</argsstring>
        <name>fetch_label</name>
        <param>
          <type>::<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mb_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="99" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp" bodystart="253" bodyend="257"/>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</references>
        <references refid="namespacelbann_1a59f65281406da5bc57f49d8ec682be2d" compoundref="data__reader__mnist_8cpp" startline="74" endline="130">lbann::load_mnist_data</references>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a5b664a53047546c1be6d19ecabbd30dc" compoundref="data__reader__mnist__siamese_8hpp" startline="124">m_image_data</references>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</referencedby>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a1709140fcdcea9baaaf1bab7a48f3bce" compoundref="data__reader__mnist__siamese_8cpp" startline="152" endline="195">fetch_labels</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1a9124e72ab8d6913f5c90222ff0f45272" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool lbann::data_reader_mnist_siamese::fetch_datum</definition>
        <argsstring>(::Mat &amp;X, std::pair&lt; int, int &gt; data_id, int mb_idx, int tid)</argsstring>
        <name>fetch_datum</name>
        <param>
          <type>::<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>std::pair&lt; int, int &gt;</type>
          <declname>data_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mb_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fetch two data items identified by the pair of indices to the pre-loaded data list, and put them into the column mb_idx of matrix x. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1addb5a1f18e903d73a2c32125c90f4a1f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool lbann::data_reader_mnist_siamese::fetch_label</definition>
        <argsstring>(::Mat &amp;Y, std::pair&lt; int, int &gt; data_id, int mb_idx, int tid)</argsstring>
        <name>fetch_label</name>
        <param>
          <type>::<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>std::pair&lt; int, int &gt;</type>
          <declname>data_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mb_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Take a pair of indices to the preloaded sample list, and compare the labels of the corresponding samples. Store 1 if equal or 0 at the column mb_idx of the given matrix Y. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1data__reader__mnist__siamese_1ad1949fc1a71af86d792e927c0181f87d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::data_reader_mnist_siamese::shuffle_indices</definition>
        <argsstring>() override</argsstring>
        <name>shuffle_indices</name>
        <reimplements refid="classlbann_1_1generic__data__reader_1af1aaa4d1a693974c1b1f1318b6ed60b8">shuffle_indices</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shuffle the second index list added in this class as well as the one in the base class whenever the latter gets shuffled. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="117" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp" bodystart="304" bodyend="318"/>
        <references refid="classlbann_1_1data__reader__mnist__siamese_1a42a4b1513a7305cc62d219ac0d9473c3" compoundref="data__reader__mnist__siamese_8hpp" startline="122">m_shuffled_indices2</references>
        <references refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" compoundref="data__reader_8hpp" startline="895">lbann::generic_data_reader::m_shuffled_indices</references>
        <references refid="classlbann_1_1generic__data__reader_1a8039ed9c12a5847f0dcf7dd54b8d2f5b" compoundref="data__reader_8hpp" startline="919">lbann::generic_data_reader::m_shuffle</references>
        <references refid="namespacelbann_1aba9d11cb3a739cd84e7234ceeb32d098" compoundref="random_8cpp" startline="68" endline="70">lbann::get_data_seq_generator</references>
        <referencedby refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" compoundref="data__reader__mnist__siamese_8hpp" startline="66" endline="68">get_type</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>With MNIST dataset, there is no individual image file. All the images or labels are packed into a single binary file respectively. This reader pre-loads all the data into memory as minist_reader does. However, to feed a siamese model, this reader randomly chooses the paired input on-line. It maintains another data index list, &apos;m_shuffled_indices2&apos;. It first copies the primary list maintined by the base class to the secondary list, and shuffles the secondary whenever the primary gets shuffled via the overridden <ref refid="classlbann_1_1data__reader__mnist__siamese_1ad1949fc1a71af86d792e927c0181f87d" kindref="member">shuffle_indices()</ref> method. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="394">
        <label>lbann::image_data_reader</label>
        <link refid="classlbann_1_1image__data__reader"/>
        <childnode refid="395" relation="public-inheritance">
        </childnode>
      </node>
      <node id="396">
        <label>lbann::lbann_image_preprocessor</label>
        <link refid="classlbann_1_1lbann__image__preprocessor"/>
      </node>
      <node id="395">
        <label>lbann::generic_data_reader</label>
        <link refid="classlbann_1_1generic__data__reader"/>
        <childnode refid="396" relation="public-inheritance">
        </childnode>
      </node>
      <node id="393">
        <label>lbann::imagenet_reader</label>
        <link refid="classlbann_1_1imagenet__reader"/>
        <childnode refid="394" relation="public-inheritance">
        </childnode>
      </node>
      <node id="392">
        <label>lbann::data_reader_multi_images</label>
        <link refid="classlbann_1_1data__reader__multi__images"/>
        <childnode refid="393" relation="public-inheritance">
        </childnode>
      </node>
      <node id="391">
        <label>lbann::data_reader_mnist_siamese</label>
        <link refid="classlbann_1_1data__reader__mnist__siamese"/>
        <childnode refid="392" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="400">
        <label>lbann::image_data_reader</label>
        <link refid="classlbann_1_1image__data__reader"/>
        <childnode refid="401" relation="public-inheritance">
        </childnode>
      </node>
      <node id="405">
        <label>lbann::model</label>
        <link refid="classlbann_1_1model"/>
        <childnode refid="406" relation="usage">
          <edgelabel>m_default_optimizer</edgelabel>
        </childnode>
        <childnode refid="403" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="411" relation="usage">
          <edgelabel>m_objective_function</edgelabel>
        </childnode>
      </node>
      <node id="402">
        <label>lbann::lbann_image_preprocessor</label>
        <link refid="classlbann_1_1lbann__image__preprocessor"/>
      </node>
      <node id="406">
        <label>lbann::optimizer</label>
        <link refid="classlbann_1_1optimizer"/>
        <childnode refid="403" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="407" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
        <childnode refid="408" relation="usage">
          <edgelabel>m_gradient_allreduce_req</edgelabel>
        </childnode>
        <childnode refid="409" relation="usage">
          <edgelabel>m_weights</edgelabel>
        </childnode>
      </node>
      <node id="401">
        <label>lbann::generic_data_reader</label>
        <link refid="classlbann_1_1generic__data__reader"/>
        <childnode refid="402" relation="public-inheritance">
        </childnode>
        <childnode refid="403" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="404" relation="usage">
          <edgelabel>m_data_store</edgelabel>
        </childnode>
      </node>
      <node id="399">
        <label>lbann::imagenet_reader</label>
        <link refid="classlbann_1_1imagenet__reader"/>
        <childnode refid="400" relation="public-inheritance">
        </childnode>
      </node>
      <node id="407">
        <label>lbann::cudnn::cudnn_manager</label>
        <link refid="classlbann_1_1cudnn_1_1cudnn__manager"/>
      </node>
      <node id="410">
        <label>lbann::weights_initializer</label>
        <link refid="classlbann_1_1weights__initializer"/>
        <childnode refid="403" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
      <node id="409">
        <label>lbann::weights</label>
        <link refid="classlbann_1_1weights"/>
        <childnode refid="406" relation="usage">
          <edgelabel>m_optimizer</edgelabel>
        </childnode>
        <childnode refid="403" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="410" relation="usage">
          <edgelabel>m_initializer</edgelabel>
        </childnode>
        <childnode refid="407" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="398">
        <label>lbann::data_reader_multi_images</label>
        <link refid="classlbann_1_1data__reader__multi__images"/>
        <childnode refid="399" relation="public-inheritance">
        </childnode>
      </node>
      <node id="403">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="408">
        <label>lbann::Al::request</label>
        <link refid="structlbann_1_1Al_1_1request"/>
      </node>
      <node id="411">
        <label>lbann::objective_function</label>
        <link refid="classlbann_1_1objective__function"/>
      </node>
      <node id="404">
        <label>lbann::generic_data_store</label>
        <link refid="classlbann_1_1generic__data__store"/>
        <childnode refid="403" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="401" relation="usage">
          <edgelabel>m_reader</edgelabel>
        </childnode>
        <childnode refid="405" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
      </node>
      <node id="397">
        <label>lbann::data_reader_mnist_siamese</label>
        <link refid="classlbann_1_1data__reader__mnist__siamese"/>
        <childnode refid="398" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" line="52" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp" bodystart="52" bodyend="125"/>
    <listofallmembers>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a1726baf71e931108dc9192539e90c583" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>add_noise</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1adb9e017aeac52a9b5d392f17188d1057" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>affine_trans</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a5ef5acf32117e5b2ea1a366e071e21d4" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>at_new_epoch</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a27cb5182c4f764cbfa4edecbb78ef29d" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>augment</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a3e99be32b95a415fd8d616cb85075df1" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>col_pixels</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1a0b9750c72f9fdb28499b6dfe70bc9a6f" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>copy</name></member>
      <member refid="classlbann_1_1imagenet__reader_1a5c0662ebaa378f7f5b4448f4d207e872" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>create_datum_view</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a713e4cc80a2d3a2b721d0912e3773baa" prot="protected" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>create_datum_views</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a7dc609e33febdc7fc29bdc9270594bea" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>cv_pixels</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1af10a15ece71ae9c20069161a1c83abcd" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>data_reader_mnist_siamese</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1ac68ac9d831b8ac2209069fb4d407060a" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>data_reader_mnist_siamese</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a91725ae909007b26410837257aa921dc" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>data_reader_multi_images</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a2aa9155e574084985bf3b1bd3663d1c5" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>data_reader_multi_images</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1abc055112884c444886fe8f7eabe58f05" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>data_reader_multi_images</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a871cb543ee6c132a76e16045a1a2a9f3" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>disable_augmentation</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1ac44a7118e94338e14f7b6a9e33239155" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>fetch_data</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1a299dd32be165c5acf320b6f40404cb17" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>fetch_datum</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1a9124e72ab8d6913f5c90222ff0f45272" prot="protected" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>fetch_datum</name></member>
      <member refid="classlbann_1_1imagenet__reader_1a6659e90c0243da40f214a877f65eb8ac" prot="protected" virt="virtual" ambiguityscope="lbann::imagenet_reader::"><scope>lbann::data_reader_mnist_siamese</scope><name>fetch_datum</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1a0f4171af4c56100c1c78cb53e938222c" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>fetch_label</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1addb5a1f18e903d73a2c32125c90f4a1f" prot="protected" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>fetch_label</name></member>
      <member refid="classlbann_1_1image__data__reader_1a1f0dbd67390a65fef106515ea7060e29" prot="protected" virt="virtual" ambiguityscope="lbann::imagenet_reader::"><scope>lbann::data_reader_mnist_siamese</scope><name>fetch_label</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1a1709140fcdcea9baaaf1bab7a48f3bce" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>fetch_labels</name></member>
      <member refid="classlbann_1_1generic__data__reader_1abe544ea807eed477f3636010d199b574" prot="protected" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>fetch_response</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aeaa97d3683add33d1c6d69a769dd6a20" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>fetch_responses</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a12d9f7056a5e68185ea0e85e14c17bcf" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>flip</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aaba933b8f7c1227801f6e80d39986af4" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>generic_data_reader</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a95d0ca539a613182898ff7693206fb40" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>generic_data_reader</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a1e8655cd1883d850566694bcf2ad60ab" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_absolute_sample_count</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a65b9d39e7585ec325eb40a123cd70891" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_base_offset</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aedca18323a7777180fc12d73d809fb84" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ac4fc0729e7f1240e167fe897df99f950" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_compound_rank</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a3f7114448c6b43a5aac30c002e4bade3" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_current_global_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a35521b27677081ee9ed30f25aeb3b508" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_current_mini_batch_index</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aec4624f295e1e3c6c5053838624441a5" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_current_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a7c884d3646396a05d9e01e3b7a260419" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_current_step_in_epoch</name></member>
      <member refid="classlbann_1_1generic__data__reader_1af80711baa226f8bc370e8e276c49f3c1" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_current_world_master_mini_batch_adjustment</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1aca93e0ab0edf13397de414d41aff1cd1" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_data_dims</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a56664e1b43f3fe923cf6d652f14b40a9" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_data_filename</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a2f1f018beecb1295c00a1ffdfa03f638" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_data_store</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ab4c6c2d4ba40ece809ce896828c8ff03" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_file_dir</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a96bb5c116c1a23822f6662b866df4a17" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_global_last_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aaa4110d53f59a127326e63ca4110b56b" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_global_mini_batch_size</name></member>
      <member refid="classlbann_1_1image__data__reader_1a641364038b54fe8291f23f9d879293e3" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_image_height</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a55dff5f22fcf4f26c7d561998c0481d4" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_image_list</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a6328561103138b60f22dbd927186f7d2" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_image_list_of_current_mb</name></member>
      <member refid="classlbann_1_1image__data__reader_1a3699aa92d3ef2ccc0c30ecf27809acbe" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_image_num_channels</name></member>
      <member refid="classlbann_1_1image__data__reader_1a2e75d4ec8f222f4f855e6c0162648dc7" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_image_width</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ab5c6c70ea1ecf8f7e2ebe2c486e50134" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_indices</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a8d8b44ed55e2af49c70d29277ff57a91" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_indices_fetched_per_mb</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ac84ecef4f72f209420279526e3e6c77b" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_iteration_stride</name></member>
      <member refid="classlbann_1_1generic__data__reader_1af0f82d719fcd6e0668414836f2673d5c" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_label_filename</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a79cb3bee4e0d19006ef9213763dc8af2" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_last_mini_batch_size</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a63d7c8f0b674f19840134ee99680f3fc" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_linearized_data_size</name></member>
      <member refid="classlbann_1_1image__data__reader_1adb62b193a10b2b12c1bf183ea9c2095e" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_linearized_label_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aacd8704cd11ed6f521cebeaac06c6cb7" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_linearized_response_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a56dca946c200cc25f6eae6e507939bba" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_loaded_mini_batch_index</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a850e99110dd1e9df2985f09ea196fea8" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_loaded_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a92574413c82813cc50fbdfbb70b4065d" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_mini_batch_max</name></member>
      <member refid="classlbann_1_1generic__data__reader_1af85a5ea421ba6ef7558cdf4bba36fdf0" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a192632a8037f6a1eef202747f5916bf3" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_minibatch_indices</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a9e78b6062be9746c81eabf0f9d28264e" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_model_offset</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ab11a9eca77ac9018bdab45ead7ef5e13" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_next_position</name></member>
      <member refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_num_data</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ab35b0f96c84c20b9bab5dda1aa852953" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_num_global_indices</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a692a657d00afc38dde1dabeb66b1550f" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_num_img_srcs</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a06fb58d1c0b84b8c76f5b4d160751f34" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_num_iterations_per_epoch</name></member>
      <member refid="classlbann_1_1image__data__reader_1af821795e5104f1a8c34027de96af7b90" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_num_labels</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ad15887cc31657d03925835aab0d4b675" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_num_parallel_readers</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a054be9375a6e8338c893230f83c1497f" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_num_responses</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a49d5244c292de9ca489761b940958afd" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_num_unused_data</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aa6e4e7a49d30502a0c60c39720ac2499" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_position</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ab5321bd7c6e83845785753366e6d9e64" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_rank</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a4df1c749c3b20e786a5f1452daa7b540" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_reset_mini_batch_index</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a92982e1b399f37e2ead5aa440883cba5" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_role</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1ab940ea9e62d5fac6d6c1b209404abe83" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_sample</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a48990d714a247463b135784f235f8a50" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_sample_stride</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a38eedaa9c8680e885a3ec05009f5f492" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_shuffled_indices</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a722a28971b6799566dc21ba552a4cde6" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_stride_to_last_mini_batch</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a2d1d5657e8b9bf8b8a9d51b33aedf017" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_stride_to_next_mini_batch</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1a2c5a29603f850bb0684dba1c64981604" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_type</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a94e981ee5b34ce56d1a532fed2ba9e39" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_unused_data</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a5853fa5e619b886699954aca6440dd8a" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_use_percent</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ab06058b5fa1d74239998358b02f73132" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_validation_percent</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a0d0f7d684970b5cc59c63050555df302" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>get_world_master_mini_batch_adjustment</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a4ba2de0a781dfa0a2652ad4d777a241f" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>horizontal_flip</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1ae62596b4af5d1940aa0499cde2bdd005" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>horizontal_shift</name></member>
      <member refid="classlbann_1_1image__data__reader_1a582185ab03c4643117fd93e0ba843882" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>image_data_reader</name></member>
      <member refid="classlbann_1_1image__data__reader_1a7a5dd69d535f2966e4f8da53f505ca7c" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>image_data_reader</name></member>
      <member refid="classlbann_1_1imagenet__reader_1a642331b94cdc3caad8335d65d096141c" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>imagenet_reader</name></member>
      <member refid="classlbann_1_1imagenet__reader_1abf46c9cf51a7e046173a0046fb0ad08a" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>imagenet_reader</name></member>
      <member refid="classlbann_1_1imagenet__reader_1a18939cd7962491c30dc857622bad9666" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>imagenet_reader</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1ac817914ad82e09471f13fce5b0b5faef" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>img_src_t</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a3c4f4cc5c90233696566a35a62a1708c" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>internal_save_image</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a8640edf9c71e3b7bee8a8e947c4690fa" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>is_data_reader_done</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ae82c40eebc05e2f0c1198afcc7a7f009" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>is_master</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a7d67ce4d10e5cdcdff47f5ecdcee6eb0" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>is_shuffled</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1abc3253e1de3910bef9e317ef5a396a47" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>label_t</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a6a0f92194d42e87d73b57ba0929e2b2d" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>lbann_image_preprocessor</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1aeeca5696dbfde9ccb1112cbd8524940b" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>lbann_image_preprocessor</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1a2c60a89c5815fa24b34d4febfecfc3db" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>load</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a85119fae17feb8fda32f8a2f40869436" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a31763c860d3e3cc57a6af0158b9977f7" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>load_list</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a462437ed899bc26ebec9ab2091980d0c" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_absolute_sample_count</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a77946c4dca753c23f39e9a490eba1229" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_base_offset</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ad3976d4b7db2d404dbb87a56c33fd456" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_comm</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a7df02a1534b100df6f718dc7a7b32b25" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_compound_rank</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aefd4bc0bf95de1e2500827581acf3536" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_current_mini_batch_idx</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a2facf4e410099ac8c1fa586e797ec2e0" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_current_pos</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a2595e254ab2442e8cfc80aa6bdac0c0f" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_data_fn</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aefc076b842933a882214f4f709ca49c9" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_data_store</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a252002ec211d67606b80bc481a27e820" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_file_dir</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a51af253029b7daea29bc46cbbef686b3" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_first_n</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a1d6f2d378a3f152e20b3def16f52c003" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_global_last_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a7cd8fa7b1db9ea3d154a411f36992476" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_global_mini_batch_size</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a032397d6c642dccd43f4c38393f5d2c1" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_horizontal_flip</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a636f59ffe470f996677601df6179bc41" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_horizontal_shift</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1a5b664a53047546c1be6d19ecabbd30dc" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_image_data</name></member>
      <member refid="classlbann_1_1image__data__reader_1ab1289f0207f3a9989c7b28e09a23c9a3" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_image_dir</name></member>
      <member refid="classlbann_1_1image__data__reader_1a0632efa3deaa9d61e671f741909eb3fe" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_image_height</name></member>
      <member refid="classlbann_1_1image__data__reader_1af512f1f866c0f654309b7f28886dca9a" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_image_linearized_size</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a6d8e2d161c9efff1ac70f847b4a7e9d0" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_image_list</name></member>
      <member refid="classlbann_1_1image__data__reader_1aab1a440f361521dc7bd583cefe1061f8" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_image_num_channels</name></member>
      <member refid="classlbann_1_1image__data__reader_1af001f3d1c0f1c580b66988233b3a64f0" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_image_width</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a4ee1a159c74561c15a5e0c267ad3cc6a" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_indices_fetched_per_mb</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a73b23a2e7768db4e9e8ba4d9a362163a" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_iteration_stride</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a492d45c107df31b3e241e54d51950746" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_label_fn</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a241f77b6209de4ae656bc34ad51bb612" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_last_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a2cfc5a3e6de8a8a24d3525ec3ed586fb" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_loaded_mini_batch_idx</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a52610681839ba81c3050c0881ffc005b" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_master</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a734002307d0ef95a31d75a295fa5c3d1" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_mean_subtraction</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a96f87a7d09711ab3eee3940ff2aa36ec" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a5d9a0efd1ebe43a74911c35ffe84edc9" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_model_offset</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a5e89d5e6797f7e7b69d1a64f7d8b5d6b" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_model_rank</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a5048d99a58ccddf4fb170c6face8cf4e" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_my_minibatch_indices</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1af860c1d78af06e4ae94ad68e3032fe92" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_noise_factor</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ac6ea8dad1e9f0a8c939fd27d2de37e1b" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_num_global_indices</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a70752a5442e99333fec52def9eadc58f" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_num_img_srcs</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ab570063483a1f604ca2fc536c3d83de7" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_num_iterations_per_epoch</name></member>
      <member refid="classlbann_1_1image__data__reader_1af280e8758a6ec3acee7c62e6351d17e0" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_num_labels</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a6eb9b8c7c704374a1e49dce87110455e" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_num_parallel_readers</name></member>
      <member refid="classlbann_1_1imagenet__reader_1a1e0d0ed4ac529de3e9f735512f5e3dd8" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_pps</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a1a7fec32155bf863d7f75bd1401532bb" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_rank</name></member>
      <member refid="classlbann_1_1generic__data__reader_1af29f62579a408d1548a124442bcf181d" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_reset_mini_batch_index</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a2f311e8c91be2a7ac93f6f141bb714a1" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_role</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a7518ae40fe38862c831832fdaf948d45" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_rotation_range</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a58461c39de7e17eafc5b98aec99cbb9b" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_sample_stride</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ab1d7cac44072bd1f67291c6169414112" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_save_minibatch_indices</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1ae00af83d438ab27d6a7b996775fba3b3" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_scale</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a237ead6488b2c04e982fd10510ae03b4" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_shear_range</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a8039ed9c12a5847f0dcf7dd54b8d2f5b" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_shuffle</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aaab6aeff67ffff1c689336851fec2c57" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_shuffled_indices</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1a42a4b1513a7305cc62d219ac0d9473c3" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_shuffled_indices2</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ac46922f2ef4f392bcc7c59c21685a3ff" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_stride_to_last_mini_batch</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a02c4632cc7cad5c3e4062934c41717a0" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_stride_to_next_mini_batch</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1ae365a9e20f060b44de7835aceceb491c" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_unit_variance</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a0bc0ee42e95d23687ddcc30d6c338b19" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_unused_indices</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a8b475834bd80e7103c3631d2b061aabc" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_use_percent</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a3e4afbe28634a913f6de9daabf05dc0d" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_validation_percent</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a7cfc687cce450403c7b46460f4d08d69" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_vertical_flip</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a06158637d634a4d123ee5501ddd0c7cb" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_vertical_shift</name></member>
      <member refid="classlbann_1_1generic__data__reader_1acd33b2dbdfd4043ecc62cc13789532a2" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_world_master_mini_batch_adjustment</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a6abe54ada0cacf23e8ac8b6d113bd26b" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>m_z_score</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1ab499dd9f11d98998b5902d639f70fa8e" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>mean_subtraction</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1ae370cdc9f776ce8cce94a45cacf47425" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>normalize</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1ad41517c9c789bbf8d7e0696832e52d98" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>operator=</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a8d9eae4dde10654c1f1bf7c1fe685e99" prot="public" virt="non-virtual" ambiguityscope="lbann::data_reader_multi_images::"><scope>lbann::data_reader_mnist_siamese</scope><name>operator=</name></member>
      <member refid="classlbann_1_1imagenet__reader_1a5ea15cc16aa679a2cb549b44eb77f323" prot="public" virt="non-virtual" ambiguityscope="lbann::imagenet_reader::"><scope>lbann::data_reader_mnist_siamese</scope><name>operator=</name></member>
      <member refid="classlbann_1_1image__data__reader_1a76a0b52eafb9ad133fb45fec7cf44700" prot="public" virt="non-virtual" ambiguityscope="lbann::image_data_reader::"><scope>lbann::data_reader_mnist_siamese</scope><name>operator=</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aec7e626e6efa2a4bf23f931e2ef8f607" prot="public" virt="non-virtual" ambiguityscope="lbann::generic_data_reader::"><scope>lbann::data_reader_mnist_siamese</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1af652494123a62e653cd7dc2d7c340219" prot="public" virt="non-virtual" ambiguityscope="lbann::lbann_image_preprocessor::"><scope>lbann::data_reader_mnist_siamese</scope><name>operator=</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a93dddd2276ddc34cc97922ee27c44582" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>pack_scalars</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1aece5b572d0a2fe123cc66412d7a5c91e" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>pixel_noise</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a2b10538440d784f0f12582a5407acef2" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>position_valid</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a7bbf74725a96235dc1cd20ff440a69bd" prot="protected" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>postprocess_data_source</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ad613f95666b973d8da77773fb34c9b66" prot="protected" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>preprocess_data_source</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a3160c8ee0e30304a1f5fc07d08e6cb40" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>read_text_stream</name></member>
      <member refid="classlbann_1_1imagenet__reader_1a1b642b5eb01b209e72bdd8dfa139cafd" prot="protected" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>replicate_processor</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a1a293733368dd9eceba3e99cf9e5ae24" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>rotation</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1af159922f68098bfcb16a9df46d501103" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>sample_t</name></member>
      <member refid="classlbann_1_1image__data__reader_1a71e4fa1eb8212cce88a2ed408ceeac51" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>save_image</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a6f49d945610f35335fce4a422a432cc1" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a977b2fdd417acb1eb37dbea0cfdd4b60" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>scale</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aa28fdeeb6af492540f507e49adff5d6c" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>select_subset_of_data</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aa2d83c4ffc58534e0c193b6b9f9fb925" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_absolute_sample_count</name></member>
      <member refid="classlbann_1_1generic__data__reader_1adcf4c6012f44c78589bb75ea530cf518" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_base_offset</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a39f4d80661a2c8e24d8d167ad5bd6c6b" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_comm</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a960362f819312d39dfcba5eeecf76257" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_compound_rank</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a74b7ef4fe0dc7d3a96868ca3b5fbf897" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_data_filename</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1a7e1c9530b5d56a0835db8a30af980164" prot="protected" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_defaults</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a94a6db0b62d4c98202ef309eb76b220c" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_file_dir</name></member>
      <member refid="classlbann_1_1generic__data__reader_1aca4e6c31df0a1579079274bc48fbbf26" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_first_n</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a4455d137b469287bf964436f9fcc6d94" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_global_last_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a03388338e75d37e1b28389d22bd5b604" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_global_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ac6d4a5ba1d4e1134620cddcac343bf59" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_initial_position</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1abe572754f0b1415407c1b698b0f83656" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_input_params</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a57824ec9de5c1131b2f15a0cb3d4ab75" prot="public" virt="non-virtual" ambiguityscope="lbann::data_reader_multi_images::"><scope>lbann::data_reader_mnist_siamese</scope><name>set_input_params</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ac1f3f81ca0e2920658cba026fe09a95b" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_iteration_stride</name></member>
      <member refid="classlbann_1_1generic__data__reader_1af45f301cc9adc2f8184b81d8d2600b8f" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_label_filename</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a357389ee93428b68f9400de708f6915d" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_last_mini_batch_size</name></member>
      <member refid="classlbann_1_1image__data__reader_1a0164b0e3abbe92daef73b36fb925403e" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_linearized_image_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a343f7d791a04aa1ef30ff829a899e2ae" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_master</name></member>
      <member refid="classlbann_1_1generic__data__reader_1adf161cca4b80eb95f9748050e7fe1809" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_mini_batch_size</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ab20e835e0e0565717e0fd74da09d4890" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_model_offset</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a91573d9599b503a6bdf2939e69659e8b" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_num_iterations_per_epoch</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a9b348d52852062dbc66b0accde5c6e8a" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_num_parallel_readers</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a8515fb4ffbeaa89fd8459b66b9ba358f" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_rank</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a8ac14fee514ad30efe8571ce68c2a95d" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_reset_mini_batch_index</name></member>
      <member refid="classlbann_1_1generic__data__reader_1adeb9413be971a0c1454fdeb46fea0716" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_role</name></member>
      <member refid="classlbann_1_1generic__data__reader_1adb90391e3e9c8e3c2aba4d4a0911ca82" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_sample_stride</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a19fd7c4dc234fa09ac7619e47fe18454" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_save_minibatch_entries</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a7b0fc770678e22c44a824e88444da765" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_shuffle</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ad07a5edb92c3927ef809fca0d95665bc" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_shuffled_indices</name></member>
      <member refid="classlbann_1_1generic__data__reader_1af2fc6b35ad8139d15729b19db2895827" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_stride_to_last_mini_batch</name></member>
      <member refid="classlbann_1_1generic__data__reader_1add5bd1d488967ebab5852b636e07db15" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_stride_to_next_mini_batch</name></member>
      <member refid="classlbann_1_1generic__data__reader_1ae6929a8bd2e59da72a8c2e537f0b2b37" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_use_percent</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a18b67bfa426eb4d2c8195d115c4df49f" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_validation_percent</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a208cebb68cf3c1ae1bd9cb5f28e8bf5b" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>set_world_master_mini_batch_adjustment</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a879bb7dcb57a0aa1ef9c5039f5b0efda" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>setup</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1a410d8aa510fb2f3f4d1a257d5b308819" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>setup_data_store</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1aef1e2375fd518e69df800b0dcbcb37d0" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>shear_range</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1ad1949fc1a71af86d792e927c0181f87d" prot="protected" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>shuffle_indices</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1afa470b696ba435c20050187a0232717d" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>subtract_mean</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1aa7a8926d0544100f7d3caa9289d94826" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>unit_scale</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a05c4cb5cb842df5d46eebe15c6ea9de3" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>unit_variance</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1af9fcb483843230008a53d60c12975f61" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>unit_variance</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a3e1c13778c04ca9fa5136ee7ee3893fb" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>unpack_header</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a8de5c2e24d4cc2211145ed5dc37cf228" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>unpack_scalars</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a1d10dec5713fbe60e61b4dc400227ade" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>update</name></member>
      <member refid="classlbann_1_1generic__data__reader_1afa621af16f1a582b5a22405b79dbe052" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>use_unused_index_set</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1aeb7d75e4d3361ae2836afabc14510d74" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>vertical_flip</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a50ac63e1f6b1b9806cbf6c06f53f4aca" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>vertical_shift</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1a02cfd4d8c26a317540b587eb52cef0d5" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>z_score</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1aec67fb0dc7a1f5d718d5bb2e226f9b7a" prot="protected" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>z_score</name></member>
      <member refid="classlbann_1_1data__reader__mnist__siamese_1a308c0ac052f218a52da40043164fab1b" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>~data_reader_mnist_siamese</name></member>
      <member refid="classlbann_1_1data__reader__multi__images_1a172a9a9cfe4406d876172679c1c6238a" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>~data_reader_multi_images</name></member>
      <member refid="classlbann_1_1generic__data__reader_1a7ed8e91233268c11b907c5d6667e8a09" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>~generic_data_reader</name></member>
      <member refid="classlbann_1_1imagenet__reader_1a5a4ef2ba813d1a68890532e1a42bdcba" prot="public" virt="non-virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>~imagenet_reader</name></member>
      <member refid="classlbann_1_1lbann__image__preprocessor_1aaabfad8d6923680cf4943f6f5290c682" prot="public" virt="virtual"><scope>lbann::data_reader_mnist_siamese</scope><name>~lbann_image_preprocessor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
