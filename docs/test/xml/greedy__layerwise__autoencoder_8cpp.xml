<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="greedy__layerwise__autoencoder_8cpp" kind="file" language="C++">
    <compoundname>greedy_layerwise_autoencoder.cpp</compoundname>
    <includes refid="greedy__layerwise__autoencoder_8hpp" local="yes">lbann/models/greedy_layerwise_autoencoder.hpp</includes>
    <includes refid="reconstruction_8hpp" local="yes">lbann/layers/io/target/reconstruction.hpp</includes>
    <includes refid="learning_8hpp" local="yes">lbann/layers/learning/learning.hpp</includes>
    <includes refid="loss__function_8hpp" local="yes">lbann/objective_functions/loss_functions/loss_function.hpp</includes>
    <incdepgraph>
      <node id="21533">
        <label>sys/stat.h</label>
      </node>
      <node id="21513">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="21514" relation="include">
        </childnode>
        <childnode refid="21509" relation="include">
        </childnode>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21508" relation="include">
        </childnode>
      </node>
      <node id="21557">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="21539" relation="include">
        </childnode>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21508" relation="include">
        </childnode>
        <childnode refid="21528" relation="include">
        </childnode>
        <childnode refid="21517" relation="include">
        </childnode>
        <childnode refid="21558" relation="include">
        </childnode>
        <childnode refid="21559" relation="include">
        </childnode>
      </node>
      <node id="21543">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="21507" relation="include">
        </childnode>
        <childnode refid="21499" relation="include">
        </childnode>
      </node>
      <node id="21561">
        <label>lbann/objective_functions/loss_functions/loss_function.hpp</label>
        <link refid="loss__function_8hpp"/>
        <childnode refid="21537" relation="include">
        </childnode>
        <childnode refid="21548" relation="include">
        </childnode>
      </node>
      <node id="21525">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21500" relation="include">
        </childnode>
      </node>
      <node id="21500">
        <label>El.hpp</label>
      </node>
      <node id="21499">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="21500" relation="include">
        </childnode>
        <childnode refid="21501" relation="include">
        </childnode>
        <childnode refid="21502" relation="include">
        </childnode>
        <childnode refid="21507" relation="include">
        </childnode>
      </node>
      <node id="21554">
        <label>lbann/io/data_buffers/distributed_io_buffer.hpp</label>
        <link refid="distributed__io__buffer_8hpp"/>
        <childnode refid="21552" relation="include">
        </childnode>
      </node>
      <node id="21555">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="21509" relation="include">
        </childnode>
        <childnode refid="21527" relation="include">
        </childnode>
        <childnode refid="21539" relation="include">
        </childnode>
        <childnode refid="21556" relation="include">
        </childnode>
        <childnode refid="21557" relation="include">
        </childnode>
      </node>
      <node id="21544">
        <label>cassert</label>
      </node>
      <node id="21535">
        <label>fcntl.h</label>
      </node>
      <node id="21538">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21508" relation="include">
        </childnode>
        <childnode refid="21517" relation="include">
        </childnode>
        <childnode refid="21525" relation="include">
        </childnode>
      </node>
      <node id="21549">
        <label>lbann/layers/io/io_layer.hpp</label>
        <link refid="io__layer_8hpp"/>
        <childnode refid="21512" relation="include">
        </childnode>
        <childnode refid="21540" relation="include">
        </childnode>
        <childnode refid="21550" relation="include">
        </childnode>
        <childnode refid="21525" relation="include">
        </childnode>
        <childnode refid="21517" relation="include">
        </childnode>
        <childnode refid="21514" relation="include">
        </childnode>
        <childnode refid="21534" relation="include">
        </childnode>
        <childnode refid="21533" relation="include">
        </childnode>
        <childnode refid="21546" relation="include">
        </childnode>
        <childnode refid="21504" relation="include">
        </childnode>
      </node>
      <node id="21514">
        <label>string</label>
      </node>
      <node id="21552">
        <label>lbann/io/data_buffers/generic_io_buffer.hpp</label>
        <link refid="generic__io__buffer_8hpp"/>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21508" relation="include">
        </childnode>
        <childnode refid="21540" relation="include">
        </childnode>
      </node>
      <node id="21522">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="21509" relation="include">
        </childnode>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21508" relation="include">
        </childnode>
        <childnode refid="21517" relation="include">
        </childnode>
      </node>
      <node id="21528">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="21529" relation="include">
        </childnode>
      </node>
      <node id="21510">
        <label>map</label>
      </node>
      <node id="21527">
        <label>unordered_set</label>
      </node>
      <node id="21558">
        <label>omp.h</label>
      </node>
      <node id="21521">
        <label>exception</label>
      </node>
      <node id="21547">
        <label>lbann/layers/io/target/reconstruction.hpp</label>
        <link refid="reconstruction_8hpp"/>
        <childnode refid="21512" relation="include">
        </childnode>
        <childnode refid="21548" relation="include">
        </childnode>
        <childnode refid="21498" relation="include">
        </childnode>
        <childnode refid="21514" relation="include">
        </childnode>
        <childnode refid="21541" relation="include">
        </childnode>
      </node>
      <node id="21495">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp</label>
        <link refid="greedy__layerwise__autoencoder_8cpp"/>
        <childnode refid="21496" relation="include">
        </childnode>
        <childnode refid="21547" relation="include">
        </childnode>
        <childnode refid="21560" relation="include">
        </childnode>
        <childnode refid="21561" relation="include">
        </childnode>
      </node>
      <node id="21542">
        <label>random</label>
      </node>
      <node id="21524">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21508" relation="include">
        </childnode>
        <childnode refid="21517" relation="include">
        </childnode>
        <childnode refid="21522" relation="include">
        </childnode>
      </node>
      <node id="21534">
        <label>sys/types.h</label>
      </node>
      <node id="21556">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21513" relation="include">
        </childnode>
        <childnode refid="21498" relation="include">
        </childnode>
        <childnode refid="21512" relation="include">
        </childnode>
      </node>
      <node id="21530">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="21520" relation="include">
        </childnode>
        <childnode refid="21509" relation="include">
        </childnode>
        <childnode refid="21531" relation="include">
        </childnode>
        <childnode refid="21510" relation="include">
        </childnode>
      </node>
      <node id="21504">
        <label>cstdio</label>
      </node>
      <node id="21553">
        <label>lbann/io/data_buffers/partitioned_io_buffer.hpp</label>
        <link refid="partitioned__io__buffer_8hpp"/>
        <childnode refid="21552" relation="include">
        </childnode>
      </node>
      <node id="21518">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="21519" relation="include">
        </childnode>
        <childnode refid="21514" relation="include">
        </childnode>
      </node>
      <node id="21506">
        <label>cxxabi.h</label>
      </node>
      <node id="21517">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21508" relation="include">
        </childnode>
        <childnode refid="21518" relation="include">
        </childnode>
        <childnode refid="21520" relation="include">
        </childnode>
        <childnode refid="21521" relation="include">
        </childnode>
      </node>
      <node id="21546">
        <label>unistd.h</label>
      </node>
      <node id="21509">
        <label>vector</label>
      </node>
      <node id="21508">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="21509" relation="include">
        </childnode>
        <childnode refid="21510" relation="include">
        </childnode>
        <childnode refid="21511" relation="include">
        </childnode>
        <childnode refid="21499" relation="include">
        </childnode>
      </node>
      <node id="21536">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="21537" relation="include">
        </childnode>
        <childnode refid="21538" relation="include">
        </childnode>
      </node>
      <node id="21532">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="21533" relation="include">
        </childnode>
        <childnode refid="21534" relation="include">
        </childnode>
        <childnode refid="21535" relation="include">
        </childnode>
      </node>
      <node id="21526">
        <label>lbann.pb.h</label>
      </node>
      <node id="21503">
        <label>cstdlib</label>
      </node>
      <node id="21551">
        <label>lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="21549" relation="include">
        </childnode>
        <childnode refid="21552" relation="include">
        </childnode>
        <childnode refid="21553" relation="include">
        </childnode>
        <childnode refid="21554" relation="include">
        </childnode>
        <childnode refid="21498" relation="include">
        </childnode>
        <childnode refid="21555" relation="include">
        </childnode>
      </node>
      <node id="21520">
        <label>iostream</label>
      </node>
      <node id="21515">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="21516" relation="include">
        </childnode>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21508" relation="include">
        </childnode>
        <childnode refid="21517" relation="include">
        </childnode>
        <childnode refid="21522" relation="include">
        </childnode>
        <childnode refid="21523" relation="include">
        </childnode>
        <childnode refid="21514" relation="include">
        </childnode>
        <childnode refid="21527" relation="include">
        </childnode>
      </node>
      <node id="21539">
        <label>unordered_map</label>
      </node>
      <node id="21541">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21508" relation="include">
        </childnode>
        <childnode refid="21525" relation="include">
        </childnode>
        <childnode refid="21542" relation="include">
        </childnode>
      </node>
      <node id="21512">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21508" relation="include">
        </childnode>
        <childnode refid="21513" relation="include">
        </childnode>
        <childnode refid="21515" relation="include">
        </childnode>
        <childnode refid="21517" relation="include">
        </childnode>
        <childnode refid="21522" relation="include">
        </childnode>
        <childnode refid="21528" relation="include">
        </childnode>
        <childnode refid="21525" relation="include">
        </childnode>
        <childnode refid="21526" relation="include">
        </childnode>
        <childnode refid="21514" relation="include">
        </childnode>
        <childnode refid="21509" relation="include">
        </childnode>
      </node>
      <node id="21496">
        <label>lbann/models/greedy_layerwise_autoencoder.hpp</label>
        <link refid="greedy__layerwise__autoencoder_8hpp"/>
        <childnode refid="21497" relation="include">
        </childnode>
      </node>
      <node id="21529">
        <label>chrono</label>
      </node>
      <node id="21537">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21512" relation="include">
        </childnode>
        <childnode refid="21523" relation="include">
        </childnode>
      </node>
      <node id="21519">
        <label>csignal</label>
      </node>
      <node id="21550">
        <label>lbann/utils/dataset.hpp</label>
        <link refid="dataset_8hpp"/>
        <childnode refid="21540" relation="include">
        </childnode>
      </node>
      <node id="21523">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="21514" relation="include">
        </childnode>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21508" relation="include">
        </childnode>
        <childnode refid="21517" relation="include">
        </childnode>
        <childnode refid="21522" relation="include">
        </childnode>
        <childnode refid="21524" relation="include">
        </childnode>
        <childnode refid="21525" relation="include">
        </childnode>
        <childnode refid="21526" relation="include">
        </childnode>
      </node>
      <node id="21540">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21541" relation="include">
        </childnode>
        <childnode refid="21517" relation="include">
        </childnode>
        <childnode refid="21508" relation="include">
        </childnode>
        <childnode refid="21532" relation="include">
        </childnode>
        <childnode refid="21525" relation="include">
        </childnode>
        <childnode refid="21543" relation="include">
        </childnode>
        <childnode refid="21544" relation="include">
        </childnode>
        <childnode refid="21545" relation="include">
        </childnode>
        <childnode refid="21514" relation="include">
        </childnode>
        <childnode refid="21509" relation="include">
        </childnode>
        <childnode refid="21546" relation="include">
        </childnode>
      </node>
      <node id="21507">
        <label>lbann_config.hpp</label>
      </node>
      <node id="21531">
        <label>set</label>
      </node>
      <node id="21498">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="21499" relation="include">
        </childnode>
        <childnode refid="21508" relation="include">
        </childnode>
        <childnode refid="21512" relation="include">
        </childnode>
        <childnode refid="21513" relation="include">
        </childnode>
        <childnode refid="21530" relation="include">
        </childnode>
        <childnode refid="21532" relation="include">
        </childnode>
        <childnode refid="21525" relation="include">
        </childnode>
        <childnode refid="21536" relation="include">
        </childnode>
        <childnode refid="21538" relation="include">
        </childnode>
        <childnode refid="21523" relation="include">
        </childnode>
        <childnode refid="21515" relation="include">
        </childnode>
        <childnode refid="21526" relation="include">
        </childnode>
        <childnode refid="21509" relation="include">
        </childnode>
        <childnode refid="21514" relation="include">
        </childnode>
        <childnode refid="21539" relation="include">
        </childnode>
      </node>
      <node id="21516">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="21560">
        <label>lbann/layers/learning/learning.hpp</label>
        <link refid="learning_8hpp"/>
        <childnode refid="21512" relation="include">
        </childnode>
      </node>
      <node id="21545">
        <label>algorithm</label>
      </node>
      <node id="21502">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="21503" relation="include">
        </childnode>
        <childnode refid="21504" relation="include">
        </childnode>
        <childnode refid="21505" relation="include">
        </childnode>
        <childnode refid="21506" relation="include">
        </childnode>
      </node>
      <node id="21497">
        <label>lbann/models/sequential.hpp</label>
        <link refid="sequential_8hpp"/>
        <childnode refid="21498" relation="include">
        </childnode>
        <childnode refid="21512" relation="include">
        </childnode>
        <childnode refid="21540" relation="include">
        </childnode>
        <childnode refid="21525" relation="include">
        </childnode>
        <childnode refid="21509" relation="include">
        </childnode>
        <childnode refid="21514" relation="include">
        </childnode>
      </node>
      <node id="21501">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="21500" relation="include">
        </childnode>
      </node>
      <node id="21548">
        <label>lbann/layers/io/target/generic_target_layer.hpp</label>
        <link refid="generic__target__layer_8hpp"/>
        <childnode refid="21549" relation="include">
        </childnode>
        <childnode refid="21551" relation="include">
        </childnode>
        <childnode refid="21553" relation="include">
        </childnode>
        <childnode refid="21554" relation="include">
        </childnode>
        <childnode refid="21517" relation="include">
        </childnode>
        <childnode refid="21498" relation="include">
        </childnode>
        <childnode refid="21514" relation="include">
        </childnode>
        <childnode refid="21534" relation="include">
        </childnode>
        <childnode refid="21533" relation="include">
        </childnode>
        <childnode refid="21546" relation="include">
        </childnode>
      </node>
      <node id="21559">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="21558" relation="include">
        </childnode>
      </node>
      <node id="21511">
        <label>typeindex</label>
      </node>
      <node id="21505">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="greedy__layerwise__autoencoder_8hpp" kindref="compound">lbann/models/greedy_layerwise_autoencoder.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reconstruction_8hpp" kindref="compound">lbann/layers/io/target/reconstruction.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="learning_8hpp" kindref="compound">lbann/layers/learning/learning.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="loss__function_8hpp" kindref="compound">lbann/objective_functions/loss_functions/loss_function.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classlbann_1_1greedy__layerwise__autoencoder_1a36dff325c3c756623b28cb056f91e058" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a36dff325c3c756623b28cb056f91e058" kindref="member">greedy_layerwise_autoencoder::greedy_layerwise_autoencoder</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mini_batch_size,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1objective__function" kindref="compound">objective_function</ref><sp/>*obj_fn,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref><sp/>*default_optimizer)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1sequential__model" kindref="compound">sequential_model</ref>(comm,<sp/>mini_batch_size,<sp/>obj_fn,<sp/>default_optimizer),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>m_phase(-1),<sp/>m_num_phases(0),<sp/>m_reconstruction(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classlbann_1_1greedy__layerwise__autoencoder_1adf8750be08e34891701a24678f703acd" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a36dff325c3c756623b28cb056f91e058" kindref="member">greedy_layerwise_autoencoder::greedy_layerwise_autoencoder</ref>(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder" kindref="compound">greedy_layerwise_autoencoder</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1sequential__model" kindref="compound">sequential_model</ref>(other),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref>(0),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a792010a00136ee1e024b6e5d38c77386" kindref="member">m_num_phases</ref>(other.<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a792010a00136ee1e024b6e5d38c77386" kindref="member">m_num_phases</ref>),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>(other.<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>(nullptr)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" kindref="member">set_phase</ref>(other.<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classlbann_1_1greedy__layerwise__autoencoder_1ac5e2de693353966b7816ca10282068f5" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1greedy__layerwise__autoencoder" kindref="compound">greedy_layerwise_autoencoder</ref>&amp;<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1ac5e2de693353966b7816ca10282068f5" kindref="member">greedy_layerwise_autoencoder::operator=</ref>(</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder" kindref="compound">greedy_layerwise_autoencoder</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1sequential__model_1a9714c99522b90488c486b390c5a7b6f3" kindref="member">sequential_model::operator=</ref>(other);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a792010a00136ee1e024b6e5d38c77386" kindref="member">m_num_phases</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a792010a00136ee1e024b6e5d38c77386" kindref="member">m_num_phases</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" kindref="member">set_phase</ref>(other.<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classlbann_1_1greedy__layerwise__autoencoder_1a74aa0b263d78b6a7a8ac32cde6e05c4c" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a74aa0b263d78b6a7a8ac32cde6e05c4c" kindref="member">greedy_layerwise_autoencoder::~greedy_layerwise_autoencoder</ref>()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classlbann_1_1greedy__layerwise__autoencoder_1a115607e435ae4685531a81852ce01fe7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a115607e435ae4685531a81852ce01fe7" kindref="member">greedy_layerwise_autoencoder::setup_layer_topology</ref>()<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1sequential__model_1a3801a58530388fb6a8cb3e1c018e827d" kindref="member">sequential_model::setup_layer_topology</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Divide<sp/>model<sp/>into<sp/>sections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>first<sp/>half<sp/>are<sp/>encoder<sp/>sections<sp/>and<sp/>second<sp/>half<sp/>are<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.size()<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dynamic_cast&lt;learning_layer*&gt;(<ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[i])<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>.push_back(i);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>.push_back(<ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_sections<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a792010a00136ee1e024b6e5d38c77386" kindref="member">m_num_phases</ref><sp/>=<sp/>(num_sections<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>section<sp/>input<sp/>and<sp/>output<sp/>dimensions<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a792010a00136ee1e024b6e5d38c77386" kindref="member">m_num_phases</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Beginning<sp/>and<sp/>end<sp/>of<sp/>encoder<sp/>and<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encoder_start<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[i];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encoder_end<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[i+1];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decoder_start<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[num_sections-i-1];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decoder_end<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[num_sections-i];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encoder<sp/>input<sp/>and<sp/>decoder<sp/>output<sp/>should<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>input_dims,<sp/>output_dims;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>input_dims<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[encoder_start]-&gt;get_prev_neuron_dims();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>output_dims<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[decoder_end-1]-&gt;get_neuron_dims();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_dims<sp/>!=<sp/>output_dims)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;input<sp/>dimensions<sp/>of<sp/>layer<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[encoder_start]-&gt;get_name()</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>input_dims[0];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>input_dims.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>input_dims[j];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>does<sp/>not<sp/>match<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;output<sp/>dimensions<sp/>of<sp/>layer<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[decoder_end-1]-&gt;get_name()</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>output_dims[0];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>output_dims.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>output_dims[j];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encoder<sp/>output<sp/>and<sp/>decoder<sp/>input<sp/>should<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>output_dims<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[encoder_end-1]-&gt;get_neuron_dims();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>input_dims<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[decoder_start]-&gt;get_prev_neuron_dims();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_dims<sp/>!=<sp/>output_dims)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;output<sp/>dimensions<sp/>of<sp/>layer<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[encoder_end-1]-&gt;get_name()</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>output_dims[0];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>output_dims.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>output_dims[j];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>does<sp/>not<sp/>match<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;input<sp/>dimensions<sp/>of<sp/>layer<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[decoder_start]-&gt;get_name()</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>input_dims[0];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>input_dims.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>input_dims[j];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a085f0b2debb82d9c4927a1c8b11dd353" kindref="member">greedy_layerwise_autoencoder::train</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_epochs)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a780395fa740102adda5537aa5d257698" kindref="member">do_train_begin_cbs</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Train<sp/>each<sp/>autoencoder<sp/>phase<sp/>on<sp/>several<sp/>epochs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phase<sp/>=<sp/>0;<sp/>phase<sp/>&lt;<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a792010a00136ee1e024b6e5d38c77386" kindref="member">m_num_phases</ref>;<sp/>++phase)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" kindref="member">set_phase</ref>(phase);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>epoch<sp/>=<sp/>0;<sp/>epoch<sp/>&lt;<sp/>num_epochs<sp/>/<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a792010a00136ee1e024b6e5d38c77386" kindref="member">m_num_phases</ref>;<sp/>++epoch)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a90363b6a20269cf7197701e49f1f52a3" kindref="member">get_terminate_training</ref>())<sp/>{<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>train_end;<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" kindref="member">reset_mode_and_model</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a6f975af3ff4921d78a9eb1aca12eaf5e" kindref="member">do_epoch_begin_cbs</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" kindref="member">train_mini_batch</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" kindref="member">evaluate</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" kindref="member">m_current_epoch</ref>++;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a93e43a6c5aaf8ad890ef50ff97dfa176" kindref="member">do_epoch_end_cbs</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" kindref="member">reset_epoch_statistics</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/>train_end:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" kindref="member">restore_sequential_model</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a13bb6edae42c719b78454a8af9549122" kindref="member">do_train_end_cbs</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" kindref="member">greedy_layerwise_autoencoder::set_phase</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phase)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>sequential<sp/>model<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" kindref="member">restore_sequential_model</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref><sp/>=<sp/>phase;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>encoder<sp/>and<sp/>decoder<sp/>being<sp/>trained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_sections<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encoder_start<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[phase];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encoder_end<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[phase+1];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decoder_start<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[num_sections-phase-1];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decoder_end<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[num_sections-phase];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>encoder_parents<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[encoder_start]-&gt;get_parent_layers();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>encoder_children<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[encoder_end-1]-&gt;get_child_layers();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>decoder_parents<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[decoder_start]-&gt;get_parent_layers();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>decoder_children<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[decoder_end-1]-&gt;get_child_layers();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>reconstruction<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/>original_layer<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[encoder_start-1];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(encoder_parents[0]-&gt;get_data_layout())<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0" kindref="member">data_layout::MODEL_PARALLEL</ref>:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1reconstruction__layer" kindref="compound">reconstruction_layer&lt;data_layout::MODEL_PARALLEL&gt;</ref>(<ref refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" kindref="member">m_comm</ref>,<sp/>original_layer);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1reconstruction__layer" kindref="compound">reconstruction_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>(<ref refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" kindref="member">m_comm</ref>,<sp/>original_layer);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>data<sp/>layout<sp/>for<sp/>reconstruction<sp/>layer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>-&gt;<ref refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" kindref="member">set_name</ref>(</highlight><highlight class="stringliteral">&quot;reconstruction_phase&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(phase));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>layer<sp/>pointers<sp/>to<sp/>train<sp/>encoder<sp/>and<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>encoder_children[0]<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[decoder_start];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>decoder_parents[0]<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[encoder_end-1];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>decoder_children[0]<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>-&gt;<ref refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" kindref="member">add_parent_layer</ref>(<ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[decoder_end-1]);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>objective<sp/>function<sp/>to<sp/>reconstruction<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>term<sp/>:<sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a510544e9e511be54a50efd39226de345" kindref="member">get_terms</ref>())<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>loss<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1loss__function" kindref="compound">loss_function</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(term);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loss<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>loss-&gt;<ref refid="classlbann_1_1loss__function_1a9ef5356468c892c2c0221f8acd6b5471" kindref="member">set_target_layer</ref>((<ref refid="classlbann_1_1generic__target__layer" kindref="compound">generic_target_layer</ref>*)<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" kindref="member">greedy_layerwise_autoencoder::restore_sequential_model</ref>()<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>if<sp/>model<sp/>is<sp/>already<sp/>sequential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>sequential<sp/>layer<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_section<sp/>:<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/>prev_layer<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[m_section-1];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/>next_layer<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[m_section];</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>prev_layer_children<sp/>=<sp/>prev_layer-&gt;<ref refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" kindref="member">get_child_layers</ref>();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>next_layer_parents<sp/>=<sp/>next_layer-&gt;<ref refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" kindref="member">get_parent_layers</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_layer_children[0]<sp/>=<sp/>next_layer;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>next_layer_parents[0]<sp/>=<sp/>prev_layer;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>reconstruction<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>objective<sp/>function<sp/>to<sp/>target<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>term<sp/>:<sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a510544e9e511be54a50efd39226de345" kindref="member">get_terms</ref>())<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>loss<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1loss__function" kindref="compound">loss_function</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(term);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loss<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>loss-&gt;<ref refid="classlbann_1_1loss__function_1a9ef5356468c892c2c0221f8acd6b5471" kindref="member">set_target_layer</ref>((<ref refid="classlbann_1_1generic__target__layer" kindref="compound">generic_target_layer</ref>*)<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.back());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" kindref="member">greedy_layerwise_autoencoder::forward_prop</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>base<sp/>implementation<sp/>if<sp/>model<sp/>is<sp/>sequential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" kindref="member">sequential_model::forward_prop</ref>(mode);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1af3c45642bbacf1bd07e8504d7e689ec0" kindref="member">do_model_forward_prop_begin_cbs</ref>(mode);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>encoder<sp/>and<sp/>decoder<sp/>to<sp/>train</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_sections<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encoder_start<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref>];</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encoder_end<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref>+1];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decoder_start<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[num_sections-<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref>-1];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decoder_end<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[num_sections-<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref>];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>prop<sp/>on<sp/>layers<sp/>that<sp/>are<sp/>already<sp/>trained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>encoder_start;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/>layer<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[i];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" kindref="member">do_layer_forward_prop_begin_cbs</ref>(mode,<sp/>layer);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" kindref="member">forward_prop</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" kindref="member">do_layer_forward_prop_end_cbs</ref>(mode,<sp/>layer);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>prop<sp/>on<sp/>encoder<sp/>being<sp/>trained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>encoder_start;<sp/>i<sp/>&lt;<sp/>encoder_end;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/>layer<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[i];</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" kindref="member">do_layer_forward_prop_begin_cbs</ref>(mode,<sp/>layer);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" kindref="member">forward_prop</ref>();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" kindref="member">do_layer_forward_prop_end_cbs</ref>(mode,<sp/>layer);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>prop<sp/>on<sp/>decoder<sp/>being<sp/>trained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>decoder_start;<sp/>i<sp/>&lt;<sp/>decoder_end;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/>layer<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[i];</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" kindref="member">do_layer_forward_prop_begin_cbs</ref>(mode,<sp/>layer);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" kindref="member">forward_prop</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" kindref="member">do_layer_forward_prop_end_cbs</ref>(mode,<sp/>layer);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>prop<sp/>on<sp/>reconstruction<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" kindref="member">do_layer_forward_prop_begin_cbs</ref>(mode,<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>-&gt;<ref refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" kindref="member">forward_prop</ref>();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" kindref="member">do_layer_forward_prop_end_cbs</ref>(mode,<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a9d67f4f3a027327d2db8767759f9c2bf" kindref="member">do_model_forward_prop_end_cbs</ref>(mode);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" kindref="member">greedy_layerwise_autoencoder::backward_prop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>base<sp/>implementation<sp/>if<sp/>model<sp/>is<sp/>sequential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" kindref="member">sequential_model::backward_prop</ref>();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a8a60eee343381e657b2c042637e56751" kindref="member">do_model_backward_prop_begin_cbs</ref>();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>encoder<sp/>and<sp/>decoder<sp/>to<sp/>train</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_sections<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encoder_start<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref>];</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encoder_end<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref>+1];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decoder_start<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[num_sections-<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref>-1];</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decoder_end<sp/>=<sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1aacb3dbf01c38f46a32927722420c5d41" kindref="member">m_sections</ref>[num_sections-<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a1baf1b5e7fdb5d006f443edbb0bb2973" kindref="member">m_phase</ref>];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Backward<sp/>prop<sp/>on<sp/>reconstruction<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a51dc59ea8dd4bc689854732269aaf001" kindref="member">do_layer_backward_prop_begin_cbs</ref>(<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>-&gt;<ref refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" kindref="member">back_prop</ref>();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1ab0939d2668cca7efc2cc52355d34df3b" kindref="member">do_layer_backward_prop_end_cbs</ref>(<ref refid="classlbann_1_1greedy__layerwise__autoencoder_1a8238d2e3e723543c8b6f7f5c61a9ca06" kindref="member">m_reconstruction</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Backward<sp/>prop<sp/>on<sp/>decoder<sp/>being<sp/>trained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>decoder_end;<sp/>i<sp/>&lt;<sp/>decoder_start;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/>layer<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[i];</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a51dc59ea8dd4bc689854732269aaf001" kindref="member">do_layer_backward_prop_begin_cbs</ref>(layer);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" kindref="member">back_prop</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1ab0939d2668cca7efc2cc52355d34df3b" kindref="member">do_layer_backward_prop_end_cbs</ref>(layer);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Backward<sp/>prop<sp/>on<sp/>encoder<sp/>being<sp/>trained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>encoder_end;<sp/>i<sp/>&gt;=<sp/>encoder_start;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/>layer<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[i];</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a51dc59ea8dd4bc689854732269aaf001" kindref="member">do_layer_backward_prop_begin_cbs</ref>(layer);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" kindref="member">back_prop</ref>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1ab0939d2668cca7efc2cc52355d34df3b" kindref="member">do_layer_backward_prop_end_cbs</ref>(layer);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a737a0129eadf52be476034888b3eedc2" kindref="member">do_model_backward_prop_end_cbs</ref>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/models/greedy_layerwise_autoencoder.cpp"/>
  </compounddef>
</doxygen>
