<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="optimizer_8cpp" kind="file" language="C++">
    <compoundname>optimizer.cpp</compoundname>
    <includes refid="optimizer_8hpp" local="yes">lbann/optimizers/optimizer.hpp</includes>
    <includes refid="cublas__wrapper_8hpp" local="yes">lbann/utils/cublas_wrapper.hpp</includes>
    <includes refid="timer_8hpp" local="yes">lbann/utils/timer.hpp</includes>
    <incdepgraph>
      <node id="22764">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="22742" relation="include">
        </childnode>
        <childnode refid="22743" relation="include">
        </childnode>
      </node>
      <node id="22743">
        <label>El.hpp</label>
      </node>
      <node id="22742">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="22743" relation="include">
        </childnode>
        <childnode refid="22744" relation="include">
        </childnode>
        <childnode refid="22745" relation="include">
        </childnode>
        <childnode refid="22750" relation="include">
        </childnode>
      </node>
      <node id="22758">
        <label>string</label>
      </node>
      <node id="22761">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="22752" relation="include">
        </childnode>
        <childnode refid="22742" relation="include">
        </childnode>
        <childnode refid="22751" relation="include">
        </childnode>
        <childnode refid="22755" relation="include">
        </childnode>
      </node>
      <node id="22768">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="22769" relation="include">
        </childnode>
      </node>
      <node id="22753">
        <label>map</label>
      </node>
      <node id="22767">
        <label>lbann/utils/cublas_wrapper.hpp</label>
        <link refid="cublas__wrapper_8hpp"/>
        <childnode refid="22742" relation="include">
        </childnode>
      </node>
      <node id="22766">
        <label>unordered_set</label>
      </node>
      <node id="22760">
        <label>exception</label>
      </node>
      <node id="22763">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="22742" relation="include">
        </childnode>
        <childnode refid="22751" relation="include">
        </childnode>
        <childnode refid="22755" relation="include">
        </childnode>
        <childnode refid="22761" relation="include">
        </childnode>
      </node>
      <node id="22747">
        <label>cstdio</label>
      </node>
      <node id="22756">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="22757" relation="include">
        </childnode>
        <childnode refid="22758" relation="include">
        </childnode>
      </node>
      <node id="22749">
        <label>cxxabi.h</label>
      </node>
      <node id="22755">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="22742" relation="include">
        </childnode>
        <childnode refid="22751" relation="include">
        </childnode>
        <childnode refid="22756" relation="include">
        </childnode>
        <childnode refid="22759" relation="include">
        </childnode>
        <childnode refid="22760" relation="include">
        </childnode>
      </node>
      <node id="22752">
        <label>vector</label>
      </node>
      <node id="22751">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="22752" relation="include">
        </childnode>
        <childnode refid="22753" relation="include">
        </childnode>
        <childnode refid="22754" relation="include">
        </childnode>
        <childnode refid="22742" relation="include">
        </childnode>
      </node>
      <node id="22765">
        <label>lbann.pb.h</label>
      </node>
      <node id="22739">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/optimizers/optimizer.cpp</label>
        <link refid="optimizer_8cpp"/>
        <childnode refid="22740" relation="include">
        </childnode>
        <childnode refid="22767" relation="include">
        </childnode>
        <childnode refid="22768" relation="include">
        </childnode>
      </node>
      <node id="22746">
        <label>cstdlib</label>
      </node>
      <node id="22759">
        <label>iostream</label>
      </node>
      <node id="22740">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="22741" relation="include">
        </childnode>
        <childnode refid="22742" relation="include">
        </childnode>
        <childnode refid="22751" relation="include">
        </childnode>
        <childnode refid="22755" relation="include">
        </childnode>
        <childnode refid="22761" relation="include">
        </childnode>
        <childnode refid="22762" relation="include">
        </childnode>
        <childnode refid="22758" relation="include">
        </childnode>
        <childnode refid="22766" relation="include">
        </childnode>
      </node>
      <node id="22769">
        <label>chrono</label>
      </node>
      <node id="22757">
        <label>csignal</label>
      </node>
      <node id="22762">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="22758" relation="include">
        </childnode>
        <childnode refid="22742" relation="include">
        </childnode>
        <childnode refid="22751" relation="include">
        </childnode>
        <childnode refid="22755" relation="include">
        </childnode>
        <childnode refid="22761" relation="include">
        </childnode>
        <childnode refid="22763" relation="include">
        </childnode>
        <childnode refid="22764" relation="include">
        </childnode>
        <childnode refid="22765" relation="include">
        </childnode>
      </node>
      <node id="22750">
        <label>lbann_config.hpp</label>
      </node>
      <node id="22741">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="22745">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="22746" relation="include">
        </childnode>
        <childnode refid="22747" relation="include">
        </childnode>
        <childnode refid="22748" relation="include">
        </childnode>
        <childnode refid="22749" relation="include">
        </childnode>
      </node>
      <node id="22744">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="22743" relation="include">
        </childnode>
      </node>
      <node id="22754">
        <label>typeindex</label>
      </node>
      <node id="22748">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="optimizer_8hpp" kindref="compound">lbann/optimizers/optimizer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cublas__wrapper_8hpp" kindref="compound">lbann/utils/cublas_wrapper.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8hpp" kindref="compound">lbann/utils/timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classlbann_1_1optimizer_1a136ed79c3f279ecded5be380fb67b05f" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1optimizer_1a136ed79c3f279ecded5be380fb67b05f" kindref="member">optimizer::optimizer</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,<sp/>DataType<sp/>learning_rate)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>:<sp/>m_comm(comm),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cudnn(nullptr),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>m_weights(nullptr),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>m_learning_rate(learning_rate),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gradient(nullptr),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gradient_staging(nullptr),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gradient_allreduce_needed(false),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gradient_allreduce_started(false),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gradient_allreduce_finished(false)<sp/>{}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classlbann_1_1optimizer_1a300aa4928e2e4feeb5e99b9eb0a16632" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1optimizer_1a136ed79c3f279ecded5be380fb67b05f" kindref="member">optimizer::optimizer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1optimizer_1a8c2569a8fcf0ee969517067b81896c44" kindref="member">m_comm</ref>(other.<ref refid="classlbann_1_1optimizer_1a8c2569a8fcf0ee969517067b81896c44" kindref="member">m_comm</ref>),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>(other.<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>(other.<ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1ad393dcdcb82b44510c586ed5ec46d4dd" kindref="member">m_learning_rate</ref>(other.<ref refid="classlbann_1_1optimizer_1ad393dcdcb82b44510c586ed5ec46d4dd" kindref="member">m_learning_rate</ref>),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>(other.<ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gradient_d(other.m_gradient_d),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>(other.<ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gradient_staging_d(other.m_gradient_staging_d),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref>(other.<ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref>),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref>(other.<ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref>),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref>(other.<ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref>),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1afc424c715008fb4d900548f7934ea856" kindref="member">m_step_time</ref>(other.<ref refid="classlbann_1_1optimizer_1afc424c715008fb4d900548f7934ea856" kindref="member">m_step_time</ref>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref><sp/>=<sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref><sp/>=<sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classlbann_1_1optimizer_1ab7811e0a4d2d9b594140aed78b6de743" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref>&amp;<sp/><ref refid="classlbann_1_1optimizer_1ab7811e0a4d2d9b594140aed78b6de743" kindref="member">optimizer::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a8c2569a8fcf0ee969517067b81896c44" kindref="member">m_comm</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1optimizer_1a8c2569a8fcf0ee969517067b81896c44" kindref="member">m_comm</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1ad393dcdcb82b44510c586ed5ec46d4dd" kindref="member">m_learning_rate</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1optimizer_1ad393dcdcb82b44510c586ed5ec46d4dd" kindref="member">m_learning_rate</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1afc424c715008fb4d900548f7934ea856" kindref="member">m_step_time</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1optimizer_1afc424c715008fb4d900548f7934ea856" kindref="member">m_step_time</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copy<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>;<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref><sp/>=<sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref><sp/>=<sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>-&gt;Copy();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>GPU<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>m_gradient_d<sp/>=<sp/>other.m_gradient_d;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>m_gradient_staging_d<sp/>=<sp/>other.m_gradient_staging_d;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classlbann_1_1optimizer_1abbee0e2cb021f835b669d9ba0da5145a" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1optimizer_1abbee0e2cb021f835b669d9ba0da5145a" kindref="member">optimizer::~optimizer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>;<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>;<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classlbann_1_1optimizer_1a66bb8d28dfb41452ac1a75a3efd47723" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classlbann_1_1optimizer_1a66bb8d28dfb41452ac1a75a3efd47723" kindref="member">optimizer::get_description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1optimizer_1a7b7a6814e14eeee157e1cbb7f15dd4ff" kindref="member">get_type</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(optimizing<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;<ref refid="classlbann_1_1weights_1a272f80766f31a5add7a970e5e8fcc352" kindref="member">get_name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>learning_rate=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1optimizer_1ad393dcdcb82b44510c586ed5ec46d4dd" kindref="member">m_learning_rate</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classlbann_1_1optimizer_1a9c3fc3f1d45da822676d5932a1c7af82" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1weights" kindref="compound">weights</ref>&amp;<sp/><ref refid="classlbann_1_1optimizer_1a9c3fc3f1d45da822676d5932a1c7af82" kindref="member">optimizer::get_weights</ref>()<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1optimizer_1abccf0babf69e3d7c6e9a7fd0731c79b7" kindref="member">is_initialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>access<sp/>the<sp/>weights<sp/>being<sp/>optimized<sp/>before<sp/>they<sp/>are<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classlbann_1_1optimizer_1a12b7dbc72eb2de78d6ad798b8939f349" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/><ref refid="classlbann_1_1optimizer_1a12b7dbc72eb2de78d6ad798b8939f349" kindref="member">optimizer::get_gradient</ref>()<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>gradient<sp/>is<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1optimizer_1abccf0babf69e3d7c6e9a7fd0731c79b7" kindref="member">is_initialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>access<sp/>gradients<sp/>before<sp/>they<sp/>are<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>allreduce<sp/>on<sp/>staging<sp/>matrix<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref><sp/>&amp;&amp;<sp/>!<ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a1fe495ccbd62d50735615818abecf454" kindref="member">start_gradient_staging_allreduce</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref><sp/>&amp;&amp;<sp/>!<ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a8c2569a8fcf0ee969517067b81896c44" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a30439f28cf615e1406090799c5499321" kindref="member">wait</ref>(<ref refid="classlbann_1_1optimizer_1a851681b39c34a3439a9838c07e84b87c" kindref="member">m_gradient_allreduce_req</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a435d31e3b7a0302e36439ee36f62dba8" kindref="member">add_to_gradient</ref>(*<ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a435d31e3b7a0302e36439ee36f62dba8" kindref="member">add_to_gradient</ref>(m_gradient_staging_d);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>CPU<sp/>gradient<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;copy_from_gpu(0,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>-&gt;Matrix(),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gradient_d.get_locked_data(0),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gradient_d.get_leading_dim());</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;synchronize();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref>&amp;<sp/>optimizer::get_gradient_gpu()<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>gradient<sp/>is<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1optimizer_1abccf0babf69e3d7c6e9a7fd0731c79b7" kindref="member">is_initialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>access<sp/>gradients<sp/>before<sp/>they<sp/>are<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>get<sp/>GPU<sp/>gradient,<sp/>but<sp/>GPU<sp/>is<sp/>not<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>all<sp/>gradient<sp/>sources<sp/>have<sp/>made<sp/>contributions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1aadfa322a683c2b826d0fae5f809298df" kindref="member">m_gradient_sources</ref>.erase(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1optimizer_1aadfa322a683c2b826d0fae5f809298df" kindref="member">m_gradient_sources</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>access<sp/>gradient<sp/>before<sp/>all<sp/>gradient<sp/>sources<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;have<sp/>made<sp/>contributions<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(missing<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1optimizer_1aadfa322a683c2b826d0fae5f809298df" kindref="member">m_gradient_sources</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>sources)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(err.str());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>allreduce<sp/>on<sp/>staging<sp/>matrix<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref><sp/>&amp;&amp;<sp/>!<ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a1fe495ccbd62d50735615818abecf454" kindref="member">start_gradient_staging_allreduce</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref><sp/>&amp;&amp;<sp/>!<ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a8c2569a8fcf0ee969517067b81896c44" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a30439f28cf615e1406090799c5499321" kindref="member">wait</ref>(<ref refid="classlbann_1_1optimizer_1a851681b39c34a3439a9838c07e84b87c" kindref="member">m_gradient_allreduce_req</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a435d31e3b7a0302e36439ee36f62dba8" kindref="member">add_to_gradient</ref>(m_gradient_staging_d);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>gradient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_gradient_d;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classlbann_1_1optimizer_1a1fe495ccbd62d50735615818abecf454" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1a1fe495ccbd62d50735615818abecf454" kindref="member">optimizer::start_gradient_staging_allreduce</ref>()<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref><sp/>||<sp/><ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref>)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a8c2569a8fcf0ee969517067b81896c44" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a2a7bb6cf3707366fc0671d8894ca30ea" kindref="member">nb_allreduce</ref>(*<ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>-&gt;RedundantComm(),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a851681b39c34a3439a9838c07e84b87c" kindref="member">m_gradient_allreduce_req</ref>,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::SUM,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_index(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="classlbann_1_1Al_1_1dummy__backend" kindref="compound">Al::mpi_backend</ref>)));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;cuDNN<sp/>not<sp/>detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(LBANN_HAS_ALUMINUM)<sp/>&amp;&amp;<sp/>defined(LBANN_HAS_NCCL2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-blocking<sp/>GPU<sp/>allreduce<sp/>with<sp/>NCCL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>We<sp/>assume<sp/>each<sp/>process<sp/>has<sp/>one<sp/>GPU<sp/>and<sp/>that<sp/>the<sp/>gradient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>in<sp/>STAR,STAR<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;get_num_gpus()<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;non-blocking<sp/>GPU<sp/>allreduce<sp/>with<sp/>NCCL<sp/>assumes<sp/>one<sp/>GPU<sp/>per<sp/>process&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1aba08580d21767b53d0737e115d738dbe" kindref="member">StarMat</ref><sp/>gradient_staging_d;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>gradient_staging_d.Attach(m_gradient_staging_d.get_height(),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gradient_staging_d.get_width_per_gpu(),</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>-&gt;Grid(),</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>-&gt;ColAlign(),</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>-&gt;RowAlign(),</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gradient_staging_d.get_data(0),</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gradient_staging_d.get_leading_dim(),</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>-&gt;Root());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;synchronize();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a8c2569a8fcf0ee969517067b81896c44" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a2a7bb6cf3707366fc0671d8894ca30ea" kindref="member">nb_allreduce</ref>(gradient_staging_d,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_staging_d.RedundantComm(),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a851681b39c34a3439a9838c07e84b87c" kindref="member">m_gradient_allreduce_req</ref>,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::mpi::SUM,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_index(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="classlbann_1_1Al_1_1dummy__backend" kindref="compound">Al::nccl_backend</ref>)));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Naive<sp/>GPU<sp/>allreduce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;global_allreduce_on_gpus(m_gradient_staging_d.get_data(),</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gradient_staging_d.get_height(),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gradient_staging_d.get_width_per_gpu(),</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>-&gt;RedundantComm());</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/>//<sp/>defined(LBANN_HAS_ALUMINUM)<sp/>&amp;&amp;<sp/>defined(LBANN_HAS_NCCL2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="classlbann_1_1optimizer_1a3f41360479fbd46c704342bb4ef36d09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1a3f41360479fbd46c704342bb4ef36d09" kindref="member">optimizer::clear_gradient</ref>()<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>El::Zero(*<ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gradient_d.zero();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>gradient<sp/>allreduce<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a4d332551d05e245ad3f862653b5af65a" kindref="member">m_gradient_allreduce_finished</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="classlbann_1_1optimizer_1a435d31e3b7a0302e36439ee36f62dba8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1a435d31e3b7a0302e36439ee36f62dba8" kindref="member">optimizer::add_to_gradient</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>gradient,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>scale)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1optimizer_1abccf0babf69e3d7c6e9a7fd0731c79b7" kindref="member">is_initialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>access<sp/>gradients<sp/>before<sp/>they<sp/>are<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>!=<sp/>DataType(0))<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>El::Axpy(scale,<sp/>gradient,<sp/>*<ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;cuDNN<sp/>not<sp/>detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref><sp/>gradient_d(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gradient_d.attach_to_work_spaces(gradient.LocalHeight(),</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient.LocalWidth());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;broadcast_to_gpus(gradient_d.get_data(),</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient.LockedMatrix());</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a435d31e3b7a0302e36439ee36f62dba8" kindref="member">add_to_gradient</ref>(gradient_d,<sp/>scale);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1a435d31e3b7a0302e36439ee36f62dba8" kindref="member">optimizer::add_to_gradient</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref>&amp;<sp/>gradient_d,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>scale)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1optimizer_1abccf0babf69e3d7c6e9a7fd0731c79b7" kindref="member">is_initialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>access<sp/>gradients<sp/>before<sp/>they<sp/>are<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>add<sp/>to<sp/>GPU<sp/>gradient,<sp/>but<sp/>GPU<sp/>is<sp/>not<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>!=<sp/>DataType(0))<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;get_num_gpus();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDA(cudaSetDevice(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;get_gpu(i)));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cublas::axpy(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;get_cublas_handle(i),</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;<ref refid="classlbann_1_1weights_1a3216926df0aaf7aa440b9e5317d05fa2" kindref="member">get_size</ref>(),</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale,<sp/>gradient_d.get_locked_data(i),<sp/>1,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gradient_d.get_data(i),<sp/>1);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="classlbann_1_1optimizer_1ac23ebde61a225f70c27ab937df5755ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1ac23ebde61a225f70c27ab937df5755ed" kindref="member">optimizer::add_to_gradient_staging</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>gradient,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>scale)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1optimizer_1abccf0babf69e3d7c6e9a7fd0731c79b7" kindref="member">is_initialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>access<sp/>gradients<sp/>before<sp/>they<sp/>are<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref>)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>add<sp/>to<sp/>staging<sp/>matrix<sp/>after<sp/>gradient<sp/>accumulation<sp/>has<sp/>started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>!=<sp/>DataType(0))<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>staging<sp/>matrix<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::Zero(*<ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;cuDNN<sp/>not<sp/>detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gradient_staging_d.zero();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>staging<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>El::Axpy(scale,<sp/>gradient,<sp/>*<ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;cuDNN<sp/>not<sp/>detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref><sp/>gradient_d(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient.LocalHeight(),</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient.LocalWidth());</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gradient_d.zero();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;copy_to_gpu(0,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_d.get_data(0),</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient.LockedMatrix(),</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_d.get_leading_dim());</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1ac23ebde61a225f70c27ab937df5755ed" kindref="member">add_to_gradient_staging</ref>(gradient_d,<sp/>scale);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1ac23ebde61a225f70c27ab937df5755ed" kindref="member">optimizer::add_to_gradient_staging</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref>&amp;<sp/>gradient_d,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>scale)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1optimizer_1abccf0babf69e3d7c6e9a7fd0731c79b7" kindref="member">is_initialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>access<sp/>gradients<sp/>before<sp/>they<sp/>are<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1ac77740a916f397600efae0c03bc5a045" kindref="member">m_gradient_allreduce_started</ref>)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>add<sp/>to<sp/>staging<sp/>matrix<sp/>after<sp/>gradient<sp/>accumulation<sp/>has<sp/>started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>add<sp/>to<sp/>GPU<sp/>gradient,<sp/>but<sp/>GPU<sp/>is<sp/>not<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>!=<sp/>DataType(0))<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>staging<sp/>matrix<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_gradient_staging_d.zero();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2dc18dcc3cf9510947304c3c5d059eb0" kindref="member">m_gradient_allreduce_needed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>staging<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;get_num_gpus();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_CUDA(cudaSetDevice(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;get_gpu(i)));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cublas::axpy(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;get_cublas_handle(i),</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;<ref refid="classlbann_1_1weights_1a3216926df0aaf7aa440b9e5317d05fa2" kindref="member">get_size</ref>(),</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale,<sp/>gradient_d.get_locked_data(i),<sp/>1,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gradient_staging_d.get_data(i),<sp/>1);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="classlbann_1_1optimizer_1ade46d28f7df19cab6c6ee90c03e976ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1ade46d28f7df19cab6c6ee90c03e976ea" kindref="member">optimizer::add_gradient_source</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>source)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1aadfa322a683c2b826d0fae5f809298df" kindref="member">m_gradient_sources</ref>.insert(source);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="classlbann_1_1optimizer_1a68ba7515d7eb4af38ff19607c13a111b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1a68ba7515d7eb4af38ff19607c13a111b" kindref="member">optimizer::remove_gradient_source</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>source)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1aadfa322a683c2b826d0fae5f809298df" kindref="member">m_gradient_sources</ref>.erase(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1aadfa322a683c2b826d0fae5f809298df" kindref="member">m_gradient_sources</ref>.erase(source);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1aadfa322a683c2b826d0fae5f809298df" kindref="member">m_gradient_sources</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a1fe495ccbd62d50735615818abecf454" kindref="member">start_gradient_staging_allreduce</ref>();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="classlbann_1_1optimizer_1a7641a88b3c166df2d974a298622b992b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1a7641a88b3c166df2d974a298622b992b" kindref="member">optimizer::setup</ref>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref>&amp;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1abccf0babf69e3d7c6e9a7fd0731c79b7" kindref="member">is_initialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>setup<sp/>an<sp/>optimizer<sp/>that<sp/>is<sp/>already<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1afc00daf2acb6af7e29786524126660c2" kindref="member">set_weights</ref>(w);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/><ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;<ref refid="classlbann_1_1weights_1ad36676b9b43bced1cc7e332e3745411f" kindref="member">get_matrix_height</ref>();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/><ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;<ref refid="classlbann_1_1weights_1abc3cf3a5b992302b1eaaea1fdf3b377d" kindref="member">get_matrix_width</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>values<sp/>=<sp/><ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;<ref refid="classlbann_1_1weights_1a09fa4082be905c0c124dde3033e2461b" kindref="member">get_values</ref>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref><sp/>=<sp/>values.Construct(values.Grid(),<sp/>values.Root());</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref><sp/>=<sp/>values.Construct(values.Grid(),<sp/>values.Root());</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>-&gt;Resize(height,<sp/>width);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a92cd058d4f9fc8162d36d52461a96df2" kindref="member">m_gradient_staging</ref>-&gt;Resize(height,<sp/>width);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>=<sp/><ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;<ref refid="classlbann_1_1weights_1a873e8c14998915e442d03b8dd7d2fdf7" kindref="member">m_cudnn</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gradient_d<sp/>=<sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>,<sp/>height,<sp/>width);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>m_gradient_staging_d<sp/>=<sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>,<sp/>height,<sp/>width);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>with<sp/>zero<sp/>gradient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a3f41360479fbd46c704342bb4ef36d09" kindref="member">clear_gradient</ref>();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="classlbann_1_1optimizer_1aa9f43ca3f22edc0a25d0509b6514a411" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1aa9f43ca3f22edc0a25d0509b6514a411" kindref="member">optimizer::step</ref>()<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1optimizer_1abccf0babf69e3d7c6e9a7fd0731c79b7" kindref="member">is_initialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;optimizer<sp/>must<sp/>be<sp/>set<sp/>up<sp/>before<sp/>performing<sp/>optimization<sp/>step&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step_start<sp/>=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>();</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>optimization<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref><sp/>values_d(<ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>values_d.attach(<ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;m_values_d,<sp/><ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;<ref refid="classlbann_1_1weights_1a3216926df0aaf7aa440b9e5317d05fa2" kindref="member">get_size</ref>());</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>gradient_d<sp/>=<sp/>get_gradient_gpu();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>step_compute_gpu(values_d,<sp/>gradient_d);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;<ref refid="classlbann_1_1weights_1a09fa4082be905c0c124dde3033e2461b" kindref="member">get_values</ref>();<sp/></highlight><highlight class="comment">//<sp/>Move<sp/>data<sp/>to<sp/>CPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>values<sp/>=<sp/>*<ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>gradient<sp/>=<sp/><ref refid="classlbann_1_1optimizer_1a12b7dbc72eb2de78d6ad798b8939f349" kindref="member">get_gradient</ref>();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a0db72c298a0bc3405fb0af97d104a036" kindref="member">step_compute</ref>(values,<sp/>gradient);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>gradients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a3f41360479fbd46c704342bb4ef36d09" kindref="member">clear_gradient</ref>();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1afc424c715008fb4d900548f7934ea856" kindref="member">m_step_time</ref><sp/>+=<sp/><ref refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" kindref="member">get_time</ref>()<sp/>-<sp/>step_start;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>optimizer::step_compute_gpu(<ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref>&amp;<sp/>values_d,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1cudnn_1_1matrix" kindref="compound">cudnn::matrix</ref>&amp;<sp/>gradient_d)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;copy_from_gpu(0,<sp/><ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;Matrix(),<sp/>values_d.get_locked_data(0));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;copy_from_gpu(0,<sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>-&gt;Matrix(),<sp/>gradient_d.get_locked_data(0));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;synchronize();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a0db72c298a0bc3405fb0af97d104a036" kindref="member">step_compute</ref>(*<ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>,<sp/>*<ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a2f24dbeaca18b06f4aa7d179bbf96680" kindref="member">m_cudnn</ref>-&gt;broadcast_to_gpus(values_d.get_data(),<sp/><ref refid="classlbann_1_1optimizer_1a33b57b578a089d9ffe6715bb3996907c" kindref="member">m_weights</ref>-&gt;<ref refid="classlbann_1_1weights_1a6b2df671b6d4c4dd595477971eea0543" kindref="member">m_values</ref>-&gt;LockedMatrix());</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_CUDNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Checkpointing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="classlbann_1_1optimizer_1afed10c6d8c5bd922f95075abeff711ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1afed10c6d8c5bd922f95075abeff711ce" kindref="member">optimizer::save_to_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p,<sp/>std::string<sp/>m_name)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>m_learning_rate;</highlight></codeline>
<codeline lineno="490"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>double<sp/>m_step_time<sp/>=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>p.<ref refid="classlbann_1_1persist_1a5edc3f9cc3540b50d417993da2a6b5ce" kindref="member">write_datatype</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;learning_rate&quot;</highlight><highlight class="normal">,<sp/><ref refid="classlbann_1_1optimizer_1ad393dcdcb82b44510c586ed5ec46d4dd" kindref="member">m_learning_rate</ref>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="classlbann_1_1optimizer_1a42a52aab9a682fda57c1e639968a44b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1optimizer_1a42a52aab9a682fda57c1e639968a44b9" kindref="member">optimizer::load_from_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p,<sp/>std::string<sp/>m_name)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>p.<ref refid="classlbann_1_1persist_1a1e84eff891affad6001f3c5fa803cae2" kindref="member">read_datatype</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;learning_rate&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classlbann_1_1optimizer_1ad393dcdcb82b44510c586ed5ec46d4dd" kindref="member">m_learning_rate</ref>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>MPI_Bcast(&amp;<ref refid="classlbann_1_1optimizer_1ad393dcdcb82b44510c586ed5ec46d4dd" kindref="member">m_learning_rate</ref>,<sp/>1,<sp/>MPI_FLOAT,<sp/>0,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/optimizers/optimizer.cpp"/>
  </compounddef>
</doxygen>
