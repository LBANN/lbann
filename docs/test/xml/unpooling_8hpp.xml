<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="unpooling_8hpp" kind="file" language="C++">
    <compoundname>unpooling.hpp</compoundname>
    <includes local="no">vector</includes>
    <includes refid="pooling_8hpp" local="yes">lbann/layers/transform/pooling.hpp</includes>
    <includes refid="cudnn__wrapper_8hpp" local="yes">lbann/utils/cudnn_wrapper.hpp</includes>
    <includes refid="exception_8hpp" local="yes">lbann/utils/exception.hpp</includes>
    <includes refid="im2col_8hpp" local="yes">lbann/utils/im2col.hpp</includes>
    <includedby refid="lbann_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</includedby>
    <incdepgraph>
      <node id="9731">
        <label>lbann/layers/transform/pooling.hpp</label>
        <link refid="pooling_8hpp"/>
        <childnode refid="9732" relation="include">
        </childnode>
        <childnode refid="9730" relation="include">
        </childnode>
        <childnode refid="9733" relation="include">
        </childnode>
        <childnode refid="9756" relation="include">
        </childnode>
        <childnode refid="9751" relation="include">
        </childnode>
        <childnode refid="9764" relation="include">
        </childnode>
      </node>
      <node id="9747">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="9748" relation="include">
        </childnode>
        <childnode refid="9730" relation="include">
        </childnode>
        <childnode refid="9735" relation="include">
        </childnode>
        <childnode refid="9744" relation="include">
        </childnode>
      </node>
      <node id="9759">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="9735" relation="include">
        </childnode>
        <childnode refid="9736" relation="include">
        </childnode>
      </node>
      <node id="9736">
        <label>El.hpp</label>
      </node>
      <node id="9735">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="9736" relation="include">
        </childnode>
        <childnode refid="9737" relation="include">
        </childnode>
        <childnode refid="9738" relation="include">
        </childnode>
        <childnode refid="9743" relation="include">
        </childnode>
      </node>
      <node id="9748">
        <label>string</label>
      </node>
      <node id="9756">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="9730" relation="include">
        </childnode>
        <childnode refid="9735" relation="include">
        </childnode>
        <childnode refid="9744" relation="include">
        </childnode>
        <childnode refid="9751" relation="include">
        </childnode>
      </node>
      <node id="9762">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="9763" relation="include">
        </childnode>
      </node>
      <node id="9745">
        <label>map</label>
      </node>
      <node id="9761">
        <label>unordered_set</label>
      </node>
      <node id="9755">
        <label>exception</label>
      </node>
      <node id="9764">
        <label>lbann/utils/im2col.hpp</label>
        <link refid="im2col_8hpp"/>
        <childnode refid="9735" relation="include">
        </childnode>
      </node>
      <node id="9733">
        <label>lbann/layers/transform/transform.hpp</label>
        <link refid="transform_8hpp"/>
        <childnode refid="9734" relation="include">
        </childnode>
      </node>
      <node id="9758">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="9735" relation="include">
        </childnode>
        <childnode refid="9744" relation="include">
        </childnode>
        <childnode refid="9751" relation="include">
        </childnode>
        <childnode refid="9756" relation="include">
        </childnode>
      </node>
      <node id="9740">
        <label>cstdio</label>
      </node>
      <node id="9752">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="9753" relation="include">
        </childnode>
        <childnode refid="9748" relation="include">
        </childnode>
      </node>
      <node id="9742">
        <label>cxxabi.h</label>
      </node>
      <node id="9751">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="9735" relation="include">
        </childnode>
        <childnode refid="9744" relation="include">
        </childnode>
        <childnode refid="9752" relation="include">
        </childnode>
        <childnode refid="9754" relation="include">
        </childnode>
        <childnode refid="9755" relation="include">
        </childnode>
      </node>
      <node id="9730">
        <label>vector</label>
      </node>
      <node id="9744">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="9730" relation="include">
        </childnode>
        <childnode refid="9745" relation="include">
        </childnode>
        <childnode refid="9746" relation="include">
        </childnode>
        <childnode refid="9735" relation="include">
        </childnode>
      </node>
      <node id="9732">
        <label>utility</label>
      </node>
      <node id="9760">
        <label>lbann.pb.h</label>
      </node>
      <node id="9739">
        <label>cstdlib</label>
      </node>
      <node id="9754">
        <label>iostream</label>
      </node>
      <node id="9749">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="9750" relation="include">
        </childnode>
        <childnode refid="9735" relation="include">
        </childnode>
        <childnode refid="9744" relation="include">
        </childnode>
        <childnode refid="9751" relation="include">
        </childnode>
        <childnode refid="9756" relation="include">
        </childnode>
        <childnode refid="9757" relation="include">
        </childnode>
        <childnode refid="9748" relation="include">
        </childnode>
        <childnode refid="9761" relation="include">
        </childnode>
      </node>
      <node id="9729">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/transform/unpooling.hpp</label>
        <link refid="unpooling_8hpp"/>
        <childnode refid="9730" relation="include">
        </childnode>
        <childnode refid="9731" relation="include">
        </childnode>
        <childnode refid="9756" relation="include">
        </childnode>
        <childnode refid="9751" relation="include">
        </childnode>
        <childnode refid="9764" relation="include">
        </childnode>
      </node>
      <node id="9734">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="9735" relation="include">
        </childnode>
        <childnode refid="9744" relation="include">
        </childnode>
        <childnode refid="9747" relation="include">
        </childnode>
        <childnode refid="9749" relation="include">
        </childnode>
        <childnode refid="9751" relation="include">
        </childnode>
        <childnode refid="9756" relation="include">
        </childnode>
        <childnode refid="9762" relation="include">
        </childnode>
        <childnode refid="9759" relation="include">
        </childnode>
        <childnode refid="9760" relation="include">
        </childnode>
        <childnode refid="9748" relation="include">
        </childnode>
        <childnode refid="9730" relation="include">
        </childnode>
      </node>
      <node id="9763">
        <label>chrono</label>
      </node>
      <node id="9753">
        <label>csignal</label>
      </node>
      <node id="9757">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="9748" relation="include">
        </childnode>
        <childnode refid="9735" relation="include">
        </childnode>
        <childnode refid="9744" relation="include">
        </childnode>
        <childnode refid="9751" relation="include">
        </childnode>
        <childnode refid="9756" relation="include">
        </childnode>
        <childnode refid="9758" relation="include">
        </childnode>
        <childnode refid="9759" relation="include">
        </childnode>
        <childnode refid="9760" relation="include">
        </childnode>
      </node>
      <node id="9743">
        <label>lbann_config.hpp</label>
      </node>
      <node id="9750">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="9738">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="9739" relation="include">
        </childnode>
        <childnode refid="9740" relation="include">
        </childnode>
        <childnode refid="9741" relation="include">
        </childnode>
        <childnode refid="9742" relation="include">
        </childnode>
      </node>
      <node id="9737">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="9736" relation="include">
        </childnode>
      </node>
      <node id="9746">
        <label>typeindex</label>
      </node>
      <node id="9741">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9772">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="9773" relation="include">
        </childnode>
        <childnode refid="9774" relation="include">
        </childnode>
        <childnode refid="9775" relation="include">
        </childnode>
        <childnode refid="9776" relation="include">
        </childnode>
        <childnode refid="9777" relation="include">
        </childnode>
        <childnode refid="9778" relation="include">
        </childnode>
        <childnode refid="9779" relation="include">
        </childnode>
        <childnode refid="9780" relation="include">
        </childnode>
        <childnode refid="9770" relation="include">
        </childnode>
      </node>
      <node id="9777">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/model_factory.cpp</label>
        <link refid="model__factory_8cpp"/>
      </node>
      <node id="9769">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="9770">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="9767" relation="include">
        </childnode>
        <childnode refid="9771" relation="include">
        </childnode>
        <childnode refid="9772" relation="include">
        </childnode>
        <childnode refid="9781" relation="include">
        </childnode>
      </node>
      <node id="9768">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="9769" relation="include">
        </childnode>
        <childnode refid="9766" relation="include">
        </childnode>
      </node>
      <node id="9774">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp</label>
        <link refid="layer__factory_8cpp"/>
      </node>
      <node id="9771">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/utils/protobuf_utils.cpp</label>
        <link refid="protobuf__utils_8cpp"/>
      </node>
      <node id="9782">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/init_image_data_readers.cpp</label>
        <link refid="init__image__data__readers_8cpp"/>
      </node>
      <node id="9778">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/objective_function_factory.cpp</label>
        <link refid="objective__function__factory_8cpp"/>
      </node>
      <node id="9767">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp</label>
        <link refid="proto__common_8cpp"/>
      </node>
      <node id="9776">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/metric_factory.cpp</label>
        <link refid="metric__factory_8cpp"/>
      </node>
      <node id="9766">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="9767" relation="include">
        </childnode>
        <childnode refid="9768" relation="include">
        </childnode>
        <childnode refid="9770" relation="include">
        </childnode>
        <childnode refid="9783" relation="include">
        </childnode>
      </node>
      <node id="9781">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/init_image_data_readers.hpp</label>
        <link refid="init__image__data__readers_8hpp"/>
        <childnode refid="9782" relation="include">
        </childnode>
        <childnode refid="9767" relation="include">
        </childnode>
      </node>
      <node id="9765">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/transform/unpooling.hpp</label>
        <link refid="unpooling_8hpp"/>
        <childnode refid="9766" relation="include">
        </childnode>
      </node>
      <node id="9779">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/optimizer_factory.cpp</label>
        <link refid="optimizer__factory_8cpp"/>
      </node>
      <node id="9780">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/weights_factory.cpp</label>
        <link refid="weights__factory_8cpp"/>
      </node>
      <node id="9773">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp</label>
        <link refid="callback__factory_8cpp"/>
      </node>
      <node id="9783">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/protobuf_utils.hpp</label>
        <link refid="protobuf__utils_8hpp"/>
        <childnode refid="9771" relation="include">
        </childnode>
      </node>
      <node id="9775">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_graph_factory.cpp</label>
        <link refid="layer__graph__factory_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlbann_1_1unpooling__layer" prot="public">lbann::unpooling_layer</innerclass>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LBANN_LAYER_UNPOOLING_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LBANN_LAYER_UNPOOLING_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pooling_8hpp" kindref="compound">lbann/layers/transform/pooling.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cudnn__wrapper_8hpp" kindref="compound">lbann/utils/cudnn_wrapper.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">lbann/utils/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="im2col_8hpp" kindref="compound">lbann/utils/im2col.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;data_layout<sp/>T_layout<sp/>=<sp/>data_layout::DATA_PARALLEL&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">unpooling_layer<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>transform_layer<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="44" refid="classlbann_1_1unpooling__layer_1ab15a8b0680685f80c7d995e617e97a9a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1pooling__layer" kindref="compound">pooling_layer&lt;T_layout&gt;</ref>*<sp/><ref refid="classlbann_1_1unpooling__layer_1ab15a8b0680685f80c7d995e617e97a9a" kindref="member">m_pooling_layer</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classlbann_1_1unpooling__layer_1a40055be5b45cb444581987395befc09a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1unpooling__layer_1a40055be5b45cb444581987395befc09a" kindref="member">unpooling_layer</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1pooling__layer" kindref="compound">pooling_layer&lt;T_layout&gt;</ref>*<sp/>pool<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classlbann_1_1transform__layer" kindref="compound">transform_layer</ref>(comm),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_pooling_layer(pool)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(T_layout<sp/>==<sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unpooling<sp/>only<sp/>supports<sp/>DATA_PARALLEL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classlbann_1_1unpooling__layer_1ad8458ddba48f92e2b7b8e3bacd5c801e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1unpooling__layer" kindref="compound">unpooling_layer</ref>*<sp/><ref refid="classlbann_1_1unpooling__layer_1ad8458ddba48f92e2b7b8e3bacd5c801e" kindref="member">copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1unpooling__layer_1a40055be5b45cb444581987395befc09a" kindref="member">unpooling_layer</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="57" refid="classlbann_1_1unpooling__layer_1a62d5cc8bb9c2c5fa7b4b82ee8de9d8e6" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlbann_1_1unpooling__layer_1a62d5cc8bb9c2c5fa7b4b82ee8de9d8e6" kindref="member">get_type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;unpooling&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="58" refid="classlbann_1_1unpooling__layer_1a453a34396ba52482508668d1658bf727" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08db" kindref="member">data_layout</ref><sp/><ref refid="classlbann_1_1unpooling__layer_1a453a34396ba52482508668d1658bf727" kindref="member">get_data_layout</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T_layout;<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classlbann_1_1unpooling__layer_1a32da9e26ce50aa3df3ecc52691bd5e4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1unpooling__layer_1a32da9e26ce50aa3df3ecc52691bd5e4f" kindref="member">setup_pointers</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>pooling<sp/>layer<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pooling_layer<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;unpooling_layer:<sp/>no<sp/>paired<sp/>pooling<sp/>layer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pooling_layer-&gt;<ref refid="classlbann_1_1pooling__layer_1a7b19407c88f89757e64ed3d4afab8443" kindref="member">m_pool_mode</ref><sp/>!=<sp/><ref refid="base_8hpp_1ac47a6ee5278a53898222a48639a2bf39a2ffe4e77325d9a7152f7086ea7aa5114" kindref="member">pool_mode::max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;unpooling_layer:<sp/>currently<sp/>only<sp/>max<sp/>unpooling<sp/>layer<sp/>is<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pooling_layer-&gt;<ref refid="classlbann_1_1Layer_1a6a75532bdaa2ca3879034f2a76085a06" kindref="member">using_gpus</ref>())<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;unpooling_layer:<sp/>GPU<sp/>version<sp/>not<sp/>yet<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classlbann_1_1unpooling__layer_1a7fe47a0c90958329efb79aee49d6247f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1unpooling__layer_1a7fe47a0c90958329efb79aee49d6247f" kindref="member">setup_dims</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>previous<sp/>neuron<sp/>tensor<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" kindref="member">transform_layer::setup_dims</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>previous<sp/>neuron<sp/>tensor<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" kindref="member">m_num_prev_neurons</ref><sp/>!=<sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" kindref="member">m_num_neurons</ref></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>this-&gt;m_num_prev_neuron_dims<sp/>!=<sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" kindref="member">m_num_neuron_dims</ref></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>this-&gt;m_prev_neuron_dims<sp/>!=<sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" kindref="member">m_neuron_dims</ref>)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;unpooling_layer:<sp/>previous<sp/>neuron<sp/>tensor<sp/>must<sp/>match<sp/>neuron<sp/>tensor<sp/>of<sp/>corresponding<sp/>pooling<sp/>layer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>neuron<sp/>tensor<sp/>based<sp/>on<sp/>corresponding<sp/>pooling<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" kindref="member">m_num_neurons</ref><sp/>=<sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" kindref="member">m_num_prev_neurons</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" kindref="member">m_num_neuron_dims</ref><sp/>=<sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1Layer_1adc052afb38f170e839db00d3c8151d1e" kindref="member">m_num_prev_neuron_dims</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" kindref="member">m_neuron_dims</ref><sp/>=<sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" kindref="member">m_prev_neuron_dims</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classlbann_1_1unpooling__layer_1a5269d1939056430c0d8033629a770b38" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1unpooling__layer_1a5269d1939056430c0d8033629a770b38" kindref="member">set_pooling_layer</ref>(<ref refid="classlbann_1_1pooling__layer" kindref="compound">pooling_layer&lt;T_layout&gt;</ref>*<sp/>pool)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pooling_layer<sp/>=<sp/>pool;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classlbann_1_1unpooling__layer_1a33e17164da27e3370fb3f362dd2e6c13" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Layer*&gt;<sp/><ref refid="classlbann_1_1unpooling__layer_1a33e17164da27e3370fb3f362dd2e6c13" kindref="member">get_layer_pointers</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Layer*&gt;<sp/>layers<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a9f94210cbb973f1df89ef649899094a1" kindref="member">transform_layer::get_layer_pointers</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>layers.push_back((<ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*)<sp/>m_pooling_layer);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>layers;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classlbann_1_1unpooling__layer_1aacc3a2fdd75ecee8614a00a85697a763" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1unpooling__layer_1aacc3a2fdd75ecee8614a00a85697a763" kindref="member">set_layer_pointers</ref>(std::vector&lt;Layer*&gt;<sp/>layers)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pooling_layer<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1pooling__layer" kindref="compound">pooling_layer&lt;T_layout&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(layers.back());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pooling_layer<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>unpooling_layer:<sp/>invalid<sp/>layer<sp/>pointer<sp/>used<sp/>to<sp/>set<sp/>paired<sp/>pooling<sp/>layer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>layers.pop_back();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer_1a001ea76cdd05e2d0d475f408f24702ee" kindref="member">transform_layer::set_layer_pointers</ref>(layers);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classlbann_1_1unpooling__layer_1aad98d442d6f5ad1feb5f1d71bdb1df49" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1unpooling__layer_1aad98d442d6f5ad1feb5f1d71bdb1df49" kindref="member">fp_compute</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" kindref="member">m_using_gpus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;unpooling_layer:<sp/>GPU<sp/>version<sp/>not<sp/>yet<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1unpooling__layer_1ab4a0b7cc4711426434983c41cd7dbc63" kindref="member">fp_compute_im2col</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classlbann_1_1unpooling__layer_1ad585e8ddaa34c221fa8e4d108c8950ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1unpooling__layer_1ad585e8ddaa34c221fa8e4d108c8950ae" kindref="member">bp_compute</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" kindref="member">m_using_gpus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;unpooling_layer:<sp/>GPU<sp/>version<sp/>not<sp/>yet<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1unpooling__layer_1ad4607102ff59de2f233a87f13967cc04" kindref="member">bp_compute_im2col</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classlbann_1_1unpooling__layer_1ab4a0b7cc4711426434983c41cd7dbc63" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1unpooling__layer_1ab4a0b7cc4711426434983c41cd7dbc63" kindref="member">fp_compute_im2col</ref>()<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>local<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>prev_activations_local<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a35397843bb0c84030000c7d872229acb" kindref="member">get_local_prev_activations</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>activations_local<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a4248f27acebf72b7b7b3ee39c8bcb62a" kindref="member">get_local_activations</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_width<sp/>=<sp/>prev_activations_local.Width();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_channels<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" kindref="member">m_prev_neuron_dims</ref>[0];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_per_input_channel<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" kindref="member">m_num_prev_neurons</ref><sp/>/<sp/>num_channels;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pool_size<sp/>=<sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1pooling__layer_1a8b3a9020bb896a1132c9823bc2c73515" kindref="member">m_pool_size</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>im2col<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref><sp/>im2col_mat(pool_size<sp/>*<sp/>num_channels,<sp/>num_per_input_channel);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>data<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample<sp/>=<sp/>0;<sp/>sample<sp/>&lt;<sp/>local_width;<sp/>++sample)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>im2col<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>El::Zero(im2col_mat);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Populate<sp/>im2col<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>*prev_activations_buffer</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>prev_activations_local.LockedBuffer(0,<sp/>sample);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*indices_buffer</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;m_pooling_layer-&gt;<ref refid="classlbann_1_1pooling__layer_1a58683798db4c48175cbad5ec32ff676c" kindref="member">m_max_pool_indices</ref>[sample<sp/>*<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" kindref="member">m_num_prev_neurons</ref>];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel<sp/>=<sp/>0;<sp/>channel<sp/>&lt;<sp/>num_channels;<sp/>++channel)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>num_per_input_channel;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>input_index<sp/>=<sp/>j<sp/>+<sp/>channel<sp/>*<sp/>num_per_input_channel;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_index<sp/>=<sp/>indices_buffer[input_index];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>*im2col_buffer</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>im2col_mat.Buffer(channel<sp/>*<sp/>pool_size,<sp/>j);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im2col_buffer[max_index]</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>prev_activations_buffer[input_index];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>im2col<sp/>matrix<sp/>to<sp/>output<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref><sp/>output_mat<sp/>=<sp/>El::View(activations_local,<sp/>El::ALL,<sp/>El::IR(sample));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelbann_1a0e1225f72580ffb5166181392b68b651" kindref="member">col2im</ref>(im2col_mat,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_mat,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_channels,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" kindref="member">m_num_neuron_dims</ref><sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" kindref="member">m_neuron_dims</ref>.data()<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1pooling__layer_1a22fd39aa4358149110a369ddf0e5ffdb" kindref="member">m_pads</ref>.data(),</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1pooling__layer_1abb52fe974f602921823a46320fd7d075" kindref="member">m_pool_dims</ref>.data(),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1pooling__layer_1a754bb6d49b39e915f315ca0049c953d9" kindref="member">m_strides</ref>.data(),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">DataType&amp;(*)(</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">DataType&amp;,</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">DataType&amp;)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;std::max&lt;DataType&gt;));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="classlbann_1_1unpooling__layer_1ad4607102ff59de2f233a87f13967cc04" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1unpooling__layer_1ad4607102ff59de2f233a87f13967cc04" kindref="member">bp_compute_im2col</ref>()<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>local<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>prev_error_signal_local<sp/>=<sp/><ref refid="classlbann_1_1Layer_1a82827edc5e869960144f3ccb2172bfcd" kindref="member">get_local_prev_error_signals</ref>();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>error_signal_local<sp/>=<sp/><ref refid="classlbann_1_1Layer_1af178d00b9d878aa7d87754bff2a91f3a" kindref="member">get_local_error_signals</ref>();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_width<sp/>=<sp/>prev_error_signal_local.Width();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_channels<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" kindref="member">m_prev_neuron_dims</ref>[0];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_per_output_channel<sp/>=<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" kindref="member">m_num_prev_neurons</ref><sp/>/<sp/>num_channels;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pool_size<sp/>=<sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1pooling__layer_1a8b3a9020bb896a1132c9823bc2c73515" kindref="member">m_pool_size</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>im2col<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref><sp/>im2col_mat(pool_size<sp/>*<sp/>num_channels,<sp/>num_per_output_channel);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>data<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample<sp/>=<sp/>0;<sp/>sample<sp/>&lt;<sp/>local_width;<sp/>++sample)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>im2col<sp/>matrix<sp/>from<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref><sp/>input_mat<sp/>=<sp/>El::LockedView(prev_error_signal_local,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>El::ALL,<sp/>El::IR(sample));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelbann_1aa3636a1979e40da2af91f30a12b90db9" kindref="member">im2col</ref>(input_mat,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im2col_mat,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_channels,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" kindref="member">m_num_neuron_dims</ref><sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" kindref="member">m_neuron_dims</ref>.data()<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1pooling__layer_1a22fd39aa4358149110a369ddf0e5ffdb" kindref="member">m_pads</ref>.data(),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1pooling__layer_1abb52fe974f602921823a46320fd7d075" kindref="member">m_pool_dims</ref>.data(),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pooling_layer-&gt;<ref refid="classlbann_1_1pooling__layer_1a754bb6d49b39e915f315ca0049c953d9" kindref="member">m_strides</ref>.data());</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Propagate<sp/>error<sp/>signal<sp/>based<sp/>on<sp/>pooling<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>*output_buffer<sp/>=<sp/>error_signal_local.Buffer(0,<sp/>sample);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*indices_buffer</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;m_pooling_layer-&gt;<ref refid="classlbann_1_1pooling__layer_1a58683798db4c48175cbad5ec32ff676c" kindref="member">m_max_pool_indices</ref>[sample<sp/>*<sp/>this-&gt;<ref refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" kindref="member">m_num_prev_neurons</ref>];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel<sp/>=<sp/>0;<sp/>channel<sp/>&lt;<sp/>num_channels;<sp/>++channel)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>num_per_output_channel;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_index<sp/>=<sp/>j<sp/>+<sp/>channel<sp/>*<sp/>num_per_output_channel;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_index<sp/>=<sp/>indices_buffer[output_index];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>*im2col_buffer</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>im2col_mat.Buffer(channel<sp/>*<sp/>pool_size,<sp/>j);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_buffer[output_index]<sp/>=<sp/>im2col_buffer[max_index];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>LBANN_LAYER_POOLING_HPP_INCLUDED</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/transform/unpooling.hpp"/>
  </compounddef>
</doxygen>
