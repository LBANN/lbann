<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cv__transform_8hpp" kind="file" language="C++">
    <compoundname>cv_transform.hpp</compoundname>
    <includes refid="opencv_8hpp" local="yes">opencv.hpp</includes>
    <includes refid="opencv__extensions_8hpp" local="yes">opencv_extensions.hpp</includes>
    <includedby refid="cv__transform_8cpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_transform.cpp</includedby>
    <includedby refid="cv__augmenter_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_augmenter.hpp</includedby>
    <includedby refid="cv__colorizer_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_colorizer.hpp</includedby>
    <includedby refid="cv__cropper_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_cropper.hpp</includedby>
    <includedby refid="cv__decolorizer_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_decolorizer.hpp</includedby>
    <includedby refid="cv__mean__extractor_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_mean_extractor.hpp</includedby>
    <includedby refid="cv__normalizer_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_normalizer.hpp</includedby>
    <includedby refid="cv__process_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_process.hpp</includedby>
    <includedby refid="cv__subtractor_8hpp" local="yes">/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_subtractor.hpp</includedby>
    <incdepgraph>
      <node id="3230">
        <label>opencv_extensions.hpp</label>
        <link refid="opencv__extensions_8hpp"/>
      </node>
      <node id="3228">
        <label>opencv.hpp</label>
        <link refid="opencv_8hpp"/>
        <childnode refid="3229" relation="include">
        </childnode>
      </node>
      <node id="3227">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_transform.hpp</label>
        <link refid="cv__transform_8hpp"/>
        <childnode refid="3228" relation="include">
        </childnode>
        <childnode refid="3230" relation="include">
        </childnode>
      </node>
      <node id="3229">
        <label>lbann_config.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3248">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="3249" relation="include">
        </childnode>
        <childnode refid="3250" relation="include">
        </childnode>
        <childnode refid="3251" relation="include">
        </childnode>
        <childnode refid="3252" relation="include">
        </childnode>
        <childnode refid="3253" relation="include">
        </childnode>
        <childnode refid="3254" relation="include">
        </childnode>
        <childnode refid="3255" relation="include">
        </childnode>
        <childnode refid="3256" relation="include">
        </childnode>
        <childnode refid="3246" relation="include">
        </childnode>
      </node>
      <node id="3241">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_store/data_store_imagenet_patches.cpp</label>
        <link refid="data__store__imagenet__patches_8cpp"/>
      </node>
      <node id="3235">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_process.hpp</label>
        <link refid="cv__process_8hpp"/>
        <childnode refid="3236" relation="include">
        </childnode>
        <childnode refid="3237" relation="include">
        </childnode>
        <childnode refid="3260" relation="include">
        </childnode>
        <childnode refid="3262" relation="include">
        </childnode>
        <childnode refid="3266" relation="include">
        </childnode>
        <childnode refid="3271" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3276" relation="include">
        </childnode>
      </node>
      <node id="3289">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_mean_extractor.hpp</label>
        <link refid="cv__mean__extractor_8hpp"/>
        <childnode refid="3290" relation="include">
        </childnode>
        <childnode refid="3235" relation="include">
        </childnode>
      </node>
      <node id="3278">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_store/data_store_triplet.cpp</label>
        <link refid="data__store__triplet_8cpp"/>
      </node>
      <node id="3277">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_triplet.cpp</label>
        <link refid="data__reader__triplet_8cpp"/>
      </node>
      <node id="3276">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_triplet.hpp</label>
        <link refid="data__reader__triplet_8hpp"/>
        <childnode refid="3277" relation="include">
        </childnode>
        <childnode refid="3278" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
      </node>
      <node id="3253">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/model_factory.cpp</label>
        <link refid="model__factory_8cpp"/>
      </node>
      <node id="3245">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="3246">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="3243" relation="include">
        </childnode>
        <childnode refid="3247" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
        <childnode refid="3257" relation="include">
        </childnode>
      </node>
      <node id="3234">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_augmenter.cpp</label>
        <link refid="cv__augmenter_8cpp"/>
      </node>
      <node id="3288">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_decolorizer.cpp</label>
        <link refid="cv__decolorizer_8cpp"/>
      </node>
      <node id="3292">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_normalizer.cpp</label>
        <link refid="cv__normalizer_8cpp"/>
      </node>
      <node id="3262">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_image.hpp</label>
        <link refid="data__reader__image_8hpp"/>
        <childnode refid="3263" relation="include">
        </childnode>
        <childnode refid="3264" relation="include">
        </childnode>
        <childnode refid="3266" relation="include">
        </childnode>
        <childnode refid="3279" relation="include">
        </childnode>
        <childnode refid="3239" relation="include">
        </childnode>
        <childnode refid="3281" relation="include">
        </childnode>
      </node>
      <node id="3283">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_colorizer.hpp</label>
        <link refid="cv__colorizer_8hpp"/>
        <childnode refid="3284" relation="include">
        </childnode>
        <childnode refid="3235" relation="include">
        </childnode>
      </node>
      <node id="3244">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="3245" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
      </node>
      <node id="3250">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_factory.cpp</label>
        <link refid="layer__factory_8cpp"/>
      </node>
      <node id="3273">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_store/data_store_multi_images.cpp</label>
        <link refid="data__store__multi__images_8cpp"/>
      </node>
      <node id="3247">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/utils/protobuf_utils.cpp</label>
        <link refid="protobuf__utils_8cpp"/>
      </node>
      <node id="3293">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_subtractor.hpp</label>
        <link refid="cv__subtractor_8hpp"/>
        <childnode refid="3294" relation="include">
        </childnode>
        <childnode refid="3235" relation="include">
        </childnode>
      </node>
      <node id="3258">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/init_image_data_readers.cpp</label>
        <link refid="init__image__data__readers_8cpp"/>
      </node>
      <node id="3275">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist_siamese.cpp</label>
        <link refid="data__reader__mnist__siamese_8cpp"/>
      </node>
      <node id="3263">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_image.cpp</label>
        <link refid="data__reader__image_8cpp"/>
      </node>
      <node id="3261">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_utils.cpp</label>
        <link refid="cv__utils_8cpp"/>
      </node>
      <node id="3274">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist_siamese.hpp</label>
        <link refid="data__reader__mnist__siamese_8hpp"/>
        <childnode refid="3275" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
      </node>
      <node id="3264">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_cifar10.hpp</label>
        <link refid="data__reader__cifar10_8hpp"/>
        <childnode refid="3265" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
      </node>
      <node id="3254">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/objective_function_factory.cpp</label>
        <link refid="objective__function__factory_8cpp"/>
      </node>
      <node id="3280">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_imagenet_org.cpp</label>
        <link refid="data__reader__imagenet__org_8cpp"/>
      </node>
      <node id="3265">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_cifar10.cpp</label>
        <link refid="data__reader__cifar10_8cpp"/>
      </node>
      <node id="3238">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_process_patches.cpp</label>
        <link refid="cv__process__patches_8cpp"/>
      </node>
      <node id="3239">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_imagenet_patches.hpp</label>
        <link refid="data__reader__imagenet__patches_8hpp"/>
        <childnode refid="3240" relation="include">
        </childnode>
        <childnode refid="3241" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
      </node>
      <node id="3294">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_subtractor.cpp</label>
        <link refid="cv__subtractor_8cpp"/>
      </node>
      <node id="3266">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_imagenet.hpp</label>
        <link refid="data__reader__imagenet_8hpp"/>
        <childnode refid="3267" relation="include">
        </childnode>
        <childnode refid="3268" relation="include">
        </childnode>
        <childnode refid="3269" relation="include">
        </childnode>
        <childnode refid="3271" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
      </node>
      <node id="3268">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_store/data_store_imagenet.cpp</label>
        <link refid="data__store__imagenet_8cpp"/>
      </node>
      <node id="3267">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_imagenet.cpp</label>
        <link refid="data__reader__imagenet_8cpp"/>
      </node>
      <node id="3243">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/proto_common.cpp</label>
        <link refid="proto__common_8cpp"/>
      </node>
      <node id="3252">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/metric_factory.cpp</label>
        <link refid="metric__factory_8cpp"/>
      </node>
      <node id="3287">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_decolorizer.hpp</label>
        <link refid="cv__decolorizer_8hpp"/>
        <childnode refid="3288" relation="include">
        </childnode>
        <childnode refid="3235" relation="include">
        </childnode>
      </node>
      <node id="3279">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_imagenet_org.hpp</label>
        <link refid="data__reader__imagenet__org_8hpp"/>
        <childnode refid="3280" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
      </node>
      <node id="3271">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_multi_images.hpp</label>
        <link refid="data__reader__multi__images_8hpp"/>
        <childnode refid="3272" relation="include">
        </childnode>
        <childnode refid="3273" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3276" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
      </node>
      <node id="3242">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="3243" relation="include">
        </childnode>
        <childnode refid="3244" relation="include">
        </childnode>
        <childnode refid="3246" relation="include">
        </childnode>
        <childnode refid="3259" relation="include">
        </childnode>
      </node>
      <node id="3282">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_mnist.cpp</label>
        <link refid="data__reader__mnist_8cpp"/>
      </node>
      <node id="3240">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_imagenet_patches.cpp</label>
        <link refid="data__reader__imagenet__patches_8cpp"/>
      </node>
      <node id="3257">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/proto/init_image_data_readers.hpp</label>
        <link refid="init__image__data__readers_8hpp"/>
        <childnode refid="3258" relation="include">
        </childnode>
        <childnode refid="3243" relation="include">
        </childnode>
      </node>
      <node id="3232">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_transform.cpp</label>
        <link refid="cv__transform_8cpp"/>
      </node>
      <node id="3272">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_multi_images.cpp</label>
        <link refid="data__reader__multi__images_8cpp"/>
      </node>
      <node id="3270">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_imagenet_single.cpp</label>
        <link refid="data__reader__imagenet__single_8cpp"/>
      </node>
      <node id="3237">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_process_patches.hpp</label>
        <link refid="cv__process__patches_8hpp"/>
        <childnode refid="3238" relation="include">
        </childnode>
        <childnode refid="3239" relation="include">
        </childnode>
      </node>
      <node id="3291">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_normalizer.hpp</label>
        <link refid="cv__normalizer_8hpp"/>
        <childnode refid="3292" relation="include">
        </childnode>
        <childnode refid="3235" relation="include">
        </childnode>
      </node>
      <node id="3231">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_transform.hpp</label>
        <link refid="cv__transform_8hpp"/>
        <childnode refid="3232" relation="include">
        </childnode>
        <childnode refid="3233" relation="include">
        </childnode>
        <childnode refid="3283" relation="include">
        </childnode>
        <childnode refid="3285" relation="include">
        </childnode>
        <childnode refid="3287" relation="include">
        </childnode>
        <childnode refid="3289" relation="include">
        </childnode>
        <childnode refid="3291" relation="include">
        </childnode>
        <childnode refid="3235" relation="include">
        </childnode>
        <childnode refid="3293" relation="include">
        </childnode>
      </node>
      <node id="3255">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/optimizer_factory.cpp</label>
        <link refid="optimizer__factory_8cpp"/>
      </node>
      <node id="3256">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/weights_factory.cpp</label>
        <link refid="weights__factory_8cpp"/>
      </node>
      <node id="3233">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_augmenter.hpp</label>
        <link refid="cv__augmenter_8hpp"/>
        <childnode refid="3234" relation="include">
        </childnode>
        <childnode refid="3235" relation="include">
        </childnode>
      </node>
      <node id="3285">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_cropper.hpp</label>
        <link refid="cv__cropper_8hpp"/>
        <childnode refid="3286" relation="include">
        </childnode>
        <childnode refid="3235" relation="include">
        </childnode>
      </node>
      <node id="3236">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_process.cpp</label>
        <link refid="cv__process_8cpp"/>
      </node>
      <node id="3290">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_mean_extractor.cpp</label>
        <link refid="cv__mean__extractor_8cpp"/>
      </node>
      <node id="3281">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_mnist.hpp</label>
        <link refid="data__reader__mnist_8hpp"/>
        <childnode refid="3282" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
      </node>
      <node id="3269">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/data_reader_imagenet_single.hpp</label>
        <link refid="data__reader__imagenet__single_8hpp"/>
        <childnode refid="3270" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
      </node>
      <node id="3260">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_utils.hpp</label>
        <link refid="cv__utils_8hpp"/>
        <childnode refid="3261" relation="include">
        </childnode>
      </node>
      <node id="3249">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp</label>
        <link refid="callback__factory_8cpp"/>
      </node>
      <node id="3259">
        <label>/Users/mckinney27/doxy-testbed/lbann/include/lbann/utils/protobuf_utils.hpp</label>
        <link refid="protobuf__utils_8hpp"/>
        <childnode refid="3247" relation="include">
        </childnode>
      </node>
      <node id="3284">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_colorizer.cpp</label>
        <link refid="cv__colorizer_8cpp"/>
      </node>
      <node id="3286">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/cv_cropper.cpp</label>
        <link refid="cv__cropper_8cpp"/>
      </node>
      <node id="3251">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/layer_graph_factory.cpp</label>
        <link refid="layer__graph__factory_8cpp"/>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cv_transform<sp/>.cpp<sp/>.hpp<sp/>-<sp/>base<sp/>class<sp/>for<sp/>the<sp/>transformation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>image<sp/>data<sp/>in<sp/>opencv<sp/>format</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LBANN_CV_TRANSFORM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LBANN_CV_TRANSFORM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="opencv_8hpp" kindref="compound">opencv.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="opencv__extensions_8hpp" kindref="compound">opencv_extensions.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LBANN_HAS_OPENCV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">cv_transform<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>---<sp/>configuration<sp/>variables<sp/>---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>place<sp/>for<sp/>the<sp/>variables<sp/>to<sp/>keep<sp/>the<sp/>configuration<sp/>set<sp/>during<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>std::string<sp/>m_name;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>---<sp/>state<sp/>variables<sp/>---</highlight></codeline>
<codeline lineno="48"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_enabled;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transform<sp/>prepared<sp/>given<sp/>the<sp/>configuration<sp/>(and<sp/>the<sp/>image)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>m_trans;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>to<sp/>manually<sp/>shut<sp/>transform<sp/>off<sp/>without<sp/>destroying<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//bool<sp/>m_manual_switch;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_to_enable()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>cv_flipping<sp/>{_both_axes_=-1,<sp/>_vertical_=0,<sp/>_horizontal_=1,<sp/>_no_flip_=2};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv_flip_desc[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;both_axes&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vertical&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;horizontal&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>flip_desc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv_flipping<sp/>flip_code)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(cv_flip_desc[static_cast&lt;int&gt;(flip_code)+1]);<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceanonymous__namespace_02image__preprocessor_8cpp_03_1a9624405339d16214b745f28f39979c6d" kindref="member">pi</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>cv_transform();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>cv_transform(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv_transform&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>cv_transform&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv_transform&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>cv_transform<sp/>*clone()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~cv_transform()<sp/>{}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>define<sp/>a<sp/>method<sp/>to<sp/>configure<sp/>the<sp/>transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>set(args)<sp/>{<sp/>reset();<sp/>...<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>m_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.,<sp/>m_trans.clear();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>determine_transform(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">cv::Mat</ref>&amp;<sp/>image);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>determine_inverse_transform();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>apply(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">cv::Mat</ref>&amp;<sp/>image)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enable()<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>m_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>disable()<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>m_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_enabled()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_enabled;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//bool<sp/>toggle_manual_switch()<sp/>{<sp/>return<sp/>(m_manual_switch<sp/>=<sp/>!m_manual_switch);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>administrative<sp/>methods</highlight></codeline>
<codeline lineno="107"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>get_type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>std::string<sp/>get_name()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_name;<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>{<sp/>m_name<sp/>=<sp/>name;<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>get_description()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacelbann_1_1graph_1a956e9f6f1b842a2ffe5bda9015bbb906" kindref="member">print</ref>(std::ostream&amp;<sp/>os)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cv_transform::cv_transform()</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>:<sp/>m_name(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>m_enabled(false)</highlight><highlight class="comment">//,<sp/>m_manual_switch(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cv_transform::cv_transform(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv_transform&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>:<sp/>m_name(rhs.m_name),<sp/>m_enabled(rhs.m_enabled)<sp/>{}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cv_transform&amp;<sp/>cv_transform::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv_transform&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>m_enabled<sp/>=<sp/>rhs.m_enabled;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>m_name<sp/>=<sp/>rhs.m_name;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cv_transform::determine_transform(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">cv::Mat</ref>&amp;<sp/>image)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>any<sp/>transform<sp/>state<sp/>computed<sp/>for<sp/>previous<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reset()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>m_enabled<sp/>=<sp/>check_to_enable();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(!m_enabled)<sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>m_trans<sp/>for<sp/>the<sp/>image<sp/>and<sp/>the<sp/>configuration<sp/>of<sp/>the<sp/>transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Here,<sp/>some<sp/>transform<sp/>may<sp/>not<sp/>applicable<sp/>to<sp/>the<sp/>given<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>that<sp/>case,<sp/>set<sp/>m_enabled<sp/>=<sp/>false<sp/>(or<sp/>fruther<sp/>throw<sp/>an<sp/>exception).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_enabled;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cv_transform::determine_inverse_transform()<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>of<sp/>manual<sp/>overriding,<sp/>if<sp/>(!m_manual_switch)<sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>transform,<sp/>by<sp/>design,<sp/>can<sp/>not<sp/>be<sp/>or<sp/>does<sp/>not<sp/>need<sp/>to<sp/>be<sp/>inversed,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>(m_enabled<sp/>=<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>transform<sp/>has<sp/>not<sp/>been<sp/>applied<sp/>(e.g.,<sp/>m_trans<sp/>has<sp/>not<sp/>been<sp/>set),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>(m_enabled<sp/>=<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>cannot<sp/>be<sp/>determined<sp/>by<sp/>m_enabled<sp/>as<sp/>the<sp/>transform<sp/>is<sp/>turned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>off<sp/>once<sp/>applied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>inverse<sp/>of<sp/>m_trans<sp/>and<sp/>overwrite<sp/>m_trans;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>m_enabled<sp/>to<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cv_transform::apply(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">cv::Mat</ref>&amp;<sp/>image)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>the<sp/>transform<sp/>is<sp/>applied<sp/>once,<sp/>turn<sp/>this<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>m_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>success<sp/>of<sp/>transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cv_transform<sp/>*cv_transform::clone()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">cv_transform<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//inline<sp/>std::string<sp/>cv_transform::get_type()<sp/>{<sp/>return<sp/>&quot;image<sp/>transform&quot;;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>cv_transform::get_description()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string<sp/>{}<sp/>+<sp/><ref refid="classlbann_1_1generic__data__reader_1abeb849fb8e10b4fa317c90bc33f61758" kindref="member">get_type</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacelbann_1_1graph_1a956e9f6f1b842a2ffe5bda9015bbb906" kindref="member">cv_transform::print</ref>(std::ostream&amp;<sp/>os)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/>get_description();<sp/></highlight><highlight class="comment">//<sp/>Print<sp/>out<sp/>configuration<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Additionally,<sp/>print<sp/>out<sp/>state<sp/>variables<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv_transform&amp;<sp/>tr);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_HAS_OPENCV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LBANN_CV_TRANSFORM_HPP</highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/data_readers/cv_transform.hpp"/>
  </compounddef>
</doxygen>
