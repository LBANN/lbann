<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="callback__check__dataset_8cpp" kind="file" language="C++">
    <compoundname>callback_check_dataset.cpp</compoundname>
    <includes local="no">vector</includes>
    <includes refid="callback__check__dataset_8hpp" local="yes">lbann/callbacks/callback_check_dataset.hpp</includes>
    <includes refid="io__layer_8hpp" local="yes">lbann/layers/io/io_layer.hpp</includes>
    <includes refid="input__layer_8hpp" local="yes">lbann/layers/io/input/input_layer.hpp</includes>
    <includes local="no">iomanip</includes>
    <incdepgraph>
      <node id="17308">
        <label>sys/stat.h</label>
      </node>
      <node id="17333">
        <label>iomanip</label>
      </node>
      <node id="17284">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="17285" relation="include">
        </childnode>
        <childnode refid="17271" relation="include">
        </childnode>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17286" relation="include">
        </childnode>
      </node>
      <node id="17330">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="17314" relation="include">
        </childnode>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17286" relation="include">
        </childnode>
        <childnode refid="17304" relation="include">
        </childnode>
        <childnode refid="17293" relation="include">
        </childnode>
        <childnode refid="17331" relation="include">
        </childnode>
        <childnode refid="17332" relation="include">
        </childnode>
      </node>
      <node id="17319">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="17283" relation="include">
        </childnode>
        <childnode refid="17275" relation="include">
        </childnode>
      </node>
      <node id="17301">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17276" relation="include">
        </childnode>
      </node>
      <node id="17276">
        <label>El.hpp</label>
      </node>
      <node id="17275">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="17276" relation="include">
        </childnode>
        <childnode refid="17277" relation="include">
        </childnode>
        <childnode refid="17278" relation="include">
        </childnode>
        <childnode refid="17283" relation="include">
        </childnode>
      </node>
      <node id="17328">
        <label>lbann/io/data_buffers/distributed_io_buffer.hpp</label>
        <link refid="distributed__io__buffer_8hpp"/>
        <childnode refid="17326" relation="include">
        </childnode>
      </node>
      <node id="17324">
        <label>lbann/layers/io/input/input_layer.hpp</label>
        <link refid="input__layer_8hpp"/>
        <childnode refid="17325" relation="include">
        </childnode>
        <childnode refid="17293" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17285" relation="include">
        </childnode>
        <childnode refid="17309" relation="include">
        </childnode>
        <childnode refid="17308" relation="include">
        </childnode>
        <childnode refid="17322" relation="include">
        </childnode>
      </node>
      <node id="17329">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="17271" relation="include">
        </childnode>
        <childnode refid="17303" relation="include">
        </childnode>
        <childnode refid="17314" relation="include">
        </childnode>
        <childnode refid="17274" relation="include">
        </childnode>
        <childnode refid="17330" relation="include">
        </childnode>
      </node>
      <node id="17320">
        <label>cassert</label>
      </node>
      <node id="17310">
        <label>fcntl.h</label>
      </node>
      <node id="17313">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17286" relation="include">
        </childnode>
        <childnode refid="17293" relation="include">
        </childnode>
        <childnode refid="17301" relation="include">
        </childnode>
      </node>
      <node id="17315">
        <label>lbann/layers/io/io_layer.hpp</label>
        <link refid="io__layer_8hpp"/>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17316" relation="include">
        </childnode>
        <childnode refid="17323" relation="include">
        </childnode>
        <childnode refid="17301" relation="include">
        </childnode>
        <childnode refid="17293" relation="include">
        </childnode>
        <childnode refid="17285" relation="include">
        </childnode>
        <childnode refid="17309" relation="include">
        </childnode>
        <childnode refid="17308" relation="include">
        </childnode>
        <childnode refid="17322" relation="include">
        </childnode>
        <childnode refid="17280" relation="include">
        </childnode>
      </node>
      <node id="17285">
        <label>string</label>
      </node>
      <node id="17326">
        <label>lbann/io/data_buffers/generic_io_buffer.hpp</label>
        <link refid="generic__io__buffer_8hpp"/>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17286" relation="include">
        </childnode>
        <childnode refid="17316" relation="include">
        </childnode>
      </node>
      <node id="17298">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="17271" relation="include">
        </childnode>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17286" relation="include">
        </childnode>
        <childnode refid="17293" relation="include">
        </childnode>
      </node>
      <node id="17304">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="17305" relation="include">
        </childnode>
      </node>
      <node id="17287">
        <label>map</label>
      </node>
      <node id="17303">
        <label>unordered_set</label>
      </node>
      <node id="17331">
        <label>omp.h</label>
      </node>
      <node id="17297">
        <label>exception</label>
      </node>
      <node id="17318">
        <label>random</label>
      </node>
      <node id="17300">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17286" relation="include">
        </childnode>
        <childnode refid="17293" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
      </node>
      <node id="17309">
        <label>sys/types.h</label>
      </node>
      <node id="17274">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17284" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
      </node>
      <node id="17306">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="17296" relation="include">
        </childnode>
        <childnode refid="17271" relation="include">
        </childnode>
        <childnode refid="17273" relation="include">
        </childnode>
        <childnode refid="17287" relation="include">
        </childnode>
      </node>
      <node id="17280">
        <label>cstdio</label>
      </node>
      <node id="17327">
        <label>lbann/io/data_buffers/partitioned_io_buffer.hpp</label>
        <link refid="partitioned__io__buffer_8hpp"/>
        <childnode refid="17326" relation="include">
        </childnode>
      </node>
      <node id="17294">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="17295" relation="include">
        </childnode>
        <childnode refid="17285" relation="include">
        </childnode>
      </node>
      <node id="17282">
        <label>cxxabi.h</label>
      </node>
      <node id="17293">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17286" relation="include">
        </childnode>
        <childnode refid="17294" relation="include">
        </childnode>
        <childnode refid="17296" relation="include">
        </childnode>
        <childnode refid="17297" relation="include">
        </childnode>
      </node>
      <node id="17322">
        <label>unistd.h</label>
      </node>
      <node id="17271">
        <label>vector</label>
      </node>
      <node id="17286">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="17271" relation="include">
        </childnode>
        <childnode refid="17287" relation="include">
        </childnode>
        <childnode refid="17288" relation="include">
        </childnode>
        <childnode refid="17275" relation="include">
        </childnode>
      </node>
      <node id="17270">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_check_dataset.cpp</label>
        <link refid="callback__check__dataset_8cpp"/>
        <childnode refid="17271" relation="include">
        </childnode>
        <childnode refid="17272" relation="include">
        </childnode>
        <childnode refid="17315" relation="include">
        </childnode>
        <childnode refid="17324" relation="include">
        </childnode>
        <childnode refid="17333" relation="include">
        </childnode>
      </node>
      <node id="17311">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="17312" relation="include">
        </childnode>
        <childnode refid="17313" relation="include">
        </childnode>
      </node>
      <node id="17307">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="17308" relation="include">
        </childnode>
        <childnode refid="17309" relation="include">
        </childnode>
        <childnode refid="17310" relation="include">
        </childnode>
      </node>
      <node id="17302">
        <label>lbann.pb.h</label>
      </node>
      <node id="17279">
        <label>cstdlib</label>
      </node>
      <node id="17272">
        <label>lbann/callbacks/callback_check_dataset.hpp</label>
        <link refid="callback__check__dataset_8hpp"/>
        <childnode refid="17273" relation="include">
        </childnode>
        <childnode refid="17274" relation="include">
        </childnode>
      </node>
      <node id="17325">
        <label>lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="17315" relation="include">
        </childnode>
        <childnode refid="17326" relation="include">
        </childnode>
        <childnode refid="17327" relation="include">
        </childnode>
        <childnode refid="17328" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17329" relation="include">
        </childnode>
      </node>
      <node id="17296">
        <label>iostream</label>
      </node>
      <node id="17291">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="17292" relation="include">
        </childnode>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17286" relation="include">
        </childnode>
        <childnode refid="17293" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17285" relation="include">
        </childnode>
        <childnode refid="17303" relation="include">
        </childnode>
      </node>
      <node id="17314">
        <label>unordered_map</label>
      </node>
      <node id="17317">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17286" relation="include">
        </childnode>
        <childnode refid="17301" relation="include">
        </childnode>
        <childnode refid="17318" relation="include">
        </childnode>
      </node>
      <node id="17290">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17286" relation="include">
        </childnode>
        <childnode refid="17284" relation="include">
        </childnode>
        <childnode refid="17291" relation="include">
        </childnode>
        <childnode refid="17293" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
        <childnode refid="17304" relation="include">
        </childnode>
        <childnode refid="17301" relation="include">
        </childnode>
        <childnode refid="17302" relation="include">
        </childnode>
        <childnode refid="17285" relation="include">
        </childnode>
        <childnode refid="17271" relation="include">
        </childnode>
      </node>
      <node id="17305">
        <label>chrono</label>
      </node>
      <node id="17312">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17295">
        <label>csignal</label>
      </node>
      <node id="17323">
        <label>lbann/utils/dataset.hpp</label>
        <link refid="dataset_8hpp"/>
        <childnode refid="17316" relation="include">
        </childnode>
      </node>
      <node id="17299">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="17285" relation="include">
        </childnode>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17286" relation="include">
        </childnode>
        <childnode refid="17293" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
        <childnode refid="17301" relation="include">
        </childnode>
        <childnode refid="17302" relation="include">
        </childnode>
      </node>
      <node id="17316">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17317" relation="include">
        </childnode>
        <childnode refid="17293" relation="include">
        </childnode>
        <childnode refid="17286" relation="include">
        </childnode>
        <childnode refid="17307" relation="include">
        </childnode>
        <childnode refid="17301" relation="include">
        </childnode>
        <childnode refid="17319" relation="include">
        </childnode>
        <childnode refid="17320" relation="include">
        </childnode>
        <childnode refid="17321" relation="include">
        </childnode>
        <childnode refid="17285" relation="include">
        </childnode>
        <childnode refid="17271" relation="include">
        </childnode>
        <childnode refid="17322" relation="include">
        </childnode>
      </node>
      <node id="17283">
        <label>lbann_config.hpp</label>
      </node>
      <node id="17273">
        <label>set</label>
      </node>
      <node id="17289">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17286" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17284" relation="include">
        </childnode>
        <childnode refid="17306" relation="include">
        </childnode>
        <childnode refid="17307" relation="include">
        </childnode>
        <childnode refid="17301" relation="include">
        </childnode>
        <childnode refid="17311" relation="include">
        </childnode>
        <childnode refid="17313" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17291" relation="include">
        </childnode>
        <childnode refid="17302" relation="include">
        </childnode>
        <childnode refid="17271" relation="include">
        </childnode>
        <childnode refid="17285" relation="include">
        </childnode>
        <childnode refid="17314" relation="include">
        </childnode>
      </node>
      <node id="17292">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="17321">
        <label>algorithm</label>
      </node>
      <node id="17278">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="17279" relation="include">
        </childnode>
        <childnode refid="17280" relation="include">
        </childnode>
        <childnode refid="17281" relation="include">
        </childnode>
        <childnode refid="17282" relation="include">
        </childnode>
      </node>
      <node id="17277">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="17276" relation="include">
        </childnode>
      </node>
      <node id="17332">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="17331" relation="include">
        </childnode>
      </node>
      <node id="17288">
        <label>typeindex</label>
      </node>
      <node id="17281">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callback__check__dataset_8hpp" kindref="compound">lbann/callbacks/callback_check_dataset.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="io__layer_8hpp" kindref="compound">lbann/layers/io/io_layer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input__layer_8hpp" kindref="compound">lbann/layers/io/input/input_layer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classlbann_1_1lbann__callback__check__dataset_1a17aff74d9926e07bfa1f090ad39bb4b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a17aff74d9926e07bfa1f090ad39bb4b6" kindref="member">lbann_callback_check_dataset::add_to_set</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m,<sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l,<sp/>int64_t<sp/>step,<sp/>std::set&lt;long&gt;&amp;<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dynamic_cast&lt;io_layer*&gt;(l))<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>El::Matrix&lt;El::Int&gt;*<sp/>indices<sp/>=<sp/>l-&gt;<ref refid="classlbann_1_1Layer_1a0ac13af6f5ee8316d64c550bef919ee0" kindref="member">get_sample_indices_per_mb</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>std::set&lt;long&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(El::Int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>indices-&gt;Height();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(El::Int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>indices-&gt;Width();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>El::Int<sp/>idx<sp/>=<sp/>indices-&gt;Get(i,j);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">.find(idx);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it<sp/>!=<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">.end())<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>@&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(step)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>found<sp/>a<sp/>duplicate<sp/>index<sp/>in<sp/>being<sp/>loaded:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(idx));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">.insert(idx);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classlbann_1_1lbann__callback__check__dataset_1acedc222fc108c156d089f1baa8c040af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1acedc222fc108c156d089f1baa8c040af" kindref="member">lbann_callback_check_dataset::on_forward_prop_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m,<sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a17aff74d9926e07bfa1f090ad39bb4b6" kindref="member">add_to_set</ref>(m,<sp/>l,<sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>(),<sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a22d16efa2ec47759766f2f7478b11059" kindref="member">training_set</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classlbann_1_1lbann__callback__check__dataset_1a1223f07081d495d971cdf205f892c50d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a1223f07081d495d971cdf205f892c50d" kindref="member">lbann_callback_check_dataset::on_evaluate_forward_prop_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m,<sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(m-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a17aff74d9926e07bfa1f090ad39bb4b6" kindref="member">add_to_set</ref>(m,<sp/>l,<sp/>m-&gt;<ref refid="classlbann_1_1model_1a680ef8ecf644dbc821b5e7488d3bd2c4" kindref="member">get_cur_validation_step</ref>(),<sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1aab6d04a40d20d1b0bf70f9bfdd85f84c" kindref="member">validation_set</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a17aff74d9926e07bfa1f090ad39bb4b6" kindref="member">add_to_set</ref>(m,<sp/>l,<sp/>m-&gt;<ref refid="classlbann_1_1model_1a4040b1f06a2a5d5187a72c06060124c1" kindref="member">get_cur_testing_step</ref>(),<sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a15445849bae3621a3a4364b3ebbbc7f3" kindref="member">testing_set</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;lbann_callback_check_dataset:<sp/>invalid<sp/>execution<sp/>phase&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classlbann_1_1lbann__callback__check__dataset_1a8cbc105d8bd9d3b493ef34de7c387929" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a8cbc105d8bd9d3b493ef34de7c387929" kindref="member">lbann_callback_check_dataset::on_epoch_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref>*<sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref><sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Training<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;]<sp/>:<sp/>I<sp/>have<sp/>processed<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a22d16efa2ec47759766f2f7478b11059" kindref="member">training_set</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>elements&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>first<sp/>input<sp/>layer<sp/>in<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__input__layer" kindref="compound">generic_input_layer</ref>*<sp/>input<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>l<sp/>:<sp/>m-&gt;<ref refid="classlbann_1_1model_1ae14f4b2cc8882b3739d4aeb25d9e73c9" kindref="member">get_layers</ref>())<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>input<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1generic__input__layer" kindref="compound">generic_input_layer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(l);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>get<sp/>input<sp/>layer&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples<sp/>=<sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a22d16efa2ec47759766f2f7478b11059" kindref="member">training_set</ref>.size();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>vec_num_samples(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" kindref="member">get_procs_per_model</ref>());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1ad8a5790dfa9191d4b4f889e8707e57f1" kindref="member">am_model_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1ab7cdeca37f1fcd22a3b69f6134fb299f" kindref="member">model_gather</ref>(num_samples,<sp/>vec_num_samples.data());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1ab7cdeca37f1fcd22a3b69f6134fb299f" kindref="member">model_gather</ref>(num_samples,<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a96d8d7a0ff8ee1511f8c8b8fa92628af" kindref="member">get_model_master</ref>());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>sample_offsets(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" kindref="member">get_procs_per_model</ref>());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>std::partial_sum(vec_num_samples.begin(),<sp/>vec_num_samples.end(),<sp/>sample_offsets.begin());</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Training<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>offsets&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>idx<sp/>:<sp/>sample_offsets)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>idx<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Training<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>counts&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>idx<sp/>:<sp/>vec_num_samples)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>idx<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sample_offset[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vec_num_samples.size();<sp/>i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/><sp/>for<sp/>(const<sp/>auto&amp;<sp/>idx<sp/>:<sp/>vec_num_samples)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>a<sp/>vector<sp/>large<sp/>enough<sp/>to<sp/>hold<sp/>all<sp/>the<sp/>data<sp/>indices<sp/>for<sp/>this<sp/>rank.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>local_data(<ref refid="classlbann_1_1lbann__callback__check__dataset_1a22d16efa2ec47759766f2f7478b11059" kindref="member">training_set</ref>.size());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>std::copy(<ref refid="classlbann_1_1lbann__callback__check__dataset_1a22d16efa2ec47759766f2f7478b11059" kindref="member">training_set</ref>.begin(),<sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a22d16efa2ec47759766f2f7478b11059" kindref="member">training_set</ref>.end(),<sp/>local_data.data());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Training:<sp/>my<sp/>local<sp/>vector<sp/>has<sp/>size<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>local_data.size()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1ad8a5790dfa9191d4b4f889e8707e57f1" kindref="member">am_model_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>a<sp/>vector<sp/>large<sp/>enough<sp/>to<sp/>hold<sp/>all<sp/>indices<sp/>for<sp/>the<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>model_training_set(</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>input-&gt;<ref refid="classlbann_1_1generic__input__layer_1aa0fa6597ffce537f7cfba29dcc754ee1" kindref="member">get_num_iterations_per_epoch</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>)<sp/>*<sp/>m-&gt;<ref refid="classlbann_1_1model_1a8c311798ff4acaeafdfbf85162ba5084" kindref="member">get_max_mini_batch_size</ref>());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Training:<sp/>my<sp/>model<sp/>vector<sp/>has<sp/>size<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model_training_set.size()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>comm-&gt;model_gatherv(local_data.data(),<sp/>local_data.size(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_training_set.data(),<sp/>vec_num_samples.data(),<sp/>sample_offsets.data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Training:<sp/>The<sp/>entire<sp/>model<sp/>has<sp/>processed<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model_training_set.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>elements&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>comm-&gt;model_gatherv(local_data.data(),<sp/>local_data.size(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;get_comm()-&gt;get_model_master());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Training<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>idx<sp/>:<sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a22d16efa2ec47759766f2f7478b11059" kindref="member">training_set</ref>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>idx<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>training_set.clear();</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classlbann_1_1lbann__callback__check__dataset_1a9bcb1368152c621c4484136ec8eecff8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a9bcb1368152c621c4484136ec8eecff8" kindref="member">lbann_callback_check_dataset::on_validation_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Validation<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>()-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>:<sp/>I<sp/>have<sp/>processed<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1aab6d04a40d20d1b0bf70f9bfdd85f84c" kindref="member">validation_set</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>elements&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Validation<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>()-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::set&lt;long&gt;::iterator<sp/>iter=<ref refid="classlbann_1_1lbann__callback__check__dataset_1aab6d04a40d20d1b0bf70f9bfdd85f84c" kindref="member">validation_set</ref>.begin();<sp/>iter!=<ref refid="classlbann_1_1lbann__callback__check__dataset_1aab6d04a40d20d1b0bf70f9bfdd85f84c" kindref="member">validation_set</ref>.end();++iter)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>*iter<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1aab6d04a40d20d1b0bf70f9bfdd85f84c" kindref="member">validation_set</ref>.clear();</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classlbann_1_1lbann__callback__check__dataset_1afe1fda5a6bfe632dc680230cc56dff3e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1afe1fda5a6bfe632dc680230cc56dff3e" kindref="member">lbann_callback_check_dataset::on_test_end</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>()-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>:<sp/>I<sp/>have<sp/>processed<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a15445849bae3621a3a4364b3ebbbc7f3" kindref="member">testing_set</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>elements&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__check__dataset_1a15445849bae3621a3a4364b3ebbbc7f3" kindref="member">testing_set</ref>.clear();</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_check_dataset.cpp"/>
  </compounddef>
</doxygen>
