<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1lbann__callback__linear__growth__learning__rate" kind="class" language="C++" prot="public">
    <compoundname>lbann::lbann_callback_linear_growth_learning_rate</compoundname>
    <basecompoundref refid="classlbann_1_1lbann__callback__learning__rate" prot="public" virt="non-virtual">lbann::lbann_callback_learning_rate</basecompoundref>
    <includes refid="callback__learning__rate_8hpp" local="no">callback_learning_rate.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a2fe23a59744da5c0c737eb9d301bc23b" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float lbann::lbann_callback_linear_growth_learning_rate::m_base_lr</definition>
        <argsstring></argsstring>
        <name>m_base_lr</name>
        <briefdescription>
<para>Initial learning rate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="221" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" bodystart="221" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1afaa81836e0dc1b6220212dad52df25fc" compoundref="callback__learning__rate_8cpp" startline="195" endline="203">setup</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ad292e2e7f4078162ed93b6e05d94e0e4" compoundref="callback__learning__rate_8cpp" startline="205" endline="214">global_schedule</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a56cc1954ef76d494c4b5d5074c326fca" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float lbann::lbann_callback_linear_growth_learning_rate::m_target</definition>
        <argsstring></argsstring>
        <name>m_target</name>
        <briefdescription>
<para>Target learning rate to reach. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="223" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" bodystart="223" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1afaa81836e0dc1b6220212dad52df25fc" compoundref="callback__learning__rate_8cpp" startline="195" endline="203">setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ad68e1fbbe86eb692cf26d0d4a452c469" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float lbann::lbann_callback_linear_growth_learning_rate::m_inc</definition>
        <argsstring></argsstring>
        <name>m_inc</name>
        <briefdescription>
<para>Amount to increase each epoch. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="225" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" bodystart="225" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1afaa81836e0dc1b6220212dad52df25fc" compoundref="callback__learning__rate_8cpp" startline="195" endline="203">setup</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ad292e2e7f4078162ed93b6e05d94e0e4" compoundref="callback__learning__rate_8cpp" startline="205" endline="214">global_schedule</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ac583819b3ee7fad93b9b96b44dfb4307" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t lbann::lbann_callback_linear_growth_learning_rate::m_num_epochs</definition>
        <argsstring></argsstring>
        <name>m_num_epochs</name>
        <briefdescription>
<para>Number of epochs over which to scale the learning rate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="227" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" bodystart="227" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1afaa81836e0dc1b6220212dad52df25fc" compoundref="callback__learning__rate_8cpp" startline="195" endline="203">setup</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ad292e2e7f4078162ed93b6e05d94e0e4" compoundref="callback__learning__rate_8cpp" startline="205" endline="214">global_schedule</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a0a0a9c7f9964e3f8693706800fcdf06a" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t lbann::lbann_callback_linear_growth_learning_rate::m_delay</definition>
        <argsstring></argsstring>
        <name>m_delay</name>
        <briefdescription>
<para>Number of epochs to delay before starting growth. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="229" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" bodystart="229" bodyend="-1"/>
        <referencedby refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ad292e2e7f4078162ed93b6e05d94e0e4" compoundref="callback__learning__rate_8cpp" startline="205" endline="214">global_schedule</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a9eb24d8032af168a0eeec7e385909d55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_callback_linear_growth_learning_rate::lbann_callback_linear_growth_learning_rate</definition>
        <argsstring>(float target, int64_t num_epochs)</argsstring>
        <name>lbann_callback_linear_growth_learning_rate</name>
        <param>
          <type>float</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_epochs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Linearly increase the learning rate to reach target after num_epochs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="202" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_learning_rate.cpp" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a288be0ef560e9169a634c2238b50370e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_callback_linear_growth_learning_rate::lbann_callback_linear_growth_learning_rate</definition>
        <argsstring>(float target, int64_t num_epochs, int64_t delay)</argsstring>
        <name>lbann_callback_linear_growth_learning_rate</name>
        <param>
          <type>float</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_epochs</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="204" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_learning_rate.cpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a2382f7efb2bfe8b58fd68450b569a519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_callback_linear_growth_learning_rate::lbann_callback_linear_growth_learning_rate</definition>
        <argsstring>(float target, int64_t num_epochs, int64_t delay, std::unordered_set&lt; weights *&gt; weights_list)</argsstring>
        <name>lbann_callback_linear_growth_learning_rate</name>
        <param>
          <type>float</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_epochs</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>delay</declname>
        </param>
        <param>
          <type>std::unordered_set&lt; <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> *&gt;</type>
          <declname>weights_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="206" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_learning_rate.cpp" bodystart="189" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ab9b995df89c82e530d90b2fb0b8cbc2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::lbann_callback_linear_growth_learning_rate::lbann_callback_linear_growth_learning_rate</definition>
        <argsstring>(const lbann_callback_linear_growth_learning_rate &amp;)=default</argsstring>
        <name>lbann_callback_linear_growth_learning_rate</name>
        <param>
          <type>const <ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1acfc4f111a6a599f05523cde635cbbf6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref> &amp;</type>
        <definition>lbann_callback_linear_growth_learning_rate&amp; lbann::lbann_callback_linear_growth_learning_rate::operator=</definition>
        <argsstring>(const lbann_callback_linear_growth_learning_rate &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1aadb1266a360c5442e094113b919f6c13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref> *</type>
        <definition>lbann_callback_linear_growth_learning_rate* lbann::lbann_callback_linear_growth_learning_rate::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a9f545d1269a8c7af335625d049691f26">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="213" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" bodystart="213" bodyend="214"/>
        <references refid="classlbann_1_1lbann__callback__learning__rate_1a501f31a6b8fde1282a60e4b347e8d9d3" compoundref="callback__learning__rate_8cpp" startline="43" endline="64">lbann::lbann_callback_learning_rate::setup</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1afaa81836e0dc1b6220212dad52df25fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::lbann_callback_linear_growth_learning_rate::setup</definition>
        <argsstring>(model *m) override</argsstring>
        <name>setup</name>
        <reimplements refid="classlbann_1_1lbann__callback__learning__rate_1a501f31a6b8fde1282a60e4b347e8d9d3">setup</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Do some initialization. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="215" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_learning_rate.cpp" bodystart="195" bodyend="203"/>
        <references refid="classlbann_1_1lbann__callback__learning__rate_1a501f31a6b8fde1282a60e4b347e8d9d3" compoundref="callback__learning__rate_8cpp" startline="43" endline="64">lbann::lbann_callback_learning_rate::setup</references>
        <references refid="classlbann_1_1lbann__callback__learning__rate_1a0b02e82190e04a22ab26d858041915d7" compoundref="callback__learning__rate_8hpp" startline="79">lbann::lbann_callback_learning_rate::m_weights</references>
        <references refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a2fe23a59744da5c0c737eb9d301bc23b" compoundref="callback__learning__rate_8hpp" startline="221">m_base_lr</references>
        <references refid="classlbann_1_1lbann__callback__learning__rate_1a97194f282c29a748c915d9811a8a99fb" compoundref="callback__learning__rate_8hpp" startline="87">lbann::lbann_callback_learning_rate::m_cur_global_lr</references>
        <references refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ad68e1fbbe86eb692cf26d0d4a452c469" compoundref="callback__learning__rate_8hpp" startline="225">m_inc</references>
        <references refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a56cc1954ef76d494c4b5d5074c326fca" compoundref="callback__learning__rate_8hpp" startline="223">m_target</references>
        <references refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ac583819b3ee7fad93b9b96b44dfb4307" compoundref="callback__learning__rate_8hpp" startline="227">m_num_epochs</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a6080051bd4de75dc1ca3d927414d2455" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::lbann_callback_linear_growth_learning_rate::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classlbann_1_1lbann__callback_1a7522c7a14f1d6a1ea762cc2d7248eb3a">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return this callback&apos;s name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="216" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" bodystart="216" bodyend="216"/>
        <references refid="classlbann_1_1lbann__callback__learning__rate_1a7869b93e5963d6f76da68d8c8137b979" compoundref="callback__learning__rate_8hpp" startline="68" endline="68">lbann::lbann_callback_learning_rate::global_schedule</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ad292e2e7f4078162ed93b6e05d94e0e4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>float lbann::lbann_callback_linear_growth_learning_rate::global_schedule</definition>
        <argsstring>(model *m) override</argsstring>
        <name>global_schedule</name>
        <reimplements refid="classlbann_1_1lbann__callback__learning__rate_1a7869b93e5963d6f76da68d8c8137b979">global_schedule</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is called at the end of every epoch to update the learning rate for every optimizer. Adjustments should be made based on the current global learning rate. The returned learning rate will be used to automatically update the current global learning rate. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="218" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_learning_rate.cpp" bodystart="205" bodyend="214"/>
        <references refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" compoundref="model_8hpp" startline="128" endline="130">lbann::model::get_cur_epoch</references>
        <references refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a0a0a9c7f9964e3f8693706800fcdf06a" compoundref="callback__learning__rate_8hpp" startline="229">m_delay</references>
        <references refid="classlbann_1_1lbann__callback__learning__rate_1a97194f282c29a748c915d9811a8a99fb" compoundref="callback__learning__rate_8hpp" startline="87">lbann::lbann_callback_learning_rate::m_cur_global_lr</references>
        <references refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ac583819b3ee7fad93b9b96b44dfb4307" compoundref="callback__learning__rate_8hpp" startline="227">m_num_epochs</references>
        <references refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a2fe23a59744da5c0c737eb9d301bc23b" compoundref="callback__learning__rate_8hpp" startline="221">m_base_lr</references>
        <references refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ad68e1fbbe86eb692cf26d0d4a452c469" compoundref="callback__learning__rate_8hpp" startline="225">m_inc</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Linearly increase the learning rate to reach a target value over a fixed number of epochs. <simplesect kind="note"><para>This currently assumes every optimizer begins with the same learning rate. This also <emphasis>forces</emphasis> its schedule and will stomp over other changes. </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1415">
        <label>lbann::lbann_callback</label>
        <link refid="classlbann_1_1lbann__callback"/>
      </node>
      <node id="1413">
        <label>lbann::lbann_callback_linear_growth_learning_rate</label>
        <link refid="classlbann_1_1lbann__callback__linear__growth__learning__rate"/>
        <childnode refid="1414" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1414">
        <label>lbann::lbann_callback_learning_rate</label>
        <link refid="classlbann_1_1lbann__callback__learning__rate"/>
        <childnode refid="1415" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1418">
        <label>lbann::lbann_callback</label>
        <link refid="classlbann_1_1lbann__callback"/>
        <childnode refid="1419" relation="usage">
          <edgelabel>m_summarizer</edgelabel>
        </childnode>
      </node>
      <node id="1416">
        <label>lbann::lbann_callback_linear_growth_learning_rate</label>
        <link refid="classlbann_1_1lbann__callback__linear__growth__learning__rate"/>
        <childnode refid="1417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1419">
        <label>lbann::lbann_summary</label>
        <link refid="classlbann_1_1lbann__summary"/>
      </node>
      <node id="1417">
        <label>lbann::lbann_callback_learning_rate</label>
        <link refid="classlbann_1_1lbann__callback__learning__rate"/>
        <childnode refid="1418" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" line="197" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/callbacks/callback_learning_rate.hpp" bodystart="196" bodyend="230"/>
    <listofallmembers>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1aadb1266a360c5442e094113b919f6c13" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>copy</name></member>
      <member refid="classlbann_1_1lbann__callback_1acec888932129f93ba2a0077192467c9e" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>get_batch_interval</name></member>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ad292e2e7f4078162ed93b6e05d94e0e4" prot="protected" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>global_schedule</name></member>
      <member refid="classlbann_1_1lbann__callback_1a679057298a41ddd47f08c157f756c584" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>lbann_callback</name></member>
      <member refid="classlbann_1_1lbann__callback_1a91d994616b8bf98685ac32939228f96a" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>lbann_callback</name></member>
      <member refid="classlbann_1_1lbann__callback__learning__rate_1a69687cd55f4d09c480e08e18488519fe" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>lbann_callback_learning_rate</name></member>
      <member refid="classlbann_1_1lbann__callback__learning__rate_1af933186f239fdea911e8934fe58e97fa" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>lbann_callback_learning_rate</name></member>
      <member refid="classlbann_1_1lbann__callback__learning__rate_1a0c544d120f949cfc5c2dcb07d69b3cde" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>lbann_callback_learning_rate</name></member>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a9eb24d8032af168a0eeec7e385909d55" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>lbann_callback_linear_growth_learning_rate</name></member>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a288be0ef560e9169a634c2238b50370e" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>lbann_callback_linear_growth_learning_rate</name></member>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a2382f7efb2bfe8b58fd68450b569a519" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>lbann_callback_linear_growth_learning_rate</name></member>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ab9b995df89c82e530d90b2fb0b8cbc2f" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>lbann_callback_linear_growth_learning_rate</name></member>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a2fe23a59744da5c0c737eb9d301bc23b" prot="private" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>m_base_lr</name></member>
      <member refid="classlbann_1_1lbann__callback_1a6126e310e9924398c18ccf76bb91c705" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>m_batch_interval</name></member>
      <member refid="classlbann_1_1lbann__callback__learning__rate_1a97194f282c29a748c915d9811a8a99fb" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>m_cur_global_lr</name></member>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a0a0a9c7f9964e3f8693706800fcdf06a" prot="private" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>m_delay</name></member>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ad68e1fbbe86eb692cf26d0d4a452c469" prot="private" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>m_inc</name></member>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1ac583819b3ee7fad93b9b96b44dfb4307" prot="private" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>m_num_epochs</name></member>
      <member refid="classlbann_1_1lbann__callback_1a277d46138184f85f161a8263b8322c76" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>m_summarizer</name></member>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a56cc1954ef76d494c4b5d5074c326fca" prot="private" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>m_target</name></member>
      <member refid="classlbann_1_1lbann__callback__learning__rate_1a0b02e82190e04a22ab26d858041915d7" prot="protected" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>m_weights</name></member>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1a6080051bd4de75dc1ca3d927414d2455" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>name</name></member>
      <member refid="classlbann_1_1lbann__callback_1a2c0709a26179d115ff85b7561786ee27" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_backward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1abeb1e486e259fd358332abf1e952f630" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_backward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback__learning__rate_1ab6aa0530604e32a1be2b37f3933f6bf6" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_backward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1aba03b59c056ace8094095c08e39b9ac4" prot="public" virt="virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_backward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a9ecf4e44cd4021cdd687de14c850cc83" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_batch_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a895ca577e358601fcae5c04749f60535" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_batch_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a3462e54126adbd0082c22c98d8de5468" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_batch_evaluate_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1ad10891b8ab3de74ee1a70e6255e7d58a" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_batch_evaluate_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4ed9498763412a55953fff71ee3a9456" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_epoch_begin</name></member>
      <member refid="classlbann_1_1lbann__callback__learning__rate_1ab8eb509bdbea501882d6b248a814bb28" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_epoch_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4a2cff48a688bb56ed14b8b53344f945" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_evaluate_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a044174864e4981a1dac093d58e8c4d6c" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_evaluate_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a0794f3fb88db6fef53f0e2f235f94424" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_evaluate_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1ae23c5a61b81dbdfbd79736ac2b6035aa" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_evaluate_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a22ed977371173105b4aad3a20b9c59dc" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1ab96adb1d77180e00fdd668cd381323fd" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_forward_prop_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a79a0bb407852d7b330b74373647ffe46" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a5eff0a59fbce98a981d9cdd0547a3ad5" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_forward_prop_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a1a9248b305f06419889c1b3b0f0893d8" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_optimize_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a497e750da160e0071ce8864ccc3a1344" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_optimize_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1a235195d5fa4461835b861a03a5c0278f" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_optimize_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a4653e2903bfd3903709a81eaf7eabc1a" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_optimize_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1ace7452239c9ad7aa6247e9496adbcffe" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_phase_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a716bff45bdc5a88eed09c2231f5bc93a" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_test_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1accbad4dd004c1ced33642db6398b2efe" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_test_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a7c8f0d211967ccc5219144e92571ab26" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_train_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1af28078b0ddaef45124465bef01eefedf" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_train_end</name></member>
      <member refid="classlbann_1_1lbann__callback_1a2bde303671110519388d9962bc3e5583" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_validation_begin</name></member>
      <member refid="classlbann_1_1lbann__callback_1adc16e42e5064dc2dc8d84dfbfc1325eb" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>on_validation_end</name></member>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1acfc4f111a6a599f05523cde635cbbf6e" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__callback__learning__rate_1a80b82eebf8e38cbe0a484aea43644705" prot="public" virt="non-virtual" ambiguityscope="lbann::lbann_callback_learning_rate::"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__callback_1a66b0a8c00a273669fa782ece59e8898b" prot="public" virt="non-virtual" ambiguityscope="lbann::lbann_callback::"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>operator=</name></member>
      <member refid="classlbann_1_1lbann__callback__learning__rate_1acf7f3921a68e7f1f772106e18c545345" prot="protected" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>optimizer_schedule</name></member>
      <member refid="classlbann_1_1lbann__callback_1a02d924df2f8ca851578dc76d9015e48d" prot="public" virt="non-virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>set_summarizer</name></member>
      <member refid="classlbann_1_1lbann__callback__linear__growth__learning__rate_1afaa81836e0dc1b6220212dad52df25fc" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>setup</name></member>
      <member refid="classlbann_1_1lbann__callback_1ac91abaec389f8d2547512c45ae587304" prot="public" virt="virtual"><scope>lbann::lbann_callback_linear_growth_learning_rate</scope><name>~lbann_callback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
