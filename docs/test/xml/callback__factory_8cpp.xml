<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="callback__factory_8cpp" kind="file" language="C++">
    <compoundname>callback_factory.cpp</compoundname>
    <includes refid="factories_8hpp" local="yes">lbann/proto/factories.hpp</includes>
    <incdepgraph>
      <node id="23100">
        <label>sys/stat.h</label>
      </node>
      <node id="23061">
        <label>lbann/proto/factories.hpp</label>
        <link refid="factories_8hpp"/>
        <childnode refid="23062" relation="include">
        </childnode>
      </node>
      <node id="23285">
        <label>glob.h</label>
      </node>
      <node id="23183">
        <label>cv_process.hpp</label>
        <link refid="cv__process_8hpp"/>
        <childnode refid="23184" relation="include">
        </childnode>
        <childnode refid="23187" relation="include">
        </childnode>
        <childnode refid="23190" relation="include">
        </childnode>
        <childnode refid="23191" relation="include">
        </childnode>
        <childnode refid="23194" relation="include">
        </childnode>
        <childnode refid="23195" relation="include">
        </childnode>
        <childnode refid="23196" relation="include">
        </childnode>
        <childnode refid="23197" relation="include">
        </childnode>
        <childnode refid="23199" relation="include">
        </childnode>
        <childnode refid="23200" relation="include">
        </childnode>
      </node>
      <node id="23146">
        <label>lbann/layers/transform/pooling.hpp</label>
        <link refid="pooling_8hpp"/>
        <childnode refid="23147" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23145" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23142" relation="include">
        </childnode>
      </node>
      <node id="23251">
        <label>lbann/callbacks/callback_checkpoint.hpp</label>
        <link refid="callback__checkpoint_8hpp"/>
        <childnode refid="23175" relation="include">
        </childnode>
        <childnode refid="23092" relation="include">
        </childnode>
      </node>
      <node id="23136">
        <label>lbann/weights/fan_in_fan_out_initializers.hpp</label>
        <link refid="fan__in__fan__out__initializers_8hpp"/>
        <childnode refid="23091" relation="include">
        </childnode>
      </node>
      <node id="23197">
        <label>cv_mean_extractor.hpp</label>
        <link refid="cv__mean__extractor_8hpp"/>
        <childnode refid="23184" relation="include">
        </childnode>
        <childnode refid="23198" relation="include">
        </childnode>
      </node>
      <node id="23126">
        <label>lbann/layers/activations/selu.hpp</label>
        <link refid="selu_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
      </node>
      <node id="23200">
        <label>limits</label>
      </node>
      <node id="23080">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
      </node>
      <node id="23233">
        <label>lbann/callbacks/callback_io.hpp</label>
        <link refid="callback__io_8hpp"/>
        <childnode refid="23094" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23176">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="23106" relation="include">
        </childnode>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23095" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23141" relation="include">
        </childnode>
        <childnode refid="23177" relation="include">
        </childnode>
      </node>
      <node id="23254">
        <label>lbann/optimizers/adagrad.hpp</label>
        <link refid="adagrad_8hpp"/>
        <childnode refid="23082" relation="include">
        </childnode>
      </node>
      <node id="23125">
        <label>lbann/layers/activations/relu.hpp</label>
        <link refid="relu_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
      </node>
      <node id="23122">
        <label>lbann/layers/activations/exponential.hpp</label>
        <link refid="exponential_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
      </node>
      <node id="23250">
        <label>lbann/callbacks/callback_timeline.hpp</label>
        <link refid="callback__timeline_8hpp"/>
        <childnode refid="23106" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23265">
        <label>lbann/objective_functions/loss_functions/mean_absolute_deviation.hpp</label>
        <link refid="objective__functions_2loss__functions_2mean__absolute__deviation_8hpp"/>
        <childnode refid="23260" relation="include">
        </childnode>
      </node>
      <node id="23211">
        <label>offline_patches_npz.hpp</label>
        <link refid="offline__patches__npz_8hpp"/>
        <childnode refid="23212" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
      </node>
      <node id="23229">
        <label>lbann/callbacks/callback_checksmall.hpp</label>
        <link refid="callback__checksmall_8hpp"/>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23210">
        <label>lbann/data_readers/data_reader_triplet.hpp</label>
        <link refid="data__reader__triplet_8hpp"/>
        <childnode refid="23208" relation="include">
        </childnode>
        <childnode refid="23183" relation="include">
        </childnode>
        <childnode refid="23211" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23147" relation="include">
        </childnode>
        <childnode refid="23087" relation="include">
        </childnode>
      </node>
      <node id="23110">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="23074" relation="include">
        </childnode>
        <childnode refid="23066" relation="include">
        </childnode>
      </node>
      <node id="23205">
        <label>patchworks/patchworks_patch_descriptor.hpp</label>
        <link refid="patchworks__patch__descriptor_8hpp"/>
        <childnode refid="23074" relation="include">
        </childnode>
      </node>
      <node id="23269">
        <label>lbann/objective_functions/weight_regularization/l1.hpp</label>
        <link refid="l1_8hpp"/>
        <childnode refid="23104" relation="include">
        </childnode>
      </node>
      <node id="23284">
        <label>lbann/utils/glob.hpp</label>
        <link refid="glob_8hpp"/>
        <childnode refid="23285" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
      </node>
      <node id="23152">
        <label>lbann/layers/transform/concatenation.hpp</label>
        <link refid="concatenation_8hpp"/>
        <childnode refid="23145" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23137" relation="include">
        </childnode>
      </node>
      <node id="23260">
        <label>lbann/objective_functions/loss_functions/loss_function.hpp</label>
        <link refid="loss__function_8hpp"/>
        <childnode refid="23104" relation="include">
        </childnode>
        <childnode refid="23179" relation="include">
        </childnode>
      </node>
      <node id="23224">
        <label>lbann/data_store/generic_data_store.hpp</label>
        <link refid="generic__data__store_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23094" relation="include">
        </childnode>
      </node>
      <node id="23144">
        <label>lbann/layers/transform/reshape.hpp</label>
        <link refid="reshape_8hpp"/>
        <childnode refid="23145" relation="include">
        </childnode>
      </node>
      <node id="23092">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23067" relation="include">
        </childnode>
      </node>
      <node id="23288">
        <label>cstdint</label>
      </node>
      <node id="23225">
        <label>lbann/data_store/data_store_imagenet.hpp</label>
        <link refid="data__store__imagenet_8hpp"/>
        <childnode refid="23226" relation="include">
        </childnode>
      </node>
      <node id="23067">
        <label>El.hpp</label>
      </node>
      <node id="23270">
        <label>lbann/objective_functions/weight_regularization/l2.hpp</label>
        <link refid="l2_8hpp"/>
        <childnode refid="23104" relation="include">
        </childnode>
      </node>
      <node id="23189">
        <label>lbann/utils/mild_exception.hpp</label>
        <link refid="mild__exception_8hpp"/>
        <childnode refid="23087" relation="include">
        </childnode>
      </node>
      <node id="23123">
        <label>lbann/layers/activations/identity.hpp</label>
        <link refid="identity_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
      </node>
      <node id="23231">
        <label>lbann/callbacks/callback_print.hpp</label>
        <link refid="callback__print_8hpp"/>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23228">
        <label>lbann/callbacks/callback_checknan.hpp</label>
        <link refid="callback__checknan_8hpp"/>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23066">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="23067" relation="include">
        </childnode>
        <childnode refid="23068" relation="include">
        </childnode>
        <childnode refid="23069" relation="include">
        </childnode>
        <childnode refid="23074" relation="include">
        </childnode>
      </node>
      <node id="23062">
        <label>lbann/proto/proto_common.hpp</label>
        <link refid="proto__common_8hpp"/>
        <childnode refid="23063" relation="include">
        </childnode>
        <childnode refid="23093" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
        <childnode refid="23061" relation="include">
        </childnode>
      </node>
      <node id="23155">
        <label>lbann/layers/transform/safe_inv.hpp</label>
        <link refid="safe__inv_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23145" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
      </node>
      <node id="23164">
        <label>lbann/layers/regularizers/dropout.hpp</label>
        <link refid="dropout_8hpp"/>
        <childnode refid="23163" relation="include">
        </childnode>
      </node>
      <node id="23287">
        <label>lbann/utils/omp_diagnostics.hpp</label>
        <link refid="omp__diagnostics_8hpp"/>
        <childnode refid="23288" relation="include">
        </childnode>
      </node>
      <node id="23173">
        <label>lbann/io/data_buffers/distributed_io_buffer.hpp</label>
        <link refid="distributed__io__buffer_8hpp"/>
        <childnode refid="23171" relation="include">
        </childnode>
      </node>
      <node id="23157">
        <label>lbann/layers/transform/reduction.hpp</label>
        <link refid="reduction_8hpp"/>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23145" relation="include">
        </childnode>
      </node>
      <node id="23167">
        <label>lbann/layers/io/input/input_layer.hpp</label>
        <link refid="input__layer_8hpp"/>
        <childnode refid="23168" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23101" relation="include">
        </childnode>
        <childnode refid="23100" relation="include">
        </childnode>
        <childnode refid="23113" relation="include">
        </childnode>
      </node>
      <node id="23174">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23094" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
        <childnode refid="23176" relation="include">
        </childnode>
      </node>
      <node id="23182">
        <label>data_reader_image.hpp</label>
        <link refid="data__reader__image_8hpp"/>
        <childnode refid="23107" relation="include">
        </childnode>
        <childnode refid="23110" relation="include">
        </childnode>
        <childnode refid="23183" relation="include">
        </childnode>
      </node>
      <node id="23111">
        <label>cassert</label>
      </node>
      <node id="23232">
        <label>lbann/callbacks/callback_timer.hpp</label>
        <link refid="callback__timer_8hpp"/>
        <childnode refid="23096" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23235">
        <label>lbann/callbacks/callback_learning_rate.hpp</label>
        <link refid="callback__learning__rate_8hpp"/>
        <childnode refid="23094" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23102">
        <label>fcntl.h</label>
      </node>
      <node id="23262">
        <label>lbann/objective_functions/loss_functions/binary_cross_entropy.hpp</label>
        <link refid="binary__cross__entropy_8hpp"/>
        <childnode refid="23260" relation="include">
        </childnode>
      </node>
      <node id="23105">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23092" relation="include">
        </childnode>
      </node>
      <node id="23186">
        <label>opencv_extensions.hpp</label>
        <link refid="opencv__extensions_8hpp"/>
      </node>
      <node id="23194">
        <label>cv_colorizer.hpp</label>
        <link refid="cv__colorizer_8hpp"/>
        <childnode refid="23184" relation="include">
        </childnode>
      </node>
      <node id="23169">
        <label>lbann/layers/io/io_layer.hpp</label>
        <link refid="io__layer_8hpp"/>
        <childnode refid="23079" relation="include">
        </childnode>
        <childnode refid="23107" relation="include">
        </childnode>
        <childnode refid="23170" relation="include">
        </childnode>
        <childnode refid="23092" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23101" relation="include">
        </childnode>
        <childnode refid="23100" relation="include">
        </childnode>
        <childnode refid="23113" relation="include">
        </childnode>
        <childnode refid="23071" relation="include">
        </childnode>
      </node>
      <node id="23252">
        <label>lbann/callbacks/callback_save_model.hpp</label>
        <link refid="callback__save__model_8hpp"/>
        <childnode refid="23147" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
        <childnode refid="23093" relation="include">
        </childnode>
        <childnode refid="23253" relation="include">
        </childnode>
      </node>
      <node id="23286">
        <label>lbann/params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="23063" relation="include">
        </childnode>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
      </node>
      <node id="23081">
        <label>string</label>
      </node>
      <node id="23171">
        <label>lbann/io/data_buffers/generic_io_buffer.hpp</label>
        <link refid="generic__io__buffer_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23107" relation="include">
        </childnode>
      </node>
      <node id="23163">
        <label>lbann/layers/regularizers/regularizer.hpp</label>
        <link refid="regularizer_8hpp"/>
        <childnode refid="23079" relation="include">
        </childnode>
      </node>
      <node id="23268">
        <label>lbann/objective_functions/loss_functions/polya_negloglike.hpp</label>
        <link refid="polya__negloglike_8hpp"/>
        <childnode refid="23260" relation="include">
        </childnode>
      </node>
      <node id="23128">
        <label>lbann/layers/activations/smooth_relu.hpp</label>
        <link refid="smooth__relu_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
      </node>
      <node id="23089">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
      </node>
      <node id="23241">
        <label>lbann/callbacks/callback_dump_minibatch_sample_indices.hpp</label>
        <link refid="callback__dump__minibatch__sample__indices_8hpp"/>
        <childnode refid="23147" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23273">
        <label>lbann/objective_functions/layer_term.hpp</label>
        <link refid="layer__term_8hpp"/>
        <childnode refid="23104" relation="include">
        </childnode>
        <childnode refid="23158" relation="include">
        </childnode>
      </node>
      <node id="23095">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="23096" relation="include">
        </childnode>
      </node>
      <node id="23077">
        <label>map</label>
      </node>
      <node id="23219">
        <label>compound_data_reader.hpp</label>
        <link refid="compound__data__reader_8hpp"/>
        <childnode refid="23107" relation="include">
        </childnode>
        <childnode refid="23147" relation="include">
        </childnode>
      </node>
      <node id="23137">
        <label>lbann/utils/cublas_wrapper.hpp</label>
        <link refid="cublas__wrapper_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
      </node>
      <node id="23114">
        <label>lbann/models/directed_acyclic_graph.hpp</label>
        <link refid="directed__acyclic__graph_8hpp"/>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23079" relation="include">
        </childnode>
      </node>
      <node id="23094">
        <label>unordered_set</label>
      </node>
      <node id="23165">
        <label>lbann/layers/regularizers/selu_dropout.hpp</label>
        <link refid="selu__dropout_8hpp"/>
        <childnode refid="23163" relation="include">
        </childnode>
      </node>
      <node id="23263">
        <label>lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp</label>
        <link refid="cross__entropy__with__uncertainty_8hpp"/>
        <childnode refid="23260" relation="include">
        </childnode>
      </node>
      <node id="23280">
        <label>lbann/metrics/boolean_accuracy.hpp</label>
        <link refid="boolean__accuracy_8hpp"/>
        <childnode refid="23105" relation="include">
        </childnode>
      </node>
      <node id="23217">
        <label>lbann/data_readers/data_reader_numpy.hpp</label>
        <link refid="data__reader__numpy_8hpp"/>
        <childnode refid="23107" relation="include">
        </childnode>
        <childnode refid="23212" relation="include">
        </childnode>
      </node>
      <node id="23178">
        <label>lbann/layers/io/target/target_layer.hpp</label>
        <link refid="target__layer_8hpp"/>
        <childnode refid="23179" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23101" relation="include">
        </childnode>
        <childnode refid="23100" relation="include">
        </childnode>
        <childnode refid="23113" relation="include">
        </childnode>
      </node>
      <node id="23141">
        <label>omp.h</label>
      </node>
      <node id="23140">
        <label>lbann/layers/learning/base_convolution.hpp</label>
        <link refid="base__convolution_8hpp"/>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23141" relation="include">
        </childnode>
        <childnode refid="23135" relation="include">
        </childnode>
        <childnode refid="23079" relation="include">
        </childnode>
        <childnode refid="23091" relation="include">
        </childnode>
        <childnode refid="23136" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23108" relation="include">
        </childnode>
        <childnode refid="23095" relation="include">
        </childnode>
        <childnode refid="23142" relation="include">
        </childnode>
      </node>
      <node id="23139">
        <label>lbann/layers/learning/convolution.hpp</label>
        <link refid="convolution_8hpp"/>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23140" relation="include">
        </childnode>
        <childnode refid="23079" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23108" relation="include">
        </childnode>
        <childnode refid="23095" relation="include">
        </childnode>
      </node>
      <node id="23130">
        <label>lbann/layers/activations/softplus.hpp</label>
        <link refid="softplus_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
      </node>
      <node id="23190">
        <label>cv_subtractor.hpp</label>
        <link refid="cv__subtractor_8hpp"/>
        <childnode refid="23184" relation="include">
        </childnode>
        <childnode refid="23066" relation="include">
        </childnode>
      </node>
      <node id="23088">
        <label>exception</label>
      </node>
      <node id="23192">
        <label>ostream</label>
      </node>
      <node id="23129">
        <label>lbann/layers/activations/softmax.hpp</label>
        <link refid="softmax_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
        <childnode refid="23079" relation="include">
        </childnode>
        <childnode refid="23099" relation="include">
        </childnode>
        <childnode refid="23108" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23113" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23111" relation="include">
        </childnode>
      </node>
      <node id="23246">
        <label>lbann/callbacks/callback_check_reconstruction_error.hpp</label>
        <link refid="callback__check__reconstruction__error_8hpp"/>
        <childnode refid="23094" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23275">
        <label>lbann/metrics/top_k_categorical_accuracy.hpp</label>
        <link refid="top__k__categorical__accuracy_8hpp"/>
        <childnode refid="23105" relation="include">
        </childnode>
      </node>
      <node id="23209">
        <label>lbann/data_readers/data_reader_mnist_siamese.hpp</label>
        <link refid="data__reader__mnist__siamese_8hpp"/>
        <childnode refid="23208" relation="include">
        </childnode>
        <childnode refid="23183" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23147" relation="include">
        </childnode>
        <childnode refid="23087" relation="include">
        </childnode>
      </node>
      <node id="23142">
        <label>lbann/utils/im2col.hpp</label>
        <link refid="im2col_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
      </node>
      <node id="23145">
        <label>lbann/layers/transform/transform.hpp</label>
        <link refid="transform_8hpp"/>
        <childnode refid="23079" relation="include">
        </childnode>
      </node>
      <node id="23180">
        <label>lbann/layers/io/target/reconstruction.hpp</label>
        <link refid="reconstruction_8hpp"/>
        <childnode refid="23079" relation="include">
        </childnode>
        <childnode refid="23179" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23108" relation="include">
        </childnode>
      </node>
      <node id="23206">
        <label>lbann/data_readers/data_reader_cifar10.hpp</label>
        <link refid="data__reader__cifar10_8hpp"/>
        <childnode refid="23182" relation="include">
        </childnode>
      </node>
      <node id="23279">
        <label>lbann/metrics/r2.hpp</label>
        <link refid="r2_8hpp"/>
        <childnode refid="23105" relation="include">
        </childnode>
      </node>
      <node id="23115">
        <label>lbann/models/recurrent.hpp</label>
        <link refid="recurrent_8hpp"/>
        <childnode refid="23114" relation="include">
        </childnode>
      </node>
      <node id="23158">
        <label>lbann/layers/transform/evaluation.hpp</label>
        <link refid="evaluation_8hpp"/>
        <childnode refid="23145" relation="include">
        </childnode>
      </node>
      <node id="23281">
        <label>lbann/metrics/boolean_false_positives.hpp</label>
        <link refid="boolean__false__positives_8hpp"/>
        <childnode refid="23105" relation="include">
        </childnode>
      </node>
      <node id="23248">
        <label>lbann/callbacks/callback_variable_minibatch.hpp</label>
        <link refid="callback__variable__minibatch_8hpp"/>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23257">
        <label>lbann/optimizers/rmsprop.hpp</label>
        <link refid="rmsprop_8hpp"/>
        <childnode refid="23082" relation="include">
        </childnode>
        <childnode refid="23100" relation="include">
        </childnode>
      </node>
      <node id="23220">
        <label>lbann/data_readers/data_reader_merge_features.hpp</label>
        <link refid="data__reader__merge__features_8hpp"/>
        <childnode refid="23219" relation="include">
        </childnode>
      </node>
      <node id="23131">
        <label>lbann/layers/activations/swish.hpp</label>
        <link refid="swish_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
      </node>
      <node id="23143">
        <label>lbann/layers/learning/deconvolution.hpp</label>
        <link refid="deconvolution_8hpp"/>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23140" relation="include">
        </childnode>
        <childnode refid="23079" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23108" relation="include">
        </childnode>
        <childnode refid="23095" relation="include">
        </childnode>
      </node>
      <node id="23109">
        <label>random</label>
      </node>
      <node id="23239">
        <label>lbann/callbacks/callback_dump_activations.hpp</label>
        <link refid="callback__dump__activations_8hpp"/>
        <childnode refid="23147" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23276">
        <label>lbann/metrics/mean_squared_error.hpp</label>
        <link refid="metrics_2mean__squared__error_8hpp"/>
        <childnode refid="23105" relation="include">
        </childnode>
      </node>
      <node id="23091">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
      </node>
      <node id="23274">
        <label>lbann/metrics/categorical_accuracy.hpp</label>
        <link refid="categorical__accuracy_8hpp"/>
        <childnode refid="23105" relation="include">
        </childnode>
      </node>
      <node id="23203">
        <label>lbann/data_readers/data_reader_imagenet_patches.hpp</label>
        <link refid="data__reader__imagenet__patches_8hpp"/>
        <childnode refid="23182" relation="include">
        </childnode>
        <childnode refid="23204" relation="include">
        </childnode>
      </node>
      <node id="23201">
        <label>lbann/data_readers/data_reader_imagenet.hpp</label>
        <link refid="data__reader__imagenet_8hpp"/>
        <childnode refid="23182" relation="include">
        </childnode>
        <childnode refid="23183" relation="include">
        </childnode>
      </node>
      <node id="23101">
        <label>sys/types.h</label>
      </node>
      <node id="23175">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23080" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23079" relation="include">
        </childnode>
      </node>
      <node id="23234">
        <label>lbann/callbacks/callback_summary.hpp</label>
        <link refid="callback__summary_8hpp"/>
        <childnode refid="23175" relation="include">
        </childnode>
        <childnode refid="23080" relation="include">
        </childnode>
      </node>
      <node id="23097">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="23087" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23098" relation="include">
        </childnode>
        <childnode refid="23077" relation="include">
        </childnode>
      </node>
      <node id="23188">
        <label>typeinfo</label>
      </node>
      <node id="23162">
        <label>lbann/layers/regularizers/local_response_normalization.hpp</label>
        <link refid="local__response__normalization_8hpp"/>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23163" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
      </node>
      <node id="23071">
        <label>cstdio</label>
      </node>
      <node id="23195">
        <label>cv_decolorizer.hpp</label>
        <link refid="cv__decolorizer_8hpp"/>
        <childnode refid="23074" relation="include">
        </childnode>
        <childnode refid="23184" relation="include">
        </childnode>
      </node>
      <node id="23172">
        <label>lbann/io/data_buffers/partitioned_io_buffer.hpp</label>
        <link refid="partitioned__io__buffer_8hpp"/>
        <childnode refid="23171" relation="include">
        </childnode>
      </node>
      <node id="23085">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="23086" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
      </node>
      <node id="23271">
        <label>lbann/objective_functions/weight_regularization/group_lasso.hpp</label>
        <link refid="group__lasso_8hpp"/>
        <childnode refid="23104" relation="include">
        </childnode>
      </node>
      <node id="23073">
        <label>cxxabi.h</label>
      </node>
      <node id="23150">
        <label>lbann/layers/transform/sum.hpp</label>
        <link refid="sum_8hpp"/>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23145" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
      </node>
      <node id="23084">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23085" relation="include">
        </childnode>
        <childnode refid="23087" relation="include">
        </childnode>
        <childnode refid="23088" relation="include">
        </childnode>
      </node>
      <node id="23121">
        <label>lbann/layers/activations/elu.hpp</label>
        <link refid="elu_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
      </node>
      <node id="23213">
        <label>lbann/data_readers/data_reader_synthetic.hpp</label>
        <link refid="data__reader__synthetic_8hpp"/>
        <childnode refid="23107" relation="include">
        </childnode>
      </node>
      <node id="23181">
        <label>lbann/data_readers/data_reader_imagenet_org.hpp</label>
        <link refid="data__reader__imagenet__org_8hpp"/>
        <childnode refid="23182" relation="include">
        </childnode>
        <childnode refid="23110" relation="include">
        </childnode>
      </node>
      <node id="23214">
        <label>lbann/data_readers/data_reader_jag.hpp</label>
        <link refid="data__reader__jag_8hpp"/>
        <childnode refid="23212" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23185" relation="include">
        </childnode>
        <childnode refid="23107" relation="include">
        </childnode>
      </node>
      <node id="23208">
        <label>lbann/data_readers/data_reader_multi_images.hpp</label>
        <link refid="data__reader__multi__images_8hpp"/>
        <childnode refid="23201" relation="include">
        </childnode>
        <childnode refid="23183" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23147" relation="include">
        </childnode>
        <childnode refid="23087" relation="include">
        </childnode>
      </node>
      <node id="23113">
        <label>unistd.h</label>
      </node>
      <node id="23119">
        <label>lbann/layers/activations/activation.hpp</label>
        <link refid="activation_8hpp"/>
        <childnode refid="23079" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
      </node>
      <node id="23076">
        <label>vector</label>
      </node>
      <node id="23156">
        <label>lbann/layers/transform/hadamard.hpp</label>
        <link refid="hadamard_8hpp"/>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23145" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
      </node>
      <node id="23149">
        <label>lbann/layers/transform/split.hpp</label>
        <link refid="split_8hpp"/>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23145" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23137" relation="include">
        </childnode>
      </node>
      <node id="23075">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23077" relation="include">
        </childnode>
        <childnode refid="23078" relation="include">
        </childnode>
        <childnode refid="23066" relation="include">
        </childnode>
      </node>
      <node id="23063">
        <label>lbann/lbann.hpp</label>
        <link refid="lbann_8hpp"/>
        <childnode refid="23064" relation="include">
        </childnode>
        <childnode refid="23114" relation="include">
        </childnode>
        <childnode refid="23115" relation="include">
        </childnode>
        <childnode refid="23116" relation="include">
        </childnode>
        <childnode refid="23117" relation="include">
        </childnode>
        <childnode refid="23118" relation="include">
        </childnode>
        <childnode refid="23120" relation="include">
        </childnode>
        <childnode refid="23121" relation="include">
        </childnode>
        <childnode refid="23122" relation="include">
        </childnode>
        <childnode refid="23123" relation="include">
        </childnode>
        <childnode refid="23124" relation="include">
        </childnode>
        <childnode refid="23125" relation="include">
        </childnode>
        <childnode refid="23126" relation="include">
        </childnode>
        <childnode refid="23127" relation="include">
        </childnode>
        <childnode refid="23128" relation="include">
        </childnode>
        <childnode refid="23129" relation="include">
        </childnode>
        <childnode refid="23130" relation="include">
        </childnode>
        <childnode refid="23131" relation="include">
        </childnode>
        <childnode refid="23132" relation="include">
        </childnode>
        <childnode refid="23133" relation="include">
        </childnode>
        <childnode refid="23134" relation="include">
        </childnode>
        <childnode refid="23139" relation="include">
        </childnode>
        <childnode refid="23143" relation="include">
        </childnode>
        <childnode refid="23144" relation="include">
        </childnode>
        <childnode refid="23146" relation="include">
        </childnode>
        <childnode refid="23148" relation="include">
        </childnode>
        <childnode refid="23149" relation="include">
        </childnode>
        <childnode refid="23150" relation="include">
        </childnode>
        <childnode refid="23151" relation="include">
        </childnode>
        <childnode refid="23152" relation="include">
        </childnode>
        <childnode refid="23153" relation="include">
        </childnode>
        <childnode refid="23154" relation="include">
        </childnode>
        <childnode refid="23155" relation="include">
        </childnode>
        <childnode refid="23156" relation="include">
        </childnode>
        <childnode refid="23157" relation="include">
        </childnode>
        <childnode refid="23158" relation="include">
        </childnode>
        <childnode refid="23159" relation="include">
        </childnode>
        <childnode refid="23160" relation="include">
        </childnode>
        <childnode refid="23161" relation="include">
        </childnode>
        <childnode refid="23162" relation="include">
        </childnode>
        <childnode refid="23164" relation="include">
        </childnode>
        <childnode refid="23165" relation="include">
        </childnode>
        <childnode refid="23166" relation="include">
        </childnode>
        <childnode refid="23167" relation="include">
        </childnode>
        <childnode refid="23178" relation="include">
        </childnode>
        <childnode refid="23180" relation="include">
        </childnode>
        <childnode refid="23181" relation="include">
        </childnode>
        <childnode refid="23201" relation="include">
        </childnode>
        <childnode refid="23202" relation="include">
        </childnode>
        <childnode refid="23203" relation="include">
        </childnode>
        <childnode refid="23206" relation="include">
        </childnode>
        <childnode refid="23207" relation="include">
        </childnode>
        <childnode refid="23208" relation="include">
        </childnode>
        <childnode refid="23209" relation="include">
        </childnode>
        <childnode refid="23210" relation="include">
        </childnode>
        <childnode refid="23213" relation="include">
        </childnode>
        <childnode refid="23214" relation="include">
        </childnode>
        <childnode refid="23215" relation="include">
        </childnode>
        <childnode refid="23217" relation="include">
        </childnode>
        <childnode refid="23216" relation="include">
        </childnode>
        <childnode refid="23218" relation="include">
        </childnode>
        <childnode refid="23220" relation="include">
        </childnode>
        <childnode refid="23221" relation="include">
        </childnode>
        <childnode refid="23222" relation="include">
        </childnode>
        <childnode refid="23223" relation="include">
        </childnode>
        <childnode refid="23224" relation="include">
        </childnode>
        <childnode refid="23225" relation="include">
        </childnode>
        <childnode refid="23227" relation="include">
        </childnode>
        <childnode refid="23228" relation="include">
        </childnode>
        <childnode refid="23229" relation="include">
        </childnode>
        <childnode refid="23230" relation="include">
        </childnode>
        <childnode refid="23231" relation="include">
        </childnode>
        <childnode refid="23232" relation="include">
        </childnode>
        <childnode refid="23233" relation="include">
        </childnode>
        <childnode refid="23234" relation="include">
        </childnode>
        <childnode refid="23235" relation="include">
        </childnode>
        <childnode refid="23236" relation="include">
        </childnode>
        <childnode refid="23237" relation="include">
        </childnode>
        <childnode refid="23174" relation="include">
        </childnode>
        <childnode refid="23238" relation="include">
        </childnode>
        <childnode refid="23239" relation="include">
        </childnode>
        <childnode refid="23240" relation="include">
        </childnode>
        <childnode refid="23241" relation="include">
        </childnode>
        <childnode refid="23242" relation="include">
        </childnode>
        <childnode refid="23243" relation="include">
        </childnode>
        <childnode refid="23244" relation="include">
        </childnode>
        <childnode refid="23245" relation="include">
        </childnode>
        <childnode refid="23246" relation="include">
        </childnode>
        <childnode refid="23247" relation="include">
        </childnode>
        <childnode refid="23248" relation="include">
        </childnode>
        <childnode refid="23249" relation="include">
        </childnode>
        <childnode refid="23250" relation="include">
        </childnode>
        <childnode refid="23251" relation="include">
        </childnode>
        <childnode refid="23252" relation="include">
        </childnode>
        <childnode refid="23090" relation="include">
        </childnode>
        <childnode refid="23091" relation="include">
        </childnode>
        <childnode refid="23136" relation="include">
        </childnode>
        <childnode refid="23254" relation="include">
        </childnode>
        <childnode refid="23255" relation="include">
        </childnode>
        <childnode refid="23256" relation="include">
        </childnode>
        <childnode refid="23257" relation="include">
        </childnode>
        <childnode refid="23258" relation="include">
        </childnode>
        <childnode refid="23103" relation="include">
        </childnode>
        <childnode refid="23259" relation="include">
        </childnode>
        <childnode refid="23261" relation="include">
        </childnode>
        <childnode refid="23262" relation="include">
        </childnode>
        <childnode refid="23263" relation="include">
        </childnode>
        <childnode refid="23264" relation="include">
        </childnode>
        <childnode refid="23265" relation="include">
        </childnode>
        <childnode refid="23266" relation="include">
        </childnode>
        <childnode refid="23267" relation="include">
        </childnode>
        <childnode refid="23268" relation="include">
        </childnode>
        <childnode refid="23269" relation="include">
        </childnode>
        <childnode refid="23270" relation="include">
        </childnode>
        <childnode refid="23271" relation="include">
        </childnode>
        <childnode refid="23272" relation="include">
        </childnode>
        <childnode refid="23273" relation="include">
        </childnode>
        <childnode refid="23274" relation="include">
        </childnode>
        <childnode refid="23275" relation="include">
        </childnode>
        <childnode refid="23276" relation="include">
        </childnode>
        <childnode refid="23277" relation="include">
        </childnode>
        <childnode refid="23278" relation="include">
        </childnode>
        <childnode refid="23279" relation="include">
        </childnode>
        <childnode refid="23280" relation="include">
        </childnode>
        <childnode refid="23281" relation="include">
        </childnode>
        <childnode refid="23282" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23080" relation="include">
        </childnode>
        <childnode refid="23283" relation="include">
        </childnode>
        <childnode refid="23284" relation="include">
        </childnode>
        <childnode refid="23286" relation="include">
        </childnode>
        <childnode refid="23099" relation="include">
        </childnode>
        <childnode refid="23092" relation="include">
        </childnode>
        <childnode refid="23083" relation="include">
        </childnode>
        <childnode refid="23287" relation="include">
        </childnode>
      </node>
      <node id="23166">
        <label>lbann/layers/regularizers/batch_normalization.hpp</label>
        <link refid="batch__normalization_8hpp"/>
        <childnode refid="23163" relation="include">
        </childnode>
      </node>
      <node id="23261">
        <label>lbann/objective_functions/loss_functions/mean_squared_error.hpp</label>
        <link refid="objective__functions_2loss__functions_2mean__squared__error_8hpp"/>
        <childnode refid="23260" relation="include">
        </childnode>
      </node>
      <node id="23132">
        <label>lbann/layers/activations/tanh.hpp</label>
        <link refid="tanh_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
      </node>
      <node id="23134">
        <label>lbann/layers/learning/fully_connected.hpp</label>
        <link refid="fully__connected_8hpp"/>
        <childnode refid="23135" relation="include">
        </childnode>
        <childnode refid="23119" relation="include">
        </childnode>
        <childnode refid="23108" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23091" relation="include">
        </childnode>
        <childnode refid="23136" relation="include">
        </childnode>
        <childnode refid="23137" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23138" relation="include">
        </childnode>
      </node>
      <node id="23159">
        <label>lbann/layers/transform/gaussian.hpp</label>
        <link refid="gaussian_8hpp"/>
        <childnode refid="23145" relation="include">
        </childnode>
        <childnode refid="23108" relation="include">
        </childnode>
      </node>
      <node id="23103">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="23104" relation="include">
        </childnode>
        <childnode refid="23105" relation="include">
        </childnode>
      </node>
      <node id="23147">
        <label>utility</label>
      </node>
      <node id="23099">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="23100" relation="include">
        </childnode>
        <childnode refid="23101" relation="include">
        </childnode>
        <childnode refid="23102" relation="include">
        </childnode>
      </node>
      <node id="23267">
        <label>lbann/objective_functions/loss_functions/poisson_negloglike.hpp</label>
        <link refid="poisson__negloglike_8hpp"/>
        <childnode refid="23260" relation="include">
        </childnode>
      </node>
      <node id="23138">
        <label>sstream</label>
      </node>
      <node id="23133">
        <label>lbann/layers/activations/power.hpp</label>
        <link refid="power_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
      </node>
      <node id="23218">
        <label>lbann/data_readers/data_reader_merge_samples.hpp</label>
        <link refid="data__reader__merge__samples_8hpp"/>
        <childnode refid="23219" relation="include">
        </childnode>
      </node>
      <node id="23160">
        <label>lbann/layers/transform/bernoulli.hpp</label>
        <link refid="bernoulli_8hpp"/>
        <childnode refid="23145" relation="include">
        </childnode>
        <childnode refid="23108" relation="include">
        </childnode>
      </node>
      <node id="23256">
        <label>lbann/optimizers/hypergradient_adam.hpp</label>
        <link refid="hypergradient__adam_8hpp"/>
        <childnode refid="23082" relation="include">
        </childnode>
      </node>
      <node id="23151">
        <label>lbann/layers/transform/slice.hpp</label>
        <link refid="slice_8hpp"/>
        <childnode refid="23145" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23137" relation="include">
        </childnode>
      </node>
      <node id="23227">
        <label>lbann/callbacks/callback_check_init.hpp</label>
        <link refid="callback__check__init_8hpp"/>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23093">
        <label>lbann.pb.h</label>
      </node>
      <node id="23236">
        <label>lbann/callbacks/callback_debug.hpp</label>
        <link refid="callback__debug_8hpp"/>
        <childnode refid="23096" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23215">
        <label>lbann/data_readers/data_reader_nci.hpp</label>
        <link refid="data__reader__nci_8hpp"/>
        <childnode refid="23216" relation="include">
        </childnode>
      </node>
      <node id="23222">
        <label>lbann/data_readers/data_reader_pilot2_molecular.hpp</label>
        <link refid="data__reader__pilot2__molecular_8hpp"/>
        <childnode refid="23107" relation="include">
        </childnode>
        <childnode refid="23212" relation="include">
        </childnode>
      </node>
      <node id="23070">
        <label>cstdlib</label>
      </node>
      <node id="23245">
        <label>lbann/callbacks/profiler.hpp</label>
        <link refid="profiler_8hpp"/>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23230">
        <label>lbann/callbacks/callback_check_dataset.hpp</label>
        <link refid="callback__check__dataset_8hpp"/>
        <childnode refid="23098" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23168">
        <label>lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="23169" relation="include">
        </childnode>
        <childnode refid="23171" relation="include">
        </childnode>
        <childnode refid="23172" relation="include">
        </childnode>
        <childnode refid="23173" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23174" relation="include">
        </childnode>
      </node>
      <node id="23185">
        <label>opencv.hpp</label>
        <link refid="opencv_8hpp"/>
        <childnode refid="23074" relation="include">
        </childnode>
      </node>
      <node id="23242">
        <label>lbann/callbacks/callback_early_stopping.hpp</label>
        <link refid="callback__early__stopping_8hpp"/>
        <childnode refid="23094" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23087">
        <label>iostream</label>
      </node>
      <node id="23127">
        <label>lbann/layers/activations/sigmoid.hpp</label>
        <link refid="sigmoid_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
      </node>
      <node id="23117">
        <label>lbann/models/siamese.hpp</label>
        <link refid="siamese_8hpp"/>
        <childnode refid="23114" relation="include">
        </childnode>
      </node>
      <node id="23216">
        <label>data_reader_csv.hpp</label>
        <link refid="data__reader__csv_8hpp"/>
        <childnode refid="23107" relation="include">
        </childnode>
        <childnode refid="23110" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
      </node>
      <node id="23204">
        <label>cv_process_patches.hpp</label>
        <link refid="cv__process__patches_8hpp"/>
        <childnode refid="23183" relation="include">
        </childnode>
        <childnode refid="23205" relation="include">
        </childnode>
        <childnode refid="23200" relation="include">
        </childnode>
      </node>
      <node id="23082">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="23083" relation="include">
        </childnode>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
        <childnode refid="23090" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23094" relation="include">
        </childnode>
      </node>
      <node id="23106">
        <label>unordered_map</label>
      </node>
      <node id="23187">
        <label>cv_normalizer.hpp</label>
        <link refid="cv__normalizer_8hpp"/>
        <childnode refid="23188" relation="include">
        </childnode>
        <childnode refid="23184" relation="include">
        </childnode>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23189" relation="include">
        </childnode>
      </node>
      <node id="23108">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23092" relation="include">
        </childnode>
        <childnode refid="23109" relation="include">
        </childnode>
      </node>
      <node id="23148">
        <label>lbann/layers/transform/unpooling.hpp</label>
        <link refid="unpooling_8hpp"/>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23146" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23142" relation="include">
        </childnode>
      </node>
      <node id="23184">
        <label>cv_transform.hpp</label>
        <link refid="cv__transform_8hpp"/>
        <childnode refid="23185" relation="include">
        </childnode>
        <childnode refid="23186" relation="include">
        </childnode>
      </node>
      <node id="23249">
        <label>lbann/callbacks/callback_gradient_check.hpp</label>
        <link refid="callback__gradient__check_8hpp"/>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23255">
        <label>lbann/optimizers/adam.hpp</label>
        <link refid="adam_8hpp"/>
        <childnode refid="23082" relation="include">
        </childnode>
      </node>
      <node id="23282">
        <label>lbann/metrics/boolean_false_negatives.hpp</label>
        <link refid="boolean__false__negatives_8hpp"/>
        <childnode refid="23105" relation="include">
        </childnode>
      </node>
      <node id="23079">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23080" relation="include">
        </childnode>
        <childnode refid="23082" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
        <childnode refid="23095" relation="include">
        </childnode>
        <childnode refid="23092" relation="include">
        </childnode>
        <childnode refid="23093" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
      </node>
      <node id="23259">
        <label>lbann/objective_functions/loss_functions/cross_entropy.hpp</label>
        <link refid="cross__entropy_8hpp"/>
        <childnode refid="23260" relation="include">
        </childnode>
      </node>
      <node id="23153">
        <label>lbann/layers/transform/constant.hpp</label>
        <link refid="constant_8hpp"/>
        <childnode refid="23145" relation="include">
        </childnode>
      </node>
      <node id="23116">
        <label>lbann/models/greedy_layerwise_autoencoder.hpp</label>
        <link refid="greedy__layerwise__autoencoder_8hpp"/>
        <childnode refid="23064" relation="include">
        </childnode>
      </node>
      <node id="23191">
        <label>cv_augmenter.hpp</label>
        <link refid="cv__augmenter_8hpp"/>
        <childnode refid="23184" relation="include">
        </childnode>
        <childnode refid="23087" relation="include">
        </childnode>
        <childnode refid="23192" relation="include">
        </childnode>
        <childnode refid="23193" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
      </node>
      <node id="23096">
        <label>chrono</label>
      </node>
      <node id="23226">
        <label>lbann/data_store/data_store_image.hpp</label>
        <link refid="data__store__image_8hpp"/>
        <childnode refid="23224" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
      </node>
      <node id="23154">
        <label>lbann/layers/transform/dummy.hpp</label>
        <link refid="dummy_8hpp"/>
        <childnode refid="23145" relation="include">
        </childnode>
      </node>
      <node id="23247">
        <label>lbann/callbacks/callback_hang.hpp</label>
        <link refid="callback__hang_8hpp"/>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23104">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23079" relation="include">
        </childnode>
        <childnode refid="23090" relation="include">
        </childnode>
      </node>
      <node id="23086">
        <label>csignal</label>
      </node>
      <node id="23196">
        <label>cv_cropper.hpp</label>
        <link refid="cv__cropper_8hpp"/>
        <childnode refid="23184" relation="include">
        </childnode>
        <childnode refid="23147" relation="include">
        </childnode>
        <childnode refid="23192" relation="include">
        </childnode>
      </node>
      <node id="23170">
        <label>lbann/utils/dataset.hpp</label>
        <link refid="dataset_8hpp"/>
        <childnode refid="23107" relation="include">
        </childnode>
      </node>
      <node id="23283">
        <label>lbann/utils/options.hpp</label>
        <link refid="options_8hpp"/>
        <childnode refid="23087" relation="include">
        </childnode>
        <childnode refid="23077" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
      </node>
      <node id="23090">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
        <childnode refid="23091" relation="include">
        </childnode>
        <childnode refid="23092" relation="include">
        </childnode>
        <childnode refid="23093" relation="include">
        </childnode>
      </node>
      <node id="23278">
        <label>lbann/metrics/pearson_correlation.hpp</label>
        <link refid="pearson__correlation_8hpp"/>
        <childnode refid="23105" relation="include">
        </childnode>
      </node>
      <node id="23107">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23108" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23099" relation="include">
        </childnode>
        <childnode refid="23092" relation="include">
        </childnode>
        <childnode refid="23110" relation="include">
        </childnode>
        <childnode refid="23111" relation="include">
        </childnode>
        <childnode refid="23112" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23113" relation="include">
        </childnode>
      </node>
      <node id="23207">
        <label>lbann/data_readers/data_reader_mnist.hpp</label>
        <link refid="data__reader__mnist_8hpp"/>
        <childnode refid="23182" relation="include">
        </childnode>
        <childnode refid="23110" relation="include">
        </childnode>
      </node>
      <node id="23074">
        <label>lbann_config.hpp</label>
      </node>
      <node id="23198">
        <label>type_traits</label>
      </node>
      <node id="23253">
        <label>google/protobuf/message.h</label>
      </node>
      <node id="23098">
        <label>set</label>
      </node>
      <node id="23202">
        <label>lbann/data_readers/data_reader_imagenet_single.hpp</label>
        <link refid="data__reader__imagenet__single_8hpp"/>
        <childnode refid="23201" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
      </node>
      <node id="23266">
        <label>lbann/objective_functions/loss_functions/mean_absolute_error.hpp</label>
        <link refid="mean__absolute__error_8hpp"/>
        <childnode refid="23260" relation="include">
        </childnode>
      </node>
      <node id="23065">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23079" relation="include">
        </childnode>
        <childnode refid="23080" relation="include">
        </childnode>
        <childnode refid="23097" relation="include">
        </childnode>
        <childnode refid="23099" relation="include">
        </childnode>
        <childnode refid="23092" relation="include">
        </childnode>
        <childnode refid="23103" relation="include">
        </childnode>
        <childnode refid="23105" relation="include">
        </childnode>
        <childnode refid="23090" relation="include">
        </childnode>
        <childnode refid="23082" relation="include">
        </childnode>
        <childnode refid="23093" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
      </node>
      <node id="23243">
        <label>lbann/callbacks/callback_ltfb.hpp</label>
        <link refid="callback__ltfb_8hpp"/>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23244">
        <label>lbann/callbacks/callback_save_images.hpp</label>
        <link refid="callback__save__images_8hpp"/>
        <childnode refid="23147" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
        <childnode refid="23107" relation="include">
        </childnode>
      </node>
      <node id="23083">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="23135">
        <label>lbann/layers/learning/learning.hpp</label>
        <link refid="learning_8hpp"/>
        <childnode refid="23079" relation="include">
        </childnode>
      </node>
      <node id="23112">
        <label>algorithm</label>
      </node>
      <node id="23069">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="23070" relation="include">
        </childnode>
        <childnode refid="23071" relation="include">
        </childnode>
        <childnode refid="23072" relation="include">
        </childnode>
        <childnode refid="23073" relation="include">
        </childnode>
      </node>
      <node id="23060">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp</label>
        <link refid="callback__factory_8cpp"/>
        <childnode refid="23061" relation="include">
        </childnode>
      </node>
      <node id="23212">
        <label>cnpy.h</label>
      </node>
      <node id="23161">
        <label>lbann/layers/transform/uniform.hpp</label>
        <link refid="uniform_8hpp"/>
        <childnode refid="23145" relation="include">
        </childnode>
        <childnode refid="23108" relation="include">
        </childnode>
      </node>
      <node id="23064">
        <label>lbann/models/sequential.hpp</label>
        <link refid="sequential_8hpp"/>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23079" relation="include">
        </childnode>
        <childnode refid="23107" relation="include">
        </childnode>
        <childnode refid="23092" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
      </node>
      <node id="23237">
        <label>lbann/callbacks/callback_debug_io.hpp</label>
        <link refid="callback__debug__io_8hpp"/>
        <childnode refid="23096" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
        <childnode refid="23167" relation="include">
        </childnode>
      </node>
      <node id="23118">
        <label>lbann/layers/activations/atan.hpp</label>
        <link refid="atan_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
      </node>
      <node id="23193">
        <label>cstring</label>
      </node>
      <node id="23068">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="23067" relation="include">
        </childnode>
      </node>
      <node id="23179">
        <label>lbann/layers/io/target/generic_target_layer.hpp</label>
        <link refid="generic__target__layer_8hpp"/>
        <childnode refid="23169" relation="include">
        </childnode>
        <childnode refid="23168" relation="include">
        </childnode>
        <childnode refid="23172" relation="include">
        </childnode>
        <childnode refid="23173" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23101" relation="include">
        </childnode>
        <childnode refid="23100" relation="include">
        </childnode>
        <childnode refid="23113" relation="include">
        </childnode>
      </node>
      <node id="23272">
        <label>lbann/objective_functions/kl_divergence.hpp</label>
        <link refid="kl__divergence_8hpp"/>
        <childnode refid="23104" relation="include">
        </childnode>
        <childnode refid="23178" relation="include">
        </childnode>
      </node>
      <node id="23277">
        <label>lbann/metrics/mean_absolute_deviation.hpp</label>
        <link refid="metrics_2mean__absolute__deviation_8hpp"/>
        <childnode refid="23105" relation="include">
        </childnode>
      </node>
      <node id="23124">
        <label>lbann/layers/activations/leaky_relu.hpp</label>
        <link refid="leaky__relu_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
      </node>
      <node id="23221">
        <label>lbann/data_readers/data_reader_ascii.hpp</label>
        <link refid="data__reader__ascii_8hpp"/>
        <childnode refid="23107" relation="include">
        </childnode>
      </node>
      <node id="23264">
        <label>lbann/objective_functions/loss_functions/geom_negloglike.hpp</label>
        <link refid="geom__negloglike_8hpp"/>
        <childnode refid="23260" relation="include">
        </childnode>
      </node>
      <node id="23177">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="23141" relation="include">
        </childnode>
      </node>
      <node id="23223">
        <label>lbann/data_readers/data_reader_mesh.hpp</label>
        <link refid="data__reader__mesh_8hpp"/>
        <childnode refid="23107" relation="include">
        </childnode>
      </node>
      <node id="23120">
        <label>lbann/layers/activations/bent_identity.hpp</label>
        <link refid="bent__identity_8hpp"/>
        <childnode refid="23119" relation="include">
        </childnode>
      </node>
      <node id="23199">
        <label>memory</label>
      </node>
      <node id="23238">
        <label>lbann/callbacks/callback_dump_weights.hpp</label>
        <link refid="callback__dump__weights_8hpp"/>
        <childnode refid="23147" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23258">
        <label>lbann/optimizers/sgd.hpp</label>
        <link refid="sgd_8hpp"/>
        <childnode refid="23082" relation="include">
        </childnode>
      </node>
      <node id="23078">
        <label>typeindex</label>
      </node>
      <node id="23240">
        <label>lbann/callbacks/callback_dump_gradients.hpp</label>
        <link refid="callback__dump__gradients_8hpp"/>
        <childnode refid="23147" relation="include">
        </childnode>
        <childnode refid="23175" relation="include">
        </childnode>
      </node>
      <node id="23072">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <innernamespace refid="namespacelbann_1_1proto">lbann::proto</innernamespace>
    <innernamespace refid="namespacelbann_1_1proto_1_1anonymous__namespace_02callback__factory_8cpp_03">lbann::proto::anonymous_namespace{callback_factory.cpp}</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="factories_8hpp" kindref="compound">lbann/proto/factories.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="30" refid="namespacelbann_1_1proto" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">proto<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="namespacelbann_1_1proto_1_1anonymous__namespace_02callback__factory_8cpp_03" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="39" refid="namespacelbann_1_1proto_1_1anonymous__namespace_02callback__factory_8cpp_03_1ad035dbe64172ca9c5aa9c9b814966615" refkind="member"><highlight class="normal">std::unordered_set&lt;T*&gt;<sp/><ref refid="namespacelbann_1_1proto_1_1anonymous__namespace_02callback__factory_8cpp_03_1ad035dbe64172ca9c5aa9c9b814966615" kindref="member">select_from_list</ref>(std::string<sp/>names,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;T*&gt;<sp/>list)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>std::unordered_set&lt;T*&gt;<sp/>selected;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>name<sp/>:<sp/>parse_list&lt;std::string&gt;(names))<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>t<sp/>:<sp/>list)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/>t-&gt;get_name())<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected.insert(t);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>selected;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="namespacelbann_1_1proto_1a00597c8b7450c389847980cf6934a619" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1lbann__callback" kindref="compound">lbann_callback</ref>*<sp/><ref refid="namespacelbann_1_1proto_1a00597c8b7450c389847980cf6934a619" kindref="member">construct_callback</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref>*<sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Callback&amp;<sp/>proto_cb,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;execution_mode,<sp/>generic_data_reader*&gt;&amp;<sp/>data_readers,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Layer*&gt;<sp/>layer_list,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;weights*&gt;<sp/>weights_list,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref>*<sp/>summarizer)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>information</highlight></codeline>
<codeline lineno="65"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_print())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>interval<sp/>=<sp/>proto_cb.print().interval();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__print" kindref="compound">lbann_callback_print</ref>(interval);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_timer())<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__timer" kindref="compound">lbann_callback_timer</ref>(summarizer);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_disp_io_stats())<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.disp_io_stats();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>selected_layers<sp/>=<sp/>select_from_list&lt;Layer&gt;(params.layers(),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer_list);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__io" kindref="compound">lbann_callback_io</ref>(selected_layers);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_save_images())<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.save_images();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>reader<sp/>=<sp/>data_readers[<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>]<sp/>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__save__images" kindref="compound">lbann_callback_save_images</ref>(reader,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.image_dir(),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.extension());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Inter-model<sp/>communication</highlight></codeline>
<codeline lineno="89"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_ltfb())<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__ltfb" kindref="compound">lbann_callback_ltfb</ref>(proto_cb.ltfb().round_size(),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summarizer);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_imcomm())<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.imcomm();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>type_str<sp/>=<sp/>params.intermodel_comm_method();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__callback__imcomm_1acf7e894b3381e7f9b71020dc73594d6a" kindref="member">lbann_callback_imcomm::comm_type</ref><sp/>type<sp/>=<sp/>lbann_callback_imcomm::comm_type::NONE;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>lbann_callback_imcomm::comm_type::NONE;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>lbann_callback_imcomm::comm_type::NORMAL;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;onebit_quantization&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>lbann_callback_imcomm::comm_type::ONEBIT_QUANTIZATION;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;thresh_quantization&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>lbann_callback_imcomm::comm_type::THRESH_QUANTIZATION;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;adaptive_quantization&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>lbann_callback_imcomm::comm_type::ADAPTIVE_QUANTIZATION;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>inter-model<sp/>communication<sp/>type<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>type_str<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(err.str());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_set&lt;weights*&gt;<sp/>selected_weights;<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__imcomm" kindref="compound">lbann_callback_imcomm</ref>(type,<sp/>selected_weights,<sp/>summarizer);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Learning<sp/>rate<sp/>schedules</highlight></codeline>
<codeline lineno="119"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_step_learning_rate())<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.step_learning_rate();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>selected_weights<sp/>=<sp/>select_from_list&lt;weights&gt;(params.weights(),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights_list);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__step__learning__rate" kindref="compound">lbann_callback_step_learning_rate</ref>(params.step(),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.amt(),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_weights);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_adaptive_learning_rate())<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.adaptive_learning_rate();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>selected_weights<sp/>=<sp/>select_from_list&lt;weights&gt;(params.weights(),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights_list);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__adaptive__learning__rate" kindref="compound">lbann_callback_adaptive_learning_rate</ref>(params.patience(),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.amt(),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_weights);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_drop_fixed_learning_rate())<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.drop_fixed_learning_rate();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>drop_epochs;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>params.drop_epoch_size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drop_epochs.push_back(params.drop_epoch(i));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>selected_weights<sp/>=<sp/>select_from_list&lt;weights&gt;(params.weights(),</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights_list);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__drop__fixed__learning__rate" kindref="compound">lbann_callback_drop_fixed_learning_rate</ref>(drop_epochs,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.amt(),</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_weights);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_linear_growth_learning_rate())<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.linear_growth_learning_rate();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>selected_weights<sp/>=<sp/>select_from_list&lt;weights&gt;(params.weights(),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights_list);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__linear__growth__learning__rate" kindref="compound">lbann_callback_linear_growth_learning_rate</ref>(params.target(),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.num_epochs(),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.delay(),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_weights);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_optimizerwise_adaptive_learning_rate())<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.optimizerwise_adaptive_learning_rate();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>selected_weights<sp/>=<sp/>select_from_list&lt;weights&gt;(params.weights(),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights_list);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__optimizerwise__adaptive__learning__rate" kindref="compound">lbann_callback_optimizerwise_adaptive_learning_rate</ref>(params.scale(),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_weights);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_poly_learning_rate())<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.poly_learning_rate();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>selected_weights<sp/>=<sp/>select_from_list&lt;weights&gt;(params.weights(),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights_list);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__poly__learning__rate" kindref="compound">lbann_callback_poly_learning_rate</ref>(params.power(),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.num_epochs(),</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.max_iter(),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_weights);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mini-batch<sp/>schedules</highlight></codeline>
<codeline lineno="176"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_step_minibatch())<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.step_minibatch();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__step__minibatch" kindref="compound">lbann_callback_step_minibatch</ref>(params.starting_mbsize(),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.step(),</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.ramp_time());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_minibatch_schedule())<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.minibatch_schedule();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;lbann_callback_minibatch_schedule::minibatch_step&gt;<sp/>steps;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>params.step_size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>proto_step<sp/>=<sp/>params.step(i);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>steps.emplace_back(proto_step.epoch(),</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto_step.mbsize(),</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto_step.lr(),</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto_step.ramp_time());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__minibatch__schedule" kindref="compound">lbann_callback_minibatch_schedule</ref>(params.starting_mbsize(),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>steps);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Checkpointing<sp/>and<sp/>exporting</highlight></codeline>
<codeline lineno="199"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_checkpoint())<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.checkpoint();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__checkpoint" kindref="compound">lbann_callback_checkpoint</ref>(params.checkpoint_dir(),</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.checkpoint_epochs(),</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.checkpoint_steps(),</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.checkpoint_secs(),</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.checkpoint_per_rank());</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_save_model())<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.save_model();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__save__model" kindref="compound">lbann_callback_save_model</ref>(params.dir(),</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.extension());</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Profiling</highlight></codeline>
<codeline lineno="216"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_summary())<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.summary();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__summary" kindref="compound">lbann_callback_summary</ref>(summarizer,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.batch_interval(),</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.mat_interval());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_profiler())<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__profiler" kindref="compound">lbann_callback_profiler</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Debugging</highlight></codeline>
<codeline lineno="229"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_debug())<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>phase<sp/>=<sp/>proto_cb.debug().phase();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal"><sp/>||<sp/>phase<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;training&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__debug" kindref="compound">lbann_callback_debug</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>,<sp/>summarizer);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;validate&quot;</highlight><highlight class="normal"><sp/>||<sp/>phase<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;validation&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__debug" kindref="compound">lbann_callback_debug</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>,<sp/>summarizer);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal"><sp/>||<sp/>phase<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;testing&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__debug" kindref="compound">lbann_callback_debug</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>,<sp/>summarizer);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__debug" kindref="compound">lbann_callback_debug</ref>();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_debug_io())<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.debug_io();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>phase<sp/>=<sp/>params.phase();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lvl<sp/>=<sp/>params.lvl();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;train&quot;</highlight><highlight class="normal"><sp/>||<sp/>phase<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;training&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__debug__io" kindref="compound">lbann_callback_debug_io</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>,<sp/>lvl);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;validate&quot;</highlight><highlight class="normal"><sp/>||<sp/>phase<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;validation&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__debug__io" kindref="compound">lbann_callback_debug_io</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>,<sp/>lvl);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal"><sp/>||<sp/>phase<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;testing&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__debug__io" kindref="compound">lbann_callback_debug_io</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>,<sp/>lvl);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__debug__io" kindref="compound">lbann_callback_debug_io</ref>();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_dump_weights())<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.dump_weights();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__dump__weights" kindref="compound">lbann_callback_dump_weights</ref>(params.basename(),</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.interval());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_dump_activations())<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.dump_activations();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer_names<sp/>=<sp/>parse_list&lt;&gt;(params.layer_names());</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__dump__activations" kindref="compound">lbann_callback_dump_activations</ref>(params.basename(),</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.interval(),</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer_names);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_dump_gradients())<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.dump_gradients();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__dump__gradients" kindref="compound">lbann_callback_dump_gradients</ref>(params.basename(),</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.interval());</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_dump_mb_indices())<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.dump_mb_indices();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__dump__minibatch__sample__indices" kindref="compound">lbann_callback_dump_minibatch_sample_indices</ref>(params.basename(),</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.interval());</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_check_dataset())<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__check__dataset" kindref="compound">lbann_callback_check_dataset</ref>();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_check_small())<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__checksmall" kindref="compound">lbann_callback_checksmall</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_check_nan())<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__checknan" kindref="compound">lbann_callback_checknan</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_hang())<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>rank_to_hang<sp/>=<sp/>proto_cb.hang().rank();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rank_to_hang<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>HANGING<sp/>EVERY<sp/>RANK<sp/>IN<sp/>HANG<sp/>CALLBACK<sp/>***&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>HANGING<sp/>RANK<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rank_to_hang</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>IN<sp/>HANG<sp/>CALLBACK<sp/>***&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__hang" kindref="compound">lbann_callback_hang</ref>(rank_to_hang);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gradient<sp/>checking</highlight></codeline>
<codeline lineno="303"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proto_cb.has_gradient_check())<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>params<sp/>=<sp/>proto_cb.gradient_check();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__gradient__check" kindref="compound">lbann_callback_gradient_check</ref>(params.step_size(),</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.verbose(),</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.fail_on_error());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="namespacelbann_1_1proto_1abf0988db9cd58f9ef013588b440c14bd" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref>*<sp/><ref refid="namespacelbann_1_1proto_1abf0988db9cd58f9ef013588b440c14bd" kindref="member">construct_summarizer</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref>*<sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Model&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref><sp/>*summary<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>master<sp/>=<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>m.callback_size();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;size;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::Callback&amp;<sp/>callback<sp/>=<sp/>m.callback(j);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callback.has_summary())<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lbann_data::CallbackSummary&amp;<sp/>c<sp/>=<sp/>callback.summary();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;constructing<sp/>summarizer<sp/>with<sp/>dir:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>c.dir()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>to<sp/>see<sp/>if<sp/>directory<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>sb;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(<sp/>stat(c.dir().c_str(),<sp/>&amp;sb)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>S_ISDIR(sb.st_mode)<sp/>))<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;summary<sp/>directory<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>c.dir()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref>(c.dir(),<sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>summary;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>proto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/proto/factories/callback_factory.cpp"/>
  </compounddef>
</doxygen>
