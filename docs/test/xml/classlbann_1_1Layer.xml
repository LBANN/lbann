<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1Layer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>lbann::Layer</compoundname>
    <derivedcompoundref refid="classlbann_1_1activation__layer" prot="public" virt="non-virtual">lbann::activation_layer</derivedcompoundref>
    <derivedcompoundref refid="classlbann_1_1io__layer" prot="public" virt="non-virtual">lbann::io_layer</derivedcompoundref>
    <derivedcompoundref refid="classlbann_1_1learning__layer" prot="public" virt="non-virtual">lbann::learning_layer</derivedcompoundref>
    <derivedcompoundref refid="classlbann_1_1regularizer__layer" prot="public" virt="non-virtual">lbann::regularizer_layer</derivedcompoundref>
    <derivedcompoundref refid="classlbann_1_1transform__layer" prot="public" virt="non-virtual">lbann::transform_layer</derivedcompoundref>
    <includes refid="layer_8hpp" local="no">layer.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" prot="protected" static="no" mutable="no">
        <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
        <definition>lbann_comm* lbann::Layer::m_comm</definition>
        <argsstring></argsstring>
        <name>m_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reference to LBANN communicator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="357" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="357" bodyend="-1"/>
        <referencedby refid="classlbann_1_1generic__input__layer_1a8ca316b0369689949f3f4106920ec28f" compoundref="generic__input__layer_8hpp" startline="139" endline="165">lbann::generic_input_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1ae74c8c5a7e14b4fdd4902554bbc7bcef" compoundref="generic__input__layer_8hpp" startline="198" endline="241">lbann::generic_input_layer::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1input__layer_1aad8b042899d86f5b7904d9d2653b5181" compoundref="input__layer_8hpp" startline="45" endline="52">lbann::input_layer&lt; T_io_buffer, T_layout &gt;::input_layer</referencedby>
        <referencedby refid="classlbann_1_1target__layer_1ab06729051345c739c33ea445ceed100a" compoundref="target__layer_8hpp" startline="43" endline="51">lbann::target_layer&lt; T_io_buffer, T_layout &gt;::target_layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a1b528e5872357a82176ee487596b363c" compoundref="layer_8hpp" startline="346" endline="346">get_comm</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a9f850c1bdf4ae3cd986411d3cb3a524c" compoundref="base__convolution_8hpp" startline="217" endline="265">lbann::base_convolution_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ac046a5ab567cc01f9a36c6b0fc4e3b55" compoundref="batch__normalization_8hpp" startline="228" endline="292">lbann::batch_normalization&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ae4cad47f456752e4ea20add0f6f38819" compoundref="batch__normalization_8hpp" startline="558" endline="670">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a83e40edd001a0b71c31fbc9a3acb2231" compoundref="batch__normalization_8hpp" startline="672" endline="801">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1evaluation__layer_1a5300d3b7dd4719d2535f9b4838ae996f" compoundref="evaluation_8hpp" startline="69" endline="76">lbann::evaluation_layer&lt; T_layout &gt;::get_value</referencedby>
        <referencedby refid="classlbann_1_1evaluation__layer_1a6cb3ab97ec80b6cf8606b421d9761c1c" compoundref="evaluation_8hpp" startline="80" endline="98">lbann::evaluation_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" compoundref="layer_8cpp" startline="501" endline="509">setup</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">get_bp_output</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; lbann::Layer::m_neuron_dims</definition>
        <argsstring></argsstring>
        <name>m_neuron_dims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dimensions of activation tensor. If a derived class has more than one activation tensor, it is responsible for its own interpretation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="363" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="363" bodyend="-1"/>
        <referencedby refid="classlbann_1_1generic__input__layer_1ad117da4e6155159439826bba6657cf05" compoundref="generic__input__layer_8hpp" startline="129" endline="137">lbann::generic_input_layer::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a36d9962105ca89889e3f38f1c1801560" compoundref="generic__input__layer_8hpp" startline="493" endline="502">lbann::generic_input_layer::get_topo_description</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a3a970c1b23f7367276f7061563fc8b65" compoundref="generic__target__layer_8hpp" startline="114" endline="125">lbann::generic_target_layer::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a3abb27b670b5c57f2a6b1d669a7de508" compoundref="reconstruction_8hpp" startline="70" endline="82">lbann::reconstruction_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a54f53393fadbfdc73b4e72489c868433" compoundref="layer_8hpp" startline="173" endline="175">get_neuron_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a22d31298912405660ebb210c0d7c5373" compoundref="layer_8hpp" startline="250" endline="250">fp_output_dims</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a9f850c1bdf4ae3cd986411d3cb3a524c" compoundref="base__convolution_8hpp" startline="217" endline="265">lbann::base_convolution_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a4fb0ec8793656a7c32ff37c266b29a68" compoundref="base__convolution_8hpp" startline="268" endline="310">lbann::base_convolution_layer::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a0710d46aa54d92f94de920ed37f6ef11" compoundref="base__convolution_8hpp" startline="625" endline="682">lbann::base_convolution_layer::apply_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a87fb2bf066a98052938e48a82dcd4fd2" compoundref="base__convolution_8hpp" startline="685" endline="748">lbann::base_convolution_layer::apply_transposed_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a4f792e1c19d4591f305880b57f63cec3" compoundref="base__convolution_8hpp" startline="750" endline="777">lbann::base_convolution_layer::apply_bias_cpu</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a8cb0b4fb33f058ce6c211ebaf6a17f63" compoundref="base__convolution_8hpp" startline="779" endline="879">lbann::base_convolution_layer::compute_gradients_im2col</referencedby>
        <referencedby refid="classlbann_1_1convolution__layer_1abce67d7e977d148093798936aff8ee5e" compoundref="convolution_8hpp" startline="51" endline="72">lbann::convolution_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1convolution__layer_1adbb45d032ad79c793a159b7ee79eef14" compoundref="convolution_8hpp" startline="149" endline="185">lbann::convolution_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1deconvolution__layer_1a07f211e08383fe8e26b6e1b916136b67" compoundref="deconvolution_8hpp" startline="96" endline="114">lbann::deconvolution_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1deconvolution__layer_1abec9b66f0659fd4f06a39a1e8c4bd06b" compoundref="deconvolution_8hpp" startline="122" endline="159">lbann::deconvolution_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ac046a5ab567cc01f9a36c6b0fc4e3b55" compoundref="batch__normalization_8hpp" startline="228" endline="292">lbann::batch_normalization&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1aacff2c47a5455a4c28b9695f4fb37249" compoundref="batch__normalization_8hpp" startline="332" endline="440">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a7d48ad1531825fc9745c77f9ae5f68d6" compoundref="batch__normalization_8hpp" startline="442" endline="556">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ae4cad47f456752e4ea20add0f6f38819" compoundref="batch__normalization_8hpp" startline="558" endline="670">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a83e40edd001a0b71c31fbc9a3acb2231" compoundref="batch__normalization_8hpp" startline="672" endline="801">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a79c72491b5b74b64d2b10ac2636cddce" compoundref="local__response__normalization_8hpp" startline="223" endline="302">lbann::local_response_normalization_layer&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a1aac4bf5e2500749bc8bafcd254f5699" compoundref="local__response__normalization_8hpp" startline="305" endline="417">lbann::local_response_normalization_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1bernoulli__layer_1a59ea36ca262436f918f06cf3ea43d999" compoundref="bernoulli_8hpp" startline="45" endline="62">lbann::bernoulli_layer&lt; T_layout &gt;::bernoulli_layer</referencedby>
        <referencedby refid="classlbann_1_1bernoulli__layer_1aabaf1d2ba92aa4c708d3a76d82bdbdb6" compoundref="bernoulli_8hpp" startline="78" endline="87">lbann::bernoulli_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1abc44199934950480dbde30e0b7058a78" compoundref="concatenation_8hpp" startline="154" endline="206">lbann::concatenation_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1a53b3f53828d4982452dd6e79b8ebce50" compoundref="concatenation_8hpp" startline="226" endline="275">lbann::concatenation_layer&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1a530ff478d02f3d69baf8432473979d00" compoundref="concatenation_8hpp" startline="277" endline="325">lbann::concatenation_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1afd6cb5cf50acf95c2e3ba2e365be3525" compoundref="concatenation_8hpp" startline="327" endline="388">lbann::concatenation_layer&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1aa024e4ba8d10aec75c89075e6e0cc28d" compoundref="concatenation_8hpp" startline="390" endline="467">lbann::concatenation_layer&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1a00b24316ac4ac313feb751cb00d850fc" compoundref="constant_8hpp" startline="40" endline="65">lbann::constant_layer&lt; T_layout &gt;::constant_layer</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1a147f3510683632f90bd1491f80d8ef32" compoundref="constant_8hpp" startline="81" endline="90">lbann::constant_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1gaussian__layer_1af130978295e70d9d6521bf998052d298" compoundref="gaussian_8hpp" startline="48" endline="66">lbann::gaussian_layer&lt; T_layout &gt;::gaussian_layer</referencedby>
        <referencedby refid="classlbann_1_1gaussian__layer_1ab48263a742e407a8d3586ee4ece38768" compoundref="gaussian_8hpp" startline="83" endline="92">lbann::gaussian_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a5de83fe60224067c132b0f1d53024b57" compoundref="pooling_8hpp" startline="189" endline="206">lbann::pooling_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1reshape__layer_1a6161e3231e7a120bdfc0739eac08d196" compoundref="reshape_8hpp" startline="38" endline="46">lbann::reshape_layer&lt; T_layout &gt;::reshape_layer</referencedby>
        <referencedby refid="classlbann_1_1reshape__layer_1a60fd29f11e62137a0808ffe4b3730344" compoundref="reshape_8hpp" startline="51" endline="91">lbann::reshape_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1ac43785fc01d6cf6e49d3677adfaac297" compoundref="slice_8hpp" startline="156" endline="182">lbann::slice_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a824178abe2450bd331304ab0d50214ce" compoundref="slice_8hpp" startline="467" endline="471">lbann::slice_layer&lt; T_layout &gt;::get_neuron_dims</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a086c918fe72f28248f987d6a3aef355d" compoundref="slice_8hpp" startline="481" endline="500">lbann::slice_layer&lt; T_layout &gt;::fp_output_dims</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1af7e011a8e1cd89cc9f9c0224182bfb7a" compoundref="sum_8hpp" startline="88" endline="108">lbann::sum_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1uniform__layer_1a9ed147e3edd3d4556d0130a77a790f08" compoundref="uniform_8hpp" startline="48" endline="66">lbann::uniform_layer&lt; T_layout &gt;::uniform_layer</referencedby>
        <referencedby refid="classlbann_1_1uniform__layer_1a60dfb64110369be8f9802c9e010cfbd1" compoundref="uniform_8hpp" startline="83" endline="92">lbann::uniform_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1a7fe47a0c90958329efb79aee49d6247f" compoundref="unpooling_8hpp" startline="73" endline="90">lbann::unpooling_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1ab4a0b7cc4711426434983c41cd7dbc63" compoundref="unpooling_8hpp" startline="135" endline="187">lbann::unpooling_layer&lt; T_layout &gt;::fp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1ad4607102ff59de2f233a87f13967cc04" compoundref="unpooling_8hpp" startline="190" endline="237">lbann::unpooling_layer&lt; T_layout &gt;::bp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" compoundref="layer_8cpp" startline="39" endline="71">Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" compoundref="layer_8cpp" startline="535" endline="554">setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" compoundref="layer_8cpp" startline="694" endline="763">check_setup</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::Layer::m_num_neurons</definition>
        <argsstring></argsstring>
        <name>m_num_neurons</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of activation tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="365" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="365" bodyend="-1"/>
        <referencedby refid="classlbann_1_1generic__input__layer_1ad117da4e6155159439826bba6657cf05" compoundref="generic__input__layer_8hpp" startline="129" endline="137">lbann::generic_input_layer::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a8ca316b0369689949f3f4106920ec28f" compoundref="generic__input__layer_8hpp" startline="139" endline="165">lbann::generic_input_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a3a970c1b23f7367276f7061563fc8b65" compoundref="generic__target__layer_8hpp" startline="114" endline="125">lbann::generic_target_layer::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a73b35ee4dcb97a166369426d975596b2" compoundref="generic__target__layer_8hpp" startline="127" endline="133">lbann::generic_target_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a35375f4cf914ba5a308fdbd98c589408" compoundref="generic__target__layer_8hpp" startline="135" endline="145">lbann::generic_target_layer::check_setup</referencedby>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a3abb27b670b5c57f2a6b1d669a7de508" compoundref="reconstruction_8hpp" startline="70" endline="82">lbann::reconstruction_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" compoundref="layer_8hpp" startline="177" endline="179">get_num_neurons</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a4f792e1c19d4591f305880b57f63cec3" compoundref="base__convolution_8hpp" startline="750" endline="777">lbann::base_convolution_layer::apply_bias_cpu</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a8cb0b4fb33f058ce6c211ebaf6a17f63" compoundref="base__convolution_8hpp" startline="779" endline="879">lbann::base_convolution_layer::compute_gradients_im2col</referencedby>
        <referencedby refid="classlbann_1_1convolution__layer_1adbb45d032ad79c793a159b7ee79eef14" compoundref="convolution_8hpp" startline="149" endline="185">lbann::convolution_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1deconvolution__layer_1abec9b66f0659fd4f06a39a1e8c4bd06b" compoundref="deconvolution_8hpp" startline="122" endline="159">lbann::deconvolution_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1aacff2c47a5455a4c28b9695f4fb37249" compoundref="batch__normalization_8hpp" startline="332" endline="440">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ae4cad47f456752e4ea20add0f6f38819" compoundref="batch__normalization_8hpp" startline="558" endline="670">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a83e40edd001a0b71c31fbc9a3acb2231" compoundref="batch__normalization_8hpp" startline="672" endline="801">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a79c72491b5b74b64d2b10ac2636cddce" compoundref="local__response__normalization_8hpp" startline="223" endline="302">lbann::local_response_normalization_layer&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a1aac4bf5e2500749bc8bafcd254f5699" compoundref="local__response__normalization_8hpp" startline="305" endline="417">lbann::local_response_normalization_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1bernoulli__layer_1a59ea36ca262436f918f06cf3ea43d999" compoundref="bernoulli_8hpp" startline="45" endline="62">lbann::bernoulli_layer&lt; T_layout &gt;::bernoulli_layer</referencedby>
        <referencedby refid="classlbann_1_1bernoulli__layer_1aabaf1d2ba92aa4c708d3a76d82bdbdb6" compoundref="bernoulli_8hpp" startline="78" endline="87">lbann::bernoulli_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1abc44199934950480dbde30e0b7058a78" compoundref="concatenation_8hpp" startline="154" endline="206">lbann::concatenation_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1a00b24316ac4ac313feb751cb00d850fc" compoundref="constant_8hpp" startline="40" endline="65">lbann::constant_layer&lt; T_layout &gt;::constant_layer</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1a147f3510683632f90bd1491f80d8ef32" compoundref="constant_8hpp" startline="81" endline="90">lbann::constant_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1gaussian__layer_1af130978295e70d9d6521bf998052d298" compoundref="gaussian_8hpp" startline="48" endline="66">lbann::gaussian_layer&lt; T_layout &gt;::gaussian_layer</referencedby>
        <referencedby refid="classlbann_1_1gaussian__layer_1ab48263a742e407a8d3586ee4ece38768" compoundref="gaussian_8hpp" startline="83" endline="92">lbann::gaussian_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a5de83fe60224067c132b0f1d53024b57" compoundref="pooling_8hpp" startline="189" endline="206">lbann::pooling_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a76ce07a190fbe85685ea2ab4e53be7f9" compoundref="pooling_8hpp" startline="323" endline="409">lbann::pooling_layer&lt; T_layout &gt;::fp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a704aca0e1e5bba7d27b7755133e6d50b" compoundref="pooling_8hpp" startline="412" endline="494">lbann::pooling_layer&lt; T_layout &gt;::bp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1reshape__layer_1a6161e3231e7a120bdfc0739eac08d196" compoundref="reshape_8hpp" startline="38" endline="46">lbann::reshape_layer&lt; T_layout &gt;::reshape_layer</referencedby>
        <referencedby refid="classlbann_1_1reshape__layer_1a60fd29f11e62137a0808ffe4b3730344" compoundref="reshape_8hpp" startline="51" endline="91">lbann::reshape_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1uniform__layer_1a9ed147e3edd3d4556d0130a77a790f08" compoundref="uniform_8hpp" startline="48" endline="66">lbann::uniform_layer&lt; T_layout &gt;::uniform_layer</referencedby>
        <referencedby refid="classlbann_1_1uniform__layer_1a60dfb64110369be8f9802c9e010cfbd1" compoundref="uniform_8hpp" startline="83" endline="92">lbann::uniform_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1a7fe47a0c90958329efb79aee49d6247f" compoundref="unpooling_8hpp" startline="73" endline="90">lbann::unpooling_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" compoundref="layer_8cpp" startline="39" endline="71">Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" compoundref="layer_8cpp" startline="535" endline="554">setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" compoundref="layer_8cpp" startline="694" endline="763">check_setup</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::Layer::m_num_neuron_dims</definition>
        <argsstring></argsstring>
        <name>m_num_neuron_dims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of dimensions of activation tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="367" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="367" bodyend="-1"/>
        <referencedby refid="classlbann_1_1generic__input__layer_1ad117da4e6155159439826bba6657cf05" compoundref="generic__input__layer_8hpp" startline="129" endline="137">lbann::generic_input_layer::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a3a970c1b23f7367276f7061563fc8b65" compoundref="generic__target__layer_8hpp" startline="114" endline="125">lbann::generic_target_layer::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a3abb27b670b5c57f2a6b1d669a7de508" compoundref="reconstruction_8hpp" startline="70" endline="82">lbann::reconstruction_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aa35561e662de84deae26045ccb53d862" compoundref="layer_8hpp" startline="181" endline="183">get_num_neuron_dims</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a4fb0ec8793656a7c32ff37c266b29a68" compoundref="base__convolution_8hpp" startline="268" endline="310">lbann::base_convolution_layer::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a8cb0b4fb33f058ce6c211ebaf6a17f63" compoundref="base__convolution_8hpp" startline="779" endline="879">lbann::base_convolution_layer::compute_gradients_im2col</referencedby>
        <referencedby refid="classlbann_1_1convolution__layer_1adbb45d032ad79c793a159b7ee79eef14" compoundref="convolution_8hpp" startline="149" endline="185">lbann::convolution_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1deconvolution__layer_1abec9b66f0659fd4f06a39a1e8c4bd06b" compoundref="deconvolution_8hpp" startline="122" endline="159">lbann::deconvolution_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1bernoulli__layer_1a59ea36ca262436f918f06cf3ea43d999" compoundref="bernoulli_8hpp" startline="45" endline="62">lbann::bernoulli_layer&lt; T_layout &gt;::bernoulli_layer</referencedby>
        <referencedby refid="classlbann_1_1bernoulli__layer_1aabaf1d2ba92aa4c708d3a76d82bdbdb6" compoundref="bernoulli_8hpp" startline="78" endline="87">lbann::bernoulli_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1a00b24316ac4ac313feb751cb00d850fc" compoundref="constant_8hpp" startline="40" endline="65">lbann::constant_layer&lt; T_layout &gt;::constant_layer</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1a147f3510683632f90bd1491f80d8ef32" compoundref="constant_8hpp" startline="81" endline="90">lbann::constant_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1gaussian__layer_1af130978295e70d9d6521bf998052d298" compoundref="gaussian_8hpp" startline="48" endline="66">lbann::gaussian_layer&lt; T_layout &gt;::gaussian_layer</referencedby>
        <referencedby refid="classlbann_1_1gaussian__layer_1ab48263a742e407a8d3586ee4ece38768" compoundref="gaussian_8hpp" startline="83" endline="92">lbann::gaussian_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a5de83fe60224067c132b0f1d53024b57" compoundref="pooling_8hpp" startline="189" endline="206">lbann::pooling_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1reshape__layer_1a6161e3231e7a120bdfc0739eac08d196" compoundref="reshape_8hpp" startline="38" endline="46">lbann::reshape_layer&lt; T_layout &gt;::reshape_layer</referencedby>
        <referencedby refid="classlbann_1_1reshape__layer_1a60fd29f11e62137a0808ffe4b3730344" compoundref="reshape_8hpp" startline="51" endline="91">lbann::reshape_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1uniform__layer_1a9ed147e3edd3d4556d0130a77a790f08" compoundref="uniform_8hpp" startline="48" endline="66">lbann::uniform_layer&lt; T_layout &gt;::uniform_layer</referencedby>
        <referencedby refid="classlbann_1_1uniform__layer_1a60dfb64110369be8f9802c9e010cfbd1" compoundref="uniform_8hpp" startline="83" endline="92">lbann::uniform_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1a7fe47a0c90958329efb79aee49d6247f" compoundref="unpooling_8hpp" startline="73" endline="90">lbann::unpooling_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1ab4a0b7cc4711426434983c41cd7dbc63" compoundref="unpooling_8hpp" startline="135" endline="187">lbann::unpooling_layer&lt; T_layout &gt;::fp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1ad4607102ff59de2f233a87f13967cc04" compoundref="unpooling_8hpp" startline="190" endline="237">lbann::unpooling_layer&lt; T_layout &gt;::bp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" compoundref="layer_8cpp" startline="39" endline="71">Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" compoundref="layer_8cpp" startline="535" endline="554">setup_dims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; lbann::Layer::m_prev_neuron_dims</definition>
        <argsstring></argsstring>
        <name>m_prev_neuron_dims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dimensions of previous activation tensor. If a derived class has more than one previous activation tensor, it is responsible for its own interpretation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="372" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="372" bodyend="-1"/>
        <referencedby refid="classlbann_1_1Layer_1a1acc0fa44acdeffbac158fdac3467973" compoundref="layer_8hpp" startline="161" endline="163">get_prev_neuron_dims</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a9f850c1bdf4ae3cd986411d3cb3a524c" compoundref="base__convolution_8hpp" startline="217" endline="265">lbann::base_convolution_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a0710d46aa54d92f94de920ed37f6ef11" compoundref="base__convolution_8hpp" startline="625" endline="682">lbann::base_convolution_layer::apply_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a87fb2bf066a98052938e48a82dcd4fd2" compoundref="base__convolution_8hpp" startline="685" endline="748">lbann::base_convolution_layer::apply_transposed_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a8cb0b4fb33f058ce6c211ebaf6a17f63" compoundref="base__convolution_8hpp" startline="779" endline="879">lbann::base_convolution_layer::compute_gradients_im2col</referencedby>
        <referencedby refid="classlbann_1_1convolution__layer_1adbb45d032ad79c793a159b7ee79eef14" compoundref="convolution_8hpp" startline="149" endline="185">lbann::convolution_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1deconvolution__layer_1abec9b66f0659fd4f06a39a1e8c4bd06b" compoundref="deconvolution_8hpp" startline="122" endline="159">lbann::deconvolution_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1abc44199934950480dbde30e0b7058a78" compoundref="concatenation_8hpp" startline="154" endline="206">lbann::concatenation_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1af0e60f4a7e00657ceb429aaa8d7f5040" compoundref="concatenation_8hpp" startline="469" endline="474">lbann::concatenation_layer&lt; T_layout &gt;::get_prev_neuron_dims</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a5de83fe60224067c132b0f1d53024b57" compoundref="pooling_8hpp" startline="189" endline="206">lbann::pooling_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a76ce07a190fbe85685ea2ab4e53be7f9" compoundref="pooling_8hpp" startline="323" endline="409">lbann::pooling_layer&lt; T_layout &gt;::fp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a704aca0e1e5bba7d27b7755133e6d50b" compoundref="pooling_8hpp" startline="412" endline="494">lbann::pooling_layer&lt; T_layout &gt;::bp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1ab4c95d24916534cdff58b32916171ff2" compoundref="slice_8hpp" startline="207" endline="264">lbann::slice_layer&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1af5d6887cac9a0c3afab8f361cdf81034" compoundref="slice_8hpp" startline="266" endline="315">lbann::slice_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a875347929b9e4c0a70749da0dbb6469e" compoundref="slice_8hpp" startline="317" endline="386">lbann::slice_layer&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a798c10e5c19f58e38da9d2d50c49ca3e" compoundref="slice_8hpp" startline="388" endline="465">lbann::slice_layer&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1a7fe47a0c90958329efb79aee49d6247f" compoundref="unpooling_8hpp" startline="73" endline="90">lbann::unpooling_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1ab4a0b7cc4711426434983c41cd7dbc63" compoundref="unpooling_8hpp" startline="135" endline="187">lbann::unpooling_layer&lt; T_layout &gt;::fp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1ad4607102ff59de2f233a87f13967cc04" compoundref="unpooling_8hpp" startline="190" endline="237">lbann::unpooling_layer&lt; T_layout &gt;::bp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" compoundref="layer_8cpp" startline="39" endline="71">Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" compoundref="layer_8cpp" startline="535" endline="554">setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::Layer::m_num_prev_neurons</definition>
        <argsstring></argsstring>
        <name>m_num_prev_neurons</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of previous activation tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="374" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="374" bodyend="-1"/>
        <referencedby refid="classlbann_1_1generic__target__layer_1a35375f4cf914ba5a308fdbd98c589408" compoundref="generic__target__layer_8hpp" startline="135" endline="145">lbann::generic_target_layer::check_setup</referencedby>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a3abb27b670b5c57f2a6b1d669a7de508" compoundref="reconstruction_8hpp" startline="70" endline="82">lbann::reconstruction_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" compoundref="layer_8hpp" startline="165" endline="167">get_num_prev_neurons</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a8cb0b4fb33f058ce6c211ebaf6a17f63" compoundref="base__convolution_8hpp" startline="779" endline="879">lbann::base_convolution_layer::compute_gradients_im2col</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1a7fe47a0c90958329efb79aee49d6247f" compoundref="unpooling_8hpp" startline="73" endline="90">lbann::unpooling_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1ab4a0b7cc4711426434983c41cd7dbc63" compoundref="unpooling_8hpp" startline="135" endline="187">lbann::unpooling_layer&lt; T_layout &gt;::fp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1ad4607102ff59de2f233a87f13967cc04" compoundref="unpooling_8hpp" startline="190" endline="237">lbann::unpooling_layer&lt; T_layout &gt;::bp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" compoundref="layer_8cpp" startline="39" endline="71">Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" compoundref="layer_8cpp" startline="535" endline="554">setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1adc052afb38f170e839db00d3c8151d1e" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::Layer::m_num_prev_neuron_dims</definition>
        <argsstring></argsstring>
        <name>m_num_prev_neuron_dims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of dimensions of previous activation tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="376" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="376" bodyend="-1"/>
        <referencedby refid="classlbann_1_1Layer_1ace32c7df942a8d97d7a25cb8ff8ce71d" compoundref="layer_8hpp" startline="169" endline="171">get_num_prev_neuron_dims</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a8cb0b4fb33f058ce6c211ebaf6a17f63" compoundref="base__convolution_8hpp" startline="779" endline="879">lbann::base_convolution_layer::compute_gradients_im2col</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a76ce07a190fbe85685ea2ab4e53be7f9" compoundref="pooling_8hpp" startline="323" endline="409">lbann::pooling_layer&lt; T_layout &gt;::fp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a704aca0e1e5bba7d27b7755133e6d50b" compoundref="pooling_8hpp" startline="412" endline="494">lbann::pooling_layer&lt; T_layout &gt;::bp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1a7fe47a0c90958329efb79aee49d6247f" compoundref="unpooling_8hpp" startline="73" endline="90">lbann::unpooling_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" compoundref="layer_8cpp" startline="39" endline="71">Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" compoundref="layer_8cpp" startline="535" endline="554">setup_dims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1a52314601c3458268f56e017dc2ade357" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> * &gt;</type>
        <definition>std::vector&lt;AbsDistMat*&gt; lbann::Layer::m_prev_activations</definition>
        <argsstring></argsstring>
        <name>m_prev_activations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Previous activation matrices. Forward propagation inputs from each parent layer. These are typically matrix views where each column is a flattened tensor corresponding to a mini-batch sample. The matrices are owned by the layer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="384" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="384" bodyend="-1"/>
        <referencedby refid="classlbann_1_1hadamard__layer_1a8be44f24f2290b06b104294d1fe31d41" compoundref="hadamard_8hpp" startline="79" endline="110">lbann::hadamard_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1hadamard__layer_1a2150c54cc21fb5dc51d77119c20c6c21" compoundref="hadamard_8hpp" startline="112" endline="153">lbann::hadamard_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a247cc68c730284f10a2cb42985fe5f3a" compoundref="layer_8cpp" startline="73" endline="130">Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1afc0611b7c3b1537914f25a538486a8cd" compoundref="layer_8cpp" startline="385" endline="396">get_prev_activations</referencedby>
        <referencedby refid="namespacelbann_1a32006e2c89920b1ff6e8a2318650dd7f" compoundref="layer_8cpp" startline="557" endline="566">lbann::Layer::instantiate_matrices&lt; data_layout::MODEL_PARALLEL &gt;</referencedby>
        <referencedby refid="namespacelbann_1af3507a38f8992e27898d63551a987341" compoundref="layer_8cpp" startline="569" endline="578">lbann::Layer::instantiate_matrices&lt; data_layout::DATA_PARALLEL &gt;</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" compoundref="layer_8cpp" startline="600" endline="635">setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" compoundref="layer_8cpp" startline="694" endline="763">check_setup</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a888392d6ac6906093a8125c6a37de075" compoundref="layer_8cpp" startline="777" endline="820">deallocate_matrices</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1a7caf08e938141d1584e6939cefa4baed" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> * &gt;</type>
        <definition>std::vector&lt;AbsDistMat*&gt; lbann::Layer::m_activations</definition>
        <argsstring></argsstring>
        <name>m_activations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Activation matrices. Forward propagation outputs to each child layer. These are typically matrices where each column is a flattened tensor corresponding to a mini-batch sample. The matrices are owned by the layer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="391" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="391" bodyend="-1"/>
        <referencedby refid="classlbann_1_1split__layer_1aeb4caccd2675195ce75ae63485f6d402" compoundref="split_8hpp" startline="80" endline="96">lbann::split_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a247cc68c730284f10a2cb42985fe5f3a" compoundref="layer_8cpp" startline="73" endline="130">Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7e50932bb60d4cab3b21ab3fb0707ea" compoundref="layer_8cpp" startline="342" endline="368">summarize_matrices</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af69a4773804c6982e8acaf5810eaa150" compoundref="layer_8cpp" startline="397" endline="408">get_activations</referencedby>
        <referencedby refid="namespacelbann_1a32006e2c89920b1ff6e8a2318650dd7f" compoundref="layer_8cpp" startline="557" endline="566">lbann::Layer::instantiate_matrices&lt; data_layout::MODEL_PARALLEL &gt;</referencedby>
        <referencedby refid="namespacelbann_1af3507a38f8992e27898d63551a987341" compoundref="layer_8cpp" startline="569" endline="578">lbann::Layer::instantiate_matrices&lt; data_layout::DATA_PARALLEL &gt;</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" compoundref="layer_8cpp" startline="600" endline="635">setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" compoundref="layer_8cpp" startline="694" endline="763">check_setup</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a888392d6ac6906093a8125c6a37de075" compoundref="layer_8cpp" startline="777" endline="820">deallocate_matrices</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1a6fdcbf884150d0b20cffe678fefd7caa" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> * &gt;</type>
        <definition>std::vector&lt;AbsDistMat*&gt; lbann::Layer::m_prev_error_signals</definition>
        <argsstring></argsstring>
        <name>m_prev_error_signals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error signal matrices. Backward propagation inputs from each child layer. These are typically matrix views where each column is a flattened tensor corresponding to a mini-batch sample. The matrices are owned by the layer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="398" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="398" bodyend="-1"/>
        <referencedby refid="classlbann_1_1split__layer_1ae7b54dc12b2560d27f506d5f34c4074f" compoundref="split_8hpp" startline="98" endline="129">lbann::split_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a247cc68c730284f10a2cb42985fe5f3a" compoundref="layer_8cpp" startline="73" endline="130">Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aff2c8983548364c978acb09ddf58a6fc" compoundref="layer_8cpp" startline="409" endline="420">get_prev_error_signals</referencedby>
        <referencedby refid="namespacelbann_1a32006e2c89920b1ff6e8a2318650dd7f" compoundref="layer_8cpp" startline="557" endline="566">lbann::Layer::instantiate_matrices&lt; data_layout::MODEL_PARALLEL &gt;</referencedby>
        <referencedby refid="namespacelbann_1af3507a38f8992e27898d63551a987341" compoundref="layer_8cpp" startline="569" endline="578">lbann::Layer::instantiate_matrices&lt; data_layout::DATA_PARALLEL &gt;</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" compoundref="layer_8cpp" startline="600" endline="635">setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" compoundref="layer_8cpp" startline="694" endline="763">check_setup</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a888392d6ac6906093a8125c6a37de075" compoundref="layer_8cpp" startline="777" endline="820">deallocate_matrices</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> * &gt;</type>
        <definition>std::vector&lt;AbsDistMat*&gt; lbann::Layer::m_error_signals</definition>
        <argsstring></argsstring>
        <name>m_error_signals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error signal matrices. Backward propagation outputs to each parent layer. These are typically matrices where each column is a flattened tensor corresponding to a mini-batch sample. The matrices are owned by the layer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="405" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="405" bodyend="-1"/>
        <referencedby refid="classlbann_1_1Layer_1a8d942eb2cd37c346edc5ff473e0494a2" compoundref="layer_8hpp" startline="253" endline="257">add_to_error_signal</referencedby>
        <referencedby refid="classlbann_1_1hadamard__layer_1a2150c54cc21fb5dc51d77119c20c6c21" compoundref="hadamard_8hpp" startline="112" endline="153">lbann::hadamard_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a247cc68c730284f10a2cb42985fe5f3a" compoundref="layer_8cpp" startline="73" endline="130">Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7e50932bb60d4cab3b21ab3fb0707ea" compoundref="layer_8cpp" startline="342" endline="368">summarize_matrices</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ae09bc5a240e9042371203ba5ff19990c" compoundref="layer_8cpp" startline="421" endline="432">get_error_signals</referencedby>
        <referencedby refid="namespacelbann_1a32006e2c89920b1ff6e8a2318650dd7f" compoundref="layer_8cpp" startline="557" endline="566">lbann::Layer::instantiate_matrices&lt; data_layout::MODEL_PARALLEL &gt;</referencedby>
        <referencedby refid="namespacelbann_1af3507a38f8992e27898d63551a987341" compoundref="layer_8cpp" startline="569" endline="578">lbann::Layer::instantiate_matrices&lt; data_layout::DATA_PARALLEL &gt;</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" compoundref="layer_8cpp" startline="600" endline="635">setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" compoundref="layer_8cpp" startline="694" endline="763">check_setup</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a888392d6ac6906093a8125c6a37de075" compoundref="layer_8cpp" startline="777" endline="820">deallocate_matrices</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> * &gt;</type>
        <definition>std::vector&lt;weights*&gt; lbann::Layer::m_weights</definition>
        <argsstring></argsstring>
        <name>m_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>References to layer weights. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="408" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="408" bodyend="-1"/>
        <referencedby refid="classlbann_1_1Layer_1a4ee78d42284421519dd18d27b4da0957" compoundref="layer_8hpp" startline="304" endline="304">get_weights</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a9f850c1bdf4ae3cd986411d3cb3a524c" compoundref="base__convolution_8hpp" startline="217" endline="265">lbann::base_convolution_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1afa07aaa293d12cc7d28fbc8a96025900" compoundref="base__convolution_8hpp" startline="312" endline="344">lbann::base_convolution_layer::check_setup</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a1c6e967ab0c66cfa0d27f7abfbbf2be8" compoundref="base__convolution_8hpp" startline="349" endline="419">lbann::base_convolution_layer::apply_convolution_cudnn</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a130907ca7a8e3b6676bdd4186c788ef4" compoundref="base__convolution_8hpp" startline="422" endline="492">lbann::base_convolution_layer::apply_transposed_convolution_cudnn</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1aa33e490222597c4c5203d94061ae9d88" compoundref="base__convolution_8hpp" startline="494" endline="517">lbann::base_convolution_layer::apply_bias_cudnn</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1ae46e6a975c443792c606817878dc4446" compoundref="base__convolution_8hpp" startline="519" endline="622">lbann::base_convolution_layer::compute_gradients_cudnn</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a0710d46aa54d92f94de920ed37f6ef11" compoundref="base__convolution_8hpp" startline="625" endline="682">lbann::base_convolution_layer::apply_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a87fb2bf066a98052938e48a82dcd4fd2" compoundref="base__convolution_8hpp" startline="685" endline="748">lbann::base_convolution_layer::apply_transposed_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a4f792e1c19d4591f305880b57f63cec3" compoundref="base__convolution_8hpp" startline="750" endline="777">lbann::base_convolution_layer::apply_bias_cpu</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a8cb0b4fb33f058ce6c211ebaf6a17f63" compoundref="base__convolution_8hpp" startline="779" endline="879">lbann::base_convolution_layer::compute_gradients_im2col</referencedby>
        <referencedby refid="classlbann_1_1convolution__layer_1ab20636b44d2b17abdb5424df54cb9c6d" compoundref="convolution_8hpp" startline="187" endline="193">lbann::convolution_layer&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1deconvolution__layer_1a6d891396ea1c91030cd647cc111c8c5f" compoundref="deconvolution_8hpp" startline="161" endline="167">lbann::deconvolution_layer&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ac046a5ab567cc01f9a36c6b0fc4e3b55" compoundref="batch__normalization_8hpp" startline="228" endline="292">lbann::batch_normalization&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1aacff2c47a5455a4c28b9695f4fb37249" compoundref="batch__normalization_8hpp" startline="332" endline="440">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a7d48ad1531825fc9745c77f9ae5f68d6" compoundref="batch__normalization_8hpp" startline="442" endline="556">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ae4cad47f456752e4ea20add0f6f38819" compoundref="batch__normalization_8hpp" startline="558" endline="670">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a83e40edd001a0b71c31fbc9a3acb2231" compoundref="batch__normalization_8hpp" startline="672" endline="801">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" compoundref="layer_8cpp" startline="247" endline="275">forward_prop</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" compoundref="layer_8cpp" startline="277" endline="305">back_prop</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ad55c455dbae0d082cedfa68511709aae" compoundref="layer_8cpp" startline="478" endline="483">freeze</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aa43ecf9fc67eb1d596c1a69cf35d1245" compoundref="layer_8cpp" startline="485" endline="490">unfreeze</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af3c0f9f32eb631f4fdf34ad040ef8637" compoundref="layer_8cpp" startline="492" endline="499">is_frozen</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ae9df4e0b0fe7c276c79575f9e11c53af" compoundref="layer_8cpp" startline="765" endline="775">replace_weights</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ab94eb4ac28bac0c472a1da83ade4adf1" compoundref="layer_8cpp" startline="854" endline="865">write_proto</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> * &gt;</type>
        <definition>std::vector&lt;const Layer*&gt; lbann::Layer::m_parent_layers</definition>
        <argsstring></argsstring>
        <name>m_parent_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>References to parent layers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="411" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="411" bodyend="-1"/>
        <referencedby refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" compoundref="layer_8hpp" startline="260" endline="260">get_parent_layers</referencedby>
        <referencedby refid="classlbann_1_1Layer_1afdf36947beec676a71ecd6167c3bb724" compoundref="layer_8hpp" startline="276" endline="276">get_parent_names</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1a2154ad33b4bacbb5caed95fdebc735ca" compoundref="concatenation_8hpp" startline="120" endline="133">lbann::concatenation_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1abc44199934950480dbde30e0b7058a78" compoundref="concatenation_8hpp" startline="154" endline="206">lbann::concatenation_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1hadamard__layer_1ad575b8b5efddaf3ee64c358b28198de9" compoundref="hadamard_8hpp" startline="57" endline="65">lbann::hadamard_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a73e45687c97990d88a2e31dc177ef56e" compoundref="sum_8hpp" startline="76" endline="84">lbann::sum_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1af7e011a8e1cd89cc9f9c0224182bfb7a" compoundref="sum_8hpp" startline="88" endline="108">lbann::sum_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" compoundref="layer_8cpp" startline="511" endline="533">setup_pointers</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" compoundref="layer_8cpp" startline="535" endline="554">setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ab94eb4ac28bac0c472a1da83ade4adf1" compoundref="layer_8cpp" startline="854" endline="865">write_proto</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">get_bp_output</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" compoundref="layer_8cpp" startline="1227" endline="1236">add_parent_layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a9f94210cbb973f1df89ef649899094a1" compoundref="layer_8cpp" startline="1249" endline="1258">get_layer_pointers</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a001ea76cdd05e2d0d475f408f24702ee" compoundref="layer_8cpp" startline="1260" endline="1275">set_layer_pointers</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> * &gt;</type>
        <definition>std::vector&lt;const Layer*&gt; lbann::Layer::m_child_layers</definition>
        <argsstring></argsstring>
        <name>m_child_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>References to child layers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="413" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="413" bodyend="-1"/>
        <referencedby refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" compoundref="layer_8hpp" startline="264" endline="264">get_child_layers</referencedby>
        <referencedby refid="classlbann_1_1Layer_1afc7bf4e2a61a6f47f9e1f185bf92439a" compoundref="layer_8hpp" startline="275" endline="275">get_child_names</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1aa61c1f449a9f741f523921129dfb88e5" compoundref="slice_8hpp" startline="122" endline="135">lbann::slice_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1ac43785fc01d6cf6e49d3677adfaac297" compoundref="slice_8hpp" startline="156" endline="182">lbann::slice_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a086c918fe72f28248f987d6a3aef355d" compoundref="slice_8hpp" startline="481" endline="500">lbann::slice_layer&lt; T_layout &gt;::fp_output_dims</referencedby>
        <referencedby refid="classlbann_1_1split__layer_1a3e599c39385b1d707ad9f28454f52cf5" compoundref="split_8hpp" startline="68" endline="76">lbann::split_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" compoundref="layer_8cpp" startline="511" endline="533">setup_pointers</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ac6b43c63399f717cc1a4a0a2007350f2" compoundref="layer_8cpp" startline="1027" endline="1064">get_fp_output</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">get_bp_output</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ace0346ac56fd7ce7b6b44f27f224f35e" compoundref="layer_8cpp" startline="1238" endline="1247">add_child_layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a9f94210cbb973f1df89ef649899094a1" compoundref="layer_8cpp" startline="1249" endline="1258">get_layer_pointers</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a001ea76cdd05e2d0d475f408f24702ee" compoundref="layer_8cpp" startline="1260" endline="1275">set_layer_pointers</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1a841b96b25555247f52921c7f13ae1dfa" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::Layer::m_expected_num_parent_layers</definition>
        <argsstring></argsstring>
        <name>m_expected_num_parent_layers</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expected number of parent layers. A negative value indicates no limit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="418" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="418" bodyend="-1"/>
        <referencedby refid="classlbann_1_1generic__input__layer_1a0c7ce1625cd2be2368822c2662346538" compoundref="generic__input__layer_8hpp" startline="45" endline="70">lbann::generic_input_layer::generic_input_layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aa30dbf20929aaa58b5be98b98217ca88" compoundref="layer_8hpp" startline="194" endline="194">get_expected_num_parent_layers</referencedby>
        <referencedby refid="classlbann_1_1bernoulli__layer_1a59ea36ca262436f918f06cf3ea43d999" compoundref="bernoulli_8hpp" startline="45" endline="62">lbann::bernoulli_layer&lt; T_layout &gt;::bernoulli_layer</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1ab826328d5224933dfc90e246d16de50e" compoundref="concatenation_8hpp" startline="55" endline="74">lbann::concatenation_layer&lt; T_layout &gt;::concatenation_layer</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1a00b24316ac4ac313feb751cb00d850fc" compoundref="constant_8hpp" startline="40" endline="65">lbann::constant_layer&lt; T_layout &gt;::constant_layer</referencedby>
        <referencedby refid="classlbann_1_1gaussian__layer_1af130978295e70d9d6521bf998052d298" compoundref="gaussian_8hpp" startline="48" endline="66">lbann::gaussian_layer&lt; T_layout &gt;::gaussian_layer</referencedby>
        <referencedby refid="classlbann_1_1hadamard__layer_1af79b4f3d1e2709092b36fb0f38d30430" compoundref="hadamard_8hpp" startline="43" endline="50">lbann::hadamard_layer&lt; T_layout &gt;::hadamard_layer</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a00dfb715bda89ac6aaa10f045c9a49a5" compoundref="sum_8hpp" startline="52" endline="69">lbann::sum_layer&lt; T_layout &gt;::sum_layer</referencedby>
        <referencedby refid="classlbann_1_1uniform__layer_1a9ed147e3edd3d4556d0130a77a790f08" compoundref="uniform_8hpp" startline="48" endline="66">lbann::uniform_layer&lt; T_layout &gt;::uniform_layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" compoundref="layer_8cpp" startline="511" endline="533">setup_pointers</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1ac08f133dddd150319650e220ab9a523a" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::Layer::m_expected_num_child_layers</definition>
        <argsstring></argsstring>
        <name>m_expected_num_child_layers</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expected number of child layers. A negative value indicates no limit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="422" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="422" bodyend="-1"/>
        <referencedby refid="classlbann_1_1generic__target__layer_1a9b82afdbd6bb2671b0fde30c0116ada5" compoundref="generic__target__layer_8hpp" startline="51" endline="58">lbann::generic_target_layer::generic_target_layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aaeef8c7631204fc415a94dcdfbcfe93d" compoundref="layer_8hpp" startline="198" endline="198">get_expected_num_child_layers</referencedby>
        <referencedby refid="classlbann_1_1dummy__layer_1aed5bc546171348eaaf91aaf196406440" compoundref="dummy_8hpp" startline="40" endline="55">lbann::dummy_layer&lt; T_layout &gt;::dummy_layer</referencedby>
        <referencedby refid="classlbann_1_1evaluation__layer_1a55aea0fdd91154eccbbd8a1e6a8ce5e3" compoundref="evaluation_8hpp" startline="43" endline="50">lbann::evaluation_layer&lt; T_layout &gt;::evaluation_layer</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a248cf99da690964ac0209684f8c13c1d" compoundref="slice_8hpp" startline="55" endline="76">lbann::slice_layer&lt; T_layout &gt;::slice_layer</referencedby>
        <referencedby refid="classlbann_1_1split__layer_1a875f1e07dd924826e7ec62e44f697c3e" compoundref="split_8hpp" startline="46" endline="61">lbann::split_layer&lt; T_layout &gt;::split_layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" compoundref="layer_8cpp" startline="511" endline="533">setup_pointers</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" prot="protected" static="no" mutable="no">
        <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
        <definition>model* lbann::Layer::m_model</definition>
        <argsstring></argsstring>
        <name>m_model</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reference to model managing this layer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="425" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="425" bodyend="-1"/>
        <referencedby refid="classlbann_1_1generic__input__layer_1a8ca316b0369689949f3f4106920ec28f" compoundref="generic__input__layer_8hpp" startline="139" endline="165">lbann::generic_input_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1ad0b8ea79bc508bd227e08124359531c8" compoundref="generic__input__layer_8hpp" startline="170" endline="196">lbann::generic_input_layer::fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1ae74c8c5a7e14b4fdd4902554bbc7bcef" compoundref="generic__input__layer_8hpp" startline="198" endline="241">lbann::generic_input_layer::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1aaf9ac19f7dd725230bde87d859ec0f35" compoundref="generic__input__layer_8hpp" startline="248" endline="250">lbann::generic_input_layer::update_compute</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1aba732becdb02627e3ad4493ac19e8fb6" compoundref="generic__input__layer_8hpp" startline="277" endline="279">lbann::generic_input_layer::get_data_reader</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a5ed2e13553574ba9ff54565ebc049982" compoundref="generic__input__layer_8hpp" startline="286" endline="288">lbann::generic_input_layer::get_num_parallel_readers</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a82bd22c834c5ef526e0c740c80451e1b" compoundref="generic__input__layer_8hpp" startline="295" endline="297">lbann::generic_input_layer::get_num_iterations_per_epoch</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a660d82888a5c1eb72c2906d6367cbc35" compoundref="generic__input__layer_8hpp" startline="304" endline="306">lbann::generic_input_layer::get_current_step_in_epoch</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1aebca4bd6660ee5b7f99129bd84ed4f8d" compoundref="generic__input__layer_8hpp" startline="318" endline="320">lbann::generic_input_layer::get_last_mini_batch_size</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a41d278999fbd10d2cd95b9af04925cf7" compoundref="generic__input__layer_8hpp" startline="327" endline="329">lbann::generic_input_layer::get_current_mini_batch_size</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1aaaa60fb7b94353fccaff25e6a862d833" compoundref="generic__input__layer_8hpp" startline="346" endline="348">lbann::generic_input_layer::get_current_global_mini_batch_size</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a111abcde5f53746dfd6c5fe18187ee57" compoundref="generic__input__layer_8hpp" startline="355" endline="357">lbann::generic_input_layer::get_world_master_mini_batch_adjustment</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a6c14ea2a50c7e7989e8e394671e4531a" compoundref="generic__input__layer_8hpp" startline="364" endline="366">lbann::generic_input_layer::get_current_world_master_mini_batch_adjustment</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a654365ee97a64c75a547cfb7ef329304" compoundref="generic__input__layer_8hpp" startline="438" endline="438">lbann::generic_input_layer::select_dataset</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a73b35ee4dcb97a166369426d975596b2" compoundref="generic__target__layer_8hpp" startline="127" endline="133">lbann::generic_target_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a57a60f5a28c9fb78d5151801123d4dba" compoundref="generic__target__layer_8hpp" startline="156" endline="183">lbann::generic_target_layer::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a43f4de7c1846b605aa9bb6daf9338c78" compoundref="generic__target__layer_8hpp" startline="187" endline="193">lbann::generic_target_layer::update_compute</referencedby>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a09bf00610af66810bf8bbb65424d1e1a" compoundref="reconstruction_8hpp" startline="94" endline="100">lbann::reconstruction_layer&lt; T_layout &gt;::summarize_stats</referencedby>
        <referencedby refid="classlbann_1_1Layer_1afcfb6f55d12c728a59d107fe2d2fff0d" compoundref="layer_8hpp" startline="201" endline="201">get_model</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a8eed87b25ea902b223c6b7a23abf78b3" compoundref="layer_8hpp" startline="203" endline="203">set_model</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a9f850c1bdf4ae3cd986411d3cb3a524c" compoundref="base__convolution_8hpp" startline="217" endline="265">lbann::base_convolution_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1ae46e6a975c443792c606817878dc4446" compoundref="base__convolution_8hpp" startline="519" endline="622">lbann::base_convolution_layer::compute_gradients_cudnn</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a8cb0b4fb33f058ce6c211ebaf6a17f63" compoundref="base__convolution_8hpp" startline="779" endline="879">lbann::base_convolution_layer::compute_gradients_im2col</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ac046a5ab567cc01f9a36c6b0fc4e3b55" compoundref="batch__normalization_8hpp" startline="228" endline="292">lbann::batch_normalization&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1aacff2c47a5455a4c28b9695f4fb37249" compoundref="batch__normalization_8hpp" startline="332" endline="440">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a7d48ad1531825fc9745c77f9ae5f68d6" compoundref="batch__normalization_8hpp" startline="442" endline="556">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ae4cad47f456752e4ea20add0f6f38819" compoundref="batch__normalization_8hpp" startline="558" endline="670">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a83e40edd001a0b71c31fbc9a3acb2231" compoundref="batch__normalization_8hpp" startline="672" endline="801">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a478368964f515f5456324b6504a5358f" compoundref="dropout_8hpp" startline="166" endline="180">lbann::dropout&lt; T_layout &gt;::fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a358c502d8e7eeb1fed8b5df468793b09" compoundref="dropout_8hpp" startline="182" endline="216">lbann::dropout&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1aca0160de0c3db5c29a0c4c6bddd0cf4f" compoundref="dropout_8hpp" startline="219" endline="229">lbann::dropout&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1ad71de4282d2164171bbcad158a7bf1e7" compoundref="dropout_8hpp" startline="231" endline="262">lbann::dropout&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1aeafadecbcfc81734d0c1850b4004dcc3" compoundref="dropout_8hpp" startline="264" endline="310">lbann::dropout&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1a50ccce3672873a12ae69cc76c91e767a" compoundref="selu__dropout_8hpp" startline="102" endline="131">lbann::selu_dropout&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1afc80277386fef53296368579876bdb55" compoundref="selu__dropout_8hpp" startline="134" endline="154">lbann::selu_dropout&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1bernoulli__layer_1ad3b8939b6df375880247ef54f370ceb1" compoundref="bernoulli_8hpp" startline="89" endline="96">lbann::bernoulli_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1evaluation__layer_1a6cb3ab97ec80b6cf8606b421d9761c1c" compoundref="evaluation_8hpp" startline="80" endline="98">lbann::evaluation_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1gaussian__layer_1a8a0f52d4f365180dbf11e9a09b359c5e" compoundref="gaussian_8hpp" startline="94" endline="101">lbann::gaussian_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1uniform__layer_1a975ba9cfcd974fe348ee9681d1feb879" compoundref="uniform_8hpp" startline="94" endline="103">lbann::uniform_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" compoundref="layer_8cpp" startline="247" endline="275">forward_prop</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" compoundref="layer_8cpp" startline="277" endline="305">back_prop</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" compoundref="layer_8cpp" startline="600" endline="635">setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">get_bp_output</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lbann::Layer::m_using_gpus</definition>
        <argsstring></argsstring>
        <name>m_using_gpus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether current layer is using a GPU implementation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="486" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="486" bodyend="-1"/>
        <referencedby refid="classlbann_1_1entrywise__activation__layer_1a2ec05802115c5f029fa106c88ada89db" compoundref="activation_8hpp" startline="62" endline="68">lbann::entrywise_activation_layer::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1entrywise__activation__layer_1af632a590e26f335205994f1d715ae1a4" compoundref="activation_8hpp" startline="70" endline="76">lbann::entrywise_activation_layer::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1relu__layer_1af4739658d074a62cd71ce0ca7e791c06" compoundref="relu_8hpp" startline="49" endline="59">lbann::relu_layer&lt; T_layout &gt;::relu_layer</referencedby>
        <referencedby refid="classlbann_1_1softmax__layer_1ad17b123fdc1c1d5fc57a1abe601de2b6" compoundref="softmax_8hpp" startline="93" endline="105">lbann::softmax_layer&lt; T_layout &gt;::softmax_layer</referencedby>
        <referencedby refid="classlbann_1_1softmax__layer_1a8532a4e2b1669840cea80cfde383bebb" compoundref="softmax_8hpp" startline="107" endline="120">lbann::softmax_layer&lt; T_layout &gt;::operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a6a75532bdaa2ca3879034f2a76085a06" compoundref="layer_8hpp" startline="189" endline="189">using_gpus</referencedby>
        <referencedby refid="classlbann_1_1convolution__layer_1acec65090b712cb902dbf58a6c037cf0c" compoundref="convolution_8hpp" startline="117" endline="141">lbann::convolution_layer&lt; T_layout &gt;::convolution_layer</referencedby>
        <referencedby refid="classlbann_1_1convolution__layer_1aaca2c840fe41d8025efce91d6e9211b9" compoundref="convolution_8hpp" startline="197" endline="205">lbann::convolution_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1convolution__layer_1a610f24f98b548434cd4d22419f47c7f0" compoundref="convolution_8hpp" startline="207" endline="215">lbann::convolution_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1deconvolution__layer_1a8d9e59dbf6b8d8506fd1e59e0bcd4439" compoundref="deconvolution_8hpp" startline="69" endline="93">lbann::deconvolution_layer&lt; T_layout &gt;::deconvolution_layer</referencedby>
        <referencedby refid="classlbann_1_1deconvolution__layer_1a6ebbb96c605a96b41fdbbc848dcaa877" compoundref="deconvolution_8hpp" startline="171" endline="179">lbann::deconvolution_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1deconvolution__layer_1a70649662ff27ddacf0f5584829022b72" compoundref="deconvolution_8hpp" startline="181" endline="189">lbann::deconvolution_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a04f092712566fd732e5fc5e48ee16f4d" compoundref="batch__normalization_8hpp" startline="98" endline="128">lbann::batch_normalization&lt; T_layout &gt;::batch_normalization</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a92ad52396d7083c84ec20016ad5e994b" compoundref="batch__normalization_8hpp" startline="316" endline="322">lbann::batch_normalization&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ad9aedd689cd8923d8c8e9c4e57a4e8b7" compoundref="batch__normalization_8hpp" startline="324" endline="330">lbann::batch_normalization&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a301be902f285c5cf1d0cd743119a09d8" compoundref="dropout_8hpp" startline="50" endline="65">lbann::dropout&lt; T_layout &gt;::dropout</referencedby>
        <referencedby refid="classlbann_1_1dropout_1abf399d8463721d322aedbb76d60534c6" compoundref="dropout_8hpp" startline="117" endline="122">lbann::dropout&lt; T_layout &gt;::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a9ed94f278835b6c9e8185de01705e53a" compoundref="dropout_8hpp" startline="148" endline="154">lbann::dropout&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a053e3f392a6a90b3bcc07f62f3818bce" compoundref="dropout_8hpp" startline="156" endline="162">lbann::dropout&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a478368964f515f5456324b6504a5358f" compoundref="dropout_8hpp" startline="166" endline="180">lbann::dropout&lt; T_layout &gt;::fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a5fa2f3175590cc85aa984c42cc9acd95" compoundref="local__response__normalization_8hpp" startline="58" endline="77">lbann::local_response_normalization_layer&lt; T_layout &gt;::local_response_normalization_layer</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1ac7b2ce4970eb7163685fb0a4a69328fc" compoundref="local__response__normalization_8hpp" startline="142" endline="148">lbann::local_response_normalization_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1ae94544765a459a6609f2c2ebbbc3e9d9" compoundref="local__response__normalization_8hpp" startline="150" endline="156">lbann::local_response_normalization_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1ab826328d5224933dfc90e246d16de50e" compoundref="concatenation_8hpp" startline="55" endline="74">lbann::concatenation_layer&lt; T_layout &gt;::concatenation_layer</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1a27938ca2422fd120cfbdf823705af01a" compoundref="concatenation_8hpp" startline="210" endline="216">lbann::concatenation_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1abd2a2a3aa260646c98d842993fee6247" compoundref="concatenation_8hpp" startline="218" endline="224">lbann::concatenation_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1a00b24316ac4ac313feb751cb00d850fc" compoundref="constant_8hpp" startline="40" endline="65">lbann::constant_layer&lt; T_layout &gt;::constant_layer</referencedby>
        <referencedby refid="classlbann_1_1dummy__layer_1aed5bc546171348eaaf91aaf196406440" compoundref="dummy_8hpp" startline="40" endline="55">lbann::dummy_layer&lt; T_layout &gt;::dummy_layer</referencedby>
        <referencedby refid="classlbann_1_1hadamard__layer_1a8be44f24f2290b06b104294d1fe31d41" compoundref="hadamard_8hpp" startline="79" endline="110">lbann::hadamard_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1hadamard__layer_1a2150c54cc21fb5dc51d77119c20c6c21" compoundref="hadamard_8hpp" startline="112" endline="153">lbann::hadamard_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1ad0694acb2188cb539a1ae616846600c3" compoundref="pooling_8hpp" startline="91" endline="124">lbann::pooling_layer&lt; T_layout &gt;::pooling_layer</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a0af01b6939abe9798fa3a0b1f5292721" compoundref="pooling_8hpp" startline="241" endline="247">lbann::pooling_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1ab58fe97e976f60df37f958e79fd56ff9" compoundref="pooling_8hpp" startline="249" endline="255">lbann::pooling_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a248cf99da690964ac0209684f8c13c1d" compoundref="slice_8hpp" startline="55" endline="76">lbann::slice_layer&lt; T_layout &gt;::slice_layer</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a4ade139cc44a7de47761680e1d44cb08" compoundref="slice_8hpp" startline="191" endline="197">lbann::slice_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a080654076a1b266b2c6d229e9fccf250" compoundref="slice_8hpp" startline="199" endline="205">lbann::slice_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1split__layer_1a875f1e07dd924826e7ec62e44f697c3e" compoundref="split_8hpp" startline="46" endline="61">lbann::split_layer&lt; T_layout &gt;::split_layer</referencedby>
        <referencedby refid="classlbann_1_1split__layer_1aeb4caccd2675195ce75ae63485f6d402" compoundref="split_8hpp" startline="80" endline="96">lbann::split_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1split__layer_1ae7b54dc12b2560d27f506d5f34c4074f" compoundref="split_8hpp" startline="98" endline="129">lbann::split_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a00dfb715bda89ac6aaa10f045c9a49a5" compoundref="sum_8hpp" startline="52" endline="69">lbann::sum_layer&lt; T_layout &gt;::sum_layer</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a8d235d61507e76f42ee83a74d1098977" compoundref="sum_8hpp" startline="126" endline="165">lbann::sum_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a0dcddd056cf81c1fbea22a5e1c01c6d9" compoundref="sum_8hpp" startline="167" endline="200">lbann::sum_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1aad98d442d6f5ad1feb5f1d71bdb1df49" compoundref="unpooling_8hpp" startline="116" endline="122">lbann::unpooling_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1ad585e8ddaa34c221fa8e4d108c8950ae" compoundref="unpooling_8hpp" startline="124" endline="130">lbann::unpooling_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" compoundref="layer_8cpp" startline="39" endline="71">Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" compoundref="layer_8cpp" startline="247" endline="275">forward_prop</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" compoundref="layer_8cpp" startline="277" endline="305">back_prop</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" compoundref="layer_8cpp" startline="458" endline="476">clear_error_signals</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" compoundref="layer_8cpp" startline="501" endline="509">setup</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ac6b43c63399f717cc1a4a0a2007350f2" compoundref="layer_8cpp" startline="1027" endline="1064">get_fp_output</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">get_bp_output</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" prot="protected" static="no" mutable="no">
        <type><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref> *</type>
        <definition>cudnn::cudnn_manager* lbann::Layer::m_cudnn</definition>
        <argsstring></argsstring>
        <name>m_cudnn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reference to cuDNN manager. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="489" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="489" bodyend="-1"/>
        <referencedby refid="classlbann_1_1relu__layer_1af4739658d074a62cd71ce0ca7e791c06" compoundref="relu_8hpp" startline="49" endline="59">lbann::relu_layer&lt; T_layout &gt;::relu_layer</referencedby>
        <referencedby refid="classlbann_1_1relu__layer_1a682fbf36187cb7f985581b5d4095ae14" compoundref="relu_8hpp" startline="121" endline="147">lbann::relu_layer&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1relu__layer_1a236d3e3c92376465d79104703bc8b005" compoundref="relu_8hpp" startline="149" endline="178">lbann::relu_layer&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1softmax__layer_1ad17b123fdc1c1d5fc57a1abe601de2b6" compoundref="softmax_8hpp" startline="93" endline="105">lbann::softmax_layer&lt; T_layout &gt;::softmax_layer</referencedby>
        <referencedby refid="classlbann_1_1softmax__layer_1a8532a4e2b1669840cea80cfde383bebb" compoundref="softmax_8hpp" startline="107" endline="120">lbann::softmax_layer&lt; T_layout &gt;::operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" compoundref="layer_8hpp" startline="348" endline="348">get_cudnn_manager</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a1489c6034dc88a8749ccd0ae4a3b02a8" compoundref="base__convolution_8hpp" startline="95" endline="137">lbann::base_convolution_layer::base_convolution_layer</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a9f850c1bdf4ae3cd986411d3cb3a524c" compoundref="base__convolution_8hpp" startline="217" endline="265">lbann::base_convolution_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a4fb0ec8793656a7c32ff37c266b29a68" compoundref="base__convolution_8hpp" startline="268" endline="310">lbann::base_convolution_layer::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a1c6e967ab0c66cfa0d27f7abfbbf2be8" compoundref="base__convolution_8hpp" startline="349" endline="419">lbann::base_convolution_layer::apply_convolution_cudnn</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a130907ca7a8e3b6676bdd4186c788ef4" compoundref="base__convolution_8hpp" startline="422" endline="492">lbann::base_convolution_layer::apply_transposed_convolution_cudnn</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1aa33e490222597c4c5203d94061ae9d88" compoundref="base__convolution_8hpp" startline="494" endline="517">lbann::base_convolution_layer::apply_bias_cudnn</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1ae46e6a975c443792c606817878dc4446" compoundref="base__convolution_8hpp" startline="519" endline="622">lbann::base_convolution_layer::compute_gradients_cudnn</referencedby>
        <referencedby refid="classlbann_1_1convolution__layer_1acec65090b712cb902dbf58a6c037cf0c" compoundref="convolution_8hpp" startline="117" endline="141">lbann::convolution_layer&lt; T_layout &gt;::convolution_layer</referencedby>
        <referencedby refid="classlbann_1_1deconvolution__layer_1a8d9e59dbf6b8d8506fd1e59e0bcd4439" compoundref="deconvolution_8hpp" startline="69" endline="93">lbann::deconvolution_layer&lt; T_layout &gt;::deconvolution_layer</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a04f092712566fd732e5fc5e48ee16f4d" compoundref="batch__normalization_8hpp" startline="98" endline="128">lbann::batch_normalization&lt; T_layout &gt;::batch_normalization</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ac046a5ab567cc01f9a36c6b0fc4e3b55" compoundref="batch__normalization_8hpp" startline="228" endline="292">lbann::batch_normalization&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ab4737c3efcafa9bff1e68084b7f36283" compoundref="batch__normalization_8hpp" startline="294" endline="314">lbann::batch_normalization&lt; T_layout &gt;::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1aacff2c47a5455a4c28b9695f4fb37249" compoundref="batch__normalization_8hpp" startline="332" endline="440">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a7d48ad1531825fc9745c77f9ae5f68d6" compoundref="batch__normalization_8hpp" startline="442" endline="556">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a301be902f285c5cf1d0cd743119a09d8" compoundref="dropout_8hpp" startline="50" endline="65">lbann::dropout&lt; T_layout &gt;::dropout</referencedby>
        <referencedby refid="classlbann_1_1dropout_1abaa3d0c6d99200b186d0a55201f77b6a" compoundref="dropout_8hpp" startline="125" endline="144">lbann::dropout&lt; T_layout &gt;::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1ad71de4282d2164171bbcad158a7bf1e7" compoundref="dropout_8hpp" startline="231" endline="262">lbann::dropout&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1aeafadecbcfc81734d0c1850b4004dcc3" compoundref="dropout_8hpp" startline="264" endline="310">lbann::dropout&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a5fa2f3175590cc85aa984c42cc9acd95" compoundref="local__response__normalization_8hpp" startline="58" endline="77">lbann::local_response_normalization_layer&lt; T_layout &gt;::local_response_normalization_layer</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a715b08cfc4bfed730a066f6d9cedef86" compoundref="local__response__normalization_8hpp" startline="160" endline="187">lbann::local_response_normalization_layer&lt; T_layout &gt;::fp_compute_cudnn</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a78b0d081956abf4f09874d59b4bf4fc8" compoundref="local__response__normalization_8hpp" startline="190" endline="220">lbann::local_response_normalization_layer&lt; T_layout &gt;::bp_compute_cudnn</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1ab826328d5224933dfc90e246d16de50e" compoundref="concatenation_8hpp" startline="55" endline="74">lbann::concatenation_layer&lt; T_layout &gt;::concatenation_layer</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1afd6cb5cf50acf95c2e3ba2e365be3525" compoundref="concatenation_8hpp" startline="327" endline="388">lbann::concatenation_layer&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1aa024e4ba8d10aec75c89075e6e0cc28d" compoundref="concatenation_8hpp" startline="390" endline="467">lbann::concatenation_layer&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1a00b24316ac4ac313feb751cb00d850fc" compoundref="constant_8hpp" startline="40" endline="65">lbann::constant_layer&lt; T_layout &gt;::constant_layer</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1aa3450d358b093a29067500acc0ac4dff" compoundref="constant_8hpp" startline="99" endline="110">lbann::constant_layer&lt; T_layout &gt;::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1dummy__layer_1aed5bc546171348eaaf91aaf196406440" compoundref="dummy_8hpp" startline="40" endline="55">lbann::dummy_layer&lt; T_layout &gt;::dummy_layer</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1ad0694acb2188cb539a1ae616846600c3" compoundref="pooling_8hpp" startline="91" endline="124">lbann::pooling_layer&lt; T_layout &gt;::pooling_layer</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a022eb4448992f654288b6b1ca95fcb6c" compoundref="pooling_8hpp" startline="260" endline="286">lbann::pooling_layer&lt; T_layout &gt;::fp_compute_cudnn</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a457b52475f27ab55985f1e47515e7c3b" compoundref="pooling_8hpp" startline="289" endline="320">lbann::pooling_layer&lt; T_layout &gt;::bp_compute_cudnn</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a248cf99da690964ac0209684f8c13c1d" compoundref="slice_8hpp" startline="55" endline="76">lbann::slice_layer&lt; T_layout &gt;::slice_layer</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a875347929b9e4c0a70749da0dbb6469e" compoundref="slice_8hpp" startline="317" endline="386">lbann::slice_layer&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a798c10e5c19f58e38da9d2d50c49ca3e" compoundref="slice_8hpp" startline="388" endline="465">lbann::slice_layer&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1split__layer_1a875f1e07dd924826e7ec62e44f697c3e" compoundref="split_8hpp" startline="46" endline="61">lbann::split_layer&lt; T_layout &gt;::split_layer</referencedby>
        <referencedby refid="classlbann_1_1split__layer_1ae7b54dc12b2560d27f506d5f34c4074f" compoundref="split_8hpp" startline="98" endline="129">lbann::split_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a00dfb715bda89ac6aaa10f045c9a49a5" compoundref="sum_8hpp" startline="52" endline="69">lbann::sum_layer&lt; T_layout &gt;::sum_layer</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a8d235d61507e76f42ee83a74d1098977" compoundref="sum_8hpp" startline="126" endline="165">lbann::sum_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a0dcddd056cf81c1fbea22a5e1c01c6d9" compoundref="sum_8hpp" startline="167" endline="200">lbann::sum_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" compoundref="layer_8cpp" startline="247" endline="275">forward_prop</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" compoundref="layer_8cpp" startline="277" endline="305">back_prop</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a888392d6ac6906093a8125c6a37de075" compoundref="layer_8cpp" startline="777" endline="820">deallocate_matrices</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ac6b43c63399f717cc1a4a0a2007350f2" compoundref="layer_8cpp" startline="1027" endline="1064">get_fp_output</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">get_bp_output</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1afdc60df9731a3ecdeeeb8175fa483676" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lbann::Layer::m_frozen</definition>
        <argsstring></argsstring>
        <name>m_frozen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Avoid back prop if frozen </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="492" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="492" bodyend="-1"/>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a9f850c1bdf4ae3cd986411d3cb3a524c" compoundref="base__convolution_8hpp" startline="217" endline="265">lbann::base_convolution_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ac046a5ab567cc01f9a36c6b0fc4e3b55" compoundref="batch__normalization_8hpp" startline="228" endline="292">lbann::batch_normalization&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ae4a050e51e3a9bec431cf8b7a5660f2c" compoundref="layer_8cpp" startline="307" endline="314">update</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ad55c455dbae0d082cedfa68511709aae" compoundref="layer_8cpp" startline="478" endline="483">freeze</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aa43ecf9fc67eb1d596c1a69cf35d1245" compoundref="layer_8cpp" startline="485" endline="490">unfreeze</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af3c0f9f32eb631f4fdf34ad040ef8637" compoundref="layer_8cpp" startline="492" endline="499">is_frozen</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1ab1bd9ab0a6f9e554f4dc936d8316028e" prot="protected" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
        <definition>EvalType lbann::Layer::m_fp_time</definition>
        <argsstring></argsstring>
        <name>m_fp_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Time spent in forward propagation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="522" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="522" bodyend="-1"/>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" compoundref="layer_8cpp" startline="247" endline="275">forward_prop</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" compoundref="layer_8cpp" startline="316" endline="322">reset_counters</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a7f3f26e2ae0497f9a00fd6bc56b50543" compoundref="layer_8cpp" startline="324" endline="340">summarize_stats</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1aa4e439c1d6a656e709dc4736c9380476" prot="protected" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
        <definition>EvalType lbann::Layer::m_fp_compute_time</definition>
        <argsstring></argsstring>
        <name>m_fp_compute_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Time spent in the forward propagation computation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="524" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="524" bodyend="-1"/>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" compoundref="layer_8cpp" startline="247" endline="275">forward_prop</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" compoundref="layer_8cpp" startline="316" endline="322">reset_counters</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1aa60fc41627bcaa9c345775bf5737bb45" prot="protected" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
        <definition>EvalType lbann::Layer::m_bp_time</definition>
        <argsstring></argsstring>
        <name>m_bp_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Time spent in backward propagation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="526" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="526" bodyend="-1"/>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" compoundref="layer_8cpp" startline="277" endline="305">back_prop</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" compoundref="layer_8cpp" startline="316" endline="322">reset_counters</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a7f3f26e2ae0497f9a00fd6bc56b50543" compoundref="layer_8cpp" startline="324" endline="340">summarize_stats</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1ae28626457a58943b25e7a2920fc271f0" prot="protected" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
        <definition>EvalType lbann::Layer::m_bp_compute_time</definition>
        <argsstring></argsstring>
        <name>m_bp_compute_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Time spent in the backward propagation computation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="528" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="528" bodyend="-1"/>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" compoundref="layer_8cpp" startline="277" endline="305">back_prop</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" compoundref="layer_8cpp" startline="316" endline="322">reset_counters</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1ab7d84533662b02d01ba6685ad6f20935" prot="protected" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
        <definition>EvalType lbann::Layer::m_update_time</definition>
        <argsstring></argsstring>
        <name>m_update_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Time spent in updates. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="530" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="530" bodyend="-1"/>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ae4a050e51e3a9bec431cf8b7a5660f2c" compoundref="layer_8cpp" startline="307" endline="314">update</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" compoundref="layer_8cpp" startline="316" endline="322">reset_counters</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a7f3f26e2ae0497f9a00fd6bc56b50543" compoundref="layer_8cpp" startline="324" endline="340">summarize_stats</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string lbann::Layer::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> instance&apos;s name. Each layer in a model should have a unique, preferably human-readable, name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="536" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="536" bodyend="-1"/>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a09bf00610af66810bf8bbb65424d1e1a" compoundref="reconstruction_8hpp" startline="94" endline="100">lbann::reconstruction_layer&lt; T_layout &gt;::summarize_stats</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">get_name</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">set_name</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a9f850c1bdf4ae3cd986411d3cb3a524c" compoundref="base__convolution_8hpp" startline="217" endline="265">lbann::base_convolution_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1afa07aaa293d12cc7d28fbc8a96025900" compoundref="base__convolution_8hpp" startline="312" endline="344">lbann::base_convolution_layer::check_setup</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ac046a5ab567cc01f9a36c6b0fc4e3b55" compoundref="batch__normalization_8hpp" startline="228" endline="292">lbann::batch_normalization&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" compoundref="layer_8cpp" startline="39" endline="71">Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a7f3f26e2ae0497f9a00fd6bc56b50543" compoundref="layer_8cpp" startline="324" endline="340">summarize_stats</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7e50932bb60d4cab3b21ab3fb0707ea" compoundref="layer_8cpp" startline="342" endline="368">summarize_matrices</referencedby>
        <referencedby refid="classlbann_1_1Layer_1afc0611b7c3b1537914f25a538486a8cd" compoundref="layer_8cpp" startline="385" endline="396">get_prev_activations</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af69a4773804c6982e8acaf5810eaa150" compoundref="layer_8cpp" startline="397" endline="408">get_activations</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aff2c8983548364c978acb09ddf58a6fc" compoundref="layer_8cpp" startline="409" endline="420">get_prev_error_signals</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ae09bc5a240e9042371203ba5ff19990c" compoundref="layer_8cpp" startline="421" endline="432">get_error_signals</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" compoundref="layer_8cpp" startline="511" endline="533">setup_pointers</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" compoundref="layer_8cpp" startline="694" endline="763">check_setup</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::Layer::Layer</definition>
        <argsstring>(lbann_comm *comm)</argsstring>
        <name>Layer</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="64" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="39" bodyend="71"/>
        <references refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" compoundref="layer_8hpp" startline="536">m_name</references>
        <references refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" compoundref="layer_8hpp" startline="363">m_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" compoundref="layer_8hpp" startline="365">m_num_neurons</references>
        <references refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" compoundref="layer_8hpp" startline="367">m_num_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" compoundref="layer_8hpp" startline="372">m_prev_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" compoundref="layer_8hpp" startline="374">m_num_prev_neurons</references>
        <references refid="classlbann_1_1Layer_1adc052afb38f170e839db00d3c8151d1e" compoundref="layer_8hpp" startline="376">m_num_prev_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">m_using_gpus</references>
        <references refid="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" compoundref="layer_8cpp" startline="316" endline="322">reset_counters</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a247cc68c730284f10a2cb42985fe5f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::Layer::Layer</definition>
        <argsstring>(const Layer &amp;other)</argsstring>
        <name>Layer</name>
        <param>
          <type>const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="65" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="73" bodyend="130"/>
        <references refid="classlbann_1_1Layer_1a52314601c3458268f56e017dc2ade357" compoundref="layer_8hpp" startline="384">m_prev_activations</references>
        <references refid="classlbann_1_1Layer_1a7caf08e938141d1584e6939cefa4baed" compoundref="layer_8hpp" startline="391">m_activations</references>
        <references refid="classlbann_1_1Layer_1a6fdcbf884150d0b20cffe678fefd7caa" compoundref="layer_8hpp" startline="398">m_prev_error_signals</references>
        <references refid="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" compoundref="layer_8hpp" startline="405">m_error_signals</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> &amp;</type>
        <definition>Layer &amp; lbann::Layer::operator=</definition>
        <argsstring>(const Layer &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="66" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="132" bodyend="189"/>
        <references refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" compoundref="layer_8hpp" startline="357">m_comm</references>
        <references refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" compoundref="layer_8hpp" startline="363">m_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" compoundref="layer_8hpp" startline="365">m_num_neurons</references>
        <references refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" compoundref="layer_8hpp" startline="367">m_num_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" compoundref="layer_8hpp" startline="372">m_prev_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" compoundref="layer_8hpp" startline="374">m_num_prev_neurons</references>
        <references refid="classlbann_1_1Layer_1adc052afb38f170e839db00d3c8151d1e" compoundref="layer_8hpp" startline="376">m_num_prev_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" compoundref="layer_8hpp" startline="408">m_weights</references>
        <references refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" compoundref="layer_8hpp" startline="411">m_parent_layers</references>
        <references refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" compoundref="layer_8hpp" startline="413">m_child_layers</references>
        <references refid="classlbann_1_1Layer_1a841b96b25555247f52921c7f13ae1dfa" compoundref="layer_8hpp" startline="418">m_expected_num_parent_layers</references>
        <references refid="classlbann_1_1Layer_1ac08f133dddd150319650e220ab9a523a" compoundref="layer_8hpp" startline="422">m_expected_num_child_layers</references>
        <references refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" compoundref="layer_8hpp" startline="425">m_model</references>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">m_using_gpus</references>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">m_cudnn</references>
        <references refid="classlbann_1_1Layer_1afdc60df9731a3ecdeeeb8175fa483676" compoundref="layer_8hpp" startline="492">m_frozen</references>
        <references refid="classlbann_1_1Layer_1ab1bd9ab0a6f9e554f4dc936d8316028e" compoundref="layer_8hpp" startline="522">m_fp_time</references>
        <references refid="classlbann_1_1Layer_1aa4e439c1d6a656e709dc4736c9380476" compoundref="layer_8hpp" startline="524">m_fp_compute_time</references>
        <references refid="classlbann_1_1Layer_1aa60fc41627bcaa9c345775bf5737bb45" compoundref="layer_8hpp" startline="526">m_bp_time</references>
        <references refid="classlbann_1_1Layer_1ae28626457a58943b25e7a2920fc271f0" compoundref="layer_8hpp" startline="528">m_bp_compute_time</references>
        <references refid="classlbann_1_1Layer_1ab7d84533662b02d01ba6685ad6f20935" compoundref="layer_8hpp" startline="530">m_update_time</references>
        <references refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" compoundref="layer_8hpp" startline="536">m_name</references>
        <references refid="classlbann_1_1Layer_1a888392d6ac6906093a8125c6a37de075" compoundref="layer_8cpp" startline="777" endline="820">deallocate_matrices</references>
        <references refid="classlbann_1_1Layer_1a52314601c3458268f56e017dc2ade357" compoundref="layer_8hpp" startline="384">m_prev_activations</references>
        <references refid="classlbann_1_1Layer_1a7caf08e938141d1584e6939cefa4baed" compoundref="layer_8hpp" startline="391">m_activations</references>
        <references refid="classlbann_1_1Layer_1a6fdcbf884150d0b20cffe678fefd7caa" compoundref="layer_8hpp" startline="398">m_prev_error_signals</references>
        <references refid="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" compoundref="layer_8hpp" startline="405">m_error_signals</references>
        <referencedby refid="classlbann_1_1relu__layer_1a455500a9ee8e9fbef2db3d8943e65d7d" compoundref="relu_8hpp" startline="70" endline="77">lbann::relu_layer&lt; T_layout &gt;::operator=</referencedby>
        <referencedby refid="classlbann_1_1softmax__layer_1a8532a4e2b1669840cea80cfde383bebb" compoundref="softmax_8hpp" startline="107" endline="120">lbann::softmax_layer&lt; T_layout &gt;::operator=</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a76d36777d01144cafe7b33ab5ce739d2" compoundref="generic__input__layer_8hpp" startline="95" endline="102">lbann::generic_input_layer::operator=</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a7c15e3fe4f1fd7f0ccdbc4c3ed8c793e" compoundref="generic__target__layer_8hpp" startline="68" endline="81">lbann::generic_target_layer::operator=</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1ad31a2eac6843bd8643538530f1017c32" compoundref="base__convolution_8hpp" startline="170" endline="197">lbann::base_convolution_layer::operator=</referencedby>
        <referencedby refid="classlbann_1_1fully__connected__layer_1ab06d01021d4e89cd2f4f64c330e7cc31" compoundref="fully__connected_8hpp" startline="132" endline="153">lbann::fully_connected_layer&lt; T_layout &gt;::operator=</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1aeb3c03a8dd166a64a77a26ee06ba81cd" compoundref="batch__normalization_8hpp" startline="161" endline="195">lbann::batch_normalization&lt; T_layout &gt;::operator=</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a0243b0bc3c2a4239a5ba6d64e6566a15" compoundref="dropout_8hpp" startline="80" endline="98">lbann::dropout&lt; T_layout &gt;::operator=</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a7a1e5eb532bbf72c6334ac865d0694a3" compoundref="local__response__normalization_8hpp" startline="91" endline="100">lbann::local_response_normalization_layer&lt; T_layout &gt;::operator=</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1aa4563c71596c91bb568a6808d38e8758" compoundref="selu__dropout_8hpp" startline="72" endline="82">lbann::selu_dropout&lt; T_layout &gt;::operator=</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1af91f0850e13dd854e095f2c9d00d58b2" compoundref="concatenation_8hpp" startline="91" endline="108">lbann::concatenation_layer&lt; T_layout &gt;::operator=</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1acd09fc03a5c22c4127222b722c4d6ce5" compoundref="pooling_8hpp" startline="140" endline="152">lbann::pooling_layer&lt; T_layout &gt;::operator=</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a24fb9ce808d587210faa4e3b34dc1aff" compoundref="slice_8hpp" startline="93" endline="110">lbann::slice_layer&lt; T_layout &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a68c3f57587956da938406812f13ecb78" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>lbann::Layer::~Layer</definition>
        <argsstring>()</argsstring>
        <name>~Layer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="67" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="191" bodyend="207"/>
        <references refid="classlbann_1_1Layer_1a888392d6ac6906093a8125c6a37de075" compoundref="layer_8cpp" startline="777" endline="820">deallocate_matrices</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1af420f22bbac801c85483ade84588a23f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>virtual Layer* lbann::Layer::copy</definition>
        <argsstring>() const =0</argsstring>
        <name>copy</name>
        <reimplementedby refid="classlbann_1_1tanh__layer_1ad42d3814131e6d8588c1cb4bfba8ebb6">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1identity__layer_1ac9407c3e6f576eb2c3b873f37daed159">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1exponential__layer_1ac1f8c1e00ceddeb059f9ee6dd77052af">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1atan__layer_1accb8ca944735c1c7acccecc188fe100b">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1power__layer_1adb52a06aad68e2daee5ce2b738954bcb">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1swish__layer_1ad88f1660edf910883ab89ef66e4cf14d">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1softplus__layer_1aef624d9020d403f6a19da8742ec9c1d2">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1bent__identity__layer_1aab5919fa670a2d93045c723f7dfce5ab">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1smooth__relu__layer_1af6fb922556c2debf7bec8d6f376dbe94">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1reshape__layer_1a41685576d72830e400c31536d1d5bab2">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1leaky__relu__layer_1a5567cfef802bfed6be3e092970b88ff9">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1selu__layer_1a93b696880571fad03f9aa142153117fa">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1reconstruction__layer_1a7f6587284527a50475bf1cc0868fa595">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1hadamard__layer_1ae194aeb83fefa09a45ff4b534839e667">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1evaluation__layer_1a2fd584fec624d984d455ea82d92933ef">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1safe__inv__layer_1aaaf9a3b769c579122cd361caa65c7958">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1target__layer_1a7cff9e162514ee6c8be9803ba3902fca">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1input__layer_1a02eb5e9b97c1da48997995cb89d297ec">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1elu__layer_1adc65c53cdd440f516f6018894a9befde">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1unpooling__layer_1ad8458ddba48f92e2b7b8e3bacd5c801e">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1dummy__layer_1a673315d873a571bd4b3cacfeffff329c">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1split__layer_1ae6b974e17e27163c6856b6114b7d6362">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1bernoulli__layer_1acf1c58e256f8f5c494a15be4537cdb37">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1uniform__layer_1a3d148d514eaf8524a8ad3ec13ab69d59">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1gaussian__layer_1af8522e7d3c3da9a123180b49d9110367">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1constant__layer_1adf44af96fef92b565a933b04fecd0fa2">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1sum__layer_1a8b6581df51a10b1511c1df6322f445a4">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1reduction__layer_1a5a47c9c732716928131445230ef97af6">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1relu__layer_1af17be85b90887cf3d413fd21e7e20b5c">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1selu__dropout_1a58659790298874e1dc15a45b3199db91">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1sigmoid__layer_1a9ebc522a655f638eae27e51e759ad72f">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1dropout_1a0e6e50b50f8c2620315f3257bbab41b3">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1local__response__normalization__layer_1a2bccec49f9b3840a2d9170cb202c1397">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1concatenation__layer_1a8cdb0b6f5dee578477a3125f5da74573">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1deconvolution__layer_1aac6d10cbe30d5fcfed0a584321012b3a">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1slice__layer_1a8c2b93a3ed24b239cc429ee85ee7ef29">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1softmax__layer_1adbde9ddc7c6cec83645d4bebf8b54113">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1convolution__layer_1ac2d126a93bc690a959daed54658aabd5">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1pooling__layer_1a58f9e6223649bb79ad10a2411602d71d">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1fully__connected__layer_1a7e838b85cb7bf075def5a88fba2ace20">copy</reimplementedby>
        <reimplementedby refid="classlbann_1_1batch__normalization_1af149d82996f351a5897a16a78ced113d">copy</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy function. This function dynamically allocates memory for a layer instance and instantiates a copy. The caller is responsible for deallocating the instance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="74" column="1"/>
        <referencedby refid="classlbann_1_1siamese__model_1a7ff41cffb060500605124959f1a2a6cf" compoundref="siamese_8cpp" startline="56" endline="146">lbann::siamese_model::setup_layer_topology</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string lbann::Layer::get_type</definition>
        <argsstring>() const =0</argsstring>
        <name>get_type</name>
        <reimplementedby refid="classlbann_1_1tanh__layer_1a756fe7a6c9f9f7d3a43f2a507a76b6d8">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1identity__layer_1ac2032946d94c88d898e8f35d9e0ed799">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1exponential__layer_1a1af0f57aab2940d09bd1f0ba671fc171">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1atan__layer_1a4971aa6ba30e72d0e589993621c925a0">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1power__layer_1ab92cf57b093aea946fe60369226ac80a">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1swish__layer_1a136f8194f91a1148ab31bce29c08e3c8">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1softplus__layer_1ae95163214d6129880586b11d2de407a1">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1bent__identity__layer_1aaecb80232b00be688db24c235c6de074">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1smooth__relu__layer_1a33833fe4b2693b8d25b286d9af7444e5">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1reshape__layer_1af8ed6ed2bb208478ec7a339ee58e0aa6">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1leaky__relu__layer_1a76f9d4a88ffedc6bf38f6cccb88e9894">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1selu__layer_1a5c1cec500adb135bac681610d53dee79">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1hadamard__layer_1a2981073aa177cc71da8c0e83563a7fa0">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1evaluation__layer_1a8762999841e8afe89a87a9c3db3da0df">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1safe__inv__layer_1a6ee075564c6b683a42fc77b16638a588">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1reconstruction__layer_1a5f3bced2474caea9b728639633ac25ce">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1elu__layer_1a7597f25495bd76ae8716ffd2bfb7afa2">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1unpooling__layer_1a62d5cc8bb9c2c5fa7b4b82ee8de9d8e6">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1dummy__layer_1a060a484950e1ba36ce49bb2af3e409ec">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1input__layer_1af596126d1b2d1604743906d04d32419b">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1split__layer_1a3c0863c5c28e69f09fa586f8ff57c757">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1bernoulli__layer_1a077a9d4c6846e97c6d6f2614898d44b8">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1target__layer_1a6b5dad32cf3b771d6db1f99914ab63c4">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1uniform__layer_1aeae476799ac7ed20ba21f39841352e47">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1gaussian__layer_1a7c9082127b954a05359b6cac9f01122c">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1constant__layer_1ae4fb6731f212f6889e31f0c6b7ba9712">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1sum__layer_1a852552a520dec8e906b0d76524d73cc4">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1reduction__layer_1a442261c36971a6f7188d58eba50ef798">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1relu__layer_1afcf519aa5e19169c2b7a71aa0ee16aae">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1selu__dropout_1a983e7bf62f995a1fe24363f7b1ff0182">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1sigmoid__layer_1a5082da099cb5e56910da4373952b98dc">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a5392ea11b5eb98a8040bf5b5deed836a">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1dropout_1a4d07cd79c7a4ab29db233a361aede358">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1concatenation__layer_1a5c6edd4ca11a102b809987851f51e2d4">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1local__response__normalization__layer_1ad566e7894d7eb1eb0fd1560686bf2388">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1slice__layer_1aa7c27032d75d8e0d36a76b0763c4f215">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1deconvolution__layer_1a8258c15978a081e3d3166a6a05579985">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1softmax__layer_1a344145869f2f28f91d9de1fec74075e5">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1convolution__layer_1ac0f341b98118f5494c95f9048bdb7a43">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1pooling__layer_1a2af67eebe2d051b141253bdba18f54ff">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1fully__connected__layer_1abd51271a19a8cce44ba4f2d11eaaaee7">get_type</reimplementedby>
        <reimplementedby refid="classlbann_1_1batch__normalization_1a1a773049354935cc2841bea8aa8bd94f">get_type</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the layer type&apos;s name. A layer type name should be brief, human-readable description of the layer&apos;s mathematical operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="80" column="1"/>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac3e88ef582a7e3949b6e016ca2b17459" compoundref="callback__debug_8cpp" startline="37" endline="41">lbann::lbann_callback_debug::on_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1acb3d05be6c600f4d61957ccf10606ddc" compoundref="callback__debug_8cpp" startline="43" endline="47">lbann::lbann_callback_debug::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1adaf60c995d2638a40d9c87a923c53865" compoundref="callback__debug_8cpp" startline="49" endline="53">lbann::lbann_callback_debug::on_backward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19a8ec63f55fc86024c9ab8fe0836500" compoundref="callback__debug_8cpp" startline="55" endline="59">lbann::lbann_callback_debug::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a83fe16882119a54afe59ba616fe1722a" compoundref="callback__debug_8cpp" startline="98" endline="113">lbann::lbann_callback_debug::on_evaluate_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19639823e288e7599947c0abfaa6d1f4" compoundref="callback__debug_8cpp" startline="115" endline="130">lbann::lbann_callback_debug::on_evaluate_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__profiler_1af78237a67eaacf2508f31ad72b8ff8a7" compoundref="profiler_8cpp" startline="121" endline="134">lbann::lbann_callback_profiler::get_color</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__profiler_1adc7cf77381bec8ab1cc5ba5e554ec268" compoundref="profiler_8cpp" startline="136" endline="138">lbann::lbann_callback_profiler::on_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__profiler_1a6cfc4cf84fe4229f627d18ad19eaa415" compoundref="profiler_8cpp" startline="140" endline="142">lbann::lbann_callback_profiler::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__profiler_1a158d8d47bd7a2e38a1f5589030fa523b" compoundref="profiler_8cpp" startline="144" endline="146">lbann::lbann_callback_profiler::on_backward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__profiler_1a3fe2bc2b07b2e8e5873c9afb94cebe93" compoundref="profiler_8cpp" startline="148" endline="150">lbann::lbann_callback_profiler::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1Layer_1acc0803d3428914ca1eb5988c4309174a" compoundref="layer_8cpp" startline="209" endline="213">get_description</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ab94eb4ac28bac0c472a1da83ade4adf1" compoundref="layer_8cpp" startline="854" endline="865">write_proto</referencedby>
        <referencedby refid="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" compoundref="model_8cpp" startline="294" endline="310">lbann::model::print_layer_description</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string lbann::Layer::get_name</definition>
        <argsstring>() const</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the layer instance&apos;s name. Each layer in a model should have a unique, preferably human-readable, name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="85" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="85" bodyend="85"/>
        <references refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" compoundref="layer_8hpp" startline="536">m_name</references>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a738c3f06ea3cee1e8b11672fde6b594e" compoundref="reconstruction_8hpp" startline="57" endline="61">lbann::reconstruction_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1abc44199934950480dbde30e0b7058a78" compoundref="concatenation_8hpp" startline="154" endline="206">lbann::concatenation_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1af7e011a8e1cd89cc9f9c0224182bfb7a" compoundref="sum_8hpp" startline="88" endline="108">lbann::sum_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a9f8659993a180f1bb1a8bd875814d33b" compoundref="sum_8hpp" startline="110" endline="124">lbann::sum_layer&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a09388ae76566a6a93c957ab76cd54dcd" compoundref="callback__checknan_8cpp" startline="35" endline="49">lbann::lbann_callback_checknan::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checksmall_1a2f50695feb1444145bae251f2e94b721" compoundref="callback__checksmall_8cpp" startline="35" endline="48">lbann::lbann_callback_checksmall::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1ac3e88ef582a7e3949b6e016ca2b17459" compoundref="callback__debug_8cpp" startline="37" endline="41">lbann::lbann_callback_debug::on_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1acb3d05be6c600f4d61957ccf10606ddc" compoundref="callback__debug_8cpp" startline="43" endline="47">lbann::lbann_callback_debug::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1adaf60c995d2638a40d9c87a923c53865" compoundref="callback__debug_8cpp" startline="49" endline="53">lbann::lbann_callback_debug::on_backward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19a8ec63f55fc86024c9ab8fe0836500" compoundref="callback__debug_8cpp" startline="55" endline="59">lbann::lbann_callback_debug::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a83fe16882119a54afe59ba616fe1722a" compoundref="callback__debug_8cpp" startline="98" endline="113">lbann::lbann_callback_debug::on_evaluate_forward_prop_begin</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug_1a19639823e288e7599947c0abfaa6d1f4" compoundref="callback__debug_8cpp" startline="115" endline="130">lbann::lbann_callback_debug::on_evaluate_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__debug__io_1a3c9897a583441381f82a11246aea4424" compoundref="callback__debug__io_8cpp" startline="54" endline="84">lbann::lbann_callback_debug_io::print_fp_start</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__activations_1acf4429a44ead6ffea303528618bc6572" compoundref="callback__dump__activations_8cpp" startline="35" endline="55">lbann::lbann_callback_dump_activations::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__minibatch__sample__indices_1a34d4564309168b3ab0b2e3092e2f9355" compoundref="callback__dump__minibatch__sample__indices_8cpp" startline="37" endline="58">lbann::lbann_callback_dump_minibatch_sample_indices::dump_to_file</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timeline_1a28f4387fda222bf988d744e0b2ec8b4b" compoundref="callback__timeline_8cpp" startline="78" endline="81">lbann::lbann_callback_timeline::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__timeline_1a0de42325a96128f7e41ecf8004b99b26" compoundref="callback__timeline_8cpp" startline="87" endline="90">lbann::lbann_callback_timeline::on_backward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1Layer_1acc0803d3428914ca1eb5988c4309174a" compoundref="layer_8cpp" startline="209" endline="213">get_description</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ab94eb4ac28bac0c472a1da83ade4adf1" compoundref="layer_8cpp" startline="854" endline="865">write_proto</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ac6b43c63399f717cc1a4a0a2007350f2" compoundref="layer_8cpp" startline="1027" endline="1064">get_fp_output</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">get_bp_output</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af4a093d91552cf079217eb346bbb847f" compoundref="layer_8cpp" startline="1218" endline="1225">get_layer_names</referencedby>
        <referencedby refid="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" compoundref="model_8cpp" startline="294" endline="310">lbann::model::print_layer_description</referencedby>
        <referencedby refid="classlbann_1_1siamese__model_1a7ff41cffb060500605124959f1a2a6cf" compoundref="siamese_8cpp" startline="56" endline="146">lbann::siamese_model::setup_layer_topology</referencedby>
        <referencedby refid="namespacelbann_1_1proto_1_1anonymous__namespace_02layer__graph__factory_8cpp_03_1a049fcca970d819d3c08bfdf71883de5c" compoundref="layer__graph__factory_8cpp" startline="64" endline="96">lbann::proto::anonymous_namespace{layer_graph_factory.cpp}::setup_target_pointers</referencedby>
        <referencedby refid="namespacelbann_1_1proto_1_1anonymous__namespace_02layer__graph__factory_8cpp_03_1ac0c3ac49d16d6926308c336149a2f039" compoundref="layer__graph__factory_8cpp" startline="99" endline="129">lbann::proto::anonymous_namespace{layer_graph_factory.cpp}::setup_reconstruction_pointers</referencedby>
        <referencedby refid="namespacelbann_1_1proto_1_1anonymous__namespace_02layer__graph__factory_8cpp_03_1a68f963a80592c01832cacf2acd4bacc1" compoundref="layer__graph__factory_8cpp" startline="132" endline="152">lbann::proto::anonymous_namespace{layer_graph_factory.cpp}::setup_unpooling_pointers</referencedby>
        <referencedby refid="namespacelbann_1_1proto_1a99e65cd4abb769d020ab76ff20c39d0b" compoundref="layer__graph__factory_8cpp" startline="156" endline="260">lbann::proto::construct_layer_graph</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::Layer::set_name</definition>
        <argsstring>(const std::string name)</argsstring>
        <name>set_name</name>
        <param>
          <type>const std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the layer instance&apos;s name. Each layer in a model should have a unique, preferably human-readable, name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="90" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="90" bodyend="90"/>
        <references refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" compoundref="layer_8hpp" startline="536">m_name</references>
        <references refid="classlbann_1_1Layer_1acc0803d3428914ca1eb5988c4309174a" compoundref="layer_8cpp" startline="209" endline="213">get_description</references>
        <references refid="classlbann_1_1Layer_1a147a7f7dcf0027a60f10109439e5dcea" compoundref="layer_8cpp" startline="215" endline="245">get_topo_description</references>
        <references refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" compoundref="layer_8cpp" startline="247" endline="275">forward_prop</references>
        <references refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" compoundref="layer_8cpp" startline="277" endline="305">back_prop</references>
        <references refid="classlbann_1_1Layer_1ae4a050e51e3a9bec431cf8b7a5660f2c" compoundref="layer_8cpp" startline="307" endline="314">update</references>
        <references refid="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" compoundref="layer_8cpp" startline="458" endline="476">clear_error_signals</references>
        <references refid="classlbann_1_1Layer_1a7f3f26e2ae0497f9a00fd6bc56b50543" compoundref="layer_8cpp" startline="324" endline="340">summarize_stats</references>
        <references refid="classlbann_1_1Layer_1af7e50932bb60d4cab3b21ab3fb0707ea" compoundref="layer_8cpp" startline="342" endline="368">summarize_matrices</references>
        <references refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" compoundref="layer_8cpp" startline="501" endline="509">setup</references>
        <references refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" compoundref="layer_8cpp" startline="694" endline="763">check_setup</references>
        <references refid="classlbann_1_1Layer_1a5dfb66e81fc085997402a5e2241316bd">get_data_layout</references>
        <references refid="classlbann_1_1Layer_1ae3f4a5602df821f4221614b1e3782dc1" compoundref="layer_8cpp" startline="1205" endline="1216">get_data_layout_string</references>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" compoundref="greedy__layerwise__autoencoder_8cpp" startline="160" endline="212">lbann::greedy_layerwise_autoencoder::set_phase</referencedby>
        <referencedby refid="classlbann_1_1model_1a6ba9a836e5ba52c999c5234cfa5e62c2" compoundref="model_8cpp" startline="541" endline="576">lbann::model::add_dummy_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1ac56d43e457cd4dfc3b88122bd10d286e" compoundref="model_8cpp" startline="578" endline="624">lbann::model::add_split_layers</referencedby>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02recurrent_8cpp_03_1a8c76387c2dd531058700ad9a41cd093a" compoundref="recurrent_8cpp" startline="47" endline="113">lbann::anonymous_namespace{recurrent.cpp}::unroll_input_layer</referencedby>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02recurrent_8cpp_03_1a50bca1c07c6f3146947b2a0fb5cc815a" compoundref="recurrent_8cpp" startline="227" endline="317">lbann::anonymous_namespace{recurrent.cpp}::add_placeholder_layers</referencedby>
        <referencedby refid="classlbann_1_1siamese__model_1a7ff41cffb060500605124959f1a2a6cf" compoundref="siamese_8cpp" startline="56" endline="146">lbann::siamese_model::setup_layer_topology</referencedby>
        <referencedby refid="namespacelbann_1_1proto_1a99e65cd4abb769d020ab76ff20c39d0b" compoundref="layer__graph__factory_8cpp" startline="156" endline="260">lbann::proto::construct_layer_graph</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1acc0803d3428914ca1eb5988c4309174a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::Layer::get_description</definition>
        <argsstring>() const</argsstring>
        <name>get_description</name>
        <reimplementedby refid="classlbann_1_1convolution__layer_1abce67d7e977d148093798936aff8ee5e">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1selu__layer_1a58e12f4297b2563718417d4acadea010">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1hadamard__layer_1ad575b8b5efddaf3ee64c358b28198de9">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1evaluation__layer_1ac98eda59f9c45455f0f35f85cbd08a9b">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1reconstruction__layer_1a738c3f06ea3cee1e8b11672fde6b594e">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1safe__inv__layer_1a1823f1ac48228eec1fa0c1578b2b1ab3">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1dummy__layer_1ab4921788ac99636ba95ba51aaa4394fe">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1split__layer_1a3e599c39385b1d707ad9f28454f52cf5">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1bernoulli__layer_1a9d46943959793d5ba5e5eebe26063dad">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1uniform__layer_1a41b8f6ed59de66dda1f95a6b4ee4762f">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1gaussian__layer_1a0a062897d0660c9a494c98d800aac9e9">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1constant__layer_1a2745baa79137db746795634144b99080">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1sum__layer_1a73e45687c97990d88a2e31dc177ef56e">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1relu__layer_1a57d00fb2f9c90f5132ddea44d3ccc099">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1deconvolution__layer_1a07f211e08383fe8e26b6e1b916136b67">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1sigmoid__layer_1aa921ef4370e6b4fae38536310d7a3a17">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1aa2db5ccc0bbd40f081c8ff4501f3fc29">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1fully__connected__layer_1a7ce678ec7560dd145244ffd8813d5edb">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a8ffe91a3d5b6f37d2dc17e657898dcc8">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1dropout_1a7b53ee7d758337fe40788a567b5d092c">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1local__response__normalization__layer_1a31f4ab1700e2e1c69a0ccb44c6f0fd69">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1concatenation__layer_1a2154ad33b4bacbb5caed95fdebc735ca">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1slice__layer_1aa61c1f449a9f741f523921129dfb88e5">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1softmax__layer_1afc8ecde99bde8cbacae5dc1779052d1d">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1pooling__layer_1a11f6d5c7ef16a62d081164f174825ab2">get_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1batch__normalization_1a331738f02157f9e1e21f212c41feb86c">get_description</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable description of the layer parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="93" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="209" bodyend="213"/>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">get_name</references>
        <references refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239">get_type</references>
        <referencedby refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">set_name</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a147a7f7dcf0027a60f10109439e5dcea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::Layer::get_topo_description</definition>
        <argsstring>() const</argsstring>
        <name>get_topo_description</name>
        <reimplementedby refid="classlbann_1_1convolution__layer_1a5af5bb8b7fb68ed4e5085be676788eed">get_topo_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1io__layer_1a955ab7100591d07d0758e8f95c6e50be">get_topo_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1ad6ea9a43254664c75aa06e8e5c1d7e8c">get_topo_description</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a36d9962105ca89889e3f38f1c1801560">get_topo_description</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable description of the activation tensors. Activation tensors are stored in distributed matrices where each column corresponds to a mini-batch sample. Within each column, the data is packed w.r.t. the last tensor dimension, then w.r.t. the penultimate dimension, and so on. 3D tensors are assumed to be 2D images in NCHW format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="101" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="215" bodyend="245"/>
        <references refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" compoundref="layer_8hpp" startline="271" endline="271">get_num_children</references>
        <references refid="classlbann_1_1Layer_1a54f53393fadbfdc73b4e72489c868433" compoundref="layer_8hpp" startline="173" endline="175">get_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" compoundref="layer_8cpp" startline="376" endline="378">get_activations</references>
        <referencedby refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">set_name</referencedby>
        <referencedby refid="classlbann_1_1convolution__layer_1a5af5bb8b7fb68ed4e5085be676788eed" compoundref="convolution_8hpp" startline="74" endline="98">lbann::convolution_layer&lt; T_layout &gt;::get_topo_description</referencedby>
        <referencedby refid="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" compoundref="model_8cpp" startline="294" endline="310">lbann::model::print_layer_description</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::forward_prop</definition>
        <argsstring>()</argsstring>
        <name>forward_prop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forward propagation step. Apply a mathematical operation to the previous activations to obtain the activations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="107" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="247" bodyend="275"/>
        <references refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" compoundref="timer_8hpp" startline="37" endline="41">lbann::get_time</references>
        <references refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</references>
        <references refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" compoundref="layer_8hpp" startline="425">m_model</references>
        <references refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" compoundref="model_8hpp" startline="157" endline="159">lbann::model::get_current_mini_batch_size</references>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">m_using_gpus</references>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">m_cudnn</references>
        <references refid="classlbann_1_1Layer_1a523319dd1bd87a0612afa1912bb5aad7">fp_compute</references>
        <references refid="classlbann_1_1Layer_1aa4e439c1d6a656e709dc4736c9380476" compoundref="layer_8hpp" startline="524">m_fp_compute_time</references>
        <references refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" compoundref="layer_8hpp" startline="408">m_weights</references>
        <references refid="classlbann_1_1optimizer_1ade46d28f7df19cab6c6ee90c03e976ea" compoundref="optimizer_8cpp" startline="400" endline="404">lbann::optimizer::add_gradient_source</references>
        <references refid="classlbann_1_1Layer_1ab1bd9ab0a6f9e554f4dc936d8316028e" compoundref="layer_8hpp" startline="522">m_fp_time</references>
        <referencedby refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">set_name</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1af16aa7d2336a3f64e27970241cb2cd3e" compoundref="greedy__layerwise__autoencoder_8cpp" startline="246" endline="292">lbann::greedy_layerwise_autoencoder::forward_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::back_prop</definition>
        <argsstring>()</argsstring>
        <name>back_prop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Backward propagation step. Given the objective function gradients w.r.t. the activations (the previous error signals), compute the gradients w.r.t. the previous activations (the error signals) and w.r.t. the weights. This is essentially an application of the chain rule. Note that the objective function may have terms that are independent of the activations, so we add to the gradients rather than overwriting them. This means the error signals and weight gradients must be cleared before performing backward propagation (see the clear_error_signals function). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="119" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="277" bodyend="305"/>
        <references refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" compoundref="timer_8hpp" startline="37" endline="41">lbann::get_time</references>
        <references refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</references>
        <references refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" compoundref="layer_8hpp" startline="425">m_model</references>
        <references refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" compoundref="model_8hpp" startline="157" endline="159">lbann::model::get_current_mini_batch_size</references>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">m_using_gpus</references>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">m_cudnn</references>
        <references refid="classlbann_1_1Layer_1a7442e01f9ee1294df2de811efcf5171e">bp_compute</references>
        <references refid="classlbann_1_1Layer_1ae28626457a58943b25e7a2920fc271f0" compoundref="layer_8hpp" startline="528">m_bp_compute_time</references>
        <references refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" compoundref="layer_8hpp" startline="408">m_weights</references>
        <references refid="classlbann_1_1Layer_1aa60fc41627bcaa9c345775bf5737bb45" compoundref="layer_8hpp" startline="526">m_bp_time</references>
        <referencedby refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">set_name</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a6d39fda041fe570a668cb72594508062" compoundref="greedy__layerwise__autoencoder_8cpp" startline="294" endline="332">lbann::greedy_layerwise_autoencoder::backward_prop</referencedby>
        <referencedby refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" compoundref="model_8cpp" startline="801" endline="824">lbann::model::backward_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1ae4a050e51e3a9bec431cf8b7a5660f2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::Layer::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update step. Update the layer&apos;s internal members. Note that the optimization step for the weights happens elsewhere. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="124" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="307" bodyend="314"/>
        <references refid="classlbann_1_1Layer_1afdc60df9731a3ecdeeeb8175fa483676" compoundref="layer_8hpp" startline="492">m_frozen</references>
        <references refid="namespacelbann_1a478d36031ff0659893c4322cd856157f" compoundref="timer_8hpp" startline="37" endline="41">lbann::get_time</references>
        <references refid="classlbann_1_1Layer_1a70e08fc96a612f67ade6ba3809536d85" compoundref="layer_8hpp" startline="483" endline="483">update_compute</references>
        <references refid="classlbann_1_1Layer_1ab7d84533662b02d01ba6685ad6f20935" compoundref="layer_8hpp" startline="530">m_update_time</references>
        <referencedby refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">set_name</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::clear_error_signals</definition>
        <argsstring>(int mini_batch_size)</argsstring>
        <name>clear_error_signals</name>
        <param>
          <type>int</type>
          <declname>mini_batch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the error signal tensors to zero. The error signals are resized for the current mini-batch size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="129" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="458" bodyend="476"/>
        <references refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" compoundref="layer_8hpp" startline="271" endline="271">get_num_children</references>
        <references refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" compoundref="layer_8cpp" startline="379" endline="381">get_prev_error_signals</references>
        <references refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" compoundref="layer_8hpp" startline="177" endline="179">get_num_neurons</references>
        <references refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" compoundref="layer_8hpp" startline="269" endline="269">get_num_parents</references>
        <references refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" compoundref="layer_8cpp" startline="382" endline="384">get_error_signals</references>
        <references refid="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" compoundref="layer_8hpp" startline="165" endline="167">get_num_prev_neurons</references>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">m_using_gpus</references>
        <referencedby refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">set_name</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a7f3f26e2ae0497f9a00fd6bc56b50543" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::summarize_stats</definition>
        <argsstring>(lbann_summary &amp;summarizer, int step)</argsstring>
        <name>summarize_stats</name>
        <reimplementedby refid="classlbann_1_1reconstruction__layer_1a09bf00610af66810bf8bbb65424d1e1a">summarize_stats</reimplementedby>
        <param>
          <type><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref> &amp;</type>
          <declname>summarizer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="131" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="324" bodyend="340"/>
        <references refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" compoundref="layer_8hpp" startline="536">m_name</references>
        <references refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" compoundref="summary_8hpp" startline="204" endline="204">lbann::lbann_summary::reduce_scalar</references>
        <references refid="classlbann_1_1Layer_1ab1bd9ab0a6f9e554f4dc936d8316028e" compoundref="layer_8hpp" startline="522">m_fp_time</references>
        <references refid="classlbann_1_1Layer_1aa60fc41627bcaa9c345775bf5737bb45" compoundref="layer_8hpp" startline="526">m_bp_time</references>
        <references refid="classlbann_1_1Layer_1ab7d84533662b02d01ba6685ad6f20935" compoundref="layer_8hpp" startline="530">m_update_time</references>
        <references refid="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" compoundref="layer_8cpp" startline="316" endline="322">reset_counters</references>
        <references refid="classlbann_1_1Layer_1a4ee78d42284421519dd18d27b4da0957" compoundref="layer_8hpp" startline="304" endline="304">get_weights</references>
        <references refid="classlbann_1_1optimizer_1afef81d54e836ba0177f7a411ba3aaf6e" compoundref="optimizer_8hpp" startline="154" endline="154">lbann::optimizer::get_step_time</references>
        <references refid="classlbann_1_1optimizer_1a067709debd4d2e7bfe1a35b5f6ced668" compoundref="optimizer_8hpp" startline="156" endline="158">lbann::optimizer::reset_counters</references>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a09bf00610af66810bf8bbb65424d1e1a" compoundref="reconstruction_8hpp" startline="94" endline="100">lbann::reconstruction_layer&lt; T_layout &gt;::summarize_stats</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">set_name</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1af7e50932bb60d4cab3b21ab3fb0707ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::summarize_matrices</definition>
        <argsstring>(lbann_summary &amp;summarizer, int step)</argsstring>
        <name>summarize_matrices</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref> &amp;</type>
          <declname>summarizer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="132" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="342" bodyend="368"/>
        <references refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" compoundref="layer_8hpp" startline="271" endline="271">get_num_children</references>
        <references refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" compoundref="layer_8hpp" startline="536">m_name</references>
        <references refid="classlbann_1_1lbann__summary_1a8f63a3f2566d5d13e5ae24e727523c44" compoundref="summary_8hpp" startline="200" endline="200">lbann::lbann_summary::reduce_mean</references>
        <references refid="classlbann_1_1Layer_1a7caf08e938141d1584e6939cefa4baed" compoundref="layer_8hpp" startline="391">m_activations</references>
        <references refid="classlbann_1_1lbann__summary_1afbf2df538879fcc4ea90a2bc6a6c2974" compoundref="summary_8hpp" startline="201" endline="201">lbann::lbann_summary::reduce_min</references>
        <references refid="classlbann_1_1lbann__summary_1abebb44b0ea225aba2b98b24ccc8eb427" compoundref="summary_8hpp" startline="202" endline="202">lbann::lbann_summary::reduce_max</references>
        <references refid="classlbann_1_1lbann__summary_1a65475f9a72f042b6ba09a2d33fda9293" compoundref="summary_8hpp" startline="203" endline="203">lbann::lbann_summary::reduce_stdev</references>
        <references refid="classlbann_1_1lbann__summary_1a336143c9540d779381658beb4e841b73" compoundref="summary_8hpp" startline="207" endline="207">lbann::lbann_summary::reduce_2norm</references>
        <references refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" compoundref="layer_8hpp" startline="269" endline="269">get_num_parents</references>
        <references refid="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" compoundref="layer_8hpp" startline="405">m_error_signals</references>
        <referencedby refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">set_name</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup layer members. By default, this calls the setup_pointers, setup_dims, setup_matrices, setup_data, and setup_gpu (if needed) functions. Unless the setup_pointers function has been replaced in an inherited class, it is assumed that pointers to parent/child layers have already been initialized.</para><para>If the layer has already been setup, this function should destroy all layer members and reinitialize them. However, it is not guaranteed that derived classes will obey this behavior. Caveat emptor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="146" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="501" bodyend="509"/>
        <references refid="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" compoundref="layer_8cpp" startline="511" endline="533">setup_pointers</references>
        <references refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" compoundref="layer_8cpp" startline="535" endline="554">setup_dims</references>
        <references refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e" compoundref="layer_8cpp" startline="580" endline="598">setup_matrices</references>
        <references refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" compoundref="layer_8hpp" startline="357">m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a483bf8a72d44a0e83da45f3d47bd20d4" compoundref="comm_8hpp" startline="148" endline="150">lbann::lbann_comm::get_model_grid</references>
        <references refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" compoundref="layer_8cpp" startline="600" endline="635">setup_data</references>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">m_using_gpus</references>
        <references refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">setup_gpu</references>
        <referencedby refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">set_name</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::check_setup</definition>
        <argsstring>()</argsstring>
        <name>check_setup</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a35375f4cf914ba5a308fdbd98c589408">check_setup</reimplementedby>
        <reimplementedby refid="classlbann_1_1base__convolution__layer_1afa07aaa293d12cc7d28fbc8a96025900">check_setup</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check that the setup is reasonable. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="148" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="694" bodyend="763"/>
        <references refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" compoundref="layer_8hpp" startline="269" endline="269">get_num_parents</references>
        <references refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" compoundref="layer_8hpp" startline="271" endline="271">get_num_children</references>
        <references refid="classlbann_1_1Layer_1a52314601c3458268f56e017dc2ade357" compoundref="layer_8hpp" startline="384">m_prev_activations</references>
        <references refid="classlbann_1_1Layer_1a7caf08e938141d1584e6939cefa4baed" compoundref="layer_8hpp" startline="391">m_activations</references>
        <references refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" compoundref="layer_8hpp" startline="536">m_name</references>
        <references refid="classlbann_1_1Layer_1a6fdcbf884150d0b20cffe678fefd7caa" compoundref="layer_8hpp" startline="398">m_prev_error_signals</references>
        <references refid="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" compoundref="layer_8hpp" startline="405">m_error_signals</references>
        <references refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" compoundref="layer_8hpp" startline="365">m_num_neurons</references>
        <references refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" compoundref="layer_8hpp" startline="363">m_neuron_dims</references>
        <referencedby refid="classlbann_1_1generic__target__layer_1a35375f4cf914ba5a308fdbd98c589408" compoundref="generic__target__layer_8hpp" startline="135" endline="145">lbann::generic_target_layer::check_setup</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">set_name</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1afa07aaa293d12cc7d28fbc8a96025900" compoundref="base__convolution_8hpp" startline="312" endline="344">lbann::base_convolution_layer::check_setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a5dfb66e81fc085997402a5e2241316bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08db" kindref="member">data_layout</ref></type>
        <definition>virtual data_layout lbann::Layer::get_data_layout</definition>
        <argsstring>() const =0</argsstring>
        <name>get_data_layout</name>
        <reimplementedby refid="classlbann_1_1tanh__layer_1acf07ab3db6f429d8bd7dd0dd659ea3e0">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1identity__layer_1a89b5c86ca801ce0f4854bf9d6b1a50e9">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1exponential__layer_1a0752622c055391421c4916bb02eda923">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1atan__layer_1ad749b9e41c9b29c98adbad599274e7c9">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1power__layer_1aa0b786025082b0d95484ebe58eb0b331">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1swish__layer_1ac7d29fc0d26bdb58df88e43635141275">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1softplus__layer_1a1bc0899e41772148e581b7b8c53763e3">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1bent__identity__layer_1a6529bc010caf29864753fef567f5e4de">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1smooth__relu__layer_1a2514d7b711e0a6cbf494c5bd9a959d03">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1reshape__layer_1a5c3b5585fd6242de0630e643a4dfd992">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1leaky__relu__layer_1a9e7ce0b05e8bff42d9176d92c736fbcb">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1selu__layer_1a02a03e8f426406619e48258f71feffd1">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1hadamard__layer_1ac7a67a906eaa7810997fa6448337f192">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1evaluation__layer_1af8a630d75b1aacc1ffc446d1c141d807">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1safe__inv__layer_1aa82e763a902004d7b0f05b390c3bd45f">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1elu__layer_1a50f1158f8a6a5b358a311dabd4562948">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1unpooling__layer_1a453a34396ba52482508668d1658bf727">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1dummy__layer_1a3cc37758086f3c4824619504e4ee869b">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1reconstruction__layer_1a7516698ae3de4cea311ec17685a0b60a">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1split__layer_1ad206038eac236a971664ccacec8faa82">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1bernoulli__layer_1aad1be2449edaa224b44bb6cef47599e9">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1uniform__layer_1adacae6beb724aa10b7f625b1418e9015">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1gaussian__layer_1a79dce69c1a681b66849423329f84df30">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1constant__layer_1ac69dbc39164ddb6cee7f61434bdb317d">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1input__layer_1ae8556702a6c04aeeec8d5eea2d0e90e6">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1sum__layer_1a6c71a7d29f6e36b2a1f588a2545c769e">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1reduction__layer_1a9799e2a98d503a64b462674d0cd69b6e">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1target__layer_1a48a5f44e5f453ce31923333fd11849b1">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1selu__dropout_1ae33633add903276c87f725facf0dcd0c">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1sigmoid__layer_1ab44f3cf5e4622578e40d5254ba73109a">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1relu__layer_1a1d0b9cb9fc976c2c4375d9422a1ac112">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1concatenation__layer_1afa17d94708fe6d35db2925f664104d42">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1slice__layer_1a5121b600d26654707289726e84c0eed9">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1deconvolution__layer_1a43249c72b440db8b5a1a7f2735c6a118">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1dropout_1aefeb16614f9bf4b9e643e1d5b48ec62d">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1local__response__normalization__layer_1a7a161dde860f17264077a0cc4797fe36">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1softmax__layer_1af45bc0942bf38d6de7c28032d9bb0e73">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1convolution__layer_1a496e4bc7465269961603aba305700b84">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1pooling__layer_1ad6d7e7476521ed4a4c43db493807b2ca">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1fully__connected__layer_1a0d84bbfa7df80e879da13f54d465a603">get_data_layout</reimplementedby>
        <reimplementedby refid="classlbann_1_1batch__normalization_1ac97c038b9dec333a7fb285c196429e2d">get_data_layout</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get data layout of the data tensors. We assume that the data layouts of the previous activations, activations, previous error signals, and error signals are the same. Each concrete layer that is templated on its data layout should override this function to return its template parameter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="156" column="1"/>
        <referencedby refid="classlbann_1_1generic__input__layer_1a8ffe91a3d5b6f37d2dc17e657898dcc8" compoundref="generic__input__layer_8hpp" startline="110" endline="115">lbann::generic_input_layer::get_description</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1aa2db5ccc0bbd40f081c8ff4501f3fc29" compoundref="generic__target__layer_8hpp" startline="101" endline="106">lbann::generic_target_layer::get_description</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">set_name</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e" compoundref="layer_8cpp" startline="580" endline="598">setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1ae3f4a5602df821f4221614b1e3782dc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string lbann::Layer::get_data_layout_string</definition>
        <argsstring>(data_layout d) const</argsstring>
        <name>get_data_layout_string</name>
        <param>
          <type><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08db" kindref="member">data_layout</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable description of the data_layout </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="158" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="1205" bodyend="1216"/>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638">DATA_PARALLEL</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0">MODEL_PARALLEL</references>
        <referencedby refid="classlbann_1_1relu__layer_1a57d00fb2f9c90f5132ddea44d3ccc099" compoundref="relu_8hpp" startline="91" endline="94">lbann::relu_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1selu__layer_1a58e12f4297b2563718417d4acadea010" compoundref="selu_8hpp" startline="53" endline="58">lbann::selu_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a8ffe91a3d5b6f37d2dc17e657898dcc8" compoundref="generic__input__layer_8hpp" startline="110" endline="115">lbann::generic_input_layer::get_description</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1aa2db5ccc0bbd40f081c8ff4501f3fc29" compoundref="generic__target__layer_8hpp" startline="101" endline="106">lbann::generic_target_layer::get_description</referencedby>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a738c3f06ea3cee1e8b11672fde6b594e" compoundref="reconstruction_8hpp" startline="57" endline="61">lbann::reconstruction_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" compoundref="layer_8hpp" startline="90" endline="90">set_name</referencedby>
        <referencedby refid="classlbann_1_1convolution__layer_1abce67d7e977d148093798936aff8ee5e" compoundref="convolution_8hpp" startline="51" endline="72">lbann::convolution_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1deconvolution__layer_1a07f211e08383fe8e26b6e1b916136b67" compoundref="deconvolution_8hpp" startline="96" endline="114">lbann::deconvolution_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a331738f02157f9e1e21f212c41feb86c" compoundref="batch__normalization_8hpp" startline="198" endline="205">lbann::batch_normalization&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a7b53ee7d758337fe40788a567b5d092c" compoundref="dropout_8hpp" startline="112" endline="115">lbann::dropout&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a31f4ab1700e2e1c69a0ccb44c6f0fd69" compoundref="local__response__normalization_8hpp" startline="118" endline="123">lbann::local_response_normalization_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1bernoulli__layer_1a9d46943959793d5ba5e5eebe26063dad" compoundref="bernoulli_8hpp" startline="68" endline="74">lbann::bernoulli_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1a2154ad33b4bacbb5caed95fdebc735ca" compoundref="concatenation_8hpp" startline="120" endline="133">lbann::concatenation_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1a2745baa79137db746795634144b99080" compoundref="constant_8hpp" startline="72" endline="77">lbann::constant_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1dummy__layer_1ab4921788ac99636ba95ba51aaa4394fe" compoundref="dummy_8hpp" startline="62" endline="66">lbann::dummy_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1evaluation__layer_1ac98eda59f9c45455f0f35f85cbd08a9b" compoundref="evaluation_8hpp" startline="57" endline="61">lbann::evaluation_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1gaussian__layer_1a0a062897d0660c9a494c98d800aac9e9" compoundref="gaussian_8hpp" startline="72" endline="79">lbann::gaussian_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1hadamard__layer_1ad575b8b5efddaf3ee64c358b28198de9" compoundref="hadamard_8hpp" startline="57" endline="65">lbann::hadamard_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a11f6d5c7ef16a62d081164f174825ab2" compoundref="pooling_8hpp" startline="159" endline="177">lbann::pooling_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1safe__inv__layer_1a1823f1ac48228eec1fa0c1578b2b1ab3" compoundref="safe__inv_8hpp" startline="58" endline="62">lbann::safe_inv_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1aa61c1f449a9f741f523921129dfb88e5" compoundref="slice_8hpp" startline="122" endline="135">lbann::slice_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1split__layer_1a3e599c39385b1d707ad9f28454f52cf5" compoundref="split_8hpp" startline="68" endline="76">lbann::split_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a73e45687c97990d88a2e31dc177ef56e" compoundref="sum_8hpp" startline="76" endline="84">lbann::sum_layer&lt; T_layout &gt;::get_description</referencedby>
        <referencedby refid="classlbann_1_1uniform__layer_1a41b8f6ed59de66dda1f95a6b4ee4762f" compoundref="uniform_8hpp" startline="72" endline="79">lbann::uniform_layer&lt; T_layout &gt;::get_description</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a1acc0fa44acdeffbac158fdac3467973" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>virtual std::vector&lt;int&gt; lbann::Layer::get_prev_neuron_dims</definition>
        <argsstring>(int parent_index=0) const</argsstring>
        <name>get_prev_neuron_dims</name>
        <reimplementedby refid="classlbann_1_1concatenation__layer_1af0e60f4a7e00657ceb429aaa8d7f5040">get_prev_neuron_dims</reimplementedby>
        <param>
          <type>int</type>
          <declname>parent_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the dimensions of a previous activations tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="161" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="161" bodyend="163"/>
        <references refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" compoundref="layer_8hpp" startline="372">m_prev_neuron_dims</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int lbann::Layer::get_num_prev_neurons</definition>
        <argsstring>(int parent_index=0) const</argsstring>
        <name>get_num_prev_neurons</name>
        <reimplementedby refid="classlbann_1_1concatenation__layer_1aca8e6d21d827a3d5a8434db88bf3e63a">get_num_prev_neurons</reimplementedby>
        <param>
          <type>int</type>
          <declname>parent_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of a previous activations tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="165" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="165" bodyend="167"/>
        <references refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" compoundref="layer_8hpp" startline="374">m_num_prev_neurons</references>
        <referencedby refid="classlbann_1_1generic__target__layer_1af89a8227784c005354bf937ec887a7ed" compoundref="generic__target__layer_8hpp" startline="147" endline="154">lbann::generic_target_layer::fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" compoundref="layer_8cpp" startline="458" endline="476">clear_error_signals</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" compoundref="layer_8cpp" startline="600" endline="635">setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">get_bp_output</referencedby>
        <referencedby refid="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" compoundref="model_8cpp" startline="294" endline="310">lbann::model::print_layer_description</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1ace32c7df942a8d97d7a25cb8ff8ce71d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int lbann::Layer::get_num_prev_neuron_dims</definition>
        <argsstring>(int parent_index=0) const</argsstring>
        <name>get_num_prev_neuron_dims</name>
        <param>
          <type>int</type>
          <declname>parent_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of dimensions of a previous activations tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="169" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="169" bodyend="171"/>
        <references refid="classlbann_1_1Layer_1adc052afb38f170e839db00d3c8151d1e" compoundref="layer_8hpp" startline="376">m_num_prev_neuron_dims</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a54f53393fadbfdc73b4e72489c868433" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>virtual std::vector&lt;int&gt; lbann::Layer::get_neuron_dims</definition>
        <argsstring>(int child_index=0) const</argsstring>
        <name>get_neuron_dims</name>
        <reimplementedby refid="classlbann_1_1slice__layer_1a824178abe2450bd331304ab0d50214ce">get_neuron_dims</reimplementedby>
        <param>
          <type>int</type>
          <declname>child_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the dimensions of an activations tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="173" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="173" bodyend="175"/>
        <references refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" compoundref="layer_8hpp" startline="363">m_neuron_dims</references>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a3abb27b670b5c57f2a6b1d669a7de508" compoundref="reconstruction_8hpp" startline="70" endline="82">lbann::reconstruction_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a147a7f7dcf0027a60f10109439e5dcea" compoundref="layer_8cpp" startline="215" endline="245">get_topo_description</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int lbann::Layer::get_num_neurons</definition>
        <argsstring>(int child_index=0) const</argsstring>
        <name>get_num_neurons</name>
        <reimplementedby refid="classlbann_1_1slice__layer_1ab36016849a59dfa23d37fd0cd2ec943c">get_num_neurons</reimplementedby>
        <param>
          <type>int</type>
          <declname>child_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of an activations tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="177" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="177" bodyend="179"/>
        <references refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" compoundref="layer_8hpp" startline="365">m_num_neurons</references>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a3abb27b670b5c57f2a6b1d669a7de508" compoundref="reconstruction_8hpp" startline="70" endline="82">lbann::reconstruction_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" compoundref="layer_8cpp" startline="458" endline="476">clear_error_signals</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" compoundref="layer_8cpp" startline="600" endline="635">setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">get_bp_output</referencedby>
        <referencedby refid="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" compoundref="model_8cpp" startline="294" endline="310">lbann::model::print_layer_description</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1aa35561e662de84deae26045ccb53d862" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int lbann::Layer::get_num_neuron_dims</definition>
        <argsstring>(int child_index=0) const</argsstring>
        <name>get_num_neuron_dims</name>
        <param>
          <type>int</type>
          <declname>child_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of dimensions of an activations tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="181" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="181" bodyend="183"/>
        <references refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" compoundref="layer_8hpp" startline="367">m_num_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" compoundref="layer_8cpp" startline="316" endline="322">reset_counters</references>
        <referencedby refid="classlbann_1_1reconstruction__layer_1a3abb27b670b5c57f2a6b1d669a7de508" compoundref="reconstruction_8hpp" startline="70" endline="82">lbann::reconstruction_layer&lt; T_layout &gt;::setup_dims</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::reset_counters</definition>
        <argsstring>()</argsstring>
        <name>reset_counters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset layer stat counters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="186" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="316" bodyend="322"/>
        <references refid="classlbann_1_1Layer_1ab1bd9ab0a6f9e554f4dc936d8316028e" compoundref="layer_8hpp" startline="522">m_fp_time</references>
        <references refid="classlbann_1_1Layer_1aa4e439c1d6a656e709dc4736c9380476" compoundref="layer_8hpp" startline="524">m_fp_compute_time</references>
        <references refid="classlbann_1_1Layer_1aa60fc41627bcaa9c345775bf5737bb45" compoundref="layer_8hpp" startline="526">m_bp_time</references>
        <references refid="classlbann_1_1Layer_1ae28626457a58943b25e7a2920fc271f0" compoundref="layer_8hpp" startline="528">m_bp_compute_time</references>
        <references refid="classlbann_1_1Layer_1ab7d84533662b02d01ba6685ad6f20935" compoundref="layer_8hpp" startline="530">m_update_time</references>
        <referencedby refid="classlbann_1_1Layer_1aa35561e662de84deae26045ccb53d862" compoundref="layer_8hpp" startline="181" endline="183">get_num_neuron_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" compoundref="layer_8cpp" startline="39" endline="71">Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a7f3f26e2ae0497f9a00fd6bc56b50543" compoundref="layer_8cpp" startline="324" endline="340">summarize_stats</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a6a75532bdaa2ca3879034f2a76085a06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::Layer::using_gpus</definition>
        <argsstring>() const</argsstring>
        <name>using_gpus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether the layer is using a GPU implementation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="189" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="189" bodyend="189"/>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">m_using_gpus</references>
        <referencedby refid="classlbann_1_1unpooling__layer_1a32da9e26ce50aa3df3ecc52691bd5e4f" compoundref="unpooling_8hpp" startline="60" endline="71">lbann::unpooling_layer&lt; T_layout &gt;::setup_pointers</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1aa30dbf20929aaa58b5be98b98217ca88" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::Layer::get_expected_num_parent_layers</definition>
        <argsstring>() const</argsstring>
        <name>get_expected_num_parent_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get expected number of parent layers. A negative value indicates no limit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="194" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="194" bodyend="194"/>
        <references refid="classlbann_1_1Layer_1a841b96b25555247f52921c7f13ae1dfa" compoundref="layer_8hpp" startline="418">m_expected_num_parent_layers</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1aaeef8c7631204fc415a94dcdfbcfe93d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::Layer::get_expected_num_child_layers</definition>
        <argsstring>() const</argsstring>
        <name>get_expected_num_child_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get expected number of child layers. A negative value indicates no limit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="198" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="198" bodyend="198"/>
        <references refid="classlbann_1_1Layer_1ac08f133dddd150319650e220ab9a523a" compoundref="layer_8hpp" startline="422">m_expected_num_child_layers</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1afcfb6f55d12c728a59d107fe2d2fff0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
        <definition>model* lbann::Layer::get_model</definition>
        <argsstring>() const</argsstring>
        <name>get_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the model that manages this layer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="201" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="201" bodyend="201"/>
        <references refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" compoundref="layer_8hpp" startline="425">m_model</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a8eed87b25ea902b223c6b7a23abf78b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::Layer::set_model</definition>
        <argsstring>(model *m)</argsstring>
        <name>set_model</name>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the model that manages this layer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="203" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="203" bodyend="203"/>
        <references refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" compoundref="layer_8hpp" startline="425">m_model</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a0ac13af6f5ee8316d64c550bef919ee0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>El::Matrix&lt; El::Int &gt; *</type>
        <definition>virtual El::Matrix&lt;El::Int&gt;* lbann::Layer::get_sample_indices_per_mb</definition>
        <argsstring>()</argsstring>
        <name>get_sample_indices_per_mb</name>
        <reimplementedby refid="classlbann_1_1io__layer_1ab319ad5697e002072ee03e8c64523fb5">get_sample_indices_per_mb</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a9673d3fb3db6ecaae979886178b785ea">get_sample_indices_per_mb</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a749741781204b17c8ca172a9a405a90e">get_sample_indices_per_mb</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="205" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="205" bodyend="205"/>
        <referencedby refid="classlbann_1_1lbann__callback__check__dataset_1a17aff74d9926e07bfa1f090ad39bb4b6" compoundref="callback__check__dataset_8cpp" startline="35" endline="58">lbann::lbann_callback_check_dataset::add_to_set</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__minibatch__sample__indices_1a34d4564309168b3ab0b2e3092e2f9355" compoundref="callback__dump__minibatch__sample__indices_8cpp" startline="37" endline="58">lbann::lbann_callback_dump_minibatch_sample_indices::dump_to_file</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a131876b692c0e68c95d9ae1a86c446df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool lbann::Layer::saveToFile</definition>
        <argsstring>(int fd, const char *filename) const</argsstring>
        <name>saveToFile</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="207" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="207" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a1ae0e6015dd427c63236a07f8cbd3878" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool lbann::Layer::loadFromFile</definition>
        <argsstring>(int fd, const char *filename)</argsstring>
        <name>loadFromFile</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="208" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="208" bodyend="208"/>
        <references refid="classlbann_1_1Layer_1a994a4beabbace598193b1611eb06b07e" compoundref="layer_8cpp" startline="822" endline="828">saveToCheckpoint</references>
        <references refid="classlbann_1_1Layer_1a7ac9335d75d817fc2d5cf171da9b7e22" compoundref="layer_8cpp" startline="830" endline="837">loadFromCheckpoint</references>
        <references refid="classlbann_1_1Layer_1afce0efa0f1c8f3b1c61069536b2fa8cc" compoundref="layer_8cpp" startline="839" endline="844">save_to_checkpoint_shared</references>
        <references refid="classlbann_1_1Layer_1a9e262970ecc64166e8b6610e2502ad30" compoundref="layer_8cpp" startline="846" endline="852">load_from_checkpoint_shared</references>
        <references refid="classlbann_1_1Layer_1ab94eb4ac28bac0c472a1da83ade4adf1" compoundref="layer_8cpp" startline="854" endline="865">write_proto</references>
        <references refid="classlbann_1_1Layer_1ac6b43c63399f717cc1a4a0a2007350f2" compoundref="layer_8cpp" startline="1027" endline="1064">get_fp_output</references>
        <references refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">get_bp_output</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a994a4beabbace598193b1611eb06b07e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::Layer::saveToCheckpoint</definition>
        <argsstring>(int fd, const char *filename, size_t *bytes) const</argsstring>
        <name>saveToCheckpoint</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1aff8b79ff0392bd78c44a5a4f6b6ef549">saveToCheckpoint</reimplementedby>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="210" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="822" bodyend="828"/>
        <referencedby refid="classlbann_1_1generic__target__layer_1aff8b79ff0392bd78c44a5a4f6b6ef549" compoundref="generic__target__layer_8hpp" startline="325" endline="328">lbann::generic_target_layer::saveToCheckpoint</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a1ae0e6015dd427c63236a07f8cbd3878" compoundref="layer_8hpp" startline="208" endline="208">loadFromFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a7ac9335d75d817fc2d5cf171da9b7e22" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::Layer::loadFromCheckpoint</definition>
        <argsstring>(int fd, const char *filename, size_t *bytes)</argsstring>
        <name>loadFromCheckpoint</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a2d9f6ac689171acf0caceed3ed4f7ef9">loadFromCheckpoint</reimplementedby>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="211" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="830" bodyend="837"/>
        <referencedby refid="classlbann_1_1generic__target__layer_1a2d9f6ac689171acf0caceed3ed4f7ef9" compoundref="generic__target__layer_8hpp" startline="330" endline="333">lbann::generic_target_layer::loadFromCheckpoint</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a1ae0e6015dd427c63236a07f8cbd3878" compoundref="layer_8hpp" startline="208" endline="208">loadFromFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1afce0efa0f1c8f3b1c61069536b2fa8cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::Layer::save_to_checkpoint_shared</definition>
        <argsstring>(persist &amp;p, bool val_end) const</argsstring>
        <name>save_to_checkpoint_shared</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a10a0cd1cc77c97e62f14a77ff380559a">save_to_checkpoint_shared</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1abae61e13f47205491a43e4842808945d">save_to_checkpoint_shared</reimplementedby>
        <param>
          <type><ref refid="classlbann_1_1persist" kindref="compound">persist</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>val_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="213" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="839" bodyend="844"/>
        <referencedby refid="classlbann_1_1generic__target__layer_1a10a0cd1cc77c97e62f14a77ff380559a" compoundref="generic__target__layer_8hpp" startline="335" endline="343">lbann::generic_target_layer::save_to_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a1ae0e6015dd427c63236a07f8cbd3878" compoundref="layer_8hpp" startline="208" endline="208">loadFromFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a9e262970ecc64166e8b6610e2502ad30" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::Layer::load_from_checkpoint_shared</definition>
        <argsstring>(persist &amp;p)</argsstring>
        <name>load_from_checkpoint_shared</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1af7d73f9e77b99b6a8b204cbda512726f">load_from_checkpoint_shared</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1ae5a542333eaf447a05fc586848e7c94c">load_from_checkpoint_shared</reimplementedby>
        <param>
          <type><ref refid="classlbann_1_1persist" kindref="compound">persist</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="214" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="846" bodyend="852"/>
        <referencedby refid="classlbann_1_1generic__target__layer_1af7d73f9e77b99b6a8b204cbda512726f" compoundref="generic__target__layer_8hpp" startline="345" endline="363">lbann::generic_target_layer::load_from_checkpoint_shared</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a1ae0e6015dd427c63236a07f8cbd3878" compoundref="layer_8hpp" startline="208" endline="208">loadFromFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1ab94eb4ac28bac0c472a1da83ade4adf1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::write_proto</definition>
        <argsstring>(lbann_data::Layer *proto) const</argsstring>
        <name>write_proto</name>
        <param>
          <type>lbann_data::Layer *</type>
          <declname>proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write layer to proto file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="217" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="854" bodyend="865"/>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">get_name</references>
        <references refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239">get_type</references>
        <references refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" compoundref="layer_8hpp" startline="411">m_parent_layers</references>
        <references refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" compoundref="layer_8hpp" startline="408">m_weights</references>
        <referencedby refid="classlbann_1_1Layer_1a1ae0e6015dd427c63236a07f8cbd3878" compoundref="layer_8hpp" startline="208" endline="208">loadFromFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1ac6b43c63399f717cc1a4a0a2007350f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::get_fp_output</definition>
        <argsstring>(AbsDistMat &amp;fp_output, const Layer *child) const</argsstring>
        <name>get_fp_output</name>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>fp_output</declname>
        </param>
        <param>
          <type>const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send forward propagation output to a child layer. On output, fp_output is either a matrix view or copy of the appropriate activation tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="223" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="1027" bodyend="1064"/>
        <references refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" compoundref="layer_8hpp" startline="413">m_child_layers</references>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">get_name</references>
        <references refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" compoundref="layer_8cpp" startline="376" endline="378">get_activations</references>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">m_using_gpus</references>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">m_cudnn</references>
        <referencedby refid="classlbann_1_1Layer_1a1ae0e6015dd427c63236a07f8cbd3878" compoundref="layer_8hpp" startline="208" endline="208">loadFromFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::get_bp_output</definition>
        <argsstring>(AbsDistMat &amp;bp_output, const Layer *parent) const</argsstring>
        <name>get_bp_output</name>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>bp_output</declname>
        </param>
        <param>
          <type>const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send backward propagation output to a parent layer. On output, bp_output is either a matrix view or copy of the appropriate error signal tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="228" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="1066" bodyend="1103"/>
        <references refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" compoundref="layer_8hpp" startline="411">m_parent_layers</references>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">get_name</references>
        <references refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" compoundref="layer_8cpp" startline="382" endline="384">get_error_signals</references>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">m_using_gpus</references>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">m_cudnn</references>
        <references refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" compoundref="layer_8hpp" startline="413">m_child_layers</references>
        <references refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" compoundref="layer_8cpp" startline="376" endline="378">get_activations</references>
        <references refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" compoundref="layer_8hpp" startline="357">m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" compoundref="comm_8hpp" startline="156" endline="158">lbann::lbann_comm::get_procs_per_model</references>
        <references refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" compoundref="layer_8hpp" startline="425">m_model</references>
        <references refid="classlbann_1_1model_1a8c311798ff4acaeafdfbf85162ba5084" compoundref="model_8hpp" startline="161" endline="163">lbann::model::get_max_mini_batch_size</references>
        <references refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" compoundref="layer_8hpp" startline="177" endline="179">get_num_neurons</references>
        <references refid="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" compoundref="layer_8hpp" startline="165" endline="167">get_num_prev_neurons</references>
        <referencedby refid="classlbann_1_1Layer_1a1ae0e6015dd427c63236a07f8cbd3878" compoundref="layer_8hpp" startline="208" endline="208">loadFromFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a22d31298912405660ebb210c0d7c5373" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>virtual std::vector&lt;int&gt; lbann::Layer::fp_output_dims</definition>
        <argsstring>(const Layer *child=nullptr) const</argsstring>
        <name>fp_output_dims</name>
        <reimplementedby refid="classlbann_1_1slice__layer_1a086c918fe72f28248f987d6a3aef355d">fp_output_dims</reimplementedby>
        <param>
          <type>const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>child</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get dimensions of forward propagation output to a child layer. Returns the dimensions of the appropriate activations tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="250" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="250" bodyend="250"/>
        <references refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" compoundref="layer_8hpp" startline="363">m_neuron_dims</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a8d942eb2cd37c346edc5ff473e0494a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void lbann::Layer::add_to_error_signal</definition>
        <argsstring>(const AbsDistMat &amp;error_signals, DataType scale=DataType(1), int parent_index=0)</argsstring>
        <name>add_to_error_signal</name>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>error_signals</declname>
        </param>
        <param>
          <type>DataType</type>
          <declname>scale</declname>
          <defval>DataType(1)</defval>
        </param>
        <param>
          <type>int</type>
          <declname>parent_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add to the layer&apos;s error signal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="253" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="253" bodyend="257"/>
        <references refid="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" compoundref="layer_8hpp" startline="405">m_error_signals</references>
        <referencedby refid="classlbann_1_1kl__divergence_1aeb39d1ba1e74874cbf396fbe137ff601" compoundref="kl__divergence_8cpp" startline="94" endline="135">lbann::kl_divergence::differentiate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> * &gt; &amp;</type>
        <definition>std::vector&lt;const Layer*&gt;&amp; lbann::Layer::get_parent_layers</definition>
        <argsstring>()</argsstring>
        <name>get_parent_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get parent layers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="260" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="260" bodyend="260"/>
        <references refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" compoundref="layer_8hpp" startline="411">m_parent_layers</references>
        <referencedby refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" compoundref="layer_8hpp" startline="269" endline="269">get_num_parents</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a7336909c78e438ba5332c6c1bddeadd2" compoundref="layer_8hpp" startline="292" endline="292">clear_parent_layers</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" compoundref="greedy__layerwise__autoencoder_8cpp" startline="214" endline="244">lbann::greedy_layerwise_autoencoder::restore_sequential_model</referencedby>
        <referencedby refid="classlbann_1_1model_1a3fb0304e6426dd28a436f50559ef2bef" compoundref="model_8cpp" startline="504" endline="539">lbann::model::add_connected_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1ac56d43e457cd4dfc3b88122bd10d286e" compoundref="model_8cpp" startline="578" endline="624">lbann::model::add_split_layers</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a233ceaf4e6c6b5c24dd097ffff511579" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> * &gt; &amp;</type>
        <definition>const std::vector&lt;const Layer*&gt;&amp; lbann::Layer::get_parent_layers</definition>
        <argsstring>() const</argsstring>
        <name>get_parent_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get parent layers. (const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="262" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="262" bodyend="262"/>
        <references refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" compoundref="layer_8hpp" startline="411">m_parent_layers</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> * &gt; &amp;</type>
        <definition>std::vector&lt;const Layer*&gt;&amp; lbann::Layer::get_child_layers</definition>
        <argsstring>()</argsstring>
        <name>get_child_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get child layers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="264" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="264" bodyend="264"/>
        <references refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" compoundref="layer_8hpp" startline="413">m_child_layers</references>
        <referencedby refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" compoundref="layer_8hpp" startline="271" endline="271">get_num_children</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a040bf53e261b1ef796739c09b3362a3a" compoundref="layer_8hpp" startline="296" endline="296">clear_child_layers</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a82b8ced756904a2423a65cd0e329b4e2" compoundref="greedy__layerwise__autoencoder_8cpp" startline="214" endline="244">lbann::greedy_layerwise_autoencoder::restore_sequential_model</referencedby>
        <referencedby refid="classlbann_1_1model_1a3fb0304e6426dd28a436f50559ef2bef" compoundref="model_8cpp" startline="504" endline="539">lbann::model::add_connected_layers</referencedby>
        <referencedby refid="classlbann_1_1kl__divergence_1aeb39d1ba1e74874cbf396fbe137ff601" compoundref="kl__divergence_8cpp" startline="94" endline="135">lbann::kl_divergence::differentiate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a0ad6c5253a4545a7322766d586a4bd33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> * &gt; &amp;</type>
        <definition>const std::vector&lt;const Layer*&gt;&amp; lbann::Layer::get_child_layers</definition>
        <argsstring>() const</argsstring>
        <name>get_child_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get child layers. (const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="266" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="266" bodyend="266"/>
        <references refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" compoundref="layer_8hpp" startline="413">m_child_layers</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::Layer::get_num_parents</definition>
        <argsstring>() const</argsstring>
        <name>get_num_parents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get number of parent layers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="269" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="269" bodyend="269"/>
        <references refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" compoundref="layer_8hpp" startline="260" endline="260">get_parent_layers</references>
        <referencedby refid="classlbann_1_1concatenation__layer_1a20c1588e7a506bc7b0acb4d63586ece9" compoundref="concatenation_8hpp" startline="135" endline="143">lbann::concatenation_layer&lt; T_layout &gt;::setup_pointers</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1a53b3f53828d4982452dd6e79b8ebce50" compoundref="concatenation_8hpp" startline="226" endline="275">lbann::concatenation_layer&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1a530ff478d02f3d69baf8432473979d00" compoundref="concatenation_8hpp" startline="277" endline="325">lbann::concatenation_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1afd6cb5cf50acf95c2e3ba2e365be3525" compoundref="concatenation_8hpp" startline="327" endline="388">lbann::concatenation_layer&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1aa024e4ba8d10aec75c89075e6e0cc28d" compoundref="concatenation_8hpp" startline="390" endline="467">lbann::concatenation_layer&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1hadamard__layer_1a712faa83429f6a77a6c43c8afde4ddaa" compoundref="hadamard_8hpp" startline="69" endline="77">lbann::hadamard_layer&lt; T_layout &gt;::setup_pointers</referencedby>
        <referencedby refid="classlbann_1_1hadamard__layer_1a2150c54cc21fb5dc51d77119c20c6c21" compoundref="hadamard_8hpp" startline="112" endline="153">lbann::hadamard_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a9f8659993a180f1bb1a8bd875814d33b" compoundref="sum_8hpp" startline="110" endline="124">lbann::sum_layer&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a8d235d61507e76f42ee83a74d1098977" compoundref="sum_8hpp" startline="126" endline="165">lbann::sum_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a0dcddd056cf81c1fbea22a5e1c01c6d9" compoundref="sum_8hpp" startline="167" endline="200">lbann::sum_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7e50932bb60d4cab3b21ab3fb0707ea" compoundref="layer_8cpp" startline="342" endline="368">summarize_matrices</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" compoundref="layer_8cpp" startline="458" endline="476">clear_error_signals</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" compoundref="layer_8cpp" startline="511" endline="533">setup_pointers</referencedby>
        <referencedby refid="namespacelbann_1a32006e2c89920b1ff6e8a2318650dd7f" compoundref="layer_8cpp" startline="557" endline="566">lbann::Layer::instantiate_matrices&lt; data_layout::MODEL_PARALLEL &gt;</referencedby>
        <referencedby refid="namespacelbann_1af3507a38f8992e27898d63551a987341" compoundref="layer_8cpp" startline="569" endline="578">lbann::Layer::instantiate_matrices&lt; data_layout::DATA_PARALLEL &gt;</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" compoundref="layer_8cpp" startline="600" endline="635">setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" compoundref="layer_8cpp" startline="694" endline="763">check_setup</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lbann::Layer::get_num_children</definition>
        <argsstring>() const</argsstring>
        <name>get_num_children</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get number of child layers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="271" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="271" bodyend="271"/>
        <references refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" compoundref="layer_8hpp" startline="264" endline="264">get_child_layers</references>
        <references refid="classlbann_1_1Layer_1af4a093d91552cf079217eb346bbb847f" compoundref="layer_8cpp" startline="1218" endline="1225">get_layer_names</references>
        <referencedby refid="classlbann_1_1slice__layer_1a701854f5906a25c58d4f9d851b20de29" compoundref="slice_8hpp" startline="137" endline="145">lbann::slice_layer&lt; T_layout &gt;::setup_pointers</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1ab4c95d24916534cdff58b32916171ff2" compoundref="slice_8hpp" startline="207" endline="264">lbann::slice_layer&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1af5d6887cac9a0c3afab8f361cdf81034" compoundref="slice_8hpp" startline="266" endline="315">lbann::slice_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a875347929b9e4c0a70749da0dbb6469e" compoundref="slice_8hpp" startline="317" endline="386">lbann::slice_layer&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a798c10e5c19f58e38da9d2d50c49ca3e" compoundref="slice_8hpp" startline="388" endline="465">lbann::slice_layer&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a147a7f7dcf0027a60f10109439e5dcea" compoundref="layer_8cpp" startline="215" endline="245">get_topo_description</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7e50932bb60d4cab3b21ab3fb0707ea" compoundref="layer_8cpp" startline="342" endline="368">summarize_matrices</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" compoundref="layer_8cpp" startline="458" endline="476">clear_error_signals</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" compoundref="layer_8cpp" startline="511" endline="533">setup_pointers</referencedby>
        <referencedby refid="namespacelbann_1a32006e2c89920b1ff6e8a2318650dd7f" compoundref="layer_8cpp" startline="557" endline="566">lbann::Layer::instantiate_matrices&lt; data_layout::MODEL_PARALLEL &gt;</referencedby>
        <referencedby refid="namespacelbann_1af3507a38f8992e27898d63551a987341" compoundref="layer_8cpp" startline="569" endline="578">lbann::Layer::instantiate_matrices&lt; data_layout::DATA_PARALLEL &gt;</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" compoundref="layer_8cpp" startline="600" endline="635">setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" compoundref="layer_8cpp" startline="637" endline="692">setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" compoundref="layer_8cpp" startline="694" endline="763">check_setup</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1afc7bf4e2a61a6f47f9e1f185bf92439a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string lbann::Layer::get_child_names</definition>
        <argsstring>() const</argsstring>
        <name>get_child_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="275" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="275" bodyend="275"/>
        <references refid="classlbann_1_1Layer_1af4a093d91552cf079217eb346bbb847f" compoundref="layer_8cpp" startline="1218" endline="1225">get_layer_names</references>
        <references refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" compoundref="layer_8hpp" startline="413">m_child_layers</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1afdf36947beec676a71ecd6167c3bb724" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string lbann::Layer::get_parent_names</definition>
        <argsstring>() const</argsstring>
        <name>get_parent_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="276" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="276" bodyend="276"/>
        <references refid="classlbann_1_1Layer_1af4a093d91552cf079217eb346bbb847f" compoundref="layer_8cpp" startline="1218" endline="1225">get_layer_names</references>
        <references refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" compoundref="layer_8hpp" startline="411">m_parent_layers</references>
        <references refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" compoundref="layer_8cpp" startline="1227" endline="1236">add_parent_layer</references>
        <references refid="classlbann_1_1Layer_1ace0346ac56fd7ce7b6b44f27f224f35e" compoundref="layer_8cpp" startline="1238" endline="1247">add_child_layer</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::Layer::add_parent_layer</definition>
        <argsstring>(const Layer *parent)</argsstring>
        <name>add_parent_layer</name>
        <param>
          <type>const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a parent layer. Does nothing if parent is a null pointer, the same layer, or already a parent. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="282" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="1227" bodyend="1236"/>
        <references refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" compoundref="layer_8hpp" startline="411">m_parent_layers</references>
        <referencedby refid="classlbann_1_1Layer_1afdf36947beec676a71ecd6167c3bb724" compoundref="layer_8hpp" startline="276" endline="276">get_parent_names</referencedby>
        <referencedby refid="classlbann_1_1greedy__layerwise__autoencoder_1a5f237f1f6285475c5493a7d15dc32096" compoundref="greedy__layerwise__autoencoder_8cpp" startline="160" endline="212">lbann::greedy_layerwise_autoencoder::set_phase</referencedby>
        <referencedby refid="classlbann_1_1model_1a6ba9a836e5ba52c999c5234cfa5e62c2" compoundref="model_8cpp" startline="541" endline="576">lbann::model::add_dummy_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1ac56d43e457cd4dfc3b88122bd10d286e" compoundref="model_8cpp" startline="578" endline="624">lbann::model::add_split_layers</referencedby>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02recurrent_8cpp_03_1a8c76387c2dd531058700ad9a41cd093a" compoundref="recurrent_8cpp" startline="47" endline="113">lbann::anonymous_namespace{recurrent.cpp}::unroll_input_layer</referencedby>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02recurrent_8cpp_03_1a50bca1c07c6f3146947b2a0fb5cc815a" compoundref="recurrent_8cpp" startline="227" endline="317">lbann::anonymous_namespace{recurrent.cpp}::add_placeholder_layers</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1ace0346ac56fd7ce7b6b44f27f224f35e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::Layer::add_child_layer</definition>
        <argsstring>(const Layer *child)</argsstring>
        <name>add_child_layer</name>
        <param>
          <type>const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a child layer. Does nothing if child is a null pointer, the same layer, or already a child. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="287" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="1238" bodyend="1247"/>
        <references refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" compoundref="layer_8hpp" startline="413">m_child_layers</references>
        <referencedby refid="classlbann_1_1Layer_1afdf36947beec676a71ecd6167c3bb724" compoundref="layer_8hpp" startline="276" endline="276">get_parent_names</referencedby>
        <referencedby refid="classlbann_1_1model_1ac56d43e457cd4dfc3b88122bd10d286e" compoundref="model_8cpp" startline="578" endline="624">lbann::model::add_split_layers</referencedby>
        <referencedby refid="namespacelbann_1_1anonymous__namespace_02recurrent_8cpp_03_1a8c76387c2dd531058700ad9a41cd093a" compoundref="recurrent_8cpp" startline="47" endline="113">lbann::anonymous_namespace{recurrent.cpp}::unroll_input_layer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a7336909c78e438ba5332c6c1bddeadd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::Layer::clear_parent_layers</definition>
        <argsstring>()</argsstring>
        <name>clear_parent_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove all parent layers. Parent layers are not deallocated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="292" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="292" bodyend="292"/>
        <references refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" compoundref="layer_8hpp" startline="260" endline="260">get_parent_layers</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a040bf53e261b1ef796739c09b3362a3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::Layer::clear_child_layers</definition>
        <argsstring>()</argsstring>
        <name>clear_child_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove all child layers. Child layers are not deallocated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="296" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="296" bodyend="296"/>
        <references refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" compoundref="layer_8hpp" startline="264" endline="264">get_child_layers</references>
        <references refid="classlbann_1_1Layer_1a9f94210cbb973f1df89ef649899094a1" compoundref="layer_8cpp" startline="1249" endline="1258">get_layer_pointers</references>
        <references refid="classlbann_1_1Layer_1a001ea76cdd05e2d0d475f408f24702ee" compoundref="layer_8cpp" startline="1260" endline="1275">set_layer_pointers</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a9f94210cbb973f1df89ef649899094a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> * &gt;</type>
        <definition>std::vector&lt; Layer * &gt; lbann::Layer::get_layer_pointers</definition>
        <argsstring>()</argsstring>
        <name>get_layer_pointers</name>
        <reimplementedby refid="classlbann_1_1unpooling__layer_1a33e17164da27e3370fb3f362dd2e6c13">get_layer_pointers</reimplementedby>
        <reimplementedby refid="classlbann_1_1reconstruction__layer_1a52f5ebe2f2716b8cab5e768b1b82c3d0">get_layer_pointers</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a0325a9703238ac0120893214fd0983b5">get_layer_pointers</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get list of pointers to other layers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="299" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="1249" bodyend="1258"/>
        <references refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" compoundref="layer_8hpp" startline="411">m_parent_layers</references>
        <references refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" compoundref="layer_8hpp" startline="413">m_child_layers</references>
        <referencedby refid="classlbann_1_1generic__target__layer_1a0325a9703238ac0120893214fd0983b5" compoundref="generic__target__layer_8hpp" startline="303" endline="307">lbann::generic_target_layer::get_layer_pointers</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a040bf53e261b1ef796739c09b3362a3a" compoundref="layer_8hpp" startline="296" endline="296">clear_child_layers</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1a33e17164da27e3370fb3f362dd2e6c13" compoundref="unpooling_8hpp" startline="96" endline="100">lbann::unpooling_layer&lt; T_layout &gt;::get_layer_pointers</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a001ea76cdd05e2d0d475f408f24702ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::set_layer_pointers</definition>
        <argsstring>(std::vector&lt; Layer *&gt; layers)</argsstring>
        <name>set_layer_pointers</name>
        <reimplementedby refid="classlbann_1_1unpooling__layer_1aacc3a2fdd75ecee8614a00a85697a763">set_layer_pointers</reimplementedby>
        <reimplementedby refid="classlbann_1_1reconstruction__layer_1a663b2810780ee2b0817f611a00b0b07f">set_layer_pointers</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a1f8f722fadb1223b063c0917afd83b66">set_layer_pointers</reimplementedby>
        <param>
          <type>std::vector&lt; <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt;</type>
          <declname>layers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set list of pointers to other layers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="301" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="1260" bodyend="1275"/>
        <references refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" compoundref="layer_8hpp" startline="411">m_parent_layers</references>
        <references refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" compoundref="layer_8hpp" startline="413">m_child_layers</references>
        <referencedby refid="classlbann_1_1generic__target__layer_1a1f8f722fadb1223b063c0917afd83b66" compoundref="generic__target__layer_8hpp" startline="309" endline="319">lbann::generic_target_layer::set_layer_pointers</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a040bf53e261b1ef796739c09b3362a3a" compoundref="layer_8hpp" startline="296" endline="296">clear_child_layers</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1aacc3a2fdd75ecee8614a00a85697a763" compoundref="unpooling_8hpp" startline="102" endline="112">lbann::unpooling_layer&lt; T_layout &gt;::set_layer_pointers</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a4ee78d42284421519dd18d27b4da0957" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> * &gt; &amp;</type>
        <definition>std::vector&lt;weights*&gt;&amp; lbann::Layer::get_weights</definition>
        <argsstring>()</argsstring>
        <name>get_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get references to weights. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="304" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="304" bodyend="304"/>
        <references refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" compoundref="layer_8hpp" startline="408">m_weights</references>
        <referencedby refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" compoundref="layer_8hpp" startline="308" endline="308">set_weights</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a7f3f26e2ae0497f9a00fd6bc56b50543" compoundref="layer_8cpp" startline="324" endline="340">summarize_stats</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ae9df4e0b0fe7c276c79575f9e11c53af" compoundref="layer_8cpp" startline="765" endline="775">replace_weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1ab9fe05ad8d21ba5d6dd4d22ee2e0dca0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> * &gt; &amp;</type>
        <definition>const std::vector&lt;weights*&gt;&amp; lbann::Layer::get_weights</definition>
        <argsstring>() const</argsstring>
        <name>get_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get references to weights. (const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="306" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="306" bodyend="306"/>
        <references refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" compoundref="layer_8hpp" startline="408">m_weights</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::Layer::set_weights</definition>
        <argsstring>(std::vector&lt; weights *&gt; w)</argsstring>
        <name>set_weights</name>
        <param>
          <type>std::vector&lt; <ref refid="classlbann_1_1weights" kindref="compound">weights</ref> *&gt;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set list of pointers to weights. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="308" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="308" bodyend="308"/>
        <references refid="classlbann_1_1Layer_1a4ee78d42284421519dd18d27b4da0957" compoundref="layer_8hpp" startline="304" endline="304">get_weights</references>
        <references refid="classlbann_1_1Layer_1ae9df4e0b0fe7c276c79575f9e11c53af" compoundref="layer_8cpp" startline="765" endline="775">replace_weights</references>
        <references refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" compoundref="layer_8cpp" startline="373" endline="375">get_prev_activations</references>
        <references refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" compoundref="layer_8cpp" startline="376" endline="378">get_activations</references>
        <references refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" compoundref="layer_8cpp" startline="379" endline="381">get_prev_error_signals</references>
        <references refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" compoundref="layer_8cpp" startline="382" endline="384">get_error_signals</references>
        <references refid="classlbann_1_1Layer_1a35397843bb0c84030000c7d872229acb" compoundref="layer_8cpp" startline="433" endline="435">get_local_prev_activations</references>
        <references refid="classlbann_1_1Layer_1a4248f27acebf72b7b7b3ee39c8bcb62a" compoundref="layer_8cpp" startline="436" endline="438">get_local_activations</references>
        <references refid="classlbann_1_1Layer_1a82827edc5e869960144f3ccb2172bfcd" compoundref="layer_8cpp" startline="439" endline="441">get_local_prev_error_signals</references>
        <references refid="classlbann_1_1Layer_1af178d00b9d878aa7d87754bff2a91f3a" compoundref="layer_8cpp" startline="442" endline="444">get_local_error_signals</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1ae9df4e0b0fe7c276c79575f9e11c53af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::Layer::replace_weights</definition>
        <argsstring>(Layer *other_layer)</argsstring>
        <name>replace_weights</name>
        <param>
          <type><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>other_layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replace weights with another <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>&apos;s weights </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="310" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="765" bodyend="775"/>
        <references refid="classlbann_1_1Layer_1a4ee78d42284421519dd18d27b4da0957" compoundref="layer_8hpp" startline="304" endline="304">get_weights</references>
        <references refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" compoundref="layer_8hpp" startline="408">m_weights</references>
        <referencedby refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" compoundref="layer_8hpp" startline="308" endline="308">set_weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
        <definition>AbsDistMat &amp; lbann::Layer::get_prev_activations</definition>
        <argsstring>(int parent_index=0)</argsstring>
        <name>get_prev_activations</name>
        <param>
          <type>int</type>
          <declname>parent_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get previous activation tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="313" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="373" bodyend="375"/>
        <references refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" compoundref="layer_8cpp" startline="373" endline="375">get_prev_activations</references>
        <referencedby refid="classlbann_1_1identity__layer_1aaa19914b20bc409aa3fb8a744e994114" compoundref="identity_8hpp" startline="43" endline="45">lbann::identity_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1af8bcdbd313c9793187fe6e53396e3356" compoundref="generic__target__layer_8hpp" startline="108" endline="112">lbann::generic_target_layer::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1ac0b88a705256ab06bbba6bbffbc7ebc1" compoundref="generic__target__layer_8hpp" startline="298" endline="298">lbann::generic_target_layer::get_prediction</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" compoundref="layer_8hpp" startline="308" endline="308">set_weights</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1aacff2c47a5455a4c28b9695f4fb37249" compoundref="batch__normalization_8hpp" startline="332" endline="440">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a7d48ad1531825fc9745c77f9ae5f68d6" compoundref="batch__normalization_8hpp" startline="442" endline="556">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ae4cad47f456752e4ea20add0f6f38819" compoundref="batch__normalization_8hpp" startline="558" endline="670">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a83e40edd001a0b71c31fbc9a3acb2231" compoundref="batch__normalization_8hpp" startline="672" endline="801">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a358c502d8e7eeb1fed8b5df468793b09" compoundref="dropout_8hpp" startline="182" endline="216">lbann::dropout&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1a50ccce3672873a12ae69cc76c91e767a" compoundref="selu__dropout_8hpp" startline="102" endline="131">lbann::selu_dropout&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1a9c305ea0cbee1b7b6fe822f514c48d42" compoundref="concatenation_8hpp" startline="145" endline="152">lbann::concatenation_layer&lt; T_layout &gt;::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1a53b3f53828d4982452dd6e79b8ebce50" compoundref="concatenation_8hpp" startline="226" endline="275">lbann::concatenation_layer&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1evaluation__layer_1a6cb3ab97ec80b6cf8606b421d9761c1c" compoundref="evaluation_8hpp" startline="80" endline="98">lbann::evaluation_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1reshape__layer_1a6a8567b61a1f911f52419ecd2346fcac" compoundref="reshape_8hpp" startline="93" endline="95">lbann::reshape_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1af3b6f79a53c9a80908b37c2587ff2cae" compoundref="slice_8hpp" startline="147" endline="154">lbann::slice_layer&lt; T_layout &gt;::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1ab4c95d24916534cdff58b32916171ff2" compoundref="slice_8hpp" startline="207" endline="264">lbann::slice_layer&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1split__layer_1aeb4caccd2675195ce75ae63485f6d402" compoundref="split_8hpp" startline="80" endline="96">lbann::split_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a8d235d61507e76f42ee83a74d1098977" compoundref="sum_8hpp" startline="126" endline="165">lbann::sum_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" compoundref="layer_8cpp" startline="373" endline="375">get_prev_activations</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a35397843bb0c84030000c7d872229acb" compoundref="layer_8cpp" startline="433" endline="435">get_local_prev_activations</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
        <definition>AbsDistMat &amp; lbann::Layer::get_activations</definition>
        <argsstring>(int child_index=0)</argsstring>
        <name>get_activations</name>
        <param>
          <type>int</type>
          <declname>child_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get activation tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="315" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="376" bodyend="378"/>
        <references refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" compoundref="layer_8cpp" startline="376" endline="378">get_activations</references>
        <referencedby refid="classlbann_1_1identity__layer_1aaa19914b20bc409aa3fb8a744e994114" compoundref="identity_8hpp" startline="43" endline="45">lbann::identity_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1ae74c8c5a7e14b4fdd4902554bbc7bcef" compoundref="generic__input__layer_8hpp" startline="198" endline="241">lbann::generic_input_layer::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1reconstruction__layer_1ad33ec2cccf89b317e22ec73b1761e427" compoundref="reconstruction_8hpp" startline="86" endline="88">lbann::reconstruction_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" compoundref="layer_8hpp" startline="308" endline="308">set_weights</referencedby>
        <referencedby refid="classlbann_1_1dropout_1abf399d8463721d322aedbb76d60534c6" compoundref="dropout_8hpp" startline="117" endline="122">lbann::dropout&lt; T_layout &gt;::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a358c502d8e7eeb1fed8b5df468793b09" compoundref="dropout_8hpp" startline="182" endline="216">lbann::dropout&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1a8b6469a14cf093d48e42384aa4ee404a" compoundref="selu__dropout_8hpp" startline="94" endline="98">lbann::selu_dropout&lt; T_layout &gt;::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1a50ccce3672873a12ae69cc76c91e767a" compoundref="selu__dropout_8hpp" startline="102" endline="131">lbann::selu_dropout&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1bernoulli__layer_1ad3b8939b6df375880247ef54f370ceb1" compoundref="bernoulli_8hpp" startline="89" endline="96">lbann::bernoulli_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1a53b3f53828d4982452dd6e79b8ebce50" compoundref="concatenation_8hpp" startline="226" endline="275">lbann::concatenation_layer&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1ad46d9db2e6bad4204dcedd2be60bfb1a" compoundref="constant_8hpp" startline="92" endline="97">lbann::constant_layer&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1a15b919ed869f2c815e1613dfb42b317c" compoundref="constant_8hpp" startline="112" endline="120">lbann::constant_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1gaussian__layer_1a8a0f52d4f365180dbf11e9a09b359c5e" compoundref="gaussian_8hpp" startline="94" endline="101">lbann::gaussian_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1reshape__layer_1a6a8567b61a1f911f52419ecd2346fcac" compoundref="reshape_8hpp" startline="93" endline="95">lbann::reshape_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1ab4c95d24916534cdff58b32916171ff2" compoundref="slice_8hpp" startline="207" endline="264">lbann::slice_layer&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a8d235d61507e76f42ee83a74d1098977" compoundref="sum_8hpp" startline="126" endline="165">lbann::sum_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1uniform__layer_1a975ba9cfcd974fe348ee9681d1feb879" compoundref="uniform_8hpp" startline="94" endline="103">lbann::uniform_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checknan_1a09388ae76566a6a93c957ab76cd54dcd" compoundref="callback__checknan_8cpp" startline="35" endline="49">lbann::lbann_callback_checknan::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__checksmall_1a2f50695feb1444145bae251f2e94b721" compoundref="callback__checksmall_8cpp" startline="35" endline="48">lbann::lbann_callback_checksmall::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1lbann__callback__dump__activations_1acf4429a44ead6ffea303528618bc6572" compoundref="callback__dump__activations_8cpp" startline="35" endline="55">lbann::lbann_callback_dump_activations::on_forward_prop_end</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a147a7f7dcf0027a60f10109439e5dcea" compoundref="layer_8cpp" startline="215" endline="245">get_topo_description</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" compoundref="layer_8cpp" startline="376" endline="378">get_activations</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a4248f27acebf72b7b7b3ee39c8bcb62a" compoundref="layer_8cpp" startline="436" endline="438">get_local_activations</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" compoundref="layer_8cpp" startline="867" endline="943">fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1ac6b43c63399f717cc1a4a0a2007350f2" compoundref="layer_8cpp" startline="1027" endline="1064">get_fp_output</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">get_bp_output</referencedby>
        <referencedby refid="classlbann_1_1kl__divergence_1a93aab2ca89cdaab075a940184ae209d5" compoundref="kl__divergence_8cpp" startline="63" endline="92">lbann::kl_divergence::finish_evaluation</referencedby>
        <referencedby refid="classlbann_1_1kl__divergence_1aeb39d1ba1e74874cbf396fbe137ff601" compoundref="kl__divergence_8cpp" startline="94" endline="135">lbann::kl_divergence::differentiate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
        <definition>AbsDistMat &amp; lbann::Layer::get_prev_error_signals</definition>
        <argsstring>(int child_index=0)</argsstring>
        <name>get_prev_error_signals</name>
        <param>
          <type>int</type>
          <declname>child_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get previous error signal tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="317" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="379" bodyend="381"/>
        <references refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" compoundref="layer_8cpp" startline="379" endline="381">get_prev_error_signals</references>
        <referencedby refid="classlbann_1_1identity__layer_1a1f6c975af032caea84155bda8b9c9801" compoundref="identity_8hpp" startline="47" endline="49">lbann::identity_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" compoundref="layer_8hpp" startline="308" endline="308">set_weights</referencedby>
        <referencedby refid="classlbann_1_1dropout_1aca0160de0c3db5c29a0c4c6bddd0cf4f" compoundref="dropout_8hpp" startline="219" endline="229">lbann::dropout&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1afc80277386fef53296368579876bdb55" compoundref="selu__dropout_8hpp" startline="134" endline="154">lbann::selu_dropout&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1a530ff478d02f3d69baf8432473979d00" compoundref="concatenation_8hpp" startline="277" endline="325">lbann::concatenation_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1reshape__layer_1a31d90673a9d98ccba0eafb4bf76cbe20" compoundref="reshape_8hpp" startline="97" endline="99">lbann::reshape_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1af5d6887cac9a0c3afab8f361cdf81034" compoundref="slice_8hpp" startline="266" endline="315">lbann::slice_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a0dcddd056cf81c1fbea22a5e1c01c6d9" compoundref="sum_8hpp" startline="167" endline="200">lbann::sum_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" compoundref="layer_8cpp" startline="379" endline="381">get_prev_error_signals</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a82827edc5e869960144f3ccb2172bfcd" compoundref="layer_8cpp" startline="439" endline="441">get_local_prev_error_signals</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" compoundref="layer_8cpp" startline="458" endline="476">clear_error_signals</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
        <definition>AbsDistMat &amp; lbann::Layer::get_error_signals</definition>
        <argsstring>(int parent_index=0)</argsstring>
        <name>get_error_signals</name>
        <param>
          <type>int</type>
          <declname>parent_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get error signal tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="319" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="382" bodyend="384"/>
        <references refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" compoundref="layer_8cpp" startline="382" endline="384">get_error_signals</references>
        <referencedby refid="classlbann_1_1identity__layer_1a1f6c975af032caea84155bda8b9c9801" compoundref="identity_8hpp" startline="47" endline="49">lbann::identity_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" compoundref="layer_8hpp" startline="308" endline="308">set_weights</referencedby>
        <referencedby refid="classlbann_1_1dropout_1aca0160de0c3db5c29a0c4c6bddd0cf4f" compoundref="dropout_8hpp" startline="219" endline="229">lbann::dropout&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1afc80277386fef53296368579876bdb55" compoundref="selu__dropout_8hpp" startline="134" endline="154">lbann::selu_dropout&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1a530ff478d02f3d69baf8432473979d00" compoundref="concatenation_8hpp" startline="277" endline="325">lbann::concatenation_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1evaluation__layer_1a7b2b0898c0b0a29e35ec14f766758551" compoundref="evaluation_8hpp" startline="100" endline="107">lbann::evaluation_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1reshape__layer_1a31d90673a9d98ccba0eafb4bf76cbe20" compoundref="reshape_8hpp" startline="97" endline="99">lbann::reshape_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1af5d6887cac9a0c3afab8f361cdf81034" compoundref="slice_8hpp" startline="266" endline="315">lbann::slice_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1split__layer_1ae7b54dc12b2560d27f506d5f34c4074f" compoundref="split_8hpp" startline="98" endline="129">lbann::split_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a0dcddd056cf81c1fbea22a5e1c01c6d9" compoundref="sum_8hpp" startline="167" endline="200">lbann::sum_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" compoundref="layer_8cpp" startline="382" endline="384">get_error_signals</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af178d00b9d878aa7d87754bff2a91f3a" compoundref="layer_8cpp" startline="442" endline="444">get_local_error_signals</referencedby>
        <referencedby refid="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" compoundref="layer_8cpp" startline="458" endline="476">clear_error_signals</referencedby>
        <referencedby refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" compoundref="layer_8cpp" startline="945" endline="999">bp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" compoundref="layer_8cpp" startline="1066" endline="1103">get_bp_output</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1afc0611b7c3b1537914f25a538486a8cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
        <definition>const AbsDistMat &amp; lbann::Layer::get_prev_activations</definition>
        <argsstring>(int parent_index=0) const</argsstring>
        <name>get_prev_activations</name>
        <param>
          <type>int</type>
          <declname>parent_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get previous activation tensor. (const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="321" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="385" bodyend="396"/>
        <references refid="classlbann_1_1Layer_1a52314601c3458268f56e017dc2ade357" compoundref="layer_8hpp" startline="384">m_prev_activations</references>
        <references refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" compoundref="layer_8hpp" startline="536">m_name</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1af69a4773804c6982e8acaf5810eaa150" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
        <definition>const AbsDistMat &amp; lbann::Layer::get_activations</definition>
        <argsstring>(int child_index=0) const</argsstring>
        <name>get_activations</name>
        <param>
          <type>int</type>
          <declname>child_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get activation tensor. (const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="323" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="397" bodyend="408"/>
        <references refid="classlbann_1_1Layer_1a7caf08e938141d1584e6939cefa4baed" compoundref="layer_8hpp" startline="391">m_activations</references>
        <references refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" compoundref="layer_8hpp" startline="536">m_name</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1aff2c8983548364c978acb09ddf58a6fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
        <definition>const AbsDistMat &amp; lbann::Layer::get_prev_error_signals</definition>
        <argsstring>(int child_index=0) const</argsstring>
        <name>get_prev_error_signals</name>
        <param>
          <type>int</type>
          <declname>child_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get previous error signal tensor. (const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="325" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="409" bodyend="420"/>
        <references refid="classlbann_1_1Layer_1a6fdcbf884150d0b20cffe678fefd7caa" compoundref="layer_8hpp" startline="398">m_prev_error_signals</references>
        <references refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" compoundref="layer_8hpp" startline="536">m_name</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1ae09bc5a240e9042371203ba5ff19990c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
        <definition>const AbsDistMat &amp; lbann::Layer::get_error_signals</definition>
        <argsstring>(int parent_index=0) const</argsstring>
        <name>get_error_signals</name>
        <param>
          <type>int</type>
          <declname>parent_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get error signal tensor. (const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="327" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="421" bodyend="432"/>
        <references refid="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" compoundref="layer_8hpp" startline="405">m_error_signals</references>
        <references refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" compoundref="layer_8hpp" startline="536">m_name</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a35397843bb0c84030000c7d872229acb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
        <definition>Mat &amp; lbann::Layer::get_local_prev_activations</definition>
        <argsstring>(int parent_index=0)</argsstring>
        <name>get_local_prev_activations</name>
        <param>
          <type>int</type>
          <declname>parent_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get local portion of previous activation tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="329" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="433" bodyend="435"/>
        <references refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" compoundref="layer_8cpp" startline="373" endline="375">get_prev_activations</references>
        <referencedby refid="classlbann_1_1entrywise__activation__layer_1a8d4b0376b9783414c1cb7812351122ce" compoundref="activation_8hpp" startline="86" endline="120">lbann::entrywise_activation_layer::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1entrywise__activation__layer_1a38c2c090f26fb8ca269bef45989564a5" compoundref="activation_8hpp" startline="122" endline="169">lbann::entrywise_activation_layer::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" compoundref="layer_8hpp" startline="308" endline="308">set_weights</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a0710d46aa54d92f94de920ed37f6ef11" compoundref="base__convolution_8hpp" startline="625" endline="682">lbann::base_convolution_layer::apply_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a87fb2bf066a98052938e48a82dcd4fd2" compoundref="base__convolution_8hpp" startline="685" endline="748">lbann::base_convolution_layer::apply_transposed_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a8cb0b4fb33f058ce6c211ebaf6a17f63" compoundref="base__convolution_8hpp" startline="779" endline="879">lbann::base_convolution_layer::compute_gradients_im2col</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a79c72491b5b74b64d2b10ac2636cddce" compoundref="local__response__normalization_8hpp" startline="223" endline="302">lbann::local_response_normalization_layer&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a1aac4bf5e2500749bc8bafcd254f5699" compoundref="local__response__normalization_8hpp" startline="305" endline="417">lbann::local_response_normalization_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a76ce07a190fbe85685ea2ab4e53be7f9" compoundref="pooling_8hpp" startline="323" endline="409">lbann::pooling_layer&lt; T_layout &gt;::fp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1safe__inv__layer_1a070fe64c2a605eb5624d509740de1c32" compoundref="safe__inv_8hpp" startline="66" endline="78">lbann::safe_inv_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1safe__inv__layer_1a6c9d917f226b718733ee60da9da0291b" compoundref="safe__inv_8hpp" startline="80" endline="94">lbann::safe_inv_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1ab4a0b7cc4711426434983c41cd7dbc63" compoundref="unpooling_8hpp" startline="135" endline="187">lbann::unpooling_layer&lt; T_layout &gt;::fp_compute_im2col</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a4248f27acebf72b7b7b3ee39c8bcb62a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
        <definition>Mat &amp; lbann::Layer::get_local_activations</definition>
        <argsstring>(int child_index=0)</argsstring>
        <name>get_local_activations</name>
        <param>
          <type>int</type>
          <declname>child_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get local portion of activation tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="331" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="436" bodyend="438"/>
        <references refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" compoundref="layer_8cpp" startline="376" endline="378">get_activations</references>
        <referencedby refid="classlbann_1_1entrywise__activation__layer_1a8d4b0376b9783414c1cb7812351122ce" compoundref="activation_8hpp" startline="86" endline="120">lbann::entrywise_activation_layer::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1ad0b8ea79bc508bd227e08124359531c8" compoundref="generic__input__layer_8hpp" startline="170" endline="196">lbann::generic_input_layer::fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" compoundref="layer_8hpp" startline="308" endline="308">set_weights</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a0710d46aa54d92f94de920ed37f6ef11" compoundref="base__convolution_8hpp" startline="625" endline="682">lbann::base_convolution_layer::apply_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a87fb2bf066a98052938e48a82dcd4fd2" compoundref="base__convolution_8hpp" startline="685" endline="748">lbann::base_convolution_layer::apply_transposed_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a4f792e1c19d4591f305880b57f63cec3" compoundref="base__convolution_8hpp" startline="750" endline="777">lbann::base_convolution_layer::apply_bias_cpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ae4cad47f456752e4ea20add0f6f38819" compoundref="batch__normalization_8hpp" startline="558" endline="670">lbann::batch_normalization&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a79c72491b5b74b64d2b10ac2636cddce" compoundref="local__response__normalization_8hpp" startline="223" endline="302">lbann::local_response_normalization_layer&lt; T_layout &gt;::fp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a1aac4bf5e2500749bc8bafcd254f5699" compoundref="local__response__normalization_8hpp" startline="305" endline="417">lbann::local_response_normalization_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1a50ccce3672873a12ae69cc76c91e767a" compoundref="selu__dropout_8hpp" startline="102" endline="131">lbann::selu_dropout&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1hadamard__layer_1a8be44f24f2290b06b104294d1fe31d41" compoundref="hadamard_8hpp" startline="79" endline="110">lbann::hadamard_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a76ce07a190fbe85685ea2ab4e53be7f9" compoundref="pooling_8hpp" startline="323" endline="409">lbann::pooling_layer&lt; T_layout &gt;::fp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1safe__inv__layer_1a070fe64c2a605eb5624d509740de1c32" compoundref="safe__inv_8hpp" startline="66" endline="78">lbann::safe_inv_layer&lt; T_layout &gt;::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1ab4a0b7cc4711426434983c41cd7dbc63" compoundref="unpooling_8hpp" startline="135" endline="187">lbann::unpooling_layer&lt; T_layout &gt;::fp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1kl__divergence_1a93aab2ca89cdaab075a940184ae209d5" compoundref="kl__divergence_8cpp" startline="63" endline="92">lbann::kl_divergence::finish_evaluation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a82827edc5e869960144f3ccb2172bfcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
        <definition>Mat &amp; lbann::Layer::get_local_prev_error_signals</definition>
        <argsstring>(int child_index=0)</argsstring>
        <name>get_local_prev_error_signals</name>
        <param>
          <type>int</type>
          <declname>child_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get local portion of previous error signal tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="333" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="439" bodyend="441"/>
        <references refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" compoundref="layer_8cpp" startline="379" endline="381">get_prev_error_signals</references>
        <referencedby refid="classlbann_1_1entrywise__activation__layer_1a38c2c090f26fb8ca269bef45989564a5" compoundref="activation_8hpp" startline="122" endline="169">lbann::entrywise_activation_layer::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" compoundref="layer_8hpp" startline="308" endline="308">set_weights</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a0710d46aa54d92f94de920ed37f6ef11" compoundref="base__convolution_8hpp" startline="625" endline="682">lbann::base_convolution_layer::apply_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a87fb2bf066a98052938e48a82dcd4fd2" compoundref="base__convolution_8hpp" startline="685" endline="748">lbann::base_convolution_layer::apply_transposed_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a8cb0b4fb33f058ce6c211ebaf6a17f63" compoundref="base__convolution_8hpp" startline="779" endline="879">lbann::base_convolution_layer::compute_gradients_im2col</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a83e40edd001a0b71c31fbc9a3acb2231" compoundref="batch__normalization_8hpp" startline="672" endline="801">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a1aac4bf5e2500749bc8bafcd254f5699" compoundref="local__response__normalization_8hpp" startline="305" endline="417">lbann::local_response_normalization_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1afc80277386fef53296368579876bdb55" compoundref="selu__dropout_8hpp" startline="134" endline="154">lbann::selu_dropout&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1hadamard__layer_1a2150c54cc21fb5dc51d77119c20c6c21" compoundref="hadamard_8hpp" startline="112" endline="153">lbann::hadamard_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a704aca0e1e5bba7d27b7755133e6d50b" compoundref="pooling_8hpp" startline="412" endline="494">lbann::pooling_layer&lt; T_layout &gt;::bp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1safe__inv__layer_1a6c9d917f226b718733ee60da9da0291b" compoundref="safe__inv_8hpp" startline="80" endline="94">lbann::safe_inv_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1ad4607102ff59de2f233a87f13967cc04" compoundref="unpooling_8hpp" startline="190" endline="237">lbann::unpooling_layer&lt; T_layout &gt;::bp_compute_im2col</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1af178d00b9d878aa7d87754bff2a91f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
        <definition>Mat &amp; lbann::Layer::get_local_error_signals</definition>
        <argsstring>(int parent_index=0)</argsstring>
        <name>get_local_error_signals</name>
        <param>
          <type>int</type>
          <declname>parent_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get local portion of error signal tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="335" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="442" bodyend="444"/>
        <references refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" compoundref="layer_8cpp" startline="382" endline="384">get_error_signals</references>
        <referencedby refid="classlbann_1_1entrywise__activation__layer_1a38c2c090f26fb8ca269bef45989564a5" compoundref="activation_8hpp" startline="122" endline="169">lbann::entrywise_activation_layer::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" compoundref="layer_8hpp" startline="308" endline="308">set_weights</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a0710d46aa54d92f94de920ed37f6ef11" compoundref="base__convolution_8hpp" startline="625" endline="682">lbann::base_convolution_layer::apply_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a87fb2bf066a98052938e48a82dcd4fd2" compoundref="base__convolution_8hpp" startline="685" endline="748">lbann::base_convolution_layer::apply_transposed_convolution_im2col</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a83e40edd001a0b71c31fbc9a3acb2231" compoundref="batch__normalization_8hpp" startline="672" endline="801">lbann::batch_normalization&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1a1aac4bf5e2500749bc8bafcd254f5699" compoundref="local__response__normalization_8hpp" startline="305" endline="417">lbann::local_response_normalization_layer&lt; T_layout &gt;::bp_compute_cpu</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1afc80277386fef53296368579876bdb55" compoundref="selu__dropout_8hpp" startline="134" endline="154">lbann::selu_dropout&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a704aca0e1e5bba7d27b7755133e6d50b" compoundref="pooling_8hpp" startline="412" endline="494">lbann::pooling_layer&lt; T_layout &gt;::bp_compute_im2col</referencedby>
        <referencedby refid="classlbann_1_1safe__inv__layer_1a6c9d917f226b718733ee60da9da0291b" compoundref="safe__inv_8hpp" startline="80" endline="94">lbann::safe_inv_layer&lt; T_layout &gt;::bp_compute</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1ad4607102ff59de2f233a87f13967cc04" compoundref="unpooling_8hpp" startline="190" endline="237">lbann::unpooling_layer&lt; T_layout &gt;::bp_compute_im2col</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1ab0f7b4d0fdb06004dfde5358781eeece" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
        <definition>const Mat &amp; lbann::Layer::get_local_prev_activations</definition>
        <argsstring>(int parent_index=0) const</argsstring>
        <name>get_local_prev_activations</name>
        <param>
          <type>int</type>
          <declname>parent_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get local portion of previous activation tensor. (const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="337" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="445" bodyend="447"/>
        <references refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" compoundref="layer_8cpp" startline="373" endline="375">get_prev_activations</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1aadbc466c72f455c10b53bf45dca56332" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
        <definition>const Mat &amp; lbann::Layer::get_local_activations</definition>
        <argsstring>(int child_index=0) const</argsstring>
        <name>get_local_activations</name>
        <param>
          <type>int</type>
          <declname>child_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get local portion of activation tensor. (const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="339" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="448" bodyend="450"/>
        <references refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" compoundref="layer_8cpp" startline="376" endline="378">get_activations</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1af3490fe9011ef620b827970bc5dcc7a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
        <definition>const Mat &amp; lbann::Layer::get_local_prev_error_signals</definition>
        <argsstring>(int child_index=0) const</argsstring>
        <name>get_local_prev_error_signals</name>
        <param>
          <type>int</type>
          <declname>child_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get local portion of previous error signal tensor. (const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="341" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="451" bodyend="453"/>
        <references refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" compoundref="layer_8cpp" startline="379" endline="381">get_prev_error_signals</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1acf76bc7fba1e8ab74947ef83a3c8a141" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> &amp;</type>
        <definition>const Mat &amp; lbann::Layer::get_local_error_signals</definition>
        <argsstring>(int parent_index=0) const</argsstring>
        <name>get_local_error_signals</name>
        <param>
          <type>int</type>
          <declname>parent_index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get local portion of error signal tensor. (const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="343" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="454" bodyend="456"/>
        <references refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" compoundref="layer_8cpp" startline="382" endline="384">get_error_signals</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a1b528e5872357a82176ee487596b363c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
        <definition>lbann_comm* lbann::Layer::get_comm</definition>
        <argsstring>() const</argsstring>
        <name>get_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get reference to LBANN communicator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="346" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="346" bodyend="346"/>
        <references refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" compoundref="layer_8hpp" startline="357">m_comm</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlbann_1_1cudnn_1_1cudnn__manager" kindref="compound">cudnn::cudnn_manager</ref> *</type>
        <definition>cudnn::cudnn_manager* lbann::Layer::get_cudnn_manager</definition>
        <argsstring>() const</argsstring>
        <name>get_cudnn_manager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get reference to cuDNN manager. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="348" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="348" bodyend="348"/>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">m_cudnn</references>
        <references refid="classlbann_1_1Layer_1ad55c455dbae0d082cedfa68511709aae" compoundref="layer_8cpp" startline="478" endline="483">freeze</references>
        <references refid="classlbann_1_1Layer_1aa43ecf9fc67eb1d596c1a69cf35d1245" compoundref="layer_8cpp" startline="485" endline="490">unfreeze</references>
        <references refid="classlbann_1_1Layer_1af3c0f9f32eb631f4fdf34ad040ef8637" compoundref="layer_8cpp" startline="492" endline="499">is_frozen</references>
        <referencedby refid="classlbann_1_1model_1a6ba9a836e5ba52c999c5234cfa5e62c2" compoundref="model_8cpp" startline="541" endline="576">lbann::model::add_dummy_layers</referencedby>
        <referencedby refid="classlbann_1_1model_1ac56d43e457cd4dfc3b88122bd10d286e" compoundref="model_8cpp" startline="578" endline="624">lbann::model::add_split_layers</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1ad55c455dbae0d082cedfa68511709aae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::Layer::freeze</definition>
        <argsstring>()</argsstring>
        <name>freeze</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="350" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="478" bodyend="483"/>
        <references refid="classlbann_1_1Layer_1afdc60df9731a3ecdeeeb8175fa483676" compoundref="layer_8hpp" startline="492">m_frozen</references>
        <references refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" compoundref="layer_8hpp" startline="408">m_weights</references>
        <referencedby refid="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" compoundref="layer_8hpp" startline="348" endline="348">get_cudnn_manager</referencedby>
        <referencedby refid="namespacelbann_1_1proto_1a99e65cd4abb769d020ab76ff20c39d0b" compoundref="layer__graph__factory_8cpp" startline="156" endline="260">lbann::proto::construct_layer_graph</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1aa43ecf9fc67eb1d596c1a69cf35d1245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::Layer::unfreeze</definition>
        <argsstring>()</argsstring>
        <name>unfreeze</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="351" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="485" bodyend="490"/>
        <references refid="classlbann_1_1Layer_1afdc60df9731a3ecdeeeb8175fa483676" compoundref="layer_8hpp" startline="492">m_frozen</references>
        <references refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" compoundref="layer_8hpp" startline="408">m_weights</references>
        <referencedby refid="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" compoundref="layer_8hpp" startline="348" endline="348">get_cudnn_manager</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1af3c0f9f32eb631f4fdf34ad040ef8637" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::Layer::is_frozen</definition>
        <argsstring>() const</argsstring>
        <name>is_frozen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="352" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="492" bodyend="499"/>
        <references refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" compoundref="layer_8hpp" startline="408">m_weights</references>
        <references refid="classlbann_1_1Layer_1afdc60df9731a3ecdeeeb8175fa483676" compoundref="layer_8hpp" startline="492">m_frozen</references>
        <referencedby refid="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" compoundref="layer_8hpp" startline="348" endline="348">get_cudnn_manager</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a9f850c1bdf4ae3cd986411d3cb3a524c" compoundref="base__convolution_8hpp" startline="217" endline="265">lbann::base_convolution_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ac046a5ab567cc01f9a36c6b0fc4e3b55" compoundref="batch__normalization_8hpp" startline="228" endline="292">lbann::batch_normalization&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" compoundref="model_8cpp" startline="294" endline="310">lbann::model::print_layer_description</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classlbann_1_1Layer_1af4a093d91552cf079217eb346bbb847f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string lbann::Layer::get_layer_names</definition>
        <argsstring>(const std::vector&lt; const Layer *&gt; &amp;list)</argsstring>
        <name>get_layer_names</name>
        <param>
          <type>const std::vector&lt; const <ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref> *&gt; &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get names in a particular list of layers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="274" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="1218" bodyend="1225"/>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">get_name</references>
        <referencedby refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" compoundref="layer_8hpp" startline="271" endline="271">get_num_children</referencedby>
        <referencedby refid="classlbann_1_1Layer_1afc7bf4e2a61a6f47f9e1f185bf92439a" compoundref="layer_8hpp" startline="275" endline="275">get_child_names</referencedby>
        <referencedby refid="classlbann_1_1Layer_1afdf36947beec676a71ecd6167c3bb724" compoundref="layer_8hpp" startline="276" endline="276">get_parent_names</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1ac43785fc01d6cf6e49d3677adfaac297" compoundref="slice_8hpp" startline="156" endline="182">lbann::slice_layer&lt; T_layout &gt;::setup_dims</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::fp_setup_data</definition>
        <argsstring>(int mini_batch_size)</argsstring>
        <name>fp_setup_data</name>
        <reimplementedby refid="classlbann_1_1softmax__layer_1a313aa2f82acfbca8f3852378d00c22c3">fp_setup_data</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1af89a8227784c005354bf937ec887a7ed">fp_setup_data</reimplementedby>
        <reimplementedby refid="classlbann_1_1dropout_1a478368964f515f5456324b6504a5358f">fp_setup_data</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1ad0b8ea79bc508bd227e08124359531c8">fp_setup_data</reimplementedby>
        <param>
          <type>int</type>
          <declname>mini_batch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup data for forward propagation. Base method gets previous activations from parent layers and resizes activations for the current mini-batch size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="431" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="867" bodyend="943"/>
        <references refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" compoundref="layer_8hpp" startline="269" endline="269">get_num_parents</references>
        <references refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" compoundref="layer_8cpp" startline="373" endline="375">get_prev_activations</references>
        <references refid="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" compoundref="layer_8hpp" startline="165" endline="167">get_num_prev_neurons</references>
        <references refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" compoundref="layer_8hpp" startline="271" endline="271">get_num_children</references>
        <references refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" compoundref="layer_8cpp" startline="376" endline="378">get_activations</references>
        <references refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" compoundref="layer_8hpp" startline="177" endline="179">get_num_neurons</references>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">m_using_gpus</references>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">m_cudnn</references>
        <references refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" compoundref="layer_8hpp" startline="411">m_parent_layers</references>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">get_name</references>
        <references refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" compoundref="layer_8hpp" startline="374">m_num_prev_neurons</references>
        <references refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" compoundref="layer_8hpp" startline="365">m_num_neurons</references>
        <references refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" compoundref="layer_8hpp" startline="372">m_prev_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" compoundref="layer_8hpp" startline="363">m_neuron_dims</references>
        <referencedby refid="classlbann_1_1softmax__layer_1a313aa2f82acfbca8f3852378d00c22c3" compoundref="softmax_8hpp" startline="144" endline="147">lbann::softmax_layer&lt; T_layout &gt;::fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1ad0b8ea79bc508bd227e08124359531c8" compoundref="generic__input__layer_8hpp" startline="170" endline="196">lbann::generic_input_layer::fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1af89a8227784c005354bf937ec887a7ed" compoundref="generic__target__layer_8hpp" startline="147" endline="154">lbann::generic_target_layer::fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1dropout_1a478368964f515f5456324b6504a5358f" compoundref="dropout_8hpp" startline="166" endline="180">lbann::dropout&lt; T_layout &gt;::fp_setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" compoundref="layer_8cpp" startline="247" endline="275">forward_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::bp_setup_data</definition>
        <argsstring>(int mini_batch_size)</argsstring>
        <name>bp_setup_data</name>
        <param>
          <type>int</type>
          <declname>mini_batch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup data for forward propagation. Base method gets previous error signals from child layers. The error signals are resized for the current mini-batch size in the clear_error_signals function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="437" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="945" bodyend="999"/>
        <references refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" compoundref="layer_8hpp" startline="271" endline="271">get_num_children</references>
        <references refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" compoundref="layer_8hpp" startline="413">m_child_layers</references>
        <references refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" compoundref="layer_8hpp" startline="486">m_using_gpus</references>
        <references refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" compoundref="layer_8cpp" startline="379" endline="381">get_prev_error_signals</references>
        <references refid="classlbann_1_1Layer_1a6fdcbf884150d0b20cffe678fefd7caa" compoundref="layer_8hpp" startline="398">m_prev_error_signals</references>
        <references refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" compoundref="layer_8hpp" startline="177" endline="179">get_num_neurons</references>
        <references refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" compoundref="layer_8hpp" startline="85" endline="85">get_name</references>
        <references refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" compoundref="layer_8hpp" startline="365">m_num_neurons</references>
        <references refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" compoundref="layer_8hpp" startline="374">m_num_prev_neurons</references>
        <references refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" compoundref="layer_8hpp" startline="363">m_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" compoundref="layer_8hpp" startline="372">m_prev_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" compoundref="layer_8hpp" startline="269" endline="269">get_num_parents</references>
        <references refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" compoundref="layer_8hpp" startline="411">m_parent_layers</references>
        <references refid="classlbann_1_1Layer_1a6a75532bdaa2ca3879034f2a76085a06" compoundref="layer_8hpp" startline="189" endline="189">using_gpus</references>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">m_cudnn</references>
        <references refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" compoundref="layer_8cpp" startline="382" endline="384">get_error_signals</references>
        <references refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" compoundref="layer_8cpp" startline="373" endline="375">get_prev_activations</references>
        <references refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" compoundref="layer_8cpp" startline="376" endline="378">get_activations</references>
        <references refid="classlbann_1_1Layer_1a5dfb66e81fc085997402a5e2241316bd">get_data_layout</references>
        <referencedby refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" compoundref="layer_8cpp" startline="277" endline="305">back_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::setup_pointers</definition>
        <argsstring>()</argsstring>
        <name>setup_pointers</name>
        <reimplementedby refid="classlbann_1_1unpooling__layer_1a32da9e26ce50aa3df3ecc52691bd5e4f">setup_pointers</reimplementedby>
        <reimplementedby refid="classlbann_1_1hadamard__layer_1a712faa83429f6a77a6c43c8afde4ddaa">setup_pointers</reimplementedby>
        <reimplementedby refid="classlbann_1_1concatenation__layer_1a20c1588e7a506bc7b0acb4d63586ece9">setup_pointers</reimplementedby>
        <reimplementedby refid="classlbann_1_1slice__layer_1a701854f5906a25c58d4f9d851b20de29">setup_pointers</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup pointers to parent and child layers. Called by the setup function. The base method checks that the number of parents and children are valid. Pointers to the parent/child layers are assumed to be already initialized. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="448" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="511" bodyend="533"/>
        <references refid="classlbann_1_1Layer_1a841b96b25555247f52921c7f13ae1dfa" compoundref="layer_8hpp" startline="418">m_expected_num_parent_layers</references>
        <references refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" compoundref="layer_8hpp" startline="269" endline="269">get_num_parents</references>
        <references refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" compoundref="layer_8hpp" startline="536">m_name</references>
        <references refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" compoundref="layer_8hpp" startline="411">m_parent_layers</references>
        <references refid="classlbann_1_1Layer_1ac08f133dddd150319650e220ab9a523a" compoundref="layer_8hpp" startline="422">m_expected_num_child_layers</references>
        <references refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" compoundref="layer_8hpp" startline="271" endline="271">get_num_children</references>
        <references refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" compoundref="layer_8hpp" startline="413">m_child_layers</references>
        <referencedby refid="classlbann_1_1concatenation__layer_1a20c1588e7a506bc7b0acb4d63586ece9" compoundref="concatenation_8hpp" startline="135" endline="143">lbann::concatenation_layer&lt; T_layout &gt;::setup_pointers</referencedby>
        <referencedby refid="classlbann_1_1hadamard__layer_1a712faa83429f6a77a6c43c8afde4ddaa" compoundref="hadamard_8hpp" startline="69" endline="77">lbann::hadamard_layer&lt; T_layout &gt;::setup_pointers</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1a701854f5906a25c58d4f9d851b20de29" compoundref="slice_8hpp" startline="137" endline="145">lbann::slice_layer&lt; T_layout &gt;::setup_pointers</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" compoundref="layer_8cpp" startline="501" endline="509">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::setup_dims</definition>
        <argsstring>()</argsstring>
        <name>setup_dims</name>
        <reimplementedby refid="classlbann_1_1reshape__layer_1a60fd29f11e62137a0808ffe4b3730344">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1reconstruction__layer_1a3abb27b670b5c57f2a6b1d669a7de508">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1unpooling__layer_1a7fe47a0c90958329efb79aee49d6247f">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1bernoulli__layer_1aabaf1d2ba92aa4c708d3a76d82bdbdb6">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1reduction__layer_1aff2c5f6112da848908baba3645408e6e">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1constant__layer_1a147f3510683632f90bd1491f80d8ef32">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1uniform__layer_1a60dfb64110369be8f9802c9e010cfbd1">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1gaussian__layer_1ab48263a742e407a8d3586ee4ece38768">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1sum__layer_1af7e011a8e1cd89cc9f9c0224182bfb7a">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a3a970c1b23f7367276f7061563fc8b65">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1deconvolution__layer_1abec9b66f0659fd4f06a39a1e8c4bd06b">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1ad117da4e6155159439826bba6657cf05">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1convolution__layer_1adbb45d032ad79c793a159b7ee79eef14">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1concatenation__layer_1abc44199934950480dbde30e0b7058a78">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1slice__layer_1ac43785fc01d6cf6e49d3677adfaac297">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1fully__connected__layer_1aaf38e55b232b1bb2a6336ff1807b5a17">setup_dims</reimplementedby>
        <reimplementedby refid="classlbann_1_1pooling__layer_1a5de83fe60224067c132b0f1d53024b57">setup_dims</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup tensor dimensions Called by the setup function. The base method sets the dimensions of the activation tensors equal to the dimensions of the first previous activation tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="454" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="535" bodyend="554"/>
        <references refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" compoundref="layer_8hpp" startline="411">m_parent_layers</references>
        <references refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" compoundref="layer_8hpp" startline="372">m_prev_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1adc052afb38f170e839db00d3c8151d1e" compoundref="layer_8hpp" startline="376">m_num_prev_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" compoundref="layer_8hpp" startline="374">m_num_prev_neurons</references>
        <references refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" compoundref="layer_8hpp" startline="365">m_num_neurons</references>
        <references refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" compoundref="layer_8hpp" startline="367">m_num_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" compoundref="layer_8hpp" startline="363">m_neuron_dims</references>
        <referencedby refid="classlbann_1_1generic__input__layer_1ad117da4e6155159439826bba6657cf05" compoundref="generic__input__layer_8hpp" startline="129" endline="137">lbann::generic_input_layer::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a3a970c1b23f7367276f7061563fc8b65" compoundref="generic__target__layer_8hpp" startline="114" endline="125">lbann::generic_target_layer::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1convolution__layer_1adbb45d032ad79c793a159b7ee79eef14" compoundref="convolution_8hpp" startline="149" endline="185">lbann::convolution_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1deconvolution__layer_1abec9b66f0659fd4f06a39a1e8c4bd06b" compoundref="deconvolution_8hpp" startline="122" endline="159">lbann::deconvolution_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1fully__connected__layer_1aaf38e55b232b1bb2a6336ff1807b5a17" compoundref="fully__connected_8hpp" startline="169" endline="182">lbann::fully_connected_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1bernoulli__layer_1aabaf1d2ba92aa4c708d3a76d82bdbdb6" compoundref="bernoulli_8hpp" startline="78" endline="87">lbann::bernoulli_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1abc44199934950480dbde30e0b7058a78" compoundref="concatenation_8hpp" startline="154" endline="206">lbann::concatenation_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1a147f3510683632f90bd1491f80d8ef32" compoundref="constant_8hpp" startline="81" endline="90">lbann::constant_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1gaussian__layer_1ab48263a742e407a8d3586ee4ece38768" compoundref="gaussian_8hpp" startline="83" endline="92">lbann::gaussian_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a5de83fe60224067c132b0f1d53024b57" compoundref="pooling_8hpp" startline="189" endline="206">lbann::pooling_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1reduction__layer_1aff2c5f6112da848908baba3645408e6e" compoundref="reduction_8hpp" startline="79" endline="84">lbann::reduction_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1reshape__layer_1a60fd29f11e62137a0808ffe4b3730344" compoundref="reshape_8hpp" startline="51" endline="91">lbann::reshape_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1ac43785fc01d6cf6e49d3677adfaac297" compoundref="slice_8hpp" startline="156" endline="182">lbann::slice_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1af7e011a8e1cd89cc9f9c0224182bfb7a" compoundref="sum_8hpp" startline="88" endline="108">lbann::sum_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1uniform__layer_1a60dfb64110369be8f9802c9e010cfbd1" compoundref="uniform_8hpp" startline="83" endline="92">lbann::uniform_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1unpooling__layer_1a7fe47a0c90958329efb79aee49d6247f" compoundref="unpooling_8hpp" startline="73" endline="90">lbann::unpooling_layer&lt; T_layout &gt;::setup_dims</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" compoundref="layer_8cpp" startline="501" endline="509">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::setup_matrices</definition>
        <argsstring>(const El::Grid &amp;grid)</argsstring>
        <name>setup_matrices</name>
        <reimplementedby refid="classlbann_1_1fully__connected__layer_1a1f0ae7a5f172e5ced011eaa2755fd04e">setup_matrices</reimplementedby>
        <reimplementedby refid="classlbann_1_1softmax__layer_1ad011596d678ba62d3a92b0e9b2acae54">setup_matrices</reimplementedby>
        <reimplementedby refid="classlbann_1_1softmax__layer_1ae9472c4f1d22ff51cb7508d17e37c61d">setup_matrices</reimplementedby>
        <reimplementedby refid="classlbann_1_1fully__connected__layer_1a9af60f901a84d5604badf078ecbae082">setup_matrices</reimplementedby>
        <reimplementedby refid="classlbann_1_1selu__dropout_1a8b6469a14cf093d48e42384aa4ee404a">setup_matrices</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1af8bcdbd313c9793187fe6e53396e3356">setup_matrices</reimplementedby>
        <reimplementedby refid="classlbann_1_1dropout_1abf399d8463721d322aedbb76d60534c6">setup_matrices</reimplementedby>
        <reimplementedby refid="classlbann_1_1softmax__layer_1af07463a1d99832d3bf11610311fd7da4">setup_matrices</reimplementedby>
        <reimplementedby refid="classlbann_1_1concatenation__layer_1a9c305ea0cbee1b7b6fe822f514c48d42">setup_matrices</reimplementedby>
        <reimplementedby refid="classlbann_1_1slice__layer_1af3b6f79a53c9a80908b37c2587ff2cae">setup_matrices</reimplementedby>
        <reimplementedby refid="classlbann_1_1fully__connected__layer_1a4f26e5923a82f11c2c7658a27903f83b">setup_matrices</reimplementedby>
        <reimplementedby refid="classlbann_1_1batch__normalization_1a4ddf27efaf48f0726dc4356a3a0b40a9">setup_matrices</reimplementedby>
        <param>
          <type>const <ref refid="base_8hpp_1a9951bb1719d534e0401b1f06cad19eab" kindref="member">El::Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instantiate distributed matrices. If the layer has already been setup, this function should destroy all matrices and reinstantiate them. However, it is not guaranteed that derived classes will obey this behavior. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="460" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="580" bodyend="598"/>
        <references refid="classlbann_1_1Layer_1a888392d6ac6906093a8125c6a37de075" compoundref="layer_8cpp" startline="777" endline="820">deallocate_matrices</references>
        <references refid="classlbann_1_1Layer_1a5dfb66e81fc085997402a5e2241316bd">get_data_layout</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0">MODEL_PARALLEL</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638">DATA_PARALLEL</references>
        <referencedby refid="classlbann_1_1generic__target__layer_1af8bcdbd313c9793187fe6e53396e3356" compoundref="generic__target__layer_8hpp" startline="108" endline="112">lbann::generic_target_layer::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1a4ddf27efaf48f0726dc4356a3a0b40a9" compoundref="batch__normalization_8hpp" startline="215" endline="224">lbann::batch_normalization&lt; T_layout &gt;::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1dropout_1abf399d8463721d322aedbb76d60534c6" compoundref="dropout_8hpp" startline="117" endline="122">lbann::dropout&lt; T_layout &gt;::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1selu__dropout_1a8b6469a14cf093d48e42384aa4ee404a" compoundref="selu__dropout_8hpp" startline="94" endline="98">lbann::selu_dropout&lt; T_layout &gt;::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1concatenation__layer_1a9c305ea0cbee1b7b6fe822f514c48d42" compoundref="concatenation_8hpp" startline="145" endline="152">lbann::concatenation_layer&lt; T_layout &gt;::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1slice__layer_1af3b6f79a53c9a80908b37c2587ff2cae" compoundref="slice_8hpp" startline="147" endline="154">lbann::slice_layer&lt; T_layout &gt;::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1softmax__layer_1ad011596d678ba62d3a92b0e9b2acae54" compoundref="softmax_8cpp" startline="33" endline="37">lbann::softmax_layer&lt; T_layout &gt;::setup_matrices</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" compoundref="layer_8cpp" startline="501" endline="509">setup</referencedby>
        <referencedby refid="classlbann_1_1fully__connected__layer_1a1f0ae7a5f172e5ced011eaa2755fd04e" compoundref="fully__connected_8cpp" startline="33" endline="38">lbann::fully_connected_layer&lt; T_layout &gt;::setup_matrices</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::setup_data</definition>
        <argsstring>()</argsstring>
        <name>setup_data</name>
        <reimplementedby refid="classlbann_1_1constant__layer_1ad46d9db2e6bad4204dcedd2be60bfb1a">setup_data</reimplementedby>
        <reimplementedby refid="classlbann_1_1sum__layer_1a9f8659993a180f1bb1a8bd875814d33b">setup_data</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a73b35ee4dcb97a166369426d975596b2">setup_data</reimplementedby>
        <reimplementedby refid="classlbann_1_1softmax__layer_1a4cc8f1f44a2854e78dad4f898d66a5ac">setup_data</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a8ca316b0369689949f3f4106920ec28f">setup_data</reimplementedby>
        <reimplementedby refid="classlbann_1_1deconvolution__layer_1a6d891396ea1c91030cd647cc111c8c5f">setup_data</reimplementedby>
        <reimplementedby refid="classlbann_1_1fully__connected__layer_1aec4298146845489597126503177d3127">setup_data</reimplementedby>
        <reimplementedby refid="classlbann_1_1convolution__layer_1ab20636b44d2b17abdb5424df54cb9c6d">setup_data</reimplementedby>
        <reimplementedby refid="classlbann_1_1base__convolution__layer_1a9f850c1bdf4ae3cd986411d3cb3a524c">setup_data</reimplementedby>
        <reimplementedby refid="classlbann_1_1batch__normalization_1ac046a5ab567cc01f9a36c6b0fc4e3b55">setup_data</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup layer data. Called by the setup function. The base method sets the previous activation, activation, previous error signal, and error signal matrices to zero matrices with the proper dimensions. Matrix buffers are pinned if needed for GPU transfers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="467" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="600" bodyend="635"/>
        <references refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" compoundref="layer_8hpp" startline="425">m_model</references>
        <references refid="classlbann_1_1model_1a8c311798ff4acaeafdfbf85162ba5084" compoundref="model_8hpp" startline="161" endline="163">lbann::model::get_max_mini_batch_size</references>
        <references refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" compoundref="layer_8hpp" startline="269" endline="269">get_num_parents</references>
        <references refid="classlbann_1_1Layer_1a52314601c3458268f56e017dc2ade357" compoundref="layer_8hpp" startline="384">m_prev_activations</references>
        <references refid="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" compoundref="layer_8hpp" startline="165" endline="167">get_num_prev_neurons</references>
        <references refid="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" compoundref="layer_8hpp" startline="405">m_error_signals</references>
        <references refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" compoundref="layer_8hpp" startline="271" endline="271">get_num_children</references>
        <references refid="classlbann_1_1Layer_1a7caf08e938141d1584e6939cefa4baed" compoundref="layer_8hpp" startline="391">m_activations</references>
        <references refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" compoundref="layer_8hpp" startline="177" endline="179">get_num_neurons</references>
        <references refid="classlbann_1_1Layer_1a6fdcbf884150d0b20cffe678fefd7caa" compoundref="layer_8hpp" startline="398">m_prev_error_signals</references>
        <referencedby refid="classlbann_1_1softmax__layer_1a4cc8f1f44a2854e78dad4f898d66a5ac" compoundref="softmax_8hpp" startline="138" endline="142">lbann::softmax_layer&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1generic__input__layer_1a8ca316b0369689949f3f4106920ec28f" compoundref="generic__input__layer_8hpp" startline="139" endline="165">lbann::generic_input_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a73b35ee4dcb97a166369426d975596b2" compoundref="generic__target__layer_8hpp" startline="127" endline="133">lbann::generic_target_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a9f850c1bdf4ae3cd986411d3cb3a524c" compoundref="base__convolution_8hpp" startline="217" endline="265">lbann::base_convolution_layer::setup_data</referencedby>
        <referencedby refid="classlbann_1_1fully__connected__layer_1aec4298146845489597126503177d3127" compoundref="fully__connected_8hpp" startline="184" endline="250">lbann::fully_connected_layer&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ac046a5ab567cc01f9a36c6b0fc4e3b55" compoundref="batch__normalization_8hpp" startline="228" endline="292">lbann::batch_normalization&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1ad46d9db2e6bad4204dcedd2be60bfb1a" compoundref="constant_8hpp" startline="92" endline="97">lbann::constant_layer&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1sum__layer_1a9f8659993a180f1bb1a8bd875814d33b" compoundref="sum_8hpp" startline="110" endline="124">lbann::sum_layer&lt; T_layout &gt;::setup_data</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" compoundref="layer_8cpp" startline="501" endline="509">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::Layer::setup_gpu</definition>
        <argsstring>()</argsstring>
        <name>setup_gpu</name>
        <reimplementedby refid="classlbann_1_1relu__layer_1a9426317aa741ab8a202ee52cf5250b59">setup_gpu</reimplementedby>
        <reimplementedby refid="classlbann_1_1constant__layer_1aa3450d358b093a29067500acc0ac4dff">setup_gpu</reimplementedby>
        <reimplementedby refid="classlbann_1_1dropout_1abaa3d0c6d99200b186d0a55201f77b6a">setup_gpu</reimplementedby>
        <reimplementedby refid="classlbann_1_1local__response__normalization__layer_1aff5210d74db5f8302989cca12d04263d">setup_gpu</reimplementedby>
        <reimplementedby refid="classlbann_1_1pooling__layer_1a603adc8abc7527f2fd12eb4264b0f3cc">setup_gpu</reimplementedby>
        <reimplementedby refid="classlbann_1_1fully__connected__layer_1a95c96742a67f2e9398e608b244c2d121">setup_gpu</reimplementedby>
        <reimplementedby refid="classlbann_1_1base__convolution__layer_1a4fb0ec8793656a7c32ff37c266b29a68">setup_gpu</reimplementedby>
        <reimplementedby refid="classlbann_1_1batch__normalization_1ab4737c3efcafa9bff1e68084b7f36283">setup_gpu</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup GPU objects. Called by the setup function if GPUs are enabled. The base method initializes GPU matrices for the previous activations, activations, previous error signals, and error signals. It also initializes cuDNN tensor descriptors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="474" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="637" bodyend="692"/>
        <references refid="classlbann_1_1Layer_1a5dfb66e81fc085997402a5e2241316bd">get_data_layout</references>
        <references refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638">DATA_PARALLEL</references>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">m_cudnn</references>
        <references refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" compoundref="layer_8hpp" startline="357">m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" compoundref="comm_8hpp" startline="156" endline="158">lbann::lbann_comm::get_procs_per_model</references>
        <references refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" compoundref="layer_8hpp" startline="425">m_model</references>
        <references refid="classlbann_1_1model_1a8c311798ff4acaeafdfbf85162ba5084" compoundref="model_8hpp" startline="161" endline="163">lbann::model::get_max_mini_batch_size</references>
        <references refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" compoundref="layer_8hpp" startline="269" endline="269">get_num_parents</references>
        <references refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" compoundref="layer_8hpp" startline="271" endline="271">get_num_children</references>
        <references refid="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" compoundref="layer_8hpp" startline="165" endline="167">get_num_prev_neurons</references>
        <references refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" compoundref="layer_8hpp" startline="177" endline="179">get_num_neurons</references>
        <references refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" compoundref="layer_8hpp" startline="372">m_prev_neuron_dims</references>
        <references refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" compoundref="layer_8hpp" startline="363">m_neuron_dims</references>
        <referencedby refid="classlbann_1_1relu__layer_1a9426317aa741ab8a202ee52cf5250b59" compoundref="relu_8hpp" startline="98" endline="109">lbann::relu_layer&lt; T_layout &gt;::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1base__convolution__layer_1a4fb0ec8793656a7c32ff37c266b29a68" compoundref="base__convolution_8hpp" startline="268" endline="310">lbann::base_convolution_layer::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1fully__connected__layer_1a95c96742a67f2e9398e608b244c2d121" compoundref="fully__connected_8hpp" startline="252" endline="266">lbann::fully_connected_layer&lt; T_layout &gt;::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1batch__normalization_1ab4737c3efcafa9bff1e68084b7f36283" compoundref="batch__normalization_8hpp" startline="294" endline="314">lbann::batch_normalization&lt; T_layout &gt;::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1dropout_1abaa3d0c6d99200b186d0a55201f77b6a" compoundref="dropout_8hpp" startline="125" endline="144">lbann::dropout&lt; T_layout &gt;::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1local__response__normalization__layer_1aff5210d74db5f8302989cca12d04263d" compoundref="local__response__normalization_8hpp" startline="128" endline="140">lbann::local_response_normalization_layer&lt; T_layout &gt;::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1constant__layer_1aa3450d358b093a29067500acc0ac4dff" compoundref="constant_8hpp" startline="99" endline="110">lbann::constant_layer&lt; T_layout &gt;::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1pooling__layer_1a603adc8abc7527f2fd12eb4264b0f3cc" compoundref="pooling_8hpp" startline="209" endline="237">lbann::pooling_layer&lt; T_layout &gt;::setup_gpu</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" compoundref="layer_8cpp" startline="501" endline="509">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a523319dd1bd87a0612afa1912bb5aad7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void lbann::Layer::fp_compute</definition>
        <argsstring>()=0</argsstring>
        <name>fp_compute</name>
        <reimplementedby refid="classlbann_1_1identity__layer_1aaa19914b20bc409aa3fb8a744e994114">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1entrywise__activation__layer_1a2ec05802115c5f029fa106c88ada89db">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1safe__inv__layer_1a070fe64c2a605eb5624d509740de1c32">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1dummy__layer_1a4d59be5e984ebd1d6d16d17bb26f3486">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1hadamard__layer_1a8be44f24f2290b06b104294d1fe31d41">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1split__layer_1aeb4caccd2675195ce75ae63485f6d402">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1evaluation__layer_1a6cb3ab97ec80b6cf8606b421d9761c1c">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1reduction__layer_1a7e78d0d69106611bfb5ff3fe5bb01016">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1reconstruction__layer_1ad33ec2cccf89b317e22ec73b1761e427">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1bernoulli__layer_1ad3b8939b6df375880247ef54f370ceb1">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1reshape__layer_1a6a8567b61a1f911f52419ecd2346fcac">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1uniform__layer_1a975ba9cfcd974fe348ee9681d1feb879">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1gaussian__layer_1a8a0f52d4f365180dbf11e9a09b359c5e">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1selu__dropout_1a50ccce3672873a12ae69cc76c91e767a">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1constant__layer_1a15b919ed869f2c815e1613dfb42b317c">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1unpooling__layer_1aad98d442d6f5ad1feb5f1d71bdb1df49">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1sum__layer_1a8d235d61507e76f42ee83a74d1098977">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1local__response__normalization__layer_1ac7b2ce4970eb7163685fb0a4a69328fc">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1dropout_1a9ed94f278835b6c9e8185de01705e53a">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1softmax__layer_1a15d05369ebef618edcf34d4679aaf2fc">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a57a60f5a28c9fb78d5151801123d4dba">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1deconvolution__layer_1a6ebbb96c605a96b41fdbbc848dcaa877">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1slice__layer_1a4ade139cc44a7de47761680e1d44cb08">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1convolution__layer_1aaca2c840fe41d8025efce91d6e9211b9">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1ae74c8c5a7e14b4fdd4902554bbc7bcef">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1concatenation__layer_1a27938ca2422fd120cfbdf823705af01a">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1pooling__layer_1a0af01b6939abe9798fa3a0b1f5292721">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1fully__connected__layer_1a6dac6598c6b4ad3f766c5f0e88035f10">fp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1batch__normalization_1a92ad52396d7083c84ec20016ad5e994b">fp_compute</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the computation for the forward propagation step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="477" column="1"/>
        <referencedby refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" compoundref="layer_8cpp" startline="247" endline="275">forward_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a7442e01f9ee1294df2de811efcf5171e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void lbann::Layer::bp_compute</definition>
        <argsstring>()=0</argsstring>
        <name>bp_compute</name>
        <reimplementedby refid="classlbann_1_1identity__layer_1a1f6c975af032caea84155bda8b9c9801">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1entrywise__activation__layer_1af632a590e26f335205994f1d715ae1a4">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1dummy__layer_1a7d2a802a280bb93f2e07d0af88610335">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1safe__inv__layer_1a6c9d917f226b718733ee60da9da0291b">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1reconstruction__layer_1a58408a14bfe5212b12243640ed284744">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1reshape__layer_1a31d90673a9d98ccba0eafb4bf76cbe20">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1split__layer_1ae7b54dc12b2560d27f506d5f34c4074f">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1bernoulli__layer_1ae7e19bd34b17e1503755ac6e6b1260aa">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1evaluation__layer_1a7b2b0898c0b0a29e35ec14f766758551">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1gaussian__layer_1ab6b5330343feb76668ecac4d5b705d41">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1uniform__layer_1a40cec806825a1cb07f66867d0350dd1c">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1hadamard__layer_1a2150c54cc21fb5dc51d77119c20c6c21">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1constant__layer_1a88c9fae7cb03b68b9a8b103877ac2c6d">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1unpooling__layer_1ad585e8ddaa34c221fa8e4d108c8950ae">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1selu__dropout_1afc80277386fef53296368579876bdb55">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1local__response__normalization__layer_1ae94544765a459a6609f2c2ebbbc3e9d9">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1dropout_1a053e3f392a6a90b3bcc07f62f3818bce">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1softmax__layer_1a82e9fd693e34c6e8ebc77802940ad079">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1reduction__layer_1a2ea767accbf2c9fdc9074d1e473db259">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1sum__layer_1a0dcddd056cf81c1fbea22a5e1c01c6d9">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1deconvolution__layer_1a70649662ff27ddacf0f5584829022b72">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1ab29b31c81b115acd7e01de25ef190b99">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1slice__layer_1a080654076a1b266b2c6d229e9fccf250">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1convolution__layer_1a610f24f98b548434cd4d22419f47c7f0">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1concatenation__layer_1abd2a2a3aa260646c98d842993fee6247">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1a36787a3caf2ef236747c6150edad82ea">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1pooling__layer_1ab58fe97e976f60df37f958e79fd56ff9">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1fully__connected__layer_1a8cc9a10e336f61ef54d5e3f4a9ffdfb8">bp_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1batch__normalization_1ad9aedd689cd8923d8c8e9c4e57a4e8b7">bp_compute</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the computation for the backward propagation step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="479" column="1"/>
        <referencedby refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" compoundref="layer_8cpp" startline="277" endline="305">back_prop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a70e08fc96a612f67ade6ba3809536d85" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool lbann::Layer::update_compute</definition>
        <argsstring>()</argsstring>
        <name>update_compute</name>
        <reimplementedby refid="classlbann_1_1generic__target__layer_1a43f4de7c1846b605aa9bb6daf9338c78">update_compute</reimplementedby>
        <reimplementedby refid="classlbann_1_1generic__input__layer_1aaf9ac19f7dd725230bde87d859ec0f35">update_compute</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the computation for the update step. Returns false if the layer must reset for a new training epoch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="483" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="483" bodyend="483"/>
        <referencedby refid="classlbann_1_1Layer_1ae4a050e51e3a9bec431cf8b7a5660f2c" compoundref="layer_8cpp" startline="307" endline="314">update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlbann_1_1Layer_1a2d50e9af2a9aa7e6741deb555641c30c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08db" kindref="member">data_layout</ref></type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lbann::Layer::instantiate_matrices</definition>
        <argsstring>(const El::Grid &amp;grid)</argsstring>
        <name>instantiate_matrices</name>
        <param>
          <type>const <ref refid="base_8hpp_1a9951bb1719d534e0401b1f06cad19eab" kindref="member">El::Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instantiate distributed matrices. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="542" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1Layer_1a888392d6ac6906093a8125c6a37de075" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::Layer::deallocate_matrices</definition>
        <argsstring>()</argsstring>
        <name>deallocate_matrices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deallocate distributed matrices. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="545" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/layers/layer.cpp" bodystart="777" bodyend="820"/>
        <references refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" compoundref="layer_8hpp" startline="489">m_cudnn</references>
        <references refid="classlbann_1_1Layer_1a52314601c3458268f56e017dc2ade357" compoundref="layer_8hpp" startline="384">m_prev_activations</references>
        <references refid="classlbann_1_1Layer_1a7caf08e938141d1584e6939cefa4baed" compoundref="layer_8hpp" startline="391">m_activations</references>
        <references refid="classlbann_1_1Layer_1a6fdcbf884150d0b20cffe678fefd7caa" compoundref="layer_8hpp" startline="398">m_prev_error_signals</references>
        <references refid="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" compoundref="layer_8hpp" startline="405">m_error_signals</references>
        <referencedby refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" compoundref="layer_8cpp" startline="132" endline="189">operator=</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a68c3f57587956da938406812f13ecb78" compoundref="layer_8cpp" startline="191" endline="207">~Layer</referencedby>
        <referencedby refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e" compoundref="layer_8cpp" startline="580" endline="598">setup_matrices</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Abstract base class for neural network layers. A layer takes input tensors (&quot;previous activations&quot;) and applies a mathematical operation to obtain output tensors (&quot;activations&quot;). This operation often has trainable parameters called &quot;weights.&quot; The previous activations are recieved from &quot;parent layers&quot; and the activations are sent to &quot;child layers,&quot; making each layer a node in a directed graph. The layer graph and the weights are managed by a neural network model class. A layer should also be able to take objective function gradients w.r.t. the activations (&quot;previous error signals&quot;) and compute the objective function gradients w.r.t. the previous activations (&quot;error signals&quot;) and w.r.t. the weights. This allows the model to perform automatic differentiation and to apply first-order optimization methods to the weights. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1215">
        <label>lbann::io_layer</label>
        <link refid="classlbann_1_1io__layer"/>
        <childnode refid="1197" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1211">
        <label>lbann::swish_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1swish__layer"/>
        <childnode refid="1199" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1244">
        <label>lbann::split_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1split__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1200">
        <label>lbann::atan_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1atan__layer"/>
        <childnode refid="1199" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1216">
        <label>lbann::generic_input_layer</label>
        <link refid="classlbann_1_1generic__input__layer"/>
        <childnode refid="1215" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1218">
        <label>lbann::generic_target_layer</label>
        <link refid="classlbann_1_1generic__target__layer"/>
        <childnode refid="1215" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1241">
        <label>lbann::reshape_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1reshape__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1238">
        <label>lbann::hadamard_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1hadamard__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1240">
        <label>lbann::reduction_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1reduction__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1236">
        <label>lbann::evaluation_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1evaluation__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1203">
        <label>lbann::exponential_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1exponential__layer"/>
        <childnode refid="1199" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1207">
        <label>lbann::selu_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1selu__layer"/>
        <childnode refid="1199" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1199">
        <label>lbann::entrywise_activation_layer</label>
        <link refid="classlbann_1_1entrywise__activation__layer"/>
        <childnode refid="1198" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1220">
        <label>lbann::target_layer&lt; T_io_buffer, T_layout &gt;</label>
        <link refid="classlbann_1_1target__layer"/>
        <childnode refid="1218" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1206">
        <label>lbann::relu_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1relu__layer"/>
        <childnode refid="1199" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1235">
        <label>lbann::dummy_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1dummy__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1226">
        <label>lbann::regularizer_layer</label>
        <link refid="classlbann_1_1regularizer__layer"/>
        <childnode refid="1197" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1208">
        <label>lbann::sigmoid_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1sigmoid__layer"/>
        <childnode refid="1199" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1223">
        <label>lbann::convolution_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1convolution__layer"/>
        <childnode refid="1222" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1246">
        <label>lbann::uniform_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1uniform__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1219">
        <label>lbann::reconstruction_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1reconstruction__layer"/>
        <childnode refid="1218" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1204">
        <label>lbann::leaky_relu_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1leaky__relu__layer"/>
        <childnode refid="1199" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1245">
        <label>lbann::sum_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1sum__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1214">
        <label>lbann::softmax_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1softmax__layer"/>
        <childnode refid="1198" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1242">
        <label>lbann::safe_inv_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1safe__inv__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1201">
        <label>lbann::bent_identity_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1bent__identity__layer"/>
        <childnode refid="1199" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1239">
        <label>lbann::pooling_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1pooling__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1198">
        <label>lbann::activation_layer</label>
        <link refid="classlbann_1_1activation__layer"/>
        <childnode refid="1197" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1224">
        <label>lbann::deconvolution_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1deconvolution__layer"/>
        <childnode refid="1222" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1225">
        <label>lbann::fully_connected_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1fully__connected__layer"/>
        <childnode refid="1221" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1210">
        <label>lbann::softplus_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1softplus__layer"/>
        <childnode refid="1199" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1213">
        <label>lbann::identity_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1identity__layer"/>
        <childnode refid="1198" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1230">
        <label>lbann::selu_dropout&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1selu__dropout"/>
        <childnode refid="1226" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1209">
        <label>lbann::smooth_relu_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1smooth__relu__layer"/>
        <childnode refid="1199" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1233">
        <label>lbann::concatenation_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1concatenation__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1221">
        <label>lbann::learning_layer</label>
        <link refid="classlbann_1_1learning__layer"/>
        <childnode refid="1197" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1231">
        <label>lbann::transform_layer</label>
        <link refid="classlbann_1_1transform__layer"/>
        <childnode refid="1197" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1212">
        <label>lbann::tanh_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1tanh__layer"/>
        <childnode refid="1199" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1217">
        <label>lbann::input_layer&lt; T_io_buffer, T_layout &gt;</label>
        <link refid="classlbann_1_1input__layer"/>
        <childnode refid="1216" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1237">
        <label>lbann::gaussian_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1gaussian__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1202">
        <label>lbann::elu_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1elu__layer"/>
        <childnode refid="1199" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1243">
        <label>lbann::slice_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1slice__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1232">
        <label>lbann::bernoulli_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1bernoulli__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1205">
        <label>lbann::power_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1power__layer"/>
        <childnode refid="1199" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1197">
        <label>lbann::Layer</label>
        <link refid="classlbann_1_1Layer"/>
      </node>
      <node id="1234">
        <label>lbann::constant_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1constant__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1229">
        <label>lbann::local_response_normalization_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1local__response__normalization__layer"/>
        <childnode refid="1226" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1247">
        <label>lbann::unpooling_layer&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1unpooling__layer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1228">
        <label>lbann::dropout&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1dropout"/>
        <childnode refid="1226" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1222">
        <label>lbann::base_convolution_layer</label>
        <link refid="classlbann_1_1base__convolution__layer"/>
        <childnode refid="1221" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1227">
        <label>lbann::batch_normalization&lt; T_layout &gt;</label>
        <link refid="classlbann_1_1batch__normalization"/>
        <childnode refid="1226" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1250">
        <label>lbann::model</label>
        <link refid="classlbann_1_1model"/>
        <childnode refid="1251" relation="usage">
          <edgelabel>m_default_optimizer</edgelabel>
        </childnode>
        <childnode refid="1249" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1256" relation="usage">
          <edgelabel>m_objective_function</edgelabel>
        </childnode>
      </node>
      <node id="1251">
        <label>lbann::optimizer</label>
        <link refid="classlbann_1_1optimizer"/>
        <childnode refid="1249" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1252" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
        <childnode refid="1253" relation="usage">
          <edgelabel>m_gradient_allreduce_req</edgelabel>
        </childnode>
        <childnode refid="1254" relation="usage">
          <edgelabel>m_weights</edgelabel>
        </childnode>
      </node>
      <node id="1252">
        <label>lbann::cudnn::cudnn_manager</label>
        <link refid="classlbann_1_1cudnn_1_1cudnn__manager"/>
      </node>
      <node id="1255">
        <label>lbann::weights_initializer</label>
        <link refid="classlbann_1_1weights__initializer"/>
        <childnode refid="1249" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
      <node id="1248">
        <label>lbann::Layer</label>
        <link refid="classlbann_1_1Layer"/>
        <childnode refid="1249" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1250" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
        <childnode refid="1252" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="1254">
        <label>lbann::weights</label>
        <link refid="classlbann_1_1weights"/>
        <childnode refid="1251" relation="usage">
          <edgelabel>m_optimizer</edgelabel>
        </childnode>
        <childnode refid="1249" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="1255" relation="usage">
          <edgelabel>m_initializer</edgelabel>
        </childnode>
        <childnode refid="1252" relation="usage">
          <edgelabel>m_cudnn</edgelabel>
        </childnode>
      </node>
      <node id="1249">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="1253">
        <label>lbann::Al::request</label>
        <link refid="structlbann_1_1Al_1_1request"/>
      </node>
      <node id="1256">
        <label>lbann::objective_function</label>
        <link refid="classlbann_1_1objective__function"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" line="62" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/layers/layer.hpp" bodystart="62" bodyend="547"/>
    <listofallmembers>
      <member refid="classlbann_1_1Layer_1ace0346ac56fd7ce7b6b44f27f224f35e" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>add_child_layer</name></member>
      <member refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>add_parent_layer</name></member>
      <member refid="classlbann_1_1Layer_1a8d942eb2cd37c346edc5ff473e0494a2" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>add_to_error_signal</name></member>
      <member refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>back_prop</name></member>
      <member refid="classlbann_1_1Layer_1a7442e01f9ee1294df2de811efcf5171e" prot="protected" virt="pure-virtual"><scope>lbann::Layer</scope><name>bp_compute</name></member>
      <member refid="classlbann_1_1Layer_1af7312710c0b9ac6ebe327d0ffe22cbf0" prot="protected" virt="virtual"><scope>lbann::Layer</scope><name>bp_setup_data</name></member>
      <member refid="classlbann_1_1Layer_1aeec1c710c3d53b5e43a4d4f67b0a21b2" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>check_setup</name></member>
      <member refid="classlbann_1_1Layer_1a040bf53e261b1ef796739c09b3362a3a" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>clear_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa1389a70b804debaac6953b3b1147593" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>clear_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a7336909c78e438ba5332c6c1bddeadd2" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>clear_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1af420f22bbac801c85483ade84588a23f" prot="public" virt="pure-virtual"><scope>lbann::Layer</scope><name>copy</name></member>
      <member refid="classlbann_1_1Layer_1a888392d6ac6906093a8125c6a37de075" prot="private" virt="non-virtual"><scope>lbann::Layer</scope><name>deallocate_matrices</name></member>
      <member refid="classlbann_1_1Layer_1a2483ccd8a4406a6891f6176f1001b4e5" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>forward_prop</name></member>
      <member refid="classlbann_1_1Layer_1a523319dd1bd87a0612afa1912bb5aad7" prot="protected" virt="pure-virtual"><scope>lbann::Layer</scope><name>fp_compute</name></member>
      <member refid="classlbann_1_1Layer_1a22d31298912405660ebb210c0d7c5373" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>fp_output_dims</name></member>
      <member refid="classlbann_1_1Layer_1af311d901a5f71e4c749454647e9fd9c7" prot="protected" virt="virtual"><scope>lbann::Layer</scope><name>fp_setup_data</name></member>
      <member refid="classlbann_1_1Layer_1ad55c455dbae0d082cedfa68511709aae" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>freeze</name></member>
      <member refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_activations</name></member>
      <member refid="classlbann_1_1Layer_1af69a4773804c6982e8acaf5810eaa150" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_activations</name></member>
      <member refid="classlbann_1_1Layer_1a81f9f4fc956daf4838a7ed248427b1f3" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>get_bp_output</name></member>
      <member refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a0ad6c5253a4545a7322766d586a4bd33" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1afc7bf4e2a61a6f47f9e1f185bf92439a" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_child_names</name></member>
      <member refid="classlbann_1_1Layer_1a1b528e5872357a82176ee487596b363c" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_cudnn_manager</name></member>
      <member refid="classlbann_1_1Layer_1a5dfb66e81fc085997402a5e2241316bd" prot="public" virt="pure-virtual"><scope>lbann::Layer</scope><name>get_data_layout</name></member>
      <member refid="classlbann_1_1Layer_1ae3f4a5602df821f4221614b1e3782dc1" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_data_layout_string</name></member>
      <member refid="classlbann_1_1Layer_1acc0803d3428914ca1eb5988c4309174a" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>get_description</name></member>
      <member refid="classlbann_1_1Layer_1adb561e140e0bb601f3c5a8ee053a71d2" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ae09bc5a240e9042371203ba5ff19990c" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1aaeef8c7631204fc415a94dcdfbcfe93d" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_expected_num_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa30dbf20929aaa58b5be98b98217ca88" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_expected_num_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1ac6b43c63399f717cc1a4a0a2007350f2" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>get_fp_output</name></member>
      <member refid="classlbann_1_1Layer_1af4a093d91552cf079217eb346bbb847f" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_layer_names</name></member>
      <member refid="classlbann_1_1Layer_1a9f94210cbb973f1df89ef649899094a1" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>get_layer_pointers</name></member>
      <member refid="classlbann_1_1Layer_1a4248f27acebf72b7b7b3ee39c8bcb62a" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_local_activations</name></member>
      <member refid="classlbann_1_1Layer_1aadbc466c72f455c10b53bf45dca56332" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_local_activations</name></member>
      <member refid="classlbann_1_1Layer_1af178d00b9d878aa7d87754bff2a91f3a" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_local_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1acf76bc7fba1e8ab74947ef83a3c8a141" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_local_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a35397843bb0c84030000c7d872229acb" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_local_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1ab0f7b4d0fdb06004dfde5358781eeece" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_local_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a82827edc5e869960144f3ccb2172bfcd" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_local_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1af3490fe9011ef620b827970bc5dcc7a7" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_local_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1afcfb6f55d12c728a59d107fe2d2fff0d" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_model</name></member>
      <member refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_name</name></member>
      <member refid="classlbann_1_1Layer_1a54f53393fadbfdc73b4e72489c868433" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>get_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a1409a117c31a7ea4f2c7a4d22a3e86c3" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_num_children</name></member>
      <member refid="classlbann_1_1Layer_1aa35561e662de84deae26045ccb53d862" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>get_num_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>get_num_neurons</name></member>
      <member refid="classlbann_1_1Layer_1ac9290d4a6453ccda5f6b4d8b57b49ba3" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_num_parents</name></member>
      <member refid="classlbann_1_1Layer_1ace32c7df942a8d97d7a25cb8ff8ce71d" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>get_num_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>get_num_prev_neurons</name></member>
      <member refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1a233ceaf4e6c6b5c24dd097ffff511579" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1afdf36947beec676a71ecd6167c3bb724" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_parent_names</name></member>
      <member refid="classlbann_1_1Layer_1a45853df73a2e72bfaa774665a0f37ed7" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1afc0611b7c3b1537914f25a538486a8cd" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a7ac4579d3c1671dfaf86e3b618d6938a" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1aff2c8983548364c978acb09ddf58a6fc" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1a1acc0fa44acdeffbac158fdac3467973" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>get_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a0ac13af6f5ee8316d64c550bef919ee0" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>get_sample_indices_per_mb</name></member>
      <member refid="classlbann_1_1Layer_1a147a7f7dcf0027a60f10109439e5dcea" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>get_topo_description</name></member>
      <member refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239" prot="public" virt="pure-virtual"><scope>lbann::Layer</scope><name>get_type</name></member>
      <member refid="classlbann_1_1Layer_1a4ee78d42284421519dd18d27b4da0957" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_weights</name></member>
      <member refid="classlbann_1_1Layer_1ab9fe05ad8d21ba5d6dd4d22ee2e0dca0" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>get_weights</name></member>
      <member refid="classlbann_1_1Layer_1a2d50e9af2a9aa7e6741deb555641c30c" prot="private" virt="non-virtual"><scope>lbann::Layer</scope><name>instantiate_matrices</name></member>
      <member refid="classlbann_1_1Layer_1af3c0f9f32eb631f4fdf34ad040ef8637" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>is_frozen</name></member>
      <member refid="classlbann_1_1Layer_1a24e9c82354a0a2af1b70cbca2211e7d4" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>Layer</name></member>
      <member refid="classlbann_1_1Layer_1a247cc68c730284f10a2cb42985fe5f3a" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>Layer</name></member>
      <member refid="classlbann_1_1Layer_1a9e262970ecc64166e8b6610e2502ad30" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1Layer_1a7ac9335d75d817fc2d5cf171da9b7e22" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>loadFromCheckpoint</name></member>
      <member refid="classlbann_1_1Layer_1a1ae0e6015dd427c63236a07f8cbd3878" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>loadFromFile</name></member>
      <member refid="classlbann_1_1Layer_1a7caf08e938141d1584e6939cefa4baed" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_activations</name></member>
      <member refid="classlbann_1_1Layer_1ae28626457a58943b25e7a2920fc271f0" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_bp_compute_time</name></member>
      <member refid="classlbann_1_1Layer_1aa60fc41627bcaa9c345775bf5737bb45" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_bp_time</name></member>
      <member refid="classlbann_1_1Layer_1ae348c0d2b4d05f74d809d09debb633c0" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a5de05c52f22e0bbd7c703bec3ad4dbf2" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_comm</name></member>
      <member refid="classlbann_1_1Layer_1a08dbb94239e3b8c96329786c57c72e21" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_cudnn</name></member>
      <member refid="classlbann_1_1Layer_1a452e22ac81c1a799f0614b3e942ea726" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ac08f133dddd150319650e220ab9a523a" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_expected_num_child_layers</name></member>
      <member refid="classlbann_1_1Layer_1a841b96b25555247f52921c7f13ae1dfa" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_expected_num_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1aa4e439c1d6a656e709dc4736c9380476" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_fp_compute_time</name></member>
      <member refid="classlbann_1_1Layer_1ab1bd9ab0a6f9e554f4dc936d8316028e" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_fp_time</name></member>
      <member refid="classlbann_1_1Layer_1afdc60df9731a3ecdeeeb8175fa483676" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_frozen</name></member>
      <member refid="classlbann_1_1Layer_1a3d9315e99574166f2f33e37b572021d2" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_model</name></member>
      <member refid="classlbann_1_1Layer_1aa47109ad09b399142fa92f9d3702189f" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_name</name></member>
      <member refid="classlbann_1_1Layer_1abb34bb8031f57a483e2e327a5f229f48" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1adfd6178d21498c9095cd947ae1eb2d6a" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_num_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1a6b5ebc8a7d9329d8a773ed787e7b41d8" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_num_neurons</name></member>
      <member refid="classlbann_1_1Layer_1adc052afb38f170e839db00d3c8151d1e" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_num_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1ac7b30f4e28d58204bfcbb76886f9136d" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_num_prev_neurons</name></member>
      <member refid="classlbann_1_1Layer_1a3fa7c6cf1a22bb14ab0e85e3dc6027c5" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_parent_layers</name></member>
      <member refid="classlbann_1_1Layer_1a52314601c3458268f56e017dc2ade357" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_prev_activations</name></member>
      <member refid="classlbann_1_1Layer_1a6fdcbf884150d0b20cffe678fefd7caa" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_prev_error_signals</name></member>
      <member refid="classlbann_1_1Layer_1ae204d1a2a79606eaa117273857ff62a3" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_prev_neuron_dims</name></member>
      <member refid="classlbann_1_1Layer_1ab7d84533662b02d01ba6685ad6f20935" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_update_time</name></member>
      <member refid="classlbann_1_1Layer_1af7881cb5eff5207c15fa835d65462e8f" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_using_gpus</name></member>
      <member refid="classlbann_1_1Layer_1a7954e30fbf9100a6ba4b56d02767a469" prot="protected" virt="non-virtual"><scope>lbann::Layer</scope><name>m_weights</name></member>
      <member refid="classlbann_1_1Layer_1a00d8acde68fda2f38c4a39ef8c89234a" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>operator=</name></member>
      <member refid="classlbann_1_1Layer_1ae9df4e0b0fe7c276c79575f9e11c53af" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>replace_weights</name></member>
      <member refid="classlbann_1_1Layer_1a979bb6891e6bf5edba2184cd0b59cf54" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>reset_counters</name></member>
      <member refid="classlbann_1_1Layer_1afce0efa0f1c8f3b1c61069536b2fa8cc" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1Layer_1a994a4beabbace598193b1611eb06b07e" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>saveToCheckpoint</name></member>
      <member refid="classlbann_1_1Layer_1a131876b692c0e68c95d9ae1a86c446df" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>saveToFile</name></member>
      <member refid="classlbann_1_1Layer_1a001ea76cdd05e2d0d475f408f24702ee" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>set_layer_pointers</name></member>
      <member refid="classlbann_1_1Layer_1a8eed87b25ea902b223c6b7a23abf78b3" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>set_model</name></member>
      <member refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>set_name</name></member>
      <member refid="classlbann_1_1Layer_1a524a78dc6a812ae92834a9e1aa83434b" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>set_weights</name></member>
      <member refid="classlbann_1_1Layer_1a93d6048c5959b27aa475673568dab956" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>setup</name></member>
      <member refid="classlbann_1_1Layer_1a50a89f8a68762c677d48efe384676e81" prot="protected" virt="virtual"><scope>lbann::Layer</scope><name>setup_data</name></member>
      <member refid="classlbann_1_1Layer_1a90fce1b06c1f2abb480e18cfe08a9746" prot="protected" virt="virtual"><scope>lbann::Layer</scope><name>setup_dims</name></member>
      <member refid="classlbann_1_1Layer_1a36aa22ef90ce4de65abe729d38490863" prot="protected" virt="virtual"><scope>lbann::Layer</scope><name>setup_gpu</name></member>
      <member refid="classlbann_1_1Layer_1a57bbe21131dc00ab5cf9ea5e3656808e" prot="protected" virt="virtual"><scope>lbann::Layer</scope><name>setup_matrices</name></member>
      <member refid="classlbann_1_1Layer_1a71b7a62afd9b73c23b2c0267b8ba0981" prot="protected" virt="virtual"><scope>lbann::Layer</scope><name>setup_pointers</name></member>
      <member refid="classlbann_1_1Layer_1af7e50932bb60d4cab3b21ab3fb0707ea" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>summarize_matrices</name></member>
      <member refid="classlbann_1_1Layer_1a7f3f26e2ae0497f9a00fd6bc56b50543" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>summarize_stats</name></member>
      <member refid="classlbann_1_1Layer_1aa43ecf9fc67eb1d596c1a69cf35d1245" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>unfreeze</name></member>
      <member refid="classlbann_1_1Layer_1ae4a050e51e3a9bec431cf8b7a5660f2c" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>update</name></member>
      <member refid="classlbann_1_1Layer_1a70e08fc96a612f67ade6ba3809536d85" prot="protected" virt="virtual"><scope>lbann::Layer</scope><name>update_compute</name></member>
      <member refid="classlbann_1_1Layer_1a6a75532bdaa2ca3879034f2a76085a06" prot="public" virt="non-virtual"><scope>lbann::Layer</scope><name>using_gpus</name></member>
      <member refid="classlbann_1_1Layer_1ab94eb4ac28bac0c472a1da83ade4adf1" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>write_proto</name></member>
      <member refid="classlbann_1_1Layer_1a68c3f57587956da938406812f13ecb78" prot="public" virt="virtual"><scope>lbann::Layer</scope><name>~Layer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
