<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="rmsprop_8cpp" kind="file" language="C++">
    <compoundname>rmsprop.cpp</compoundname>
    <includes refid="rmsprop_8hpp" local="yes">lbann/optimizers/rmsprop.hpp</includes>
    <includes refid="exception_8hpp" local="yes">lbann/utils/exception.hpp</includes>
    <incdepgraph>
      <node id="22800">
        <label>sys/stat.h</label>
      </node>
      <node id="22797">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="22775" relation="include">
        </childnode>
        <childnode refid="22776" relation="include">
        </childnode>
      </node>
      <node id="22776">
        <label>El.hpp</label>
      </node>
      <node id="22775">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="22776" relation="include">
        </childnode>
        <childnode refid="22777" relation="include">
        </childnode>
        <childnode refid="22778" relation="include">
        </childnode>
        <childnode refid="22783" relation="include">
        </childnode>
      </node>
      <node id="22791">
        <label>string</label>
      </node>
      <node id="22794">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="22785" relation="include">
        </childnode>
        <childnode refid="22775" relation="include">
        </childnode>
        <childnode refid="22784" relation="include">
        </childnode>
        <childnode refid="22788" relation="include">
        </childnode>
      </node>
      <node id="22786">
        <label>map</label>
      </node>
      <node id="22799">
        <label>unordered_set</label>
      </node>
      <node id="22771">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/optimizers/rmsprop.cpp</label>
        <link refid="rmsprop_8cpp"/>
        <childnode refid="22772" relation="include">
        </childnode>
        <childnode refid="22788" relation="include">
        </childnode>
      </node>
      <node id="22793">
        <label>exception</label>
      </node>
      <node id="22772">
        <label>lbann/optimizers/rmsprop.hpp</label>
        <link refid="rmsprop_8hpp"/>
        <childnode refid="22773" relation="include">
        </childnode>
        <childnode refid="22800" relation="include">
        </childnode>
      </node>
      <node id="22796">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="22775" relation="include">
        </childnode>
        <childnode refid="22784" relation="include">
        </childnode>
        <childnode refid="22788" relation="include">
        </childnode>
        <childnode refid="22794" relation="include">
        </childnode>
      </node>
      <node id="22780">
        <label>cstdio</label>
      </node>
      <node id="22789">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="22790" relation="include">
        </childnode>
        <childnode refid="22791" relation="include">
        </childnode>
      </node>
      <node id="22782">
        <label>cxxabi.h</label>
      </node>
      <node id="22788">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="22775" relation="include">
        </childnode>
        <childnode refid="22784" relation="include">
        </childnode>
        <childnode refid="22789" relation="include">
        </childnode>
        <childnode refid="22792" relation="include">
        </childnode>
        <childnode refid="22793" relation="include">
        </childnode>
      </node>
      <node id="22785">
        <label>vector</label>
      </node>
      <node id="22784">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="22785" relation="include">
        </childnode>
        <childnode refid="22786" relation="include">
        </childnode>
        <childnode refid="22787" relation="include">
        </childnode>
        <childnode refid="22775" relation="include">
        </childnode>
      </node>
      <node id="22798">
        <label>lbann.pb.h</label>
      </node>
      <node id="22779">
        <label>cstdlib</label>
      </node>
      <node id="22792">
        <label>iostream</label>
      </node>
      <node id="22773">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="22774" relation="include">
        </childnode>
        <childnode refid="22775" relation="include">
        </childnode>
        <childnode refid="22784" relation="include">
        </childnode>
        <childnode refid="22788" relation="include">
        </childnode>
        <childnode refid="22794" relation="include">
        </childnode>
        <childnode refid="22795" relation="include">
        </childnode>
        <childnode refid="22791" relation="include">
        </childnode>
        <childnode refid="22799" relation="include">
        </childnode>
      </node>
      <node id="22790">
        <label>csignal</label>
      </node>
      <node id="22795">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="22791" relation="include">
        </childnode>
        <childnode refid="22775" relation="include">
        </childnode>
        <childnode refid="22784" relation="include">
        </childnode>
        <childnode refid="22788" relation="include">
        </childnode>
        <childnode refid="22794" relation="include">
        </childnode>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22797" relation="include">
        </childnode>
        <childnode refid="22798" relation="include">
        </childnode>
      </node>
      <node id="22783">
        <label>lbann_config.hpp</label>
      </node>
      <node id="22774">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="22778">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="22779" relation="include">
        </childnode>
        <childnode refid="22780" relation="include">
        </childnode>
        <childnode refid="22781" relation="include">
        </childnode>
        <childnode refid="22782" relation="include">
        </childnode>
      </node>
      <node id="22777">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="22776" relation="include">
        </childnode>
      </node>
      <node id="22787">
        <label>typeindex</label>
      </node>
      <node id="22781">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rmsprop_8hpp" kindref="compound">lbann/optimizers/rmsprop.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">lbann/utils/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classlbann_1_1rmsprop_1af42c8e3336e72aac926e19c57b56e59f" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1rmsprop_1af42c8e3336e72aac926e19c57b56e59f" kindref="member">rmsprop::rmsprop</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>learning_rate,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>decay_rate,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>eps)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref>(comm,<sp/>learning_rate),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>m_decay_rate(decay_rate),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m_eps(eps),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cache(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classlbann_1_1rmsprop_1af70a9a2c9ff67d0d39f14c6e283abd95" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1rmsprop_1af42c8e3336e72aac926e19c57b56e59f" kindref="member">rmsprop::rmsprop</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1rmsprop" kindref="compound">rmsprop</ref>&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref>(other),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1rmsprop_1a9cd712c44e7c4995120e2933b0387d71" kindref="member">m_decay_rate</ref>(other.<ref refid="classlbann_1_1rmsprop_1a9cd712c44e7c4995120e2933b0387d71" kindref="member">m_decay_rate</ref>),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1rmsprop_1a6ea73caf5b2769451dfd798665877208" kindref="member">m_eps</ref>(other.<ref refid="classlbann_1_1rmsprop_1a6ea73caf5b2769451dfd798665877208" kindref="member">m_eps</ref>),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>(other.<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref><sp/>=<sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>-&gt;Copy();<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classlbann_1_1rmsprop_1a3c7eb1fb105c7be762b97e4f947a2b94" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1rmsprop" kindref="compound">rmsprop</ref>&amp;<sp/><ref refid="classlbann_1_1rmsprop_1a3c7eb1fb105c7be762b97e4f947a2b94" kindref="member">rmsprop::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1rmsprop" kindref="compound">rmsprop</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1ab7811e0a4d2d9b594140aed78b6de743" kindref="member">optimizer::operator=</ref>(other);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1rmsprop_1a9cd712c44e7c4995120e2933b0387d71" kindref="member">m_decay_rate</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1rmsprop_1a9cd712c44e7c4995120e2933b0387d71" kindref="member">m_decay_rate</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1rmsprop_1a6ea73caf5b2769451dfd798665877208" kindref="member">m_eps</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1rmsprop_1a6ea73caf5b2769451dfd798665877208" kindref="member">m_eps</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>cache<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>other.<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>-&gt;DistData()<sp/>==<sp/>other.<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>-&gt;DistData())<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>El::Copy(*other.<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>,<sp/>*<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>;<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref><sp/>=<sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>-&gt;Copy();<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classlbann_1_1rmsprop_1ae837f3c0e5b49f8baa42cc9c864259fc" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1rmsprop_1ae837f3c0e5b49f8baa42cc9c864259fc" kindref="member">rmsprop::~rmsprop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>;<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classlbann_1_1rmsprop_1a4526482bf60f7f3fc3f60ff70b38cdb7" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classlbann_1_1rmsprop_1a4526482bf60f7f3fc3f60ff70b38cdb7" kindref="member">rmsprop::get_description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1optimizer_1a66bb8d28dfb41452ac1a75a3efd47723" kindref="member">optimizer::get_description</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;decay_rate=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1rmsprop_1a9cd712c44e7c4995120e2933b0387d71" kindref="member">m_decay_rate</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;eps=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1rmsprop_1a6ea73caf5b2769451dfd798665877208" kindref="member">m_eps</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classlbann_1_1rmsprop_1a8f6111a36f9ad592d14e13b64a0f228f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1rmsprop_1a8f6111a36f9ad592d14e13b64a0f228f" kindref="member">rmsprop::setup</ref>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref>&amp;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1optimizer_1a7641a88b3c166df2d974a298622b992b" kindref="member">optimizer::setup</ref>(w);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref><sp/>=<sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>-&gt;Construct(<ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>-&gt;Grid(),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>-&gt;Root());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>El::Zeros(*<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>,<sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>-&gt;Height(),<sp/><ref refid="classlbann_1_1optimizer_1a3df20cb0ae2b60430ad4fd235d66c12e" kindref="member">m_gradient</ref>-&gt;Width());</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classlbann_1_1rmsprop_1a600e4b332299a6aaa36d0b7ff458e3f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1rmsprop_1a600e4b332299a6aaa36d0b7ff458e3f3" kindref="member">rmsprop::step_compute</ref>(<ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>values,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>gradient)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>local<sp/>matrix<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_height<sp/>=<sp/>values.LocalHeight();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_width<sp/>=<sp/>values.LocalWidth();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>DataType*<sp/>__restrict__<sp/>values_buffer<sp/>=<sp/>values.Buffer();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_ldim<sp/>=<sp/>values.LDim();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType*<sp/>__restrict__<sp/>gradient_buffer<sp/>=<sp/>gradient.LockedBuffer();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gradient_ldim<sp/>=<sp/>gradient.LDim();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>DataType*<sp/>__restrict__<sp/>cache_buffer<sp/>=<sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>-&gt;Buffer();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cache_ldim<sp/>=<sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>-&gt;LDim();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>matrix<sp/>data<sp/>is<sp/>contiguous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(values_ldim<sp/>!=<sp/>local_height</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>gradient_ldim<sp/>!=<sp/>local_height</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>cache_ldim<sp/>!=<sp/>local_height)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>with<sp/>non-contiguous<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;local_width;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;local_height;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType&amp;<sp/>x<sp/>=<sp/>values_buffer[i+j*values_ldim];</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>g<sp/>=<sp/>gradient_buffer[i+j*gradient_ldim];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType&amp;<sp/>c<sp/>=<sp/>cache_buffer[i+j*cache_ldim];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/><ref refid="classlbann_1_1rmsprop_1a9cd712c44e7c4995120e2933b0387d71" kindref="member">m_decay_rate</ref><sp/>*<sp/>c<sp/>+<sp/>(DataType(1)<sp/>-<sp/><ref refid="classlbann_1_1rmsprop_1a9cd712c44e7c4995120e2933b0387d71" kindref="member">m_decay_rate</ref>)<sp/>*<sp/>g<sp/>*<sp/>g;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/><ref refid="classlbann_1_1optimizer_1ad393dcdcb82b44510c586ed5ec46d4dd" kindref="member">m_learning_rate</ref><sp/>*<sp/>g<sp/>/<sp/>(std::sqrt(c)<sp/>+<sp/><ref refid="classlbann_1_1rmsprop_1a6ea73caf5b2769451dfd798665877208" kindref="member">m_eps</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>with<sp/>contiguous<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;local_height*local_width;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DataType&amp;<sp/>x<sp/>=<sp/>values_buffer[i];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>g<sp/>=<sp/>gradient_buffer[i];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DataType&amp;<sp/>c<sp/>=<sp/>cache_buffer[i];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/><ref refid="classlbann_1_1rmsprop_1a9cd712c44e7c4995120e2933b0387d71" kindref="member">m_decay_rate</ref><sp/>*<sp/>c<sp/>+<sp/>(DataType(1)<sp/>-<sp/><ref refid="classlbann_1_1rmsprop_1a9cd712c44e7c4995120e2933b0387d71" kindref="member">m_decay_rate</ref>)<sp/>*<sp/>g<sp/>*<sp/>g;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/><ref refid="classlbann_1_1optimizer_1ad393dcdcb82b44510c586ed5ec46d4dd" kindref="member">m_learning_rate</ref><sp/>*<sp/>g<sp/>/<sp/>(std::sqrt(c)<sp/>+<sp/><ref refid="classlbann_1_1rmsprop_1a6ea73caf5b2769451dfd798665877208" kindref="member">m_eps</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classlbann_1_1rmsprop_1a8abe698168c2d1cb2c65d180552501ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1rmsprop_1a8abe698168c2d1cb2c65d180552501ef" kindref="member">rmsprop::save_to_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p,<sp/>std::string<sp/>name_prefix)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1afed10c6d8c5bd922f95075abeff711ce" kindref="member">optimizer::save_to_checkpoint_shared</ref>(p,<sp/>name_prefix);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>l_name[512];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(l_name,<sp/></highlight><highlight class="stringliteral">&quot;%s_optimizer_cache_%lldx%lld&quot;</highlight><highlight class="normal">,<sp/>name_prefix.c_str(),<sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>-&gt;Height(),<sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>-&gt;Width());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1a9170de652405d86d9ba9b3793f8781c6" kindref="member">write_distmat</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/>l_name,<sp/>(<ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref><sp/>*)<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classlbann_1_1rmsprop_1a64db08f787ca8904a0ba4ecc37d5d1ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1rmsprop_1a64db08f787ca8904a0ba4ecc37d5d1ed" kindref="member">rmsprop::load_from_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p,<sp/>std::string<sp/>name_prefix)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer_1a42a52aab9a682fda57c1e639968a44b9" kindref="member">optimizer::load_from_checkpoint_shared</ref>(p,<sp/>name_prefix);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>l_name[512];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(l_name,<sp/></highlight><highlight class="stringliteral">&quot;%s_optimizer_cache_%lldx%lld.bin&quot;</highlight><highlight class="normal">,<sp/>name_prefix.c_str(),<sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>-&gt;Height(),<sp/><ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>-&gt;Width());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aa98be93f33b510e5b506b61de6bd79bd" kindref="member">read_distmat</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/>l_name,<sp/>(<ref refid="base_8hpp_1a0fab5387556805cfeac3e7e567bf66c5" kindref="member">DistMat</ref><sp/>*)<ref refid="classlbann_1_1rmsprop_1a2bbaa35bb209e971a5ac9e1dbb6ece76" kindref="member">m_cache</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/optimizers/rmsprop.cpp"/>
  </compounddef>
</doxygen>
