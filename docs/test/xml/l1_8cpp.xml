<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="l1_8cpp" kind="file" language="C++">
    <compoundname>l1.cpp</compoundname>
    <includes refid="l1_8hpp" local="yes">lbann/objective_functions/weight_regularization/l1.hpp</includes>
    <includes refid="model_8hpp" local="yes">lbann/models/model.hpp</includes>
    <incdepgraph>
      <node id="22597">
        <label>sys/stat.h</label>
      </node>
      <node id="22576">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="22577" relation="include">
        </childnode>
        <childnode refid="22573" relation="include">
        </childnode>
        <childnode refid="22562" relation="include">
        </childnode>
        <childnode refid="22572" relation="include">
        </childnode>
      </node>
      <node id="22559">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/weight_regularization/l1.cpp</label>
        <link refid="l1_8cpp"/>
        <childnode refid="22560" relation="include">
        </childnode>
        <childnode refid="22593" relation="include">
        </childnode>
      </node>
      <node id="22560">
        <label>lbann/objective_functions/weight_regularization/l1.hpp</label>
        <link refid="l1_8hpp"/>
        <childnode refid="22561" relation="include">
        </childnode>
      </node>
      <node id="22588">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="22562" relation="include">
        </childnode>
        <childnode refid="22563" relation="include">
        </childnode>
      </node>
      <node id="22563">
        <label>El.hpp</label>
      </node>
      <node id="22562">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="22563" relation="include">
        </childnode>
        <childnode refid="22564" relation="include">
        </childnode>
        <childnode refid="22565" relation="include">
        </childnode>
        <childnode refid="22570" relation="include">
        </childnode>
      </node>
      <node id="22599">
        <label>fcntl.h</label>
      </node>
      <node id="22601">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="22562" relation="include">
        </childnode>
        <childnode refid="22572" relation="include">
        </childnode>
        <childnode refid="22580" relation="include">
        </childnode>
        <childnode refid="22588" relation="include">
        </childnode>
      </node>
      <node id="22577">
        <label>string</label>
      </node>
      <node id="22585">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="22573" relation="include">
        </childnode>
        <childnode refid="22562" relation="include">
        </childnode>
        <childnode refid="22572" relation="include">
        </childnode>
        <childnode refid="22580" relation="include">
        </childnode>
      </node>
      <node id="22591">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="22592" relation="include">
        </childnode>
      </node>
      <node id="22574">
        <label>map</label>
      </node>
      <node id="22590">
        <label>unordered_set</label>
      </node>
      <node id="22584">
        <label>exception</label>
      </node>
      <node id="22587">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="22562" relation="include">
        </childnode>
        <childnode refid="22572" relation="include">
        </childnode>
        <childnode refid="22580" relation="include">
        </childnode>
        <childnode refid="22585" relation="include">
        </childnode>
      </node>
      <node id="22598">
        <label>sys/types.h</label>
      </node>
      <node id="22594">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="22583" relation="include">
        </childnode>
        <childnode refid="22573" relation="include">
        </childnode>
        <childnode refid="22595" relation="include">
        </childnode>
        <childnode refid="22574" relation="include">
        </childnode>
      </node>
      <node id="22567">
        <label>cstdio</label>
      </node>
      <node id="22581">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="22582" relation="include">
        </childnode>
        <childnode refid="22577" relation="include">
        </childnode>
      </node>
      <node id="22569">
        <label>cxxabi.h</label>
      </node>
      <node id="22580">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="22562" relation="include">
        </childnode>
        <childnode refid="22572" relation="include">
        </childnode>
        <childnode refid="22581" relation="include">
        </childnode>
        <childnode refid="22583" relation="include">
        </childnode>
        <childnode refid="22584" relation="include">
        </childnode>
      </node>
      <node id="22573">
        <label>vector</label>
      </node>
      <node id="22572">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="22573" relation="include">
        </childnode>
        <childnode refid="22574" relation="include">
        </childnode>
        <childnode refid="22575" relation="include">
        </childnode>
        <childnode refid="22562" relation="include">
        </childnode>
      </node>
      <node id="22600">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="22561" relation="include">
        </childnode>
        <childnode refid="22601" relation="include">
        </childnode>
      </node>
      <node id="22596">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="22597" relation="include">
        </childnode>
        <childnode refid="22598" relation="include">
        </childnode>
        <childnode refid="22599" relation="include">
        </childnode>
      </node>
      <node id="22589">
        <label>lbann.pb.h</label>
      </node>
      <node id="22566">
        <label>cstdlib</label>
      </node>
      <node id="22583">
        <label>iostream</label>
      </node>
      <node id="22578">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="22579" relation="include">
        </childnode>
        <childnode refid="22562" relation="include">
        </childnode>
        <childnode refid="22572" relation="include">
        </childnode>
        <childnode refid="22580" relation="include">
        </childnode>
        <childnode refid="22585" relation="include">
        </childnode>
        <childnode refid="22586" relation="include">
        </childnode>
        <childnode refid="22577" relation="include">
        </childnode>
        <childnode refid="22590" relation="include">
        </childnode>
      </node>
      <node id="22602">
        <label>unordered_map</label>
      </node>
      <node id="22571">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="22562" relation="include">
        </childnode>
        <childnode refid="22572" relation="include">
        </childnode>
        <childnode refid="22576" relation="include">
        </childnode>
        <childnode refid="22578" relation="include">
        </childnode>
        <childnode refid="22580" relation="include">
        </childnode>
        <childnode refid="22585" relation="include">
        </childnode>
        <childnode refid="22591" relation="include">
        </childnode>
        <childnode refid="22588" relation="include">
        </childnode>
        <childnode refid="22589" relation="include">
        </childnode>
        <childnode refid="22577" relation="include">
        </childnode>
        <childnode refid="22573" relation="include">
        </childnode>
      </node>
      <node id="22592">
        <label>chrono</label>
      </node>
      <node id="22561">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="22562" relation="include">
        </childnode>
        <childnode refid="22571" relation="include">
        </childnode>
        <childnode refid="22586" relation="include">
        </childnode>
      </node>
      <node id="22582">
        <label>csignal</label>
      </node>
      <node id="22586">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="22577" relation="include">
        </childnode>
        <childnode refid="22562" relation="include">
        </childnode>
        <childnode refid="22572" relation="include">
        </childnode>
        <childnode refid="22580" relation="include">
        </childnode>
        <childnode refid="22585" relation="include">
        </childnode>
        <childnode refid="22587" relation="include">
        </childnode>
        <childnode refid="22588" relation="include">
        </childnode>
        <childnode refid="22589" relation="include">
        </childnode>
      </node>
      <node id="22570">
        <label>lbann_config.hpp</label>
      </node>
      <node id="22595">
        <label>set</label>
      </node>
      <node id="22593">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="22562" relation="include">
        </childnode>
        <childnode refid="22572" relation="include">
        </childnode>
        <childnode refid="22571" relation="include">
        </childnode>
        <childnode refid="22576" relation="include">
        </childnode>
        <childnode refid="22594" relation="include">
        </childnode>
        <childnode refid="22596" relation="include">
        </childnode>
        <childnode refid="22588" relation="include">
        </childnode>
        <childnode refid="22600" relation="include">
        </childnode>
        <childnode refid="22601" relation="include">
        </childnode>
        <childnode refid="22586" relation="include">
        </childnode>
        <childnode refid="22578" relation="include">
        </childnode>
        <childnode refid="22589" relation="include">
        </childnode>
        <childnode refid="22573" relation="include">
        </childnode>
        <childnode refid="22577" relation="include">
        </childnode>
        <childnode refid="22602" relation="include">
        </childnode>
      </node>
      <node id="22579">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="22565">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="22566" relation="include">
        </childnode>
        <childnode refid="22567" relation="include">
        </childnode>
        <childnode refid="22568" relation="include">
        </childnode>
        <childnode refid="22569" relation="include">
        </childnode>
      </node>
      <node id="22564">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="22563" relation="include">
        </childnode>
      </node>
      <node id="22575">
        <label>typeindex</label>
      </node>
      <node id="22568">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="l1_8hpp" kindref="compound">lbann/objective_functions/weight_regularization/l1.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="model_8hpp" kindref="compound">lbann/models/model.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classlbann_1_1l1__weight__regularization_1afcd238514ad132d66609efbb30de25ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1l1__weight__regularization_1afcd238514ad132d66609efbb30de25ec" kindref="member">l1_weight_regularization::setup</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref>&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1objective__function__term_1a6c8dbdf18aac8676098189fb7b178e91" kindref="member">objective_function_term::setup</ref>(m);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>term<sp/>has<sp/>no<sp/>layer<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" kindref="member">m_layers</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>setup<sp/>group<sp/>lasso<sp/>weight<sp/>regularization<sp/>with<sp/>layer<sp/>pointers&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>all<sp/>weights<sp/>in<sp/>model<sp/>if<sp/>no<sp/>weights<sp/>pointers<sp/>are<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1objective__function__term_1a1d601c29153ae9cb54c585887608f2bf" kindref="member">m_weights</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref>*<sp/>w<sp/>:<sp/>m.<ref refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" kindref="member">get_weights</ref>())<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w-&gt;get_optimizer()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1objective__function__term_1a1d601c29153ae9cb54c585887608f2bf" kindref="member">m_weights</ref>.push_back(w);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classlbann_1_1l1__weight__regularization_1ace2c0fe490dd1e630460063b6df23597" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1l1__weight__regularization_1ace2c0fe490dd1e630460063b6df23597" kindref="member">l1_weight_regularization::start_evaluation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classlbann_1_1l1__weight__regularization_1a5416b0c884e45854a03e0d2e2b3e63f3" refkind="member"><highlight class="normal"><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/><ref refid="classlbann_1_1l1__weight__regularization_1a5416b0c884e45854a03e0d2e2b3e63f3" kindref="member">l1_weight_regularization::finish_evaluation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" kindref="member">m_scale_factor</ref><sp/>==<sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0);<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>value<sp/>=<sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref>*<sp/>w<sp/>:<sp/><ref refid="classlbann_1_1objective__function__term_1a1d601c29153ae9cb54c585887608f2bf" kindref="member">m_weights</ref>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>values<sp/>=<sp/>w-&gt;get_values();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>values_local<sp/>=<sp/>values.LockedMatrix();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_height<sp/>=<sp/>values_local.Height();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_width<sp/>=<sp/>values_local.Width();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>L1<sp/>regularization<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>reduction(+:sum)<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>local_height;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>val<sp/>=<sp/>values_local(row,<sp/>col);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>val<sp/>&gt;=<sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0)<sp/>?<sp/>val<sp/>:<sp/>-<sp/>val;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>+=<sp/><ref refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" kindref="member">get_comm</ref>().<ref refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" kindref="member">allreduce</ref>(sum,<sp/>values.DistComm());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" kindref="member">m_scale_factor</ref><sp/>*<sp/>value;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classlbann_1_1l1__weight__regularization_1a9f2c29799fc60449f65bc1127b7514fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1l1__weight__regularization_1a9f2c29799fc60449f65bc1127b7514fb" kindref="member">l1_weight_regularization::compute_weight_regularization</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" kindref="member">m_scale_factor</ref><sp/>==<sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>*<sp/>gradient;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref>*<sp/>w<sp/>:<sp/><ref refid="classlbann_1_1objective__function__term_1a1d601c29153ae9cb54c585887608f2bf" kindref="member">m_weights</ref>)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref>&amp;<sp/>values<sp/>=<sp/>w-&gt;get_values();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>values_local<sp/>=<sp/>values.LockedMatrix();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_height<sp/>=<sp/>values_local.Height();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_width<sp/>=<sp/>values_local.Width();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>gradient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>gradient<sp/>=<sp/>values.Copy();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>gradient_local<sp/>=<sp/>gradient-&gt;Matrix();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>local_height;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>val<sp/>=<sp/>values_local(row,<sp/>col);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType&amp;<sp/>grad<sp/>=<sp/>gradient_local(row,<sp/>col);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&gt;<sp/>DataType(0))<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad<sp/>=<sp/>DataType(1);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&lt;<sp/>DataType(0))<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad<sp/>=<sp/>DataType(-1);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad<sp/>=<sp/>DataType(0);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>w-&gt;get_optimizer()-&gt;add_to_gradient(*gradient,<sp/><ref refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" kindref="member">m_scale_factor</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>gradient;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/weight_regularization/l1.cpp"/>
  </compounddef>
</doxygen>
