<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="kl__divergence_8cpp" kind="file" language="C++">
    <compoundname>kl_divergence.cpp</compoundname>
    <includes refid="kl__divergence_8hpp" local="yes">lbann/objective_functions/kl_divergence.hpp</includes>
    <includes refid="model_8hpp" local="yes">lbann/models/model.hpp</includes>
    <includes refid="statistics_8hpp" local="yes">lbann/utils/statistics.hpp</includes>
    <incdepgraph>
      <node id="21852">
        <label>sys/stat.h</label>
      </node>
      <node id="21828">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="21829" relation="include">
        </childnode>
        <childnode refid="21825" relation="include">
        </childnode>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
      </node>
      <node id="21872">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="21869" relation="include">
        </childnode>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
        <childnode refid="21843" relation="include">
        </childnode>
        <childnode refid="21832" relation="include">
        </childnode>
        <childnode refid="21873" relation="include">
        </childnode>
        <childnode refid="21874" relation="include">
        </childnode>
      </node>
      <node id="21855">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="21822" relation="include">
        </childnode>
        <childnode refid="21814" relation="include">
        </childnode>
      </node>
      <node id="21840">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21815" relation="include">
        </childnode>
      </node>
      <node id="21815">
        <label>El.hpp</label>
      </node>
      <node id="21814">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="21815" relation="include">
        </childnode>
        <childnode refid="21816" relation="include">
        </childnode>
        <childnode refid="21817" relation="include">
        </childnode>
        <childnode refid="21822" relation="include">
        </childnode>
      </node>
      <node id="21863">
        <label>lbann/io/data_buffers/distributed_io_buffer.hpp</label>
        <link refid="distributed__io__buffer_8hpp"/>
        <childnode refid="21861" relation="include">
        </childnode>
      </node>
      <node id="21870">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="21825" relation="include">
        </childnode>
        <childnode refid="21842" relation="include">
        </childnode>
        <childnode refid="21869" relation="include">
        </childnode>
        <childnode refid="21871" relation="include">
        </childnode>
        <childnode refid="21872" relation="include">
        </childnode>
      </node>
      <node id="21856">
        <label>cassert</label>
      </node>
      <node id="21854">
        <label>fcntl.h</label>
      </node>
      <node id="21868">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
        <childnode refid="21832" relation="include">
        </childnode>
        <childnode refid="21840" relation="include">
        </childnode>
      </node>
      <node id="21847">
        <label>lbann/layers/io/io_layer.hpp</label>
        <link refid="io__layer_8hpp"/>
        <childnode refid="21823" relation="include">
        </childnode>
        <childnode refid="21848" relation="include">
        </childnode>
        <childnode refid="21859" relation="include">
        </childnode>
        <childnode refid="21840" relation="include">
        </childnode>
        <childnode refid="21832" relation="include">
        </childnode>
        <childnode refid="21829" relation="include">
        </childnode>
        <childnode refid="21853" relation="include">
        </childnode>
        <childnode refid="21852" relation="include">
        </childnode>
        <childnode refid="21858" relation="include">
        </childnode>
        <childnode refid="21819" relation="include">
        </childnode>
      </node>
      <node id="21829">
        <label>string</label>
      </node>
      <node id="21861">
        <label>lbann/io/data_buffers/generic_io_buffer.hpp</label>
        <link refid="generic__io__buffer_8hpp"/>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
        <childnode refid="21848" relation="include">
        </childnode>
      </node>
      <node id="21837">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="21825" relation="include">
        </childnode>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
        <childnode refid="21832" relation="include">
        </childnode>
      </node>
      <node id="21843">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="21844" relation="include">
        </childnode>
      </node>
      <node id="21826">
        <label>map</label>
      </node>
      <node id="21842">
        <label>unordered_set</label>
      </node>
      <node id="21845">
        <label>lbann/layers/io/target/target_layer.hpp</label>
        <link refid="target__layer_8hpp"/>
        <childnode refid="21846" relation="include">
        </childnode>
        <childnode refid="21832" relation="include">
        </childnode>
        <childnode refid="21864" relation="include">
        </childnode>
        <childnode refid="21829" relation="include">
        </childnode>
        <childnode refid="21853" relation="include">
        </childnode>
        <childnode refid="21852" relation="include">
        </childnode>
        <childnode refid="21858" relation="include">
        </childnode>
      </node>
      <node id="21873">
        <label>omp.h</label>
      </node>
      <node id="21836">
        <label>exception</label>
      </node>
      <node id="21811">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/kl_divergence.cpp</label>
        <link refid="kl__divergence_8cpp"/>
        <childnode refid="21812" relation="include">
        </childnode>
        <childnode refid="21864" relation="include">
        </childnode>
        <childnode refid="21875" relation="include">
        </childnode>
      </node>
      <node id="21850">
        <label>random</label>
      </node>
      <node id="21839">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
        <childnode refid="21832" relation="include">
        </childnode>
        <childnode refid="21837" relation="include">
        </childnode>
      </node>
      <node id="21853">
        <label>sys/types.h</label>
      </node>
      <node id="21871">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21828" relation="include">
        </childnode>
        <childnode refid="21864" relation="include">
        </childnode>
        <childnode refid="21823" relation="include">
        </childnode>
      </node>
      <node id="21865">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="21835" relation="include">
        </childnode>
        <childnode refid="21825" relation="include">
        </childnode>
        <childnode refid="21866" relation="include">
        </childnode>
        <childnode refid="21826" relation="include">
        </childnode>
      </node>
      <node id="21819">
        <label>cstdio</label>
      </node>
      <node id="21862">
        <label>lbann/io/data_buffers/partitioned_io_buffer.hpp</label>
        <link refid="partitioned__io__buffer_8hpp"/>
        <childnode refid="21861" relation="include">
        </childnode>
      </node>
      <node id="21833">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="21834" relation="include">
        </childnode>
        <childnode refid="21829" relation="include">
        </childnode>
      </node>
      <node id="21875">
        <label>lbann/utils/statistics.hpp</label>
        <link refid="statistics_8hpp"/>
        <childnode refid="21814" relation="include">
        </childnode>
      </node>
      <node id="21821">
        <label>cxxabi.h</label>
      </node>
      <node id="21832">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
        <childnode refid="21833" relation="include">
        </childnode>
        <childnode refid="21835" relation="include">
        </childnode>
        <childnode refid="21836" relation="include">
        </childnode>
      </node>
      <node id="21858">
        <label>unistd.h</label>
      </node>
      <node id="21825">
        <label>vector</label>
      </node>
      <node id="21824">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="21825" relation="include">
        </childnode>
        <childnode refid="21826" relation="include">
        </childnode>
        <childnode refid="21827" relation="include">
        </childnode>
        <childnode refid="21814" relation="include">
        </childnode>
      </node>
      <node id="21867">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="21813" relation="include">
        </childnode>
        <childnode refid="21868" relation="include">
        </childnode>
      </node>
      <node id="21851">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="21852" relation="include">
        </childnode>
        <childnode refid="21853" relation="include">
        </childnode>
        <childnode refid="21854" relation="include">
        </childnode>
      </node>
      <node id="21841">
        <label>lbann.pb.h</label>
      </node>
      <node id="21818">
        <label>cstdlib</label>
      </node>
      <node id="21860">
        <label>lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="21847" relation="include">
        </childnode>
        <childnode refid="21861" relation="include">
        </childnode>
        <childnode refid="21862" relation="include">
        </childnode>
        <childnode refid="21863" relation="include">
        </childnode>
        <childnode refid="21864" relation="include">
        </childnode>
        <childnode refid="21870" relation="include">
        </childnode>
      </node>
      <node id="21835">
        <label>iostream</label>
      </node>
      <node id="21830">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="21831" relation="include">
        </childnode>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
        <childnode refid="21832" relation="include">
        </childnode>
        <childnode refid="21837" relation="include">
        </childnode>
        <childnode refid="21838" relation="include">
        </childnode>
        <childnode refid="21829" relation="include">
        </childnode>
        <childnode refid="21842" relation="include">
        </childnode>
      </node>
      <node id="21869">
        <label>unordered_map</label>
      </node>
      <node id="21849">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
        <childnode refid="21840" relation="include">
        </childnode>
        <childnode refid="21850" relation="include">
        </childnode>
      </node>
      <node id="21823">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
        <childnode refid="21828" relation="include">
        </childnode>
        <childnode refid="21830" relation="include">
        </childnode>
        <childnode refid="21832" relation="include">
        </childnode>
        <childnode refid="21837" relation="include">
        </childnode>
        <childnode refid="21843" relation="include">
        </childnode>
        <childnode refid="21840" relation="include">
        </childnode>
        <childnode refid="21841" relation="include">
        </childnode>
        <childnode refid="21829" relation="include">
        </childnode>
        <childnode refid="21825" relation="include">
        </childnode>
      </node>
      <node id="21844">
        <label>chrono</label>
      </node>
      <node id="21813">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21823" relation="include">
        </childnode>
        <childnode refid="21838" relation="include">
        </childnode>
      </node>
      <node id="21834">
        <label>csignal</label>
      </node>
      <node id="21859">
        <label>lbann/utils/dataset.hpp</label>
        <link refid="dataset_8hpp"/>
        <childnode refid="21848" relation="include">
        </childnode>
      </node>
      <node id="21838">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="21829" relation="include">
        </childnode>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
        <childnode refid="21832" relation="include">
        </childnode>
        <childnode refid="21837" relation="include">
        </childnode>
        <childnode refid="21839" relation="include">
        </childnode>
        <childnode refid="21840" relation="include">
        </childnode>
        <childnode refid="21841" relation="include">
        </childnode>
      </node>
      <node id="21848">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21849" relation="include">
        </childnode>
        <childnode refid="21832" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
        <childnode refid="21851" relation="include">
        </childnode>
        <childnode refid="21840" relation="include">
        </childnode>
        <childnode refid="21855" relation="include">
        </childnode>
        <childnode refid="21856" relation="include">
        </childnode>
        <childnode refid="21857" relation="include">
        </childnode>
        <childnode refid="21829" relation="include">
        </childnode>
        <childnode refid="21825" relation="include">
        </childnode>
        <childnode refid="21858" relation="include">
        </childnode>
      </node>
      <node id="21822">
        <label>lbann_config.hpp</label>
      </node>
      <node id="21866">
        <label>set</label>
      </node>
      <node id="21864">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
        <childnode refid="21823" relation="include">
        </childnode>
        <childnode refid="21828" relation="include">
        </childnode>
        <childnode refid="21865" relation="include">
        </childnode>
        <childnode refid="21851" relation="include">
        </childnode>
        <childnode refid="21840" relation="include">
        </childnode>
        <childnode refid="21867" relation="include">
        </childnode>
        <childnode refid="21868" relation="include">
        </childnode>
        <childnode refid="21838" relation="include">
        </childnode>
        <childnode refid="21830" relation="include">
        </childnode>
        <childnode refid="21841" relation="include">
        </childnode>
        <childnode refid="21825" relation="include">
        </childnode>
        <childnode refid="21829" relation="include">
        </childnode>
        <childnode refid="21869" relation="include">
        </childnode>
      </node>
      <node id="21831">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="21857">
        <label>algorithm</label>
      </node>
      <node id="21817">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="21818" relation="include">
        </childnode>
        <childnode refid="21819" relation="include">
        </childnode>
        <childnode refid="21820" relation="include">
        </childnode>
        <childnode refid="21821" relation="include">
        </childnode>
      </node>
      <node id="21816">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="21815" relation="include">
        </childnode>
      </node>
      <node id="21846">
        <label>lbann/layers/io/target/generic_target_layer.hpp</label>
        <link refid="generic__target__layer_8hpp"/>
        <childnode refid="21847" relation="include">
        </childnode>
        <childnode refid="21860" relation="include">
        </childnode>
        <childnode refid="21862" relation="include">
        </childnode>
        <childnode refid="21863" relation="include">
        </childnode>
        <childnode refid="21832" relation="include">
        </childnode>
        <childnode refid="21864" relation="include">
        </childnode>
        <childnode refid="21829" relation="include">
        </childnode>
        <childnode refid="21853" relation="include">
        </childnode>
        <childnode refid="21852" relation="include">
        </childnode>
        <childnode refid="21858" relation="include">
        </childnode>
      </node>
      <node id="21812">
        <label>lbann/objective_functions/kl_divergence.hpp</label>
        <link refid="kl__divergence_8hpp"/>
        <childnode refid="21813" relation="include">
        </childnode>
        <childnode refid="21845" relation="include">
        </childnode>
      </node>
      <node id="21874">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="21873" relation="include">
        </childnode>
      </node>
      <node id="21827">
        <label>typeindex</label>
      </node>
      <node id="21820">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kl__divergence_8hpp" kindref="compound">lbann/objective_functions/kl_divergence.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="model_8hpp" kindref="compound">lbann/models/model.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="statistics_8hpp" kindref="compound">lbann/utils/statistics.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classlbann_1_1kl__divergence_1a3084d98e61853086a207a3893421e4d9" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1kl__divergence_1a3084d98e61853086a207a3893421e4d9" kindref="member">kl_divergence::kl_divergence</ref>(std::string<sp/>layer1,<sp/>std::string<sp/>layer2)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classlbann_1_1objective__function__term" kindref="compound">objective_function_term</ref>(),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_z_mean_layer_name(layer1),<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_z_log_sigma_layer_name(layer2),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_z_mean_layer(nullptr),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_z_log_sigma_layer(nullptr)<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>}<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classlbann_1_1kl__divergence_1acaa96d2e2fcf164c2e7b5cd5a0bf222e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1kl__divergence_1acaa96d2e2fcf164c2e7b5cd5a0bf222e" kindref="member">kl_divergence::setup</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref>&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1objective__function__term_1a6c8dbdf18aac8676098189fb7b178e91" kindref="member">objective_function_term::setup</ref>(m);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>up<sp/>layers<sp/>of<sp/>interest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>l<sp/>:<sp/>m.<ref refid="classlbann_1_1model_1ae14f4b2cc8882b3739d4aeb25d9e73c9" kindref="member">get_layers</ref>())<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(l-&gt;get_name()<sp/>==<sp/><ref refid="classlbann_1_1kl__divergence_1ad9faebef778e49a01c094917bc5e72ed" kindref="member">m_z_mean_layer_name</ref>)<sp/><ref refid="classlbann_1_1kl__divergence_1a7665b4f12f4e842d1850102295c21e3e" kindref="member">m_z_mean_layer</ref><sp/>=<sp/>l;<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(l-&gt;get_name()<sp/>==<sp/><ref refid="classlbann_1_1kl__divergence_1abb811a5ba98ee742838838a0137728a0" kindref="member">m_z_log_sigma_layer_name</ref>)<sp/><ref refid="classlbann_1_1kl__divergence_1aae1f6deb97728e09771840f447a571b1" kindref="member">m_z_log_sigma_layer</ref><sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1kl__divergence_1a7665b4f12f4e842d1850102295c21e3e" kindref="member">m_z_mean_layer</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/><ref refid="classlbann_1_1kl__divergence_1aae1f6deb97728e09771840f447a571b1" kindref="member">m_z_log_sigma_layer</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Null<sp/>pointer(s)<sp/>to<sp/>layer(s)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classlbann_1_1kl__divergence_1a0a77c724ff9b918e2c2eaf3944f50ac5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1kl__divergence_1a0a77c724ff9b918e2c2eaf3944f50ac5" kindref="member">kl_divergence::start_evaluation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classlbann_1_1kl__divergence_1a93aab2ca89cdaab075a940184ae209d5" refkind="member"><highlight class="normal"><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/><ref refid="classlbann_1_1kl__divergence_1a93aab2ca89cdaab075a940184ae209d5" kindref="member">kl_divergence::finish_evaluation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" kindref="member">m_scale_factor</ref><sp/>==<sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0);<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>global_z_mean<sp/>=<sp/><ref refid="classlbann_1_1kl__divergence_1a7665b4f12f4e842d1850102295c21e3e" kindref="member">m_z_mean_layer</ref>-&gt;<ref refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" kindref="member">get_activations</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_z_mean<sp/>=<sp/>global_z_mean.LockedMatrix();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_z_log_sigma<sp/>=<sp/><ref refid="classlbann_1_1kl__divergence_1aae1f6deb97728e09771840f447a571b1" kindref="member">m_z_log_sigma_layer</ref>-&gt;<ref refid="classlbann_1_1Layer_1a4248f27acebf72b7b7b3ee39c8bcb62a" kindref="member">get_local_activations</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrix<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>global_z_mean.Height();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>global_z_mean.Width();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_height<sp/>=<sp/>local_z_mean.Height();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_width<sp/>=<sp/>local_z_mean.Width();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>KL<sp/>divergence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>reduction(+:sum)<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>local_height;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>z_mean<sp/>=<sp/>local_z_mean(row,<sp/>col);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>z_log_sigma<sp/>=<sp/>local_z_log_sigma(row,<sp/>col);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>(std::exp(z_log_sigma)<sp/>+<sp/>z_mean<sp/>*<sp/>z_mean</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>z_log_sigma<sp/>-<sp/>DataType(1))<sp/>/<sp/>(2<sp/>*<sp/>height);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/>val<sp/>=<sp/><ref refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" kindref="member">get_comm</ref>().<ref refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" kindref="member">allreduce</ref>(sum<sp/>/<sp/>width,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_z_mean.DistComm());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" kindref="member">m_scale_factor</ref><sp/>*<sp/>val;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classlbann_1_1kl__divergence_1aeb39d1ba1e74874cbf396fbe137ff601" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1kl__divergence_1aeb39d1ba1e74874cbf396fbe137ff601" kindref="member">kl_divergence::differentiate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" kindref="member">m_scale_factor</ref><sp/>==<sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>global_z_mean<sp/>=<sp/><ref refid="classlbann_1_1kl__divergence_1a7665b4f12f4e842d1850102295c21e3e" kindref="member">m_z_mean_layer</ref>-&gt;<ref refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" kindref="member">get_activations</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>global_z_log_sigma<sp/>=<sp/><ref refid="classlbann_1_1kl__divergence_1aae1f6deb97728e09771840f447a571b1" kindref="member">m_z_log_sigma_layer</ref>-&gt;<ref refid="classlbann_1_1Layer_1a1134b1a4385af199d7272c5aa827fa99" kindref="member">get_activations</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>global_dz_mean<sp/>=<sp/>global_z_mean.Copy();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>global_dz_log_sigma<sp/>=<sp/>global_z_log_sigma.Copy();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_z_mean<sp/>=<sp/>global_z_mean.LockedMatrix();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_z_log_sigma<sp/>=<sp/>global_z_log_sigma.LockedMatrix();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_dz_mean<sp/>=<sp/>global_dz_mean-&gt;Matrix();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_dz_log_sigma<sp/>=<sp/>global_dz_log_sigma-&gt;Matrix();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrix<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>global_z_mean.Height();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_height<sp/>=<sp/>local_z_mean.Height();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_width<sp/>=<sp/>local_z_mean.Width();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>gradient<sp/>of<sp/>KL<sp/>divergence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>local_width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>local_height;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>z_mean<sp/>=<sp/>local_z_mean(row,<sp/>col);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>z_log_sigma<sp/>=<sp/>local_z_log_sigma(row,<sp/>col);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>local_dz_mean(row,<sp/>col)<sp/>=<sp/>z_mean<sp/>/<sp/>height;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>local_dz_log_sigma(row,<sp/>col)<sp/>=<sp/>(std::exp(z_log_sigma)<sp/>-<sp/>DataType(1))<sp/>/<sp/>(2<sp/>*<sp/>height);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>error<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>z_mean_child_layer<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1kl__divergence_1a7665b4f12f4e842d1850102295c21e3e" kindref="member">m_z_mean_layer</ref>-&gt;<ref refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" kindref="member">get_child_layers</ref>().front());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>z_log_sigma_child_layer<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classlbann_1_1kl__divergence_1aae1f6deb97728e09771840f447a571b1" kindref="member">m_z_log_sigma_layer</ref>-&gt;<ref refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" kindref="member">get_child_layers</ref>().front());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>z_mean_child_layer-&gt;<ref refid="classlbann_1_1Layer_1a8d942eb2cd37c346edc5ff473e0494a2" kindref="member">add_to_error_signal</ref>(*global_dz_mean,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType(<ref refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" kindref="member">m_scale_factor</ref>));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>z_log_sigma_child_layer-&gt;add_to_error_signal(*global_dz_log_sigma,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType(<ref refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" kindref="member">m_scale_factor</ref>));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>global_dz_mean;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>global_dz_log_sigma;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/kl_divergence.cpp"/>
  </compounddef>
</doxygen>
