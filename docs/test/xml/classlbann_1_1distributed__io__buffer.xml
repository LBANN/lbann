<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1distributed__io__buffer" kind="class" language="C++" prot="public">
    <compoundname>lbann::distributed_io_buffer</compoundname>
    <basecompoundref refid="classlbann_1_1generic__io__buffer" prot="public" virt="non-virtual">lbann::generic_io_buffer</basecompoundref>
    <includes refid="distributed__io__buffer_8hpp" local="no">distributed_io_buffer.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classlbann_1_1distributed__io__buffer_1a7567d3d06f96b001c118f9979bebb0b9" prot="public" static="no">
        <type>std::map&lt; <ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>, <ref refid="classlbann_1_1data__buffer" kindref="compound">data_buffer</ref> * &gt;</type>
        <definition>typedef std::map&lt;execution_mode, data_buffer *&gt; lbann::distributed_io_buffer::data_buffer_map_t</definition>
        <argsstring></argsstring>
        <name>data_buffer_map_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="69" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classlbann_1_1distributed__io__buffer_1aa14580fd9d0e8806dc161745525a60dc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int lbann::distributed_io_buffer::m_requested_max_num_parallel_readers</definition>
        <argsstring></argsstring>
        <name>m_requested_max_num_parallel_readers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Requested maximum number of parallel readers (I/O streams) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="71" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="71" bodyend="-1"/>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1a245c5c4a6ed1af66abc97314031a4c24" compoundref="distributed__io__buffer_8hpp" startline="74" endline="80">distributed_io_buffer</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1a021724e36cc803bb8dabd747d1f49035" compoundref="distributed__io__buffer_8hpp" startline="81" endline="88">operator=</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1af63a8b162ed869393c5b604c5913c631" compoundref="distributed__io__buffer_8cpp" startline="159" endline="282">calculate_num_iterations_per_epoch</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1distributed__io__buffer_1a59ef8621c57755f73671b782e11dbe89" prot="public" static="no" mutable="no">
        <type><ref refid="classlbann_1_1distributed__io__buffer_1a7567d3d06f96b001c118f9979bebb0b9" kindref="member">data_buffer_map_t</ref></type>
        <definition>data_buffer_map_t lbann::distributed_io_buffer::m_data_buffers</definition>
        <argsstring></argsstring>
        <name>m_data_buffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="161" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="161" bodyend="-1"/>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1a2066033e844ec7b9b95dfe7615a0a256" compoundref="distributed__io__buffer_8cpp" startline="30" endline="36">distributed_io_buffer</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1a2066033e844ec7b9b95dfe7615a0a256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::distributed_io_buffer::distributed_io_buffer</definition>
        <argsstring>(lbann_comm *comm, int num_parallel_readers, std::map&lt; execution_mode, generic_data_reader *&gt; data_readers)</argsstring>
        <name>distributed_io_buffer</name>
        <param>
          <type><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_parallel_readers</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>, <ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *&gt;</type>
          <declname>data_readers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="73" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/distributed_io_buffer.cpp" bodystart="30" bodyend="36"/>
        <references refid="classlbann_1_1distributed__io__buffer_1a59ef8621c57755f73671b782e11dbe89" compoundref="distributed__io__buffer_8hpp" startline="161">m_data_buffers</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1a245c5c4a6ed1af66abc97314031a4c24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lbann::distributed_io_buffer::distributed_io_buffer</definition>
        <argsstring>(const distributed_io_buffer &amp;other)</argsstring>
        <name>distributed_io_buffer</name>
        <param>
          <type>const <ref refid="classlbann_1_1distributed__io__buffer" kindref="compound">distributed_io_buffer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="74" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="74" bodyend="80"/>
        <references refid="classlbann_1_1distributed__io__buffer_1aa14580fd9d0e8806dc161745525a60dc" compoundref="distributed__io__buffer_8hpp" startline="71">m_requested_max_num_parallel_readers</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1a021724e36cc803bb8dabd747d1f49035" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlbann_1_1distributed__io__buffer" kindref="compound">distributed_io_buffer</ref> &amp;</type>
        <definition>distributed_io_buffer&amp; lbann::distributed_io_buffer::operator=</definition>
        <argsstring>(const distributed_io_buffer &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1distributed__io__buffer" kindref="compound">distributed_io_buffer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="81" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="81" bodyend="88"/>
        <references refid="classlbann_1_1generic__io__buffer_1ae8d2b80e11cf780def151a425a6b1fa0" compoundref="generic__io__buffer_8cpp" startline="43" endline="59">lbann::generic_io_buffer::operator=</references>
        <references refid="classlbann_1_1distributed__io__buffer_1aa14580fd9d0e8806dc161745525a60dc" compoundref="distributed__io__buffer_8hpp" startline="71">m_requested_max_num_parallel_readers</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1ad55b621729dc0bfea498af2c232dc43c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual lbann::distributed_io_buffer::~distributed_io_buffer</definition>
        <argsstring>()</argsstring>
        <name>~distributed_io_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="89" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1a86a931528aa7a6e178cf6b55bf153881" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1distributed__io__buffer" kindref="compound">distributed_io_buffer</ref> *</type>
        <definition>distributed_io_buffer* lbann::distributed_io_buffer::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1a9d8020b82cf467c9148b0b37e7229262">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="94" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1a58e30ff6d96678b35b2470e1d292967c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::distributed_io_buffer::get_type</definition>
        <argsstring>() const override</argsstring>
        <name>get_type</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1adc77c0a280f8a200a8d8495c3a371ebb">get_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return this buffer&apos;s type, e.g: &quot;partitioned_io_buffer,&quot; &quot;distributed_io_buffer,&quot; etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="96" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1a6bdf8f670edc92902ee6222dde434c39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::distributed_io_buffer::set_local_matrix_bypass</definition>
        <argsstring>(Mat *M_local) override</argsstring>
        <name>set_local_matrix_bypass</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1af84c26ab5ee77d1d9ed9ea5d62823815">set_local_matrix_bypass</reimplements>
        <param>
          <type><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref> *</type>
          <declname>M_local</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="98" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1a996d9d20ad162b3edb06fb8aa04ecd3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::distributed_io_buffer::set_std_matrix_view</definition>
        <argsstring>(El::Int cur_mini_batch_size) override</argsstring>
        <name>set_std_matrix_view</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1a458d9bf722effce4177a0ac0aee9124f">set_std_matrix_view</reimplements>
        <param>
          <type>El::Int</type>
          <declname>cur_mini_batch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="100" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1aec36cf1d148646f0e27d5939664f02d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::distributed_io_buffer::setup_data</definition>
        <argsstring>(El::Int num_neurons, El::Int max_minibatch_size) override</argsstring>
        <name>setup_data</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1a00f3920147f7f19eceb5336bd6ddb421">setup_data</reimplements>
        <param>
          <type>El::Int</type>
          <declname>num_neurons</declname>
        </param>
        <param>
          <type>El::Int</type>
          <declname>max_minibatch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="106" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="106" bodyend="111"/>
        <references refid="classlbann_1_1data__buffer_1a9c9f68cda527896bc45762ddac7c2e2a" compoundref="distributed__io__buffer_8hpp" startline="48">lbann::data_buffer::Ms</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1abfeb87d4dc402b482db60926ca9b3ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int lbann::distributed_io_buffer::fetch_to_local_matrix</definition>
        <argsstring>(generic_data_reader *data_reader, execution_mode mode) override</argsstring>
        <name>fetch_to_local_matrix</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1af9fc2100d41328fe399acf7bced950d7">fetch_to_local_matrix</reimplements>
        <param>
          <type><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *</type>
          <declname>data_reader</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Check to see if this rank has valid data <ndash/> if not read in the next batch Coordinate all available readers so that the perform I/O in the same step</para><para>Each data reader needs to either have independent / split data, or take an offset / stride </para>        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="113" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/distributed_io_buffer.cpp" bodystart="38" bodyend="59"/>
        <references refid="classlbann_1_1generic__data__reader_1ad15887cc31657d03925835aab0d4b675" compoundref="data__reader_8hpp" startline="405" endline="407">lbann::generic_data_reader::get_num_parallel_readers</references>
        <references refid="classlbann_1_1distributed__io__buffer_1ac176f3fced1191534a985f831136aa3e" compoundref="distributed__io__buffer_8hpp" startline="122" endline="140">get_data_buffer</references>
        <references refid="classlbann_1_1data__buffer_1a5d2333dc0a74333b9d8ebfcc8084c783" compoundref="distributed__io__buffer_8hpp" startline="37">lbann::data_buffer::m_root</references>
        <references refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" compoundref="generic__io__buffer_8hpp" startline="105">lbann::generic_io_buffer::m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="classlbann_1_1data__buffer_1af83d8197ff61c85ab32a612480932a5b" compoundref="distributed__io__buffer_8hpp" startline="38">lbann::data_buffer::m_local_reader_done</references>
        <references refid="classlbann_1_1data__buffer_1a3d839e04fd26b5810027144662af0e54" compoundref="distributed__io__buffer_8hpp" startline="46">lbann::data_buffer::M_local</references>
        <references refid="classlbann_1_1data__buffer_1a5f07c95c2fa99046df6d5437d1ef6375" compoundref="distributed__io__buffer_8hpp" startline="40">lbann::data_buffer::m_num_samples_in_batch</references>
        <references refid="classlbann_1_1data__buffer_1a14de875712b1362110e41fdd5a3e58a5" compoundref="distributed__io__buffer_8hpp" startline="44">lbann::data_buffer::m_num_data_per_epoch</references>
        <references refid="classlbann_1_1data__buffer_1ad0c2ff22428f74cf7c8eb4a2be534338" compoundref="distributed__io__buffer_8hpp" startline="42">lbann::data_buffer::m_local_data_valid</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1a3a770ec2314313761d6f0eccdb9dc09b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::distributed_io_buffer::distribute_from_local_matrix</definition>
        <argsstring>(AbsDistMat &amp;Ms, generic_data_reader *data_reader, execution_mode mode) override</argsstring>
        <name>distribute_from_local_matrix</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1a08c2bb93b86d2926df52ef9272a07d87">distribute_from_local_matrix</reimplements>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>Ms</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *</type>
          <declname>data_reader</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="114" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/distributed_io_buffer.cpp" bodystart="61" bodyend="88"/>
        <references refid="classlbann_1_1generic__data__reader_1ad15887cc31657d03925835aab0d4b675" compoundref="data__reader_8hpp" startline="405" endline="407">lbann::generic_data_reader::get_num_parallel_readers</references>
        <references refid="classlbann_1_1distributed__io__buffer_1ac176f3fced1191534a985f831136aa3e" compoundref="distributed__io__buffer_8hpp" startline="122" endline="140">get_data_buffer</references>
        <references refid="classlbann_1_1data__buffer_1a9c9f68cda527896bc45762ddac7c2e2a" compoundref="distributed__io__buffer_8hpp" startline="48">lbann::data_buffer::Ms</references>
        <references refid="classlbann_1_1data__buffer_1a5d2333dc0a74333b9d8ebfcc8084c783" compoundref="distributed__io__buffer_8hpp" startline="37">lbann::data_buffer::m_root</references>
        <references refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" compoundref="generic__io__buffer_8hpp" startline="105">lbann::generic_io_buffer::m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a6086ced12c3eefeea6e2a78eff286983" compoundref="comm_8cpp" startline="258" endline="261">lbann::lbann_comm::model_barrier</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="classlbann_1_1data__buffer_1ad0c2ff22428f74cf7c8eb4a2be534338" compoundref="distributed__io__buffer_8hpp" startline="42">lbann::data_buffer::m_local_data_valid</references>
        <references refid="classlbann_1_1data__buffer_1a3d839e04fd26b5810027144662af0e54" compoundref="distributed__io__buffer_8hpp" startline="46">lbann::data_buffer::M_local</references>
        <references refid="classlbann_1_1data__buffer_1a5f07c95c2fa99046df6d5437d1ef6375" compoundref="distributed__io__buffer_8hpp" startline="40">lbann::data_buffer::m_num_samples_in_batch</references>
        <referencedby refid="classlbann_1_1generic__input__layer_1ae74c8c5a7e14b4fdd4902554bbc7bcef" compoundref="generic__input__layer_8hpp" startline="198" endline="241">lbann::generic_input_layer::fp_compute</referencedby>
        <referencedby refid="classlbann_1_1generic__target__layer_1a57a60f5a28c9fb78d5151801123d4dba" compoundref="generic__target__layer_8hpp" startline="156" endline="183">lbann::generic_target_layer::fp_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1a2e214f6542d9b12c8a29bf41d0ee220e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool lbann::distributed_io_buffer::is_data_set_processed</definition>
        <argsstring>(generic_data_reader *data_reader, execution_mode mode) override</argsstring>
        <name>is_data_set_processed</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1a9a038d40aec50dbc24c0abe21ad0c0a9">is_data_set_processed</reimplements>
        <param>
          <type><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *</type>
          <declname>data_reader</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Make sure that all local data has been processed</para><para>Once all of the readers have finished their part of the mini-batch indicate that the epoch is finished</para><para>When the epoch is finished, make sure that the root node for distributing data is reset because</para><para>if the number of parallel readers does not evenly divide the data set size, the epoch will finish without all of the parallel readers participating in the last round. </para>        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="115" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/distributed_io_buffer.cpp" bodystart="90" bodyend="122"/>
        <references refid="classlbann_1_1generic__data__reader_1ad15887cc31657d03925835aab0d4b675" compoundref="data__reader_8hpp" startline="405" endline="407">lbann::generic_data_reader::get_num_parallel_readers</references>
        <references refid="classlbann_1_1generic__data__reader_1a06fb58d1c0b84b8c76f5b4d160751f34" compoundref="data__reader_8hpp" startline="461" endline="463">lbann::generic_data_reader::get_num_iterations_per_epoch</references>
        <references refid="classlbann_1_1generic__data__reader_1a7c884d3646396a05d9e01e3b7a260419" compoundref="data__reader_8hpp" startline="466" endline="468">lbann::generic_data_reader::get_current_step_in_epoch</references>
        <references refid="classlbann_1_1distributed__io__buffer_1ac176f3fced1191534a985f831136aa3e" compoundref="distributed__io__buffer_8hpp" startline="122" endline="140">get_data_buffer</references>
        <references refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" compoundref="generic__io__buffer_8hpp" startline="105">lbann::generic_io_buffer::m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="classlbann_1_1data__buffer_1a5d2333dc0a74333b9d8ebfcc8084c783" compoundref="distributed__io__buffer_8hpp" startline="37">lbann::data_buffer::m_root</references>
        <references refid="classlbann_1_1data__buffer_1ad0c2ff22428f74cf7c8eb4a2be534338" compoundref="distributed__io__buffer_8hpp" startline="42">lbann::data_buffer::m_local_data_valid</references>
        <references refid="classlbann_1_1data__buffer_1af83d8197ff61c85ab32a612480932a5b" compoundref="distributed__io__buffer_8hpp" startline="38">lbann::data_buffer::m_local_reader_done</references>
        <references refid="classlbann_1_1data__buffer_1a14de875712b1362110e41fdd5a3e58a5" compoundref="distributed__io__buffer_8hpp" startline="44">lbann::data_buffer::m_num_data_per_epoch</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1af63a8b162ed869393c5b604c5913c631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lbann::distributed_io_buffer::calculate_num_iterations_per_epoch</definition>
        <argsstring>(int num_models, int model_rank, int max_mini_batch_size, generic_data_reader *data_reader)</argsstring>
        <name>calculate_num_iterations_per_epoch</name>
        <param>
          <type>int</type>
          <declname>num_models</declname>
        </param>
        <param>
          <type>int</type>
          <declname>model_rank</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_mini_batch_size</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *</type>
          <declname>data_reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Check to make sure that there is enough data for all of the parallel readers</para><para>Set the basic parameters for stride and offset of the data reader</para><para>Set mini-batch size and stride</para><para>Set data reader base offset and model offset</para><para>Given that each model has to have at least one reader, what is the minimum stride</para><para>The global mini-batch is a full mini-batch per model</para><para>By default the last mini-batch is a full one</para><para>By default the last mini-batch is a full one per model</para><para>If there is a partial mini-batch all readers need to know about it</para><para>Note that model_rank + m_comm-&gt;get_rank_in_model() is not equivalent to m_comm-&gt;get_world_rank() from a parallel I/O perspective Given the data readers model rank, how many models have a higher rank</para><para>Number of complete multi-model mini-batches that will be fetched Ranks after current reader</para><para>Ranks on the next round</para><para>Ranks remaining within the current mini-batch</para><para>The last mini-batch may be partial and thus a reader may have a smaller stride to get there</para><para>Note that if the parallel reader only has the last mini-batch, its base offset will equal the last mini-batch threshold However, it shouldn&apos;t need to use the last mini-batch threshold</para><para>BVE 2/4/18</para><para>Consider the corner case where there is a very small number of mini-batches compared to the number of parallel readers. In this case, the base offset may be incorrectly computed</para><para>By default last mini-batch the last stride of each reader is part of a regular (full) round </para>        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="117" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/distributed_io_buffer.cpp" bodystart="159" bodyend="282"/>
        <references refid="classlbann_1_1generic__data__reader_1adcdb833aff7ce85b0879334b252f357a" compoundref="data__reader_8hpp" startline="441" endline="443">lbann::generic_data_reader::get_num_data</references>
        <references refid="classlbann_1_1distributed__io__buffer_1af6653723714cf8cf51a928fc9f6e6728" compoundref="distributed__io__buffer_8cpp" startline="127" endline="157">compute_max_num_parallel_readers</references>
        <references refid="classlbann_1_1distributed__io__buffer_1aa14580fd9d0e8806dc161745525a60dc" compoundref="distributed__io__buffer_8hpp" startline="71">m_requested_max_num_parallel_readers</references>
        <references refid="classlbann_1_1generic__data__reader_1a9b348d52852062dbc66b0accde5c6e8a" compoundref="data__reader_8hpp" startline="401" endline="403">lbann::generic_data_reader::set_num_parallel_readers</references>
        <references refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" compoundref="generic__io__buffer_8hpp" startline="105">lbann::generic_io_buffer::m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" compoundref="comm_8hpp" startline="116" endline="118">lbann::lbann_comm::get_rank_in_model</references>
        <references refid="classlbann_1_1generic__data__reader_1adf161cca4b80eb95f9748050e7fe1809" compoundref="data__reader_8hpp" startline="301" endline="303">lbann::generic_data_reader::set_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1add5bd1d488967ebab5852b636e07db15" compoundref="data__reader_8hpp" startline="329" endline="331">lbann::generic_data_reader::set_stride_to_next_mini_batch</references>
        <references refid="classlbann_1_1generic__data__reader_1adb90391e3e9c8e3c2aba4d4a0911ca82" compoundref="data__reader_8hpp" startline="337" endline="339">lbann::generic_data_reader::set_sample_stride</references>
        <references refid="classlbann_1_1generic__data__reader_1ac1f3f81ca0e2920658cba026fe09a95b" compoundref="data__reader_8hpp" startline="345" endline="347">lbann::generic_data_reader::set_iteration_stride</references>
        <references refid="classlbann_1_1generic__data__reader_1a8ac14fee514ad30efe8571ce68c2a95d" compoundref="data__reader_8hpp" startline="409" endline="411">lbann::generic_data_reader::set_reset_mini_batch_index</references>
        <references refid="classlbann_1_1generic__data__reader_1adcf4c6012f44c78589bb75ea530cf518" compoundref="data__reader_8hpp" startline="353" endline="355">lbann::generic_data_reader::set_base_offset</references>
        <references refid="classlbann_1_1generic__data__reader_1ab20e835e0e0565717e0fd74da09d4890" compoundref="data__reader_8hpp" startline="361" endline="363">lbann::generic_data_reader::set_model_offset</references>
        <references refid="classlbann_1_1generic__data__reader_1ac6d4a5ba1d4e1134620cddcac343bf59" compoundref="data__reader_8hpp" startline="425" endline="429">lbann::generic_data_reader::set_initial_position</references>
        <references refid="classlbann_1_1generic__data__reader_1a03388338e75d37e1b28389d22bd5b604" compoundref="data__reader_8hpp" startline="321" endline="323">lbann::generic_data_reader::set_global_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1a357389ee93428b68f9400de708f6915d" compoundref="data__reader_8hpp" startline="369" endline="371">lbann::generic_data_reader::set_last_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1a4455d137b469287bf964436f9fcc6d94" compoundref="data__reader_8hpp" startline="377" endline="379">lbann::generic_data_reader::set_global_last_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1a208cebb68cf3c1ae1bd9cb5f28e8bf5b" compoundref="data__reader_8hpp" startline="385" endline="387">lbann::generic_data_reader::set_world_master_mini_batch_adjustment</references>
        <references refid="classlbann_1_1generic__data__reader_1a91573d9599b503a6bdf2939e69659e8b" compoundref="data__reader_8hpp" startline="457" endline="459">lbann::generic_data_reader::set_num_iterations_per_epoch</references>
        <references refid="classlbann_1_1generic__data__reader_1a79cb3bee4e0d19006ef9213763dc8af2" compoundref="data__reader_8hpp" startline="373" endline="375">lbann::generic_data_reader::get_last_mini_batch_size</references>
        <references refid="classlbann_1_1generic__data__reader_1af2fc6b35ad8139d15729b19db2895827" compoundref="data__reader_8hpp" startline="393" endline="395">lbann::generic_data_reader::set_stride_to_last_mini_batch</references>
        <references refid="classlbann_1_1generic__data__reader_1a2d1d5657e8b9bf8b8a9d51b33aedf017" compoundref="data__reader_8hpp" startline="333" endline="335">lbann::generic_data_reader::get_stride_to_next_mini_batch</references>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1aa1f5200f9646d38fe3b3adaf39645330" compoundref="distributed__io__buffer_8cpp" startline="284" endline="286">calculate_num_iterations_per_epoch_spanning_models</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1a2a611c36620155646e46e065e040541f" compoundref="distributed__io__buffer_8cpp" startline="288" endline="290">calculate_num_iterations_per_epoch_single_model</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1aa1f5200f9646d38fe3b3adaf39645330" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::distributed_io_buffer::calculate_num_iterations_per_epoch_spanning_models</definition>
        <argsstring>(int max_mini_batch_size, generic_data_reader *data_reader) override</argsstring>
        <name>calculate_num_iterations_per_epoch_spanning_models</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1ac943184cf364f7922648e3acb760b41e">calculate_num_iterations_per_epoch_spanning_models</reimplements>
        <param>
          <type>int</type>
          <declname>max_mini_batch_size</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *</type>
          <declname>data_reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="118" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/distributed_io_buffer.cpp" bodystart="284" bodyend="286"/>
        <references refid="classlbann_1_1distributed__io__buffer_1af63a8b162ed869393c5b604c5913c631" compoundref="distributed__io__buffer_8cpp" startline="159" endline="282">calculate_num_iterations_per_epoch</references>
        <references refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" compoundref="generic__io__buffer_8hpp" startline="105">lbann::generic_io_buffer::m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" compoundref="comm_8hpp" startline="152" endline="154">lbann::lbann_comm::get_num_models</references>
        <references refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" compoundref="comm_8hpp" startline="112" endline="114">lbann::lbann_comm::get_model_rank</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1a2a611c36620155646e46e065e040541f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::distributed_io_buffer::calculate_num_iterations_per_epoch_single_model</definition>
        <argsstring>(int max_mini_batch_size, generic_data_reader *data_reader) override</argsstring>
        <name>calculate_num_iterations_per_epoch_single_model</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1a4c71135fada7f0da0b315d538d327e59">calculate_num_iterations_per_epoch_single_model</reimplements>
        <param>
          <type>int</type>
          <declname>max_mini_batch_size</declname>
        </param>
        <param>
          <type><ref refid="classlbann_1_1generic__data__reader" kindref="compound">generic_data_reader</ref> *</type>
          <declname>data_reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="119" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/distributed_io_buffer.cpp" bodystart="288" bodyend="290"/>
        <references refid="classlbann_1_1distributed__io__buffer_1af63a8b162ed869393c5b604c5913c631" compoundref="distributed__io__buffer_8cpp" startline="159" endline="282">calculate_num_iterations_per_epoch</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1af6653723714cf8cf51a928fc9f6e6728" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int lbann::distributed_io_buffer::compute_max_num_parallel_readers</definition>
        <argsstring>(long data_set_size, int mini_batch_size, int requested_num_parallel_readers) const override</argsstring>
        <name>compute_max_num_parallel_readers</name>
        <reimplements refid="classlbann_1_1generic__io__buffer_1affc26b29e3f9eaaae5c033648e1a0141">compute_max_num_parallel_readers</reimplements>
        <param>
          <type>long</type>
          <declname>data_set_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mini_batch_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>requested_num_parallel_readers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make sure that there are enough ranks and data for all of the parallel readers requested. </para>        </detaileddescription>
        <inbodydescription>
<para>Are there enough ranks in the model to support the requested number of parallel readers</para><para>Check to make sure that there is enough data for all of the parallel readers </para>        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="120" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/io/data_buffers/distributed_io_buffer.cpp" bodystart="127" bodyend="157"/>
        <references refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" compoundref="generic__io__buffer_8hpp" startline="105">lbann::generic_io_buffer::m_comm</references>
        <references refid="classlbann_1_1lbann__comm_1a483bf8a72d44a0e83da45f3d47bd20d4" compoundref="comm_8hpp" startline="148" endline="150">lbann::lbann_comm::get_model_grid</references>
        <references refid="classlbann_1_1lbann__comm_1ad8a5790dfa9191d4b4f889e8707e57f1" compoundref="comm_8hpp" startline="140" endline="142">lbann::lbann_comm::am_model_master</references>
        <references refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" compoundref="comm_8hpp" startline="152" endline="154">lbann::lbann_comm::get_num_models</references>
        <references refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" compoundref="comm_8hpp" startline="144" endline="146">lbann::lbann_comm::am_world_master</references>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1af63a8b162ed869393c5b604c5913c631" compoundref="distributed__io__buffer_8cpp" startline="159" endline="282">calculate_num_iterations_per_epoch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1ac176f3fced1191534a985f831136aa3e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlbann_1_1data__buffer" kindref="compound">data_buffer</ref> *</type>
        <definition>data_buffer* lbann::distributed_io_buffer::get_data_buffer</definition>
        <argsstring>(const execution_mode mode) const</argsstring>
        <name>get_data_buffer</name>
        <param>
          <type>const <ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="122" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="122" bodyend="140"/>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575">testing</references>
        <references refid="classlbann_1_1data__buffer_1ad03198df8b35ac6349180d5b2bc036d5" compoundref="distributed__io__buffer_8hpp" startline="50" endline="55">lbann::data_buffer::data_buffer</references>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1abfeb87d4dc402b482db60926ca9b3ec1" compoundref="distributed__io__buffer_8cpp" startline="38" endline="59">fetch_to_local_matrix</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1a3a770ec2314313761d6f0eccdb9dc09b" compoundref="distributed__io__buffer_8cpp" startline="61" endline="88">distribute_from_local_matrix</referencedby>
        <referencedby refid="classlbann_1_1distributed__io__buffer_1a2e214f6542d9b12c8a29bf41d0ee220e" compoundref="distributed__io__buffer_8cpp" startline="90" endline="122">is_data_set_processed</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1a9d7cd67615c71ec7a94533c29796e4ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int lbann::distributed_io_buffer::current_root_rank</definition>
        <argsstring>(execution_mode mode) const</argsstring>
        <name>current_root_rank</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Return the rank of the current root node for the Elemental Distribution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="143" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="143" bodyend="146"/>
        <references refid="classlbann_1_1data__buffer_1a5d2333dc0a74333b9d8ebfcc8084c783" compoundref="distributed__io__buffer_8hpp" startline="37">lbann::data_buffer::m_root</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1a6fe05935e14186d2dd1975ecab9be10e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lbann::distributed_io_buffer::is_current_root</definition>
        <argsstring>(execution_mode mode) const</argsstring>
        <name>is_current_root</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Is this rank the current root node for the Elemental Distribution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="149" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="149" bodyend="152"/>
        <references refid="classlbann_1_1data__buffer_1a5d2333dc0a74333b9d8ebfcc8084c783" compoundref="distributed__io__buffer_8hpp" startline="37">lbann::data_buffer::m_root</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1distributed__io__buffer_1a484e3a609b32218890327d7578116aa2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool lbann::distributed_io_buffer::is_local_reader_done</definition>
        <argsstring>(execution_mode mode) const</argsstring>
        <name>is_local_reader_done</name>
        <param>
          <type><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Is the local reader done. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="155" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="155" bodyend="158"/>
        <references refid="classlbann_1_1data__buffer_1af83d8197ff61c85ab32a612480932a5b" compoundref="distributed__io__buffer_8hpp" startline="38">lbann::data_buffer::m_local_reader_done</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Parallel I/O routines for managing distributed minibatches </para>    </detaileddescription>
    <inheritancegraph>
      <node id="677">
        <label>lbann::generic_io_buffer</label>
        <link refid="classlbann_1_1generic__io__buffer"/>
      </node>
      <node id="676">
        <label>lbann::distributed_io_buffer</label>
        <link refid="classlbann_1_1distributed__io__buffer"/>
        <childnode refid="677" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="680">
        <label>lbann::fetch_data_functor</label>
        <link refid="classlbann_1_1fetch__data__functor"/>
      </node>
      <node id="679">
        <label>lbann::generic_io_buffer</label>
        <link refid="classlbann_1_1generic__io__buffer"/>
        <childnode refid="680" relation="usage">
          <edgelabel>fetch_data_fn</edgelabel>
        </childnode>
        <childnode refid="681" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
        <childnode refid="682" relation="usage">
          <edgelabel>update_data_reader_fn</edgelabel>
        </childnode>
      </node>
      <node id="678">
        <label>lbann::distributed_io_buffer</label>
        <link refid="classlbann_1_1distributed__io__buffer"/>
        <childnode refid="679" relation="public-inheritance">
        </childnode>
      </node>
      <node id="681">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="682">
        <label>lbann::update_data_reader_functor</label>
        <link refid="classlbann_1_1update__data__reader__functor"/>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" line="67" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/io/data_buffers/distributed_io_buffer.hpp" bodystart="67" bodyend="162"/>
    <listofallmembers>
      <member refid="classlbann_1_1distributed__io__buffer_1af63a8b162ed869393c5b604c5913c631" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>calculate_num_iterations_per_epoch</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a2a611c36620155646e46e065e040541f" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>calculate_num_iterations_per_epoch_single_model</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1aa1f5200f9646d38fe3b3adaf39645330" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>calculate_num_iterations_per_epoch_spanning_models</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1af6653723714cf8cf51a928fc9f6e6728" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>compute_max_num_parallel_readers</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a86a931528aa7a6e178cf6b55bf153881" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>copy</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a9d7cd67615c71ec7a94533c29796e4ab" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>current_root_rank</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a7567d3d06f96b001c118f9979bebb0b9" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>data_buffer_map_t</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a3a770ec2314313761d6f0eccdb9dc09b" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>distribute_from_local_matrix</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a2066033e844ec7b9b95dfe7615a0a256" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>distributed_io_buffer</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a245c5c4a6ed1af66abc97314031a4c24" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>distributed_io_buffer</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1a267170b4fd11dc60c782a9cb2b7b06cc" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>fetch_data_fn</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1abfeb87d4dc402b482db60926ca9b3ec1" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>fetch_to_local_matrix</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1a21e2ef867da6fb0fa334d751ae6b692f" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>generic_io_buffer</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1a0810bd8f8c803aa992e4c29b4eee3506" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>generic_io_buffer</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1ac176f3fced1191534a985f831136aa3e" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>get_data_buffer</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a58e30ff6d96678b35b2470e1d292967c" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>get_type</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a6fe05935e14186d2dd1975ecab9be10e" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>is_current_root</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a2e214f6542d9b12c8a29bf41d0ee220e" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>is_data_set_processed</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a484e3a609b32218890327d7578116aa2" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>is_local_reader_done</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1a2e4a46c85c8b30e10b1cc5acaa2c4cca" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>m_comm</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a59ef8621c57755f73671b782e11dbe89" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>m_data_buffers</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1aa14580fd9d0e8806dc161745525a60dc" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>m_requested_max_num_parallel_readers</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a021724e36cc803bb8dabd747d1f49035" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>operator=</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1ae8d2b80e11cf780def151a425a6b1fa0" prot="public" virt="non-virtual" ambiguityscope="lbann::generic_io_buffer::"><scope>lbann::distributed_io_buffer</scope><name>operator=</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a6bdf8f670edc92902ee6222dde434c39" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>set_local_matrix_bypass</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1a996d9d20ad162b3edb06fb8aa04ecd3d" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>set_std_matrix_view</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1aec36cf1d148646f0e27d5939664f02d8" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>setup_data</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1a031eda7559a9e241afb3958b56088560" prot="public" virt="non-virtual"><scope>lbann::distributed_io_buffer</scope><name>update_data_reader_fn</name></member>
      <member refid="classlbann_1_1distributed__io__buffer_1ad55b621729dc0bfea498af2c232dc43c" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>~distributed_io_buffer</name></member>
      <member refid="classlbann_1_1generic__io__buffer_1a0b531621374f697db06d8a3feec095cf" prot="public" virt="virtual"><scope>lbann::distributed_io_buffer</scope><name>~generic_io_buffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
