<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1polya__negloglike" kind="class" language="C++" prot="public">
    <compoundname>lbann::polya_negloglike</compoundname>
    <basecompoundref refid="classlbann_1_1loss__function" prot="public" virt="non-virtual">lbann::loss_function</basecompoundref>
    <includes refid="polya__negloglike_8hpp" local="no">polya_negloglike.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" prot="private" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> *</type>
        <definition>AbsDistMat* lbann::polya_negloglike::m_counts</definition>
        <argsstring></argsstring>
        <name>m_counts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="88" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" bodystart="88" bodyend="-1"/>
        <referencedby refid="classlbann_1_1polya__negloglike_1a35d76a08dea5203c4f70e48260adf1ec" compoundref="polya__negloglike_8cpp" startline="54" endline="72">polya_negloglike</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a13d1e4b96c6e99bb39afc2b349ad9588" compoundref="polya__negloglike_8cpp" startline="74" endline="97">operator=</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a0c00f1f9cac0b0c6a638b86e031768e3" compoundref="polya__negloglike_8cpp" startline="99" endline="104">~polya_negloglike</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a4a7ae8eef1ef216f60b158acb1853355" compoundref="polya__negloglike_8cpp" startline="106" endline="127">setup</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a81dbe71fef52ee0874549c4cf96c01e3" compoundref="polya__negloglike_8cpp" startline="129" endline="186">finish_evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a95fea60663d86cab31d89531046cc32c" compoundref="polya__negloglike_8cpp" startline="188" endline="218">differentiate_compute</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" prot="private" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> *</type>
        <definition>AbsDistMat* lbann::polya_negloglike::m_alpha_sums</definition>
        <argsstring></argsstring>
        <name>m_alpha_sums</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="89" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" bodystart="89" bodyend="-1"/>
        <referencedby refid="classlbann_1_1polya__negloglike_1a35d76a08dea5203c4f70e48260adf1ec" compoundref="polya__negloglike_8cpp" startline="54" endline="72">polya_negloglike</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a13d1e4b96c6e99bb39afc2b349ad9588" compoundref="polya__negloglike_8cpp" startline="74" endline="97">operator=</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a0c00f1f9cac0b0c6a638b86e031768e3" compoundref="polya__negloglike_8cpp" startline="99" endline="104">~polya_negloglike</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a4a7ae8eef1ef216f60b158acb1853355" compoundref="polya__negloglike_8cpp" startline="106" endline="127">setup</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a81dbe71fef52ee0874549c4cf96c01e3" compoundref="polya__negloglike_8cpp" startline="129" endline="186">finish_evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a95fea60663d86cab31d89531046cc32c" compoundref="polya__negloglike_8cpp" startline="188" endline="218">differentiate_compute</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" prot="private" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> *</type>
        <definition>AbsDistMat* lbann::polya_negloglike::m_lgamma_alpha_sums</definition>
        <argsstring></argsstring>
        <name>m_lgamma_alpha_sums</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="90" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" bodystart="90" bodyend="-1"/>
        <referencedby refid="classlbann_1_1polya__negloglike_1a35d76a08dea5203c4f70e48260adf1ec" compoundref="polya__negloglike_8cpp" startline="54" endline="72">polya_negloglike</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a13d1e4b96c6e99bb39afc2b349ad9588" compoundref="polya__negloglike_8cpp" startline="74" endline="97">operator=</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a0c00f1f9cac0b0c6a638b86e031768e3" compoundref="polya__negloglike_8cpp" startline="99" endline="104">~polya_negloglike</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a4a7ae8eef1ef216f60b158acb1853355" compoundref="polya__negloglike_8cpp" startline="106" endline="127">setup</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a81dbe71fef52ee0874549c4cf96c01e3" compoundref="polya__negloglike_8cpp" startline="129" endline="186">finish_evaluate_compute</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" prot="private" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> *</type>
        <definition>AbsDistMat* lbann::polya_negloglike::m_lgamma_alpha_level_count_sums</definition>
        <argsstring></argsstring>
        <name>m_lgamma_alpha_level_count_sums</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="91" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" bodystart="91" bodyend="-1"/>
        <referencedby refid="classlbann_1_1polya__negloglike_1a35d76a08dea5203c4f70e48260adf1ec" compoundref="polya__negloglike_8cpp" startline="54" endline="72">polya_negloglike</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a13d1e4b96c6e99bb39afc2b349ad9588" compoundref="polya__negloglike_8cpp" startline="74" endline="97">operator=</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a0c00f1f9cac0b0c6a638b86e031768e3" compoundref="polya__negloglike_8cpp" startline="99" endline="104">~polya_negloglike</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a4a7ae8eef1ef216f60b158acb1853355" compoundref="polya__negloglike_8cpp" startline="106" endline="127">setup</referencedby>
        <referencedby refid="classlbann_1_1polya__negloglike_1a81dbe71fef52ee0874549c4cf96c01e3" compoundref="polya__negloglike_8cpp" startline="129" endline="186">finish_evaluate_compute</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1polya__negloglike_1a3f3c7f775d548ac8e011fb1b637804cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::polya_negloglike::polya_negloglike</definition>
        <argsstring>(EvalType scale_factor=EvalType(1))</argsstring>
        <name>polya_negloglike</name>
        <param>
          <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
          <declname>scale_factor</declname>
          <defval><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(1)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="38" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/polya_negloglike.cpp" bodystart="47" bodyend="52"/>
        <referencedby refid="classlbann_1_1polya__negloglike_1a526b3229a4143359c041f8d88b0a729b" compoundref="polya__negloglike_8hpp" startline="47" endline="49">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1polya__negloglike_1a35d76a08dea5203c4f70e48260adf1ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::polya_negloglike::polya_negloglike</definition>
        <argsstring>(const polya_negloglike &amp;other)</argsstring>
        <name>polya_negloglike</name>
        <param>
          <type>const <ref refid="classlbann_1_1polya__negloglike" kindref="compound">polya_negloglike</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="41" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/polya_negloglike.cpp" bodystart="54" bodyend="72"/>
        <references refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" compoundref="polya__negloglike_8hpp" startline="88">m_counts</references>
        <references refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" compoundref="polya__negloglike_8hpp" startline="89">m_alpha_sums</references>
        <references refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" compoundref="polya__negloglike_8hpp" startline="90">m_lgamma_alpha_sums</references>
        <references refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" compoundref="polya__negloglike_8hpp" startline="91">m_lgamma_alpha_level_count_sums</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1polya__negloglike_1a13d1e4b96c6e99bb39afc2b349ad9588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1polya__negloglike" kindref="compound">polya_negloglike</ref> &amp;</type>
        <definition>polya_negloglike &amp; lbann::polya_negloglike::operator=</definition>
        <argsstring>(const polya_negloglike &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1polya__negloglike" kindref="compound">polya_negloglike</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy assignment operator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="43" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/polya_negloglike.cpp" bodystart="74" bodyend="97"/>
        <references refid="classlbann_1_1loss__function_1ab882c642619ea4285b61e735d84e401c" compoundref="loss__function_8cpp" startline="42" endline="54">lbann::loss_function::operator=</references>
        <references refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" compoundref="polya__negloglike_8hpp" startline="88">m_counts</references>
        <references refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" compoundref="polya__negloglike_8hpp" startline="89">m_alpha_sums</references>
        <references refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" compoundref="polya__negloglike_8hpp" startline="90">m_lgamma_alpha_sums</references>
        <references refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" compoundref="polya__negloglike_8hpp" startline="91">m_lgamma_alpha_level_count_sums</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1polya__negloglike_1a0c00f1f9cac0b0c6a638b86e031768e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::polya_negloglike::~polya_negloglike</definition>
        <argsstring>() override</argsstring>
        <name>~polya_negloglike</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="45" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/polya_negloglike.cpp" bodystart="99" bodyend="104"/>
        <references refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" compoundref="polya__negloglike_8hpp" startline="88">m_counts</references>
        <references refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" compoundref="polya__negloglike_8hpp" startline="89">m_alpha_sums</references>
        <references refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" compoundref="polya__negloglike_8hpp" startline="90">m_lgamma_alpha_sums</references>
        <references refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" compoundref="polya__negloglike_8hpp" startline="91">m_lgamma_alpha_level_count_sums</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1polya__negloglike_1a526b3229a4143359c041f8d88b0a729b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1polya__negloglike" kindref="compound">polya_negloglike</ref> *</type>
        <definition>polya_negloglike* lbann::polya_negloglike::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1objective__function__term_1ae98a4ec173a602ad55d1df20dadd4cb9">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="47" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" bodystart="47" bodyend="49"/>
        <references refid="classlbann_1_1polya__negloglike_1a3f3c7f775d548ac8e011fb1b637804cb" compoundref="polya__negloglike_8cpp" startline="47" endline="52">polya_negloglike</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1polya__negloglike_1ab787129d7caa79b04b91a9660b31d3b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::polya_negloglike::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classlbann_1_1objective__function__term_1a964fbfad3dd0434aa8f32c5fedf1079a">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the objective function term. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="52" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" bodystart="52" bodyend="52"/>
        <references refid="classlbann_1_1polya__negloglike_1a4a7ae8eef1ef216f60b158acb1853355" compoundref="polya__negloglike_8cpp" startline="106" endline="127">setup</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1polya__negloglike_1a4a7ae8eef1ef216f60b158acb1853355" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::polya_negloglike::setup</definition>
        <argsstring>(model &amp;m) override</argsstring>
        <name>setup</name>
        <reimplements refid="classlbann_1_1loss__function_1a17a3629e8519c4215ad776a0c7b522ae">setup</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup term. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="55" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/polya_negloglike.cpp" bodystart="106" bodyend="127"/>
        <references refid="classlbann_1_1loss__function_1a17a3629e8519c4215ad776a0c7b522ae" compoundref="loss__function_8cpp" startline="68" endline="112">lbann::loss_function::setup</references>
        <references refid="classlbann_1_1loss__function_1ac6ac9f8f2cef7a4daa1b282dba914975" compoundref="loss__function_8hpp" startline="105">lbann::loss_function::m_gradient</references>
        <references refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" compoundref="polya__negloglike_8hpp" startline="88">m_counts</references>
        <references refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" compoundref="polya__negloglike_8hpp" startline="89">m_alpha_sums</references>
        <references refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" compoundref="polya__negloglike_8hpp" startline="90">m_lgamma_alpha_sums</references>
        <references refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" compoundref="polya__negloglike_8hpp" startline="91">m_lgamma_alpha_level_count_sums</references>
        <referencedby refid="classlbann_1_1polya__negloglike_1ab787129d7caa79b04b91a9660b31d3b8" compoundref="polya__negloglike_8hpp" startline="52" endline="52">name</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1polya__negloglike_1aea7e92b3d290f3d11b6f8c93f9f9d3e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::polya_negloglike::start_evaluate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth) override</argsstring>
        <name>start_evaluate_compute</name>
        <reimplements refid="classlbann_1_1loss__function_1a0bbe41060d788dc7a29f3737761a6f7d">start_evaluate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the Polya negative log-likelihood objective function. Given the parameters <formula id="12">$(\alpha_1,\dots,\alpha_K)$</formula> of the predicted Polya distribution, the ground truth label counts <formula id="13">$(k_1,\dots,k_K)$</formula>, and total counts <formula id="14">$n = \sum_{i=0}^K k_i$</formula> the Polya negative log-likelihood is <formula id="15">\[ Poly_nll(\vec{\alpha}, \vec{k}) = -\log \Gamma(\sum_{i=0}^K \hat{y}_i) + \log \Gamma(n + \sum_{i=0}^K \hat{y}_i) - \sum_{i=0}^K \left\{\log \Gamma(\hat{y}_i + \alpha_i) - \log \Gamma(\alpha_i) \right\} \]</formula> This function updates the objective function value with the mean Polya negative log-likelihood across the mini-batch. Note that each column of the predictions and ground truth matrices should have non-negative entries. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="68" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" bodystart="68" bodyend="69"/>
        <references refid="classlbann_1_1polya__negloglike_1a81dbe71fef52ee0874549c4cf96c01e3" compoundref="polya__negloglike_8cpp" startline="129" endline="186">finish_evaluate_compute</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac41b9ec75e920b610e8907e066074b30">prediction</references>
        <references refid="classlbann_1_1polya__negloglike_1a95fea60663d86cab31d89531046cc32c" compoundref="polya__negloglike_8cpp" startline="188" endline="218">differentiate_compute</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1polya__negloglike_1a81dbe71fef52ee0874549c4cf96c01e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
        <definition>EvalType lbann::polya_negloglike::finish_evaluate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth) override</argsstring>
        <name>finish_evaluate_compute</name>
        <reimplements refid="classlbann_1_1loss__function_1a3ea8553a4e9c75477d7d4fc533c4d4fd">finish_evaluate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish evaluation of the loss function. This should not include the scale factor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="71" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/polya_negloglike.cpp" bodystart="129" bodyend="186"/>
        <references refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" compoundref="polya__negloglike_8hpp" startline="88">m_counts</references>
        <references refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" compoundref="polya__negloglike_8hpp" startline="89">m_alpha_sums</references>
        <references refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" compoundref="polya__negloglike_8hpp" startline="90">m_lgamma_alpha_sums</references>
        <references refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" compoundref="polya__negloglike_8hpp" startline="91">m_lgamma_alpha_level_count_sums</references>
        <references refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" compoundref="objective__function__term_8hpp" startline="102" endline="102">lbann::objective_function_term::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" compoundref="comm_8hpp" startline="419" endline="424">lbann::lbann_comm::allreduce</references>
        <referencedby refid="classlbann_1_1polya__negloglike_1aea7e92b3d290f3d11b6f8c93f9f9d3e6" compoundref="polya__negloglike_8hpp" startline="68" endline="69">start_evaluate_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1polya__negloglike_1a95fea60663d86cab31d89531046cc32c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::polya_negloglike::differentiate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth, AbsDistMat &amp;gradient) override</argsstring>
        <name>differentiate_compute</name>
        <reimplements refid="classlbann_1_1loss__function_1aefccc2b4f5a02664002d12630cf369e7">differentiate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>gradient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the gradient of the Polya negative log-likelihood objective function. Given the parameters <formula id="12">$(\alpha_1,\dots,\alpha_K)$</formula> of the predicted Polya distribution, the ground truth label counts <formula id="13">$(k_1,\dots,k_K)$</formula>, and total counts <formula id="14">$n = \sum_{i=0}^K k_i$</formula>, the gradient of the Polya negative log-likelihood function is <formula id="16">\[ \nabla_{alpha_i} Poly_nll(\vec{\alpha}, \vec{k}) = -\Psi(\sum_{i=1}^K \alpha_i) + \Psi(n + \sum_{i=1}^K \alpha_i) - \Psi(k_i + \alpha_i) + \Psi(\alpha_i) \]</formula> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="83" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/polya_negloglike.cpp" bodystart="188" bodyend="218"/>
        <references refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" compoundref="polya__negloglike_8hpp" startline="88">m_counts</references>
        <references refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" compoundref="polya__negloglike_8hpp" startline="89">m_alpha_sums</references>
        <references refid="polya__negloglike_8cpp_1afcc4e1443ca078661f655ac37772ffc4" compoundref="polya__negloglike_8cpp" startline="29" endline="43">digamma</references>
        <referencedby refid="classlbann_1_1polya__negloglike_1aea7e92b3d290f3d11b6f8c93f9f9d3e6" compoundref="polya__negloglike_8hpp" startline="68" endline="69">start_evaluate_compute</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Polya negative log-likelihood objective function. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1871">
        <label>lbann::loss_function</label>
        <link refid="classlbann_1_1loss__function"/>
        <childnode refid="1872" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1870">
        <label>lbann::polya_negloglike</label>
        <link refid="classlbann_1_1polya__negloglike"/>
        <childnode refid="1871" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1872">
        <label>lbann::objective_function_term</label>
        <link refid="classlbann_1_1objective__function__term"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1874">
        <label>lbann::loss_function</label>
        <link refid="classlbann_1_1loss__function"/>
        <childnode refid="1875" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1873">
        <label>lbann::polya_negloglike</label>
        <link refid="classlbann_1_1polya__negloglike"/>
        <childnode refid="1874" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1876">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="1875">
        <label>lbann::objective_function_term</label>
        <link refid="classlbann_1_1objective__function__term"/>
        <childnode refid="1876" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" line="35" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/polya_negloglike.hpp" bodystart="35" bodyend="93"/>
    <listofallmembers>
      <member refid="classlbann_1_1loss__function_1acd6e3bdcf33235208db03ab7af88e961" prot="public" virt="virtual"><scope>lbann::polya_negloglike</scope><name>compute_weight_regularization</name></member>
      <member refid="classlbann_1_1polya__negloglike_1a526b3229a4143359c041f8d88b0a729b" prot="public" virt="virtual"><scope>lbann::polya_negloglike</scope><name>copy</name></member>
      <member refid="classlbann_1_1loss__function_1adbd03ef952ee1055e3dd98f06d33324f" prot="public" virt="virtual"><scope>lbann::polya_negloglike</scope><name>differentiate</name></member>
      <member refid="classlbann_1_1polya__negloglike_1a95fea60663d86cab31d89531046cc32c" prot="public" virt="virtual"><scope>lbann::polya_negloglike</scope><name>differentiate_compute</name></member>
      <member refid="classlbann_1_1polya__negloglike_1a81dbe71fef52ee0874549c4cf96c01e3" prot="public" virt="virtual"><scope>lbann::polya_negloglike</scope><name>finish_evaluate_compute</name></member>
      <member refid="classlbann_1_1loss__function_1a5264d3e71125b7ce8694f73bf25662f7" prot="public" virt="virtual"><scope>lbann::polya_negloglike</scope><name>finish_evaluation</name></member>
      <member refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" prot="protected" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1objective__function__term_1aeeb85314738bec6e15877f68b3d422a0" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>get_layer_pointers</name></member>
      <member refid="classlbann_1_1objective__function__term_1aea73505aed191bfb9336d9d46a69d586" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>get_weights_pointers</name></member>
      <member refid="classlbann_1_1loss__function_1ae948babd62a110e2407271f24dcaec1b" prot="public" virt="virtual"><scope>lbann::polya_negloglike</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1loss__function_1a0c5745e661c59e3e5496888d233c07cf" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>loss_function</name></member>
      <member refid="classlbann_1_1loss__function_1aaebcff849004392decc9850c4c75ead5" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>loss_function</name></member>
      <member refid="classlbann_1_1polya__negloglike_1aa77620f256de700ae8b3ca921957bcd1" prot="private" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>m_alpha_sums</name></member>
      <member refid="classlbann_1_1polya__negloglike_1a441387814cd7deafb1f70c91926d3004" prot="private" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>m_counts</name></member>
      <member refid="classlbann_1_1loss__function_1ac6ac9f8f2cef7a4daa1b282dba914975" prot="protected" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>m_gradient</name></member>
      <member refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" prot="protected" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>m_layers</name></member>
      <member refid="classlbann_1_1polya__negloglike_1a78c9da1fb83c7b79a12cfbf30a4cb59e" prot="private" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>m_lgamma_alpha_level_count_sums</name></member>
      <member refid="classlbann_1_1polya__negloglike_1a0aec768ffa50a8b716149d597699eddb" prot="private" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>m_lgamma_alpha_sums</name></member>
      <member refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" prot="protected" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>m_scale_factor</name></member>
      <member refid="classlbann_1_1objective__function__term_1a1d601c29153ae9cb54c585887608f2bf" prot="protected" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>m_weights</name></member>
      <member refid="classlbann_1_1polya__negloglike_1ab787129d7caa79b04b91a9660b31d3b8" prot="public" virt="virtual"><scope>lbann::polya_negloglike</scope><name>name</name></member>
      <member refid="classlbann_1_1objective__function__term_1a8c019e3c880f38dc20275e395acaeca1" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>objective_function_term</name></member>
      <member refid="classlbann_1_1objective__function__term_1a791a33056717d8b3f5ca2288145d86c8" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>objective_function_term</name></member>
      <member refid="classlbann_1_1polya__negloglike_1a13d1e4b96c6e99bb39afc2b349ad9588" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>operator=</name></member>
      <member refid="classlbann_1_1loss__function_1ab882c642619ea4285b61e735d84e401c" prot="public" virt="non-virtual" ambiguityscope="lbann::loss_function::"><scope>lbann::polya_negloglike</scope><name>operator=</name></member>
      <member refid="classlbann_1_1objective__function__term_1a8bbac194d96a854d5841817b67b63334" prot="public" virt="non-virtual" ambiguityscope="lbann::objective_function_term::"><scope>lbann::polya_negloglike</scope><name>operator=</name></member>
      <member refid="classlbann_1_1polya__negloglike_1a3f3c7f775d548ac8e011fb1b637804cb" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>polya_negloglike</name></member>
      <member refid="classlbann_1_1polya__negloglike_1a35d76a08dea5203c4f70e48260adf1ec" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>polya_negloglike</name></member>
      <member refid="classlbann_1_1loss__function_1ac44929838f3c3f0a34e1532530422dad" prot="public" virt="virtual"><scope>lbann::polya_negloglike</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1objective__function__term_1a82656dfd81bf6b818b38d041d341bc3b" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>set_layer_pointers</name></member>
      <member refid="classlbann_1_1loss__function_1a9ef5356468c892c2c0221f8acd6b5471" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>set_target_layer</name></member>
      <member refid="classlbann_1_1objective__function__term_1aa8adaf01dd8bc535dd86f27fc53c276a" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>set_weights_pointers</name></member>
      <member refid="classlbann_1_1polya__negloglike_1a4a7ae8eef1ef216f60b158acb1853355" prot="public" virt="virtual"><scope>lbann::polya_negloglike</scope><name>setup</name></member>
      <member refid="classlbann_1_1polya__negloglike_1aea7e92b3d290f3d11b6f8c93f9f9d3e6" prot="public" virt="virtual"><scope>lbann::polya_negloglike</scope><name>start_evaluate_compute</name></member>
      <member refid="classlbann_1_1loss__function_1a90f4126b0b4d47838ef3cc154c6d9705" prot="public" virt="virtual"><scope>lbann::polya_negloglike</scope><name>start_evaluation</name></member>
      <member refid="classlbann_1_1loss__function_1a21c59d9c3db798c330ff8297f6374747" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>~loss_function</name></member>
      <member refid="classlbann_1_1objective__function__term_1ad95920d424b3c248a2124827971451df" prot="public" virt="virtual"><scope>lbann::polya_negloglike</scope><name>~objective_function_term</name></member>
      <member refid="classlbann_1_1polya__negloglike_1a0c00f1f9cac0b0c6a638b86e031768e3" prot="public" virt="non-virtual"><scope>lbann::polya_negloglike</scope><name>~polya_negloglike</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
