<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classlbann_1_1cross__entropy__with__uncertainty" kind="class" language="C++" prot="public">
    <compoundname>lbann::cross_entropy_with_uncertainty</compoundname>
    <basecompoundref refid="classlbann_1_1loss__function" prot="public" virt="non-virtual">lbann::loss_function</basecompoundref>
    <includes refid="cross__entropy__with__uncertainty_8hpp" local="no">cross_entropy_with_uncertainty.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlbann_1_1cross__entropy__with__uncertainty_1a4b45767c526e7ebe4a55ff1a1ddbd7ba" prot="private" static="no" mutable="no">
        <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> *</type>
        <definition>AbsDistMat* lbann::cross_entropy_with_uncertainty::m_prediction_sums</definition>
        <argsstring></argsstring>
        <name>m_prediction_sums</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Workspace. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" line="88" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" bodystart="88" bodyend="-1"/>
        <referencedby refid="classlbann_1_1cross__entropy__with__uncertainty_1ae6d8025fb046ae3bd3d05321fb1b40d4" compoundref="cross__entropy__with__uncertainty_8cpp" startline="35" endline="41">cross_entropy_with_uncertainty</referencedby>
        <referencedby refid="classlbann_1_1cross__entropy__with__uncertainty_1a036433c9c57e030d1923543dc211813a" compoundref="cross__entropy__with__uncertainty_8cpp" startline="43" endline="51">operator=</referencedby>
        <referencedby refid="classlbann_1_1cross__entropy__with__uncertainty_1a617b8a1a308c086284ca6f43e88acca6" compoundref="cross__entropy__with__uncertainty_8cpp" startline="53" endline="55">~cross_entropy_with_uncertainty</referencedby>
        <referencedby refid="classlbann_1_1cross__entropy__with__uncertainty_1a44a47468f1d04734068d085417eeab93" compoundref="cross__entropy__with__uncertainty_8cpp" startline="57" endline="72">setup</referencedby>
        <referencedby refid="classlbann_1_1cross__entropy__with__uncertainty_1abb9b240766b395dab052e3225a0888f6" compoundref="cross__entropy__with__uncertainty_8cpp" startline="74" endline="112">finish_evaluate_compute</referencedby>
        <referencedby refid="classlbann_1_1cross__entropy__with__uncertainty_1a48ebe2b7a2193c124df0cd15813835d0" compoundref="cross__entropy__with__uncertainty_8cpp" startline="114" endline="141">differentiate_compute</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlbann_1_1cross__entropy__with__uncertainty_1a93f0ab9861859a3b54fc5c723a27aaaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::cross_entropy_with_uncertainty::cross_entropy_with_uncertainty</definition>
        <argsstring>(EvalType scale_factor=EvalType(1))</argsstring>
        <name>cross_entropy_with_uncertainty</name>
        <param>
          <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
          <declname>scale_factor</declname>
          <defval><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(1)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" line="38" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/cross_entropy_with_uncertainty.cpp" bodystart="31" bodyend="33"/>
        <referencedby refid="classlbann_1_1cross__entropy__with__uncertainty_1a3df6ab2f0b06922f860096636242b1bd" compoundref="cross__entropy__with__uncertainty_8hpp" startline="47" endline="49">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1cross__entropy__with__uncertainty_1ae6d8025fb046ae3bd3d05321fb1b40d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::cross_entropy_with_uncertainty::cross_entropy_with_uncertainty</definition>
        <argsstring>(const cross_entropy_with_uncertainty &amp;other)</argsstring>
        <name>cross_entropy_with_uncertainty</name>
        <param>
          <type>const <ref refid="classlbann_1_1cross__entropy__with__uncertainty" kindref="compound">cross_entropy_with_uncertainty</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" line="41" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/cross_entropy_with_uncertainty.cpp" bodystart="35" bodyend="41"/>
        <references refid="classlbann_1_1cross__entropy__with__uncertainty_1a4b45767c526e7ebe4a55ff1a1ddbd7ba" compoundref="cross__entropy__with__uncertainty_8hpp" startline="88">m_prediction_sums</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1cross__entropy__with__uncertainty_1a036433c9c57e030d1923543dc211813a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlbann_1_1cross__entropy__with__uncertainty" kindref="compound">cross_entropy_with_uncertainty</ref> &amp;</type>
        <definition>cross_entropy_with_uncertainty &amp; lbann::cross_entropy_with_uncertainty::operator=</definition>
        <argsstring>(const cross_entropy_with_uncertainty &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classlbann_1_1cross__entropy__with__uncertainty" kindref="compound">cross_entropy_with_uncertainty</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy assignment operator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" line="43" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/cross_entropy_with_uncertainty.cpp" bodystart="43" bodyend="51"/>
        <references refid="classlbann_1_1loss__function_1ab882c642619ea4285b61e735d84e401c" compoundref="loss__function_8cpp" startline="42" endline="54">lbann::loss_function::operator=</references>
        <references refid="classlbann_1_1cross__entropy__with__uncertainty_1a4b45767c526e7ebe4a55ff1a1ddbd7ba" compoundref="cross__entropy__with__uncertainty_8hpp" startline="88">m_prediction_sums</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1cross__entropy__with__uncertainty_1a617b8a1a308c086284ca6f43e88acca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lbann::cross_entropy_with_uncertainty::~cross_entropy_with_uncertainty</definition>
        <argsstring>() override</argsstring>
        <name>~cross_entropy_with_uncertainty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" line="45" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/cross_entropy_with_uncertainty.cpp" bodystart="53" bodyend="55"/>
        <references refid="classlbann_1_1cross__entropy__with__uncertainty_1a4b45767c526e7ebe4a55ff1a1ddbd7ba" compoundref="cross__entropy__with__uncertainty_8hpp" startline="88">m_prediction_sums</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1cross__entropy__with__uncertainty_1a3df6ab2f0b06922f860096636242b1bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classlbann_1_1cross__entropy__with__uncertainty" kindref="compound">cross_entropy_with_uncertainty</ref> *</type>
        <definition>cross_entropy_with_uncertainty* lbann::cross_entropy_with_uncertainty::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classlbann_1_1objective__function__term_1ae98a4ec173a602ad55d1df20dadd4cb9">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" line="47" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" bodystart="47" bodyend="49"/>
        <references refid="classlbann_1_1cross__entropy__with__uncertainty_1a93f0ab9861859a3b54fc5c723a27aaaa" compoundref="cross__entropy__with__uncertainty_8cpp" startline="31" endline="33">cross_entropy_with_uncertainty</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1cross__entropy__with__uncertainty_1a56d734c6665ac1752d8ef821edf2f464" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string lbann::cross_entropy_with_uncertainty::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classlbann_1_1objective__function__term_1a964fbfad3dd0434aa8f32c5fedf1079a">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the objective function term. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" line="52" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" bodystart="52" bodyend="52"/>
        <references refid="classlbann_1_1cross__entropy__with__uncertainty_1a44a47468f1d04734068d085417eeab93" compoundref="cross__entropy__with__uncertainty_8cpp" startline="57" endline="72">setup</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1cross__entropy__with__uncertainty_1a44a47468f1d04734068d085417eeab93" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::cross_entropy_with_uncertainty::setup</definition>
        <argsstring>(model &amp;m) override</argsstring>
        <name>setup</name>
        <reimplements refid="classlbann_1_1loss__function_1a17a3629e8519c4215ad776a0c7b522ae">setup</reimplements>
        <param>
          <type><ref refid="classlbann_1_1model" kindref="compound">model</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup cross entropy term. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" line="55" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/cross_entropy_with_uncertainty.cpp" bodystart="57" bodyend="72"/>
        <references refid="classlbann_1_1loss__function_1a17a3629e8519c4215ad776a0c7b522ae" compoundref="loss__function_8cpp" startline="68" endline="112">lbann::loss_function::setup</references>
        <references refid="classlbann_1_1loss__function_1ac6ac9f8f2cef7a4daa1b282dba914975" compoundref="loss__function_8hpp" startline="105">lbann::loss_function::m_gradient</references>
        <references refid="classlbann_1_1cross__entropy__with__uncertainty_1a4b45767c526e7ebe4a55ff1a1ddbd7ba" compoundref="cross__entropy__with__uncertainty_8hpp" startline="88">m_prediction_sums</references>
        <referencedby refid="classlbann_1_1cross__entropy__with__uncertainty_1a56d734c6665ac1752d8ef821edf2f464" compoundref="cross__entropy__with__uncertainty_8hpp" startline="52" endline="52">name</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1cross__entropy__with__uncertainty_1abed10e5c6eb2fd72b3b72ad1042fe35c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void lbann::cross_entropy_with_uncertainty::start_evaluate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth) override</argsstring>
        <name>start_evaluate_compute</name>
        <reimplements refid="classlbann_1_1loss__function_1a0bbe41060d788dc7a29f3737761a6f7d">start_evaluate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the cross entropy objective function. Given a predicted distribution <formula id="1">$y$</formula> and ground truth distribution <formula id="0">$\hat{y}$</formula>, the cross entropy is <formula id="3">\[ CE(y,\hat{y}) = - \sum\limits_{i} \hat{y}_i \log y_i \]</formula> This function updates the objective function value with the mean cross entropy across the mini-batch. Note that each column of the predictions matrix should have non-negative entries that add up to one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" line="68" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" bodystart="68" bodyend="69"/>
        <references refid="classlbann_1_1cross__entropy__with__uncertainty_1abb9b240766b395dab052e3225a0888f6" compoundref="cross__entropy__with__uncertainty_8cpp" startline="74" endline="112">finish_evaluate_compute</references>
        <references refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac41b9ec75e920b610e8907e066074b30">prediction</references>
        <references refid="classlbann_1_1cross__entropy__with__uncertainty_1a48ebe2b7a2193c124df0cd15813835d0" compoundref="cross__entropy__with__uncertainty_8cpp" startline="114" endline="141">differentiate_compute</references>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1cross__entropy__with__uncertainty_1abb9b240766b395dab052e3225a0888f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref></type>
        <definition>EvalType lbann::cross_entropy_with_uncertainty::finish_evaluate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth) override</argsstring>
        <name>finish_evaluate_compute</name>
        <reimplements refid="classlbann_1_1loss__function_1a3ea8553a4e9c75477d7d4fc533c4d4fd">finish_evaluate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish evaluation of the loss function. This should not include the scale factor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" line="71" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/cross_entropy_with_uncertainty.cpp" bodystart="74" bodyend="112"/>
        <references refid="classlbann_1_1cross__entropy__with__uncertainty_1a4b45767c526e7ebe4a55ff1a1ddbd7ba" compoundref="cross__entropy__with__uncertainty_8hpp" startline="88">m_prediction_sums</references>
        <references refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" compoundref="objective__function__term_8hpp" startline="102" endline="102">lbann::objective_function_term::get_comm</references>
        <references refid="classlbann_1_1lbann__comm_1af5631e5f0f54e4df4958eba9df2599ef" compoundref="comm_8hpp" startline="419" endline="424">lbann::lbann_comm::allreduce</references>
        <referencedby refid="classlbann_1_1cross__entropy__with__uncertainty_1abed10e5c6eb2fd72b3b72ad1042fe35c" compoundref="cross__entropy__with__uncertainty_8hpp" startline="68" endline="69">start_evaluate_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlbann_1_1cross__entropy__with__uncertainty_1a48ebe2b7a2193c124df0cd15813835d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void lbann::cross_entropy_with_uncertainty::differentiate_compute</definition>
        <argsstring>(const AbsDistMat &amp;prediction, const AbsDistMat &amp;ground_truth, AbsDistMat &amp;gradient) override</argsstring>
        <name>differentiate_compute</name>
        <reimplements refid="classlbann_1_1loss__function_1aefccc2b4f5a02664002d12630cf369e7">differentiate_compute</reimplements>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const <ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <param>
          <type><ref refid="base_8hpp_1a9a697a504ae84010e7439ffec862b470" kindref="member">AbsDistMat</ref> &amp;</type>
          <declname>gradient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the gradient of the cross entropy objective function. Given a predicted distribution <formula id="1">$y$</formula> and ground truth distribution <formula id="0">$\hat{y}$</formula>, the gradient of the cross entropy is <formula id="4">\[ \nabla_y CE (y,\hat{y}) = - \hat{y} . / y \]</formula> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" line="82" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/src/objective_functions/loss_functions/cross_entropy_with_uncertainty.cpp" bodystart="114" bodyend="141"/>
        <references refid="classlbann_1_1cross__entropy__with__uncertainty_1a4b45767c526e7ebe4a55ff1a1ddbd7ba" compoundref="cross__entropy__with__uncertainty_8hpp" startline="88">m_prediction_sums</references>
        <referencedby refid="classlbann_1_1cross__entropy__with__uncertainty_1abed10e5c6eb2fd72b3b72ad1042fe35c" compoundref="cross__entropy__with__uncertainty_8hpp" startline="68" endline="69">start_evaluate_compute</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Cross entropy with uncertainty loss function. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="312">
        <label>lbann::loss_function</label>
        <link refid="classlbann_1_1loss__function"/>
        <childnode refid="313" relation="public-inheritance">
        </childnode>
      </node>
      <node id="311">
        <label>lbann::cross_entropy_with_uncertainty</label>
        <link refid="classlbann_1_1cross__entropy__with__uncertainty"/>
        <childnode refid="312" relation="public-inheritance">
        </childnode>
      </node>
      <node id="313">
        <label>lbann::objective_function_term</label>
        <link refid="classlbann_1_1objective__function__term"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="315">
        <label>lbann::loss_function</label>
        <link refid="classlbann_1_1loss__function"/>
        <childnode refid="316" relation="public-inheritance">
        </childnode>
      </node>
      <node id="314">
        <label>lbann::cross_entropy_with_uncertainty</label>
        <link refid="classlbann_1_1cross__entropy__with__uncertainty"/>
        <childnode refid="315" relation="public-inheritance">
        </childnode>
      </node>
      <node id="317">
        <label>lbann::lbann_comm</label>
        <link refid="classlbann_1_1lbann__comm"/>
      </node>
      <node id="316">
        <label>lbann::objective_function_term</label>
        <link refid="classlbann_1_1objective__function__term"/>
        <childnode refid="317" relation="usage">
          <edgelabel>m_comm</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" line="35" column="1" bodyfile="/Users/mckinney27/doxy-testbed/lbann/include/lbann/objective_functions/loss_functions/cross_entropy_with_uncertainty.hpp" bodystart="35" bodyend="90"/>
    <listofallmembers>
      <member refid="classlbann_1_1loss__function_1acd6e3bdcf33235208db03ab7af88e961" prot="public" virt="virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>compute_weight_regularization</name></member>
      <member refid="classlbann_1_1cross__entropy__with__uncertainty_1a3df6ab2f0b06922f860096636242b1bd" prot="public" virt="virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>copy</name></member>
      <member refid="classlbann_1_1cross__entropy__with__uncertainty_1a93f0ab9861859a3b54fc5c723a27aaaa" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>cross_entropy_with_uncertainty</name></member>
      <member refid="classlbann_1_1cross__entropy__with__uncertainty_1ae6d8025fb046ae3bd3d05321fb1b40d4" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>cross_entropy_with_uncertainty</name></member>
      <member refid="classlbann_1_1loss__function_1adbd03ef952ee1055e3dd98f06d33324f" prot="public" virt="virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>differentiate</name></member>
      <member refid="classlbann_1_1cross__entropy__with__uncertainty_1a48ebe2b7a2193c124df0cd15813835d0" prot="public" virt="virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>differentiate_compute</name></member>
      <member refid="classlbann_1_1cross__entropy__with__uncertainty_1abb9b240766b395dab052e3225a0888f6" prot="public" virt="virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>finish_evaluate_compute</name></member>
      <member refid="classlbann_1_1loss__function_1a5264d3e71125b7ce8694f73bf25662f7" prot="public" virt="virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>finish_evaluation</name></member>
      <member refid="classlbann_1_1objective__function__term_1a5f89b676a26a6b76ddc26563ac87beb9" prot="protected" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>get_comm</name></member>
      <member refid="classlbann_1_1objective__function__term_1aeeb85314738bec6e15877f68b3d422a0" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>get_layer_pointers</name></member>
      <member refid="classlbann_1_1objective__function__term_1aea73505aed191bfb9336d9d46a69d586" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>get_weights_pointers</name></member>
      <member refid="classlbann_1_1loss__function_1ae948babd62a110e2407271f24dcaec1b" prot="public" virt="virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>load_from_checkpoint_shared</name></member>
      <member refid="classlbann_1_1loss__function_1a0c5745e661c59e3e5496888d233c07cf" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>loss_function</name></member>
      <member refid="classlbann_1_1loss__function_1aaebcff849004392decc9850c4c75ead5" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>loss_function</name></member>
      <member refid="classlbann_1_1loss__function_1ac6ac9f8f2cef7a4daa1b282dba914975" prot="protected" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>m_gradient</name></member>
      <member refid="classlbann_1_1objective__function__term_1a9269cf0a237eacd1e220ba2739f44334" prot="protected" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>m_layers</name></member>
      <member refid="classlbann_1_1cross__entropy__with__uncertainty_1a4b45767c526e7ebe4a55ff1a1ddbd7ba" prot="private" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>m_prediction_sums</name></member>
      <member refid="classlbann_1_1objective__function__term_1a59a544b8ff0455ed5091de3bf0d81c3c" prot="protected" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>m_scale_factor</name></member>
      <member refid="classlbann_1_1objective__function__term_1a1d601c29153ae9cb54c585887608f2bf" prot="protected" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>m_weights</name></member>
      <member refid="classlbann_1_1cross__entropy__with__uncertainty_1a56d734c6665ac1752d8ef821edf2f464" prot="public" virt="virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>name</name></member>
      <member refid="classlbann_1_1objective__function__term_1a8c019e3c880f38dc20275e395acaeca1" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>objective_function_term</name></member>
      <member refid="classlbann_1_1objective__function__term_1a791a33056717d8b3f5ca2288145d86c8" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>objective_function_term</name></member>
      <member refid="classlbann_1_1cross__entropy__with__uncertainty_1a036433c9c57e030d1923543dc211813a" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>operator=</name></member>
      <member refid="classlbann_1_1loss__function_1ab882c642619ea4285b61e735d84e401c" prot="public" virt="non-virtual" ambiguityscope="lbann::loss_function::"><scope>lbann::cross_entropy_with_uncertainty</scope><name>operator=</name></member>
      <member refid="classlbann_1_1objective__function__term_1a8bbac194d96a854d5841817b67b63334" prot="public" virt="non-virtual" ambiguityscope="lbann::objective_function_term::"><scope>lbann::cross_entropy_with_uncertainty</scope><name>operator=</name></member>
      <member refid="classlbann_1_1loss__function_1ac44929838f3c3f0a34e1532530422dad" prot="public" virt="virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>save_to_checkpoint_shared</name></member>
      <member refid="classlbann_1_1objective__function__term_1a82656dfd81bf6b818b38d041d341bc3b" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>set_layer_pointers</name></member>
      <member refid="classlbann_1_1loss__function_1a9ef5356468c892c2c0221f8acd6b5471" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>set_target_layer</name></member>
      <member refid="classlbann_1_1objective__function__term_1aa8adaf01dd8bc535dd86f27fc53c276a" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>set_weights_pointers</name></member>
      <member refid="classlbann_1_1cross__entropy__with__uncertainty_1a44a47468f1d04734068d085417eeab93" prot="public" virt="virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>setup</name></member>
      <member refid="classlbann_1_1cross__entropy__with__uncertainty_1abed10e5c6eb2fd72b3b72ad1042fe35c" prot="public" virt="virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>start_evaluate_compute</name></member>
      <member refid="classlbann_1_1loss__function_1a90f4126b0b4d47838ef3cc154c6d9705" prot="public" virt="virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>start_evaluation</name></member>
      <member refid="classlbann_1_1cross__entropy__with__uncertainty_1a617b8a1a308c086284ca6f43e88acca6" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>~cross_entropy_with_uncertainty</name></member>
      <member refid="classlbann_1_1loss__function_1a21c59d9c3db798c330ff8297f6374747" prot="public" virt="non-virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>~loss_function</name></member>
      <member refid="classlbann_1_1objective__function__term_1ad95920d424b3c248a2124827971451df" prot="public" virt="virtual"><scope>lbann::cross_entropy_with_uncertainty</scope><name>~objective_function_term</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
