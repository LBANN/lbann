<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="callback__ltfb_8cpp" kind="file" language="C++">
    <compoundname>callback_ltfb.cpp</compoundname>
    <includes refid="callback__ltfb_8hpp" local="yes">lbann/callbacks/callback_ltfb.hpp</includes>
    <includes refid="callback__imcomm_8hpp" local="yes">lbann/callbacks/callback_imcomm.hpp</includes>
    <includes refid="categorical__accuracy_8hpp" local="yes">lbann/metrics/categorical_accuracy.hpp</includes>
    <includes refid="random_8hpp" local="yes">lbann/utils/random.hpp</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">typeindex</includes>
    <incdepgraph>
      <node id="18233">
        <label>sys/stat.h</label>
      </node>
      <node id="18207">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="18208" relation="include">
        </childnode>
        <childnode refid="18209" relation="include">
        </childnode>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18210" relation="include">
        </childnode>
      </node>
      <node id="18241">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="18239" relation="include">
        </childnode>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18210" relation="include">
        </childnode>
        <childnode refid="18228" relation="include">
        </childnode>
        <childnode refid="18217" relation="include">
        </childnode>
        <childnode refid="18242" relation="include">
        </childnode>
        <childnode refid="18243" relation="include">
        </childnode>
      </node>
      <node id="18225">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18199" relation="include">
        </childnode>
      </node>
      <node id="18199">
        <label>El.hpp</label>
      </node>
      <node id="18198">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="18199" relation="include">
        </childnode>
        <childnode refid="18200" relation="include">
        </childnode>
        <childnode refid="18201" relation="include">
        </childnode>
        <childnode refid="18206" relation="include">
        </childnode>
      </node>
      <node id="18240">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="18209" relation="include">
        </childnode>
        <childnode refid="18227" relation="include">
        </childnode>
        <childnode refid="18239" relation="include">
        </childnode>
        <childnode refid="18197" relation="include">
        </childnode>
        <childnode refid="18241" relation="include">
        </childnode>
      </node>
      <node id="18235">
        <label>fcntl.h</label>
      </node>
      <node id="18238">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18210" relation="include">
        </childnode>
        <childnode refid="18217" relation="include">
        </childnode>
        <childnode refid="18225" relation="include">
        </childnode>
      </node>
      <node id="18208">
        <label>string</label>
      </node>
      <node id="18222">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="18209" relation="include">
        </childnode>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18210" relation="include">
        </childnode>
        <childnode refid="18217" relation="include">
        </childnode>
      </node>
      <node id="18228">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="18229" relation="include">
        </childnode>
      </node>
      <node id="18211">
        <label>map</label>
      </node>
      <node id="18227">
        <label>unordered_set</label>
      </node>
      <node id="18242">
        <label>omp.h</label>
      </node>
      <node id="18221">
        <label>exception</label>
      </node>
      <node id="18246">
        <label>random</label>
      </node>
      <node id="18224">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18210" relation="include">
        </childnode>
        <childnode refid="18217" relation="include">
        </childnode>
        <childnode refid="18222" relation="include">
        </childnode>
      </node>
      <node id="18244">
        <label>lbann/metrics/categorical_accuracy.hpp</label>
        <link refid="categorical__accuracy_8hpp"/>
        <childnode refid="18238" relation="include">
        </childnode>
      </node>
      <node id="18234">
        <label>sys/types.h</label>
      </node>
      <node id="18197">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18207" relation="include">
        </childnode>
        <childnode refid="18213" relation="include">
        </childnode>
        <childnode refid="18214" relation="include">
        </childnode>
      </node>
      <node id="18230">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="18220" relation="include">
        </childnode>
        <childnode refid="18209" relation="include">
        </childnode>
        <childnode refid="18231" relation="include">
        </childnode>
        <childnode refid="18211" relation="include">
        </childnode>
      </node>
      <node id="18247">
        <label>typeinfo</label>
      </node>
      <node id="18203">
        <label>cstdio</label>
      </node>
      <node id="18218">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="18219" relation="include">
        </childnode>
        <childnode refid="18208" relation="include">
        </childnode>
      </node>
      <node id="18205">
        <label>cxxabi.h</label>
      </node>
      <node id="18217">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18210" relation="include">
        </childnode>
        <childnode refid="18218" relation="include">
        </childnode>
        <childnode refid="18220" relation="include">
        </childnode>
        <childnode refid="18221" relation="include">
        </childnode>
      </node>
      <node id="18209">
        <label>vector</label>
      </node>
      <node id="18210">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="18209" relation="include">
        </childnode>
        <childnode refid="18211" relation="include">
        </childnode>
        <childnode refid="18212" relation="include">
        </childnode>
        <childnode refid="18198" relation="include">
        </childnode>
      </node>
      <node id="18236">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="18237" relation="include">
        </childnode>
        <childnode refid="18238" relation="include">
        </childnode>
      </node>
      <node id="18232">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="18233" relation="include">
        </childnode>
        <childnode refid="18234" relation="include">
        </childnode>
        <childnode refid="18235" relation="include">
        </childnode>
      </node>
      <node id="18226">
        <label>lbann.pb.h</label>
      </node>
      <node id="18202">
        <label>cstdlib</label>
      </node>
      <node id="18220">
        <label>iostream</label>
      </node>
      <node id="18195">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_ltfb.cpp</label>
        <link refid="callback__ltfb_8cpp"/>
        <childnode refid="18196" relation="include">
        </childnode>
        <childnode refid="18240" relation="include">
        </childnode>
        <childnode refid="18244" relation="include">
        </childnode>
        <childnode refid="18245" relation="include">
        </childnode>
        <childnode refid="18247" relation="include">
        </childnode>
        <childnode refid="18212" relation="include">
        </childnode>
      </node>
      <node id="18215">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="18216" relation="include">
        </childnode>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18210" relation="include">
        </childnode>
        <childnode refid="18217" relation="include">
        </childnode>
        <childnode refid="18222" relation="include">
        </childnode>
        <childnode refid="18223" relation="include">
        </childnode>
        <childnode refid="18208" relation="include">
        </childnode>
        <childnode refid="18227" relation="include">
        </childnode>
      </node>
      <node id="18239">
        <label>unordered_map</label>
      </node>
      <node id="18245">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18210" relation="include">
        </childnode>
        <childnode refid="18225" relation="include">
        </childnode>
        <childnode refid="18246" relation="include">
        </childnode>
      </node>
      <node id="18214">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18210" relation="include">
        </childnode>
        <childnode refid="18207" relation="include">
        </childnode>
        <childnode refid="18215" relation="include">
        </childnode>
        <childnode refid="18217" relation="include">
        </childnode>
        <childnode refid="18222" relation="include">
        </childnode>
        <childnode refid="18228" relation="include">
        </childnode>
        <childnode refid="18225" relation="include">
        </childnode>
        <childnode refid="18226" relation="include">
        </childnode>
        <childnode refid="18208" relation="include">
        </childnode>
        <childnode refid="18209" relation="include">
        </childnode>
      </node>
      <node id="18229">
        <label>chrono</label>
      </node>
      <node id="18237">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18214" relation="include">
        </childnode>
        <childnode refid="18223" relation="include">
        </childnode>
      </node>
      <node id="18219">
        <label>csignal</label>
      </node>
      <node id="18223">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="18208" relation="include">
        </childnode>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18210" relation="include">
        </childnode>
        <childnode refid="18217" relation="include">
        </childnode>
        <childnode refid="18222" relation="include">
        </childnode>
        <childnode refid="18224" relation="include">
        </childnode>
        <childnode refid="18225" relation="include">
        </childnode>
        <childnode refid="18226" relation="include">
        </childnode>
      </node>
      <node id="18206">
        <label>lbann_config.hpp</label>
      </node>
      <node id="18231">
        <label>set</label>
      </node>
      <node id="18213">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="18198" relation="include">
        </childnode>
        <childnode refid="18210" relation="include">
        </childnode>
        <childnode refid="18214" relation="include">
        </childnode>
        <childnode refid="18207" relation="include">
        </childnode>
        <childnode refid="18230" relation="include">
        </childnode>
        <childnode refid="18232" relation="include">
        </childnode>
        <childnode refid="18225" relation="include">
        </childnode>
        <childnode refid="18236" relation="include">
        </childnode>
        <childnode refid="18238" relation="include">
        </childnode>
        <childnode refid="18223" relation="include">
        </childnode>
        <childnode refid="18215" relation="include">
        </childnode>
        <childnode refid="18226" relation="include">
        </childnode>
        <childnode refid="18209" relation="include">
        </childnode>
        <childnode refid="18208" relation="include">
        </childnode>
        <childnode refid="18239" relation="include">
        </childnode>
      </node>
      <node id="18196">
        <label>lbann/callbacks/callback_ltfb.hpp</label>
        <link refid="callback__ltfb_8hpp"/>
        <childnode refid="18197" relation="include">
        </childnode>
      </node>
      <node id="18216">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="18201">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="18202" relation="include">
        </childnode>
        <childnode refid="18203" relation="include">
        </childnode>
        <childnode refid="18204" relation="include">
        </childnode>
        <childnode refid="18205" relation="include">
        </childnode>
      </node>
      <node id="18200">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="18199" relation="include">
        </childnode>
      </node>
      <node id="18243">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="18242" relation="include">
        </childnode>
      </node>
      <node id="18212">
        <label>typeindex</label>
      </node>
      <node id="18204">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <innernamespace refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03">lbann::anonymous_namespace{callback_ltfb.cpp}</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callback__ltfb_8hpp" kindref="compound">lbann/callbacks/callback_ltfb.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callback__imcomm_8hpp" kindref="compound">lbann/callbacks/callback_imcomm.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="categorical__accuracy_8hpp" kindref="compound">lbann/metrics/categorical_accuracy.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="random_8hpp" kindref="compound">lbann/utils/random.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeindex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a1865e25ff1f3b6ad417d1853ea0bc6f4" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a1865e25ff1f3b6ad417d1853ea0bc6f4" kindref="member">assign_partners</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref>*<sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>partner<sp/>assignments<sp/>on<sp/>master<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LTFB<sp/>tournament<sp/>partners:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>num_models<sp/>=<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" kindref="member">get_num_models</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>procs_per_model<sp/>=<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a5755dfdfc6377b4cae5ef8f7819e17de" kindref="member">get_procs_per_model</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>models(num_models);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::iota(models.begin(),<sp/>models.end(),<sp/>0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shuffle(models.begin(),<sp/>models.end(),<sp/><ref refid="namespacelbann_1ae6ce9c2fdec6f81803f6b1a6555c31c5" kindref="member">get_fast_generator</ref>());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>partners(num_models<sp/>*<sp/>procs_per_model);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_models;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>model1<sp/>=<sp/>models[i];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>model2<sp/>=<sp/>(i+1<sp/>&lt;<sp/>num_models)<sp/>?<sp/>models[i+1]<sp/>:<sp/>model1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(i<sp/>&gt;<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model1;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model1<sp/>!=<sp/>model2)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model2;<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::fill_n(partners.begin()<sp/>+<sp/>model1<sp/>*<sp/>procs_per_model,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>procs_per_model,<sp/>model2);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::fill_n(partners.begin()<sp/>+<sp/>model2<sp/>*<sp/>procs_per_model,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>procs_per_model,<sp/>model1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a74b5c594bfa5aec03af9ad2bd8f5e979" kindref="member">scatter</ref>(partners.data(),<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" kindref="member">get_world_comm</ref>());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a74b5c594bfa5aec03af9ad2bd8f5e979" kindref="member">scatter</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(0,<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a0493f1f0c42b95674daacf5288fdb073" kindref="member">get_world_comm</ref>());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2b155d39e6dba02a34a7c58d804d865e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2b155d39e6dba02a34a7c58d804d865e" kindref="member">exchange_weights</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref>*<sp/><ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;weights*&gt;&amp;<sp/>model_weights,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;weights*&gt;&amp;<sp/>local_weights,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partner)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model_weights.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>*local_weights[i]<sp/>=<sp/>*model_weights[i];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_matrix<sp/>=<sp/>local_weights[i]-&gt;get_values();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>remote_matrix<sp/>=<sp/>local_matrix.Copy();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>size<sp/>=<sp/>local_matrix.LocalHeight()<sp/>*<sp/>local_matrix.LocalWidth();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a6314e3b07b21b8fb0cd2ebe1e49dddb9" kindref="member">sendrecv</ref>(local_matrix.LockedBuffer(),<sp/>size,<sp/>partner,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remote_matrix-&gt;Buffer(),<sp/>size,<sp/>partner);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>model_weights[i]-&gt;set_values(*remote_matrix);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>remote_matrix;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2525bf058156612d7847d0754277e4fc" refkind="member"><highlight class="normal"><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref><sp/><ref refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2525bf058156612d7847d0754277e4fc" kindref="member">evaluate</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mode<sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>m-&gt;<ref refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" kindref="member">evaluate</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>m-&gt;<ref refid="classlbann_1_1model_1a375372b5b864ffbc4eaa0963f6939f65" kindref="member">set_execution_mode</ref>(mode);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>met<sp/>:<sp/>m-&gt;<ref refid="classlbann_1_1model_1a84c738fd219b8c2936e76a9360f68936" kindref="member">get_metrics</ref>())<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dynamic_cast&lt;categorical_accuracy_metric*&gt;(met)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>met-&gt;get_mean_value(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a3266f5ac18504bbadea983c109566867" kindref="member">EvalType</ref>(0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classlbann_1_1lbann__callback__ltfb_1a44cb8fdfa7aae5d35543e47f3105f8cb" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1lbann__callback__ltfb_1a44cb8fdfa7aae5d35543e47f3105f8cb" kindref="member">lbann_callback_ltfb::lbann_callback_ltfb</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>round_size,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref><sp/>*summarizer)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1lbann__callback" kindref="compound">lbann_callback</ref>(1,<sp/>summarizer),<sp/>m_round_size(round_size)<sp/>{}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classlbann_1_1lbann__callback__ltfb_1af589490a67c5490ac91210c89ab66295" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1lbann__callback__ltfb_1a44cb8fdfa7aae5d35543e47f3105f8cb" kindref="member">lbann_callback_ltfb::lbann_callback_ltfb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__ltfb" kindref="compound">lbann_callback_ltfb</ref>&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback" kindref="compound">lbann_callback</ref>(other),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a7536bb519c8a89b518a3196f953ac048" kindref="member">m_comm</ref>(other.<ref refid="classlbann_1_1lbann__callback__ltfb_1a7536bb519c8a89b518a3196f953ac048" kindref="member">m_comm</ref>),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a78434b8e8b1dfa43a68a9707473cf789" kindref="member">m_round_size</ref>(other.<ref refid="classlbann_1_1lbann__callback__ltfb_1a78434b8e8b1dfa43a68a9707473cf789" kindref="member">m_round_size</ref>),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a5e5b9917b9eee67b8e14c6e8f95a85a3" kindref="member">m_local_weights</ref>(other.<ref refid="classlbann_1_1lbann__callback__ltfb_1a5e5b9917b9eee67b8e14c6e8f95a85a3" kindref="member">m_local_weights</ref>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a5e5b9917b9eee67b8e14c6e8f95a85a3" kindref="member">m_local_weights</ref>)<sp/>{<sp/>w<sp/>=<sp/>w-&gt;copy();<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classlbann_1_1lbann__callback__ltfb_1a19467cc32f7a1960ec6d62ca1c0cb6b8" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1lbann__callback__ltfb" kindref="compound">lbann_callback_ltfb</ref>&amp;<sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a19467cc32f7a1960ec6d62ca1c0cb6b8" kindref="member">lbann_callback_ltfb::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__ltfb" kindref="compound">lbann_callback_ltfb</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shallow<sp/>copies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a7536bb519c8a89b518a3196f953ac048" kindref="member">m_comm</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1lbann__callback__ltfb_1a7536bb519c8a89b518a3196f953ac048" kindref="member">m_comm</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a78434b8e8b1dfa43a68a9707473cf789" kindref="member">m_round_size</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1lbann__callback__ltfb_1a78434b8e8b1dfa43a68a9707473cf789" kindref="member">m_round_size</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a5e5b9917b9eee67b8e14c6e8f95a85a3" kindref="member">m_local_weights</ref>)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>w;<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>m_local_weights<sp/>=<sp/>other.<ref refid="classlbann_1_1lbann__callback__ltfb_1a5e5b9917b9eee67b8e14c6e8f95a85a3" kindref="member">m_local_weights</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/>m_local_weights)<sp/>{<sp/>w<sp/>=<sp/>w-&gt;copy();<sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classlbann_1_1lbann__callback__ltfb_1abfb61fe2c92147dff98f861adb2d5c74" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1lbann__callback__ltfb_1abfb61fe2c92147dff98f861adb2d5c74" kindref="member">lbann_callback_ltfb::~lbann_callback_ltfb</ref>()<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a5e5b9917b9eee67b8e14c6e8f95a85a3" kindref="member">m_local_weights</ref>)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>w;<sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classlbann_1_1lbann__callback__ltfb_1a7548166d170eda00e4e0cba6626a1a78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a7548166d170eda00e4e0cba6626a1a78" kindref="member">lbann_callback_ltfb::setup</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a7536bb519c8a89b518a3196f953ac048" kindref="member">m_comm</ref><sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>copy<sp/>of<sp/>model<sp/>weights</highlight></codeline>
<codeline lineno="143"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a5e5b9917b9eee67b8e14c6e8f95a85a3" kindref="member">m_local_weights</ref>)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>w;<sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>m_local_weights<sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" kindref="member">get_weights</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/>m_local_weights)<sp/>{<sp/>w<sp/>=<sp/>w-&gt;copy();<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>model<sp/>does<sp/>not<sp/>have<sp/>inter-model<sp/>communication<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>cb<sp/>:<sp/>m-&gt;<ref refid="classlbann_1_1model_1a38c71a455870e087c4c07acb78e4477c" kindref="member">get_callbacks</ref>())<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dynamic_cast&lt;lbann_callback_imcomm*&gt;(cb)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a80b1d707117e968a6951b7222e4b2b87" kindref="member">LBANN_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Detected<sp/>both<sp/>LTFB<sp/>and<sp/>imcomm<sp/>callbacks.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classlbann_1_1lbann__callback__ltfb_1a7d2d1682c4a6a6b7e8ea1e3f4bf33c84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a7d2d1682c4a6a6b7e8ea1e3f4bf33c84" kindref="member">lbann_callback_ltfb::on_batch_begin</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>to<sp/>start<sp/>LTFB<sp/>round</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mode<sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1addb40597cf29aa6d31b6a7d09ef48608" kindref="member">get_execution_mode</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>step<sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>!=<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(step<sp/>%<sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a78434b8e8b1dfa43a68a9707473cf789" kindref="member">m_round_size</ref><sp/>!=<sp/>0<sp/>||<sp/>step<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__callback__ltfb_1a7536bb519c8a89b518a3196f953ac048" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;----<sp/>LTFB<sp/>round<sp/>(step<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>step<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>----&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>partner<sp/>model<sp/>for<sp/>tournament</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_model<sp/>=<sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a7536bb519c8a89b518a3196f953ac048" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" kindref="member">get_model_rank</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>remote_model<sp/>=<sp/><ref refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a1865e25ff1f3b6ad417d1853ea0bc6f4" kindref="member">assign_partners</ref>(<ref refid="classlbann_1_1lbann__callback__ltfb_1a7536bb519c8a89b518a3196f953ac048" kindref="member">m_comm</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remote_model<sp/>==<sp/>local_model)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluate<sp/>local<sp/>model<sp/>on<sp/>tournament<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__callback__ltfb_1a7536bb519c8a89b518a3196f953ac048" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LTFB:<sp/>evaluating<sp/>local<sp/>model...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>local_score<sp/>=<sp/><ref refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2525bf058156612d7847d0754277e4fc" kindref="member">evaluate</ref>(m);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluate<sp/>remote<sp/>model<sp/>on<sp/>tournament<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Weights<sp/>from<sp/>remote<sp/>model<sp/>are<sp/>copied<sp/>into<sp/>local<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__callback__ltfb_1a7536bb519c8a89b518a3196f953ac048" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LTFB:<sp/>evaluating<sp/>remote<sp/>model...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>model_weights<sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" kindref="member">get_weights</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2b155d39e6dba02a34a7c58d804d865e" kindref="member">exchange_weights</ref>(<ref refid="classlbann_1_1lbann__callback__ltfb_1a7536bb519c8a89b518a3196f953ac048" kindref="member">m_comm</ref>,<sp/>model_weights,<sp/><ref refid="classlbann_1_1lbann__callback__ltfb_1a5e5b9917b9eee67b8e14c6e8f95a85a3" kindref="member">m_local_weights</ref>,<sp/>remote_model);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>remote_score<sp/>=<sp/><ref refid="namespacelbann_1_1anonymous__namespace_02callback__ltfb_8cpp_03_1a2525bf058156612d7847d0754277e4fc" kindref="member">evaluate</ref>(m);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>local<sp/>weights<sp/>if<sp/>they<sp/>achieve<sp/>a<sp/>better<sp/>score</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remote_score<sp/>&lt;=<sp/>local_score)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model_weights.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*model_weights[i]<sp/>=<sp/>*<ref refid="classlbann_1_1lbann__callback__ltfb_1a5e5b9917b9eee67b8e14c6e8f95a85a3" kindref="member">m_local_weights</ref>[i];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1lbann__callback__ltfb_1a7536bb519c8a89b518a3196f953ac048" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1ad8a5790dfa9191d4b4f889e8707e57f1" kindref="member">am_model_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LTFB:<sp/>replacing<sp/>model<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>local_model<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>local_score<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%<sp/>categorical<sp/>accuracy)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;with<sp/>model<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>remote_model<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>remote_score<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%<sp/>categorical<sp/>accuracy)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_ltfb.cpp"/>
  </compounddef>
</doxygen>
