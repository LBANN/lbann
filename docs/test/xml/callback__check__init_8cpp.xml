<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="callback__check__init_8cpp" kind="file" language="C++">
    <compoundname>callback_check_init.cpp</compoundname>
    <includes refid="callback__check__init_8hpp" local="yes">lbann/callbacks/callback_check_init.hpp</includes>
    <includes refid="exception_8hpp" local="yes">lbann/utils/exception.hpp</includes>
    <incdepgraph>
      <node id="17373">
        <label>sys/stat.h</label>
      </node>
      <node id="17347">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="17348" relation="include">
        </childnode>
        <childnode refid="17349" relation="include">
        </childnode>
        <childnode refid="17338" relation="include">
        </childnode>
        <childnode refid="17350" relation="include">
        </childnode>
      </node>
      <node id="17365">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="17338" relation="include">
        </childnode>
        <childnode refid="17339" relation="include">
        </childnode>
      </node>
      <node id="17339">
        <label>El.hpp</label>
      </node>
      <node id="17338">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="17339" relation="include">
        </childnode>
        <childnode refid="17340" relation="include">
        </childnode>
        <childnode refid="17341" relation="include">
        </childnode>
        <childnode refid="17346" relation="include">
        </childnode>
      </node>
      <node id="17335">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_check_init.cpp</label>
        <link refid="callback__check__init_8cpp"/>
        <childnode refid="17336" relation="include">
        </childnode>
        <childnode refid="17357" relation="include">
        </childnode>
      </node>
      <node id="17375">
        <label>fcntl.h</label>
      </node>
      <node id="17378">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="17338" relation="include">
        </childnode>
        <childnode refid="17350" relation="include">
        </childnode>
        <childnode refid="17357" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
      </node>
      <node id="17348">
        <label>string</label>
      </node>
      <node id="17362">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="17349" relation="include">
        </childnode>
        <childnode refid="17338" relation="include">
        </childnode>
        <childnode refid="17350" relation="include">
        </childnode>
        <childnode refid="17357" relation="include">
        </childnode>
      </node>
      <node id="17368">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="17369" relation="include">
        </childnode>
      </node>
      <node id="17351">
        <label>map</label>
      </node>
      <node id="17367">
        <label>unordered_set</label>
      </node>
      <node id="17361">
        <label>exception</label>
      </node>
      <node id="17364">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="17338" relation="include">
        </childnode>
        <childnode refid="17350" relation="include">
        </childnode>
        <childnode refid="17357" relation="include">
        </childnode>
        <childnode refid="17362" relation="include">
        </childnode>
      </node>
      <node id="17374">
        <label>sys/types.h</label>
      </node>
      <node id="17337">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="17338" relation="include">
        </childnode>
        <childnode refid="17347" relation="include">
        </childnode>
        <childnode refid="17353" relation="include">
        </childnode>
        <childnode refid="17354" relation="include">
        </childnode>
      </node>
      <node id="17370">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="17360" relation="include">
        </childnode>
        <childnode refid="17349" relation="include">
        </childnode>
        <childnode refid="17371" relation="include">
        </childnode>
        <childnode refid="17351" relation="include">
        </childnode>
      </node>
      <node id="17343">
        <label>cstdio</label>
      </node>
      <node id="17358">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="17359" relation="include">
        </childnode>
        <childnode refid="17348" relation="include">
        </childnode>
      </node>
      <node id="17345">
        <label>cxxabi.h</label>
      </node>
      <node id="17357">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="17338" relation="include">
        </childnode>
        <childnode refid="17350" relation="include">
        </childnode>
        <childnode refid="17358" relation="include">
        </childnode>
        <childnode refid="17360" relation="include">
        </childnode>
        <childnode refid="17361" relation="include">
        </childnode>
      </node>
      <node id="17349">
        <label>vector</label>
      </node>
      <node id="17350">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="17349" relation="include">
        </childnode>
        <childnode refid="17351" relation="include">
        </childnode>
        <childnode refid="17352" relation="include">
        </childnode>
        <childnode refid="17338" relation="include">
        </childnode>
      </node>
      <node id="17376">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="17377" relation="include">
        </childnode>
        <childnode refid="17378" relation="include">
        </childnode>
      </node>
      <node id="17372">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="17373" relation="include">
        </childnode>
        <childnode refid="17374" relation="include">
        </childnode>
        <childnode refid="17375" relation="include">
        </childnode>
      </node>
      <node id="17336">
        <label>lbann/callbacks/callback_check_init.hpp</label>
        <link refid="callback__check__init_8hpp"/>
        <childnode refid="17337" relation="include">
        </childnode>
      </node>
      <node id="17366">
        <label>lbann.pb.h</label>
      </node>
      <node id="17342">
        <label>cstdlib</label>
      </node>
      <node id="17360">
        <label>iostream</label>
      </node>
      <node id="17355">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="17356" relation="include">
        </childnode>
        <childnode refid="17338" relation="include">
        </childnode>
        <childnode refid="17350" relation="include">
        </childnode>
        <childnode refid="17357" relation="include">
        </childnode>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17348" relation="include">
        </childnode>
        <childnode refid="17367" relation="include">
        </childnode>
      </node>
      <node id="17379">
        <label>unordered_map</label>
      </node>
      <node id="17354">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="17338" relation="include">
        </childnode>
        <childnode refid="17350" relation="include">
        </childnode>
        <childnode refid="17347" relation="include">
        </childnode>
        <childnode refid="17355" relation="include">
        </childnode>
        <childnode refid="17357" relation="include">
        </childnode>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17368" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17348" relation="include">
        </childnode>
        <childnode refid="17349" relation="include">
        </childnode>
      </node>
      <node id="17369">
        <label>chrono</label>
      </node>
      <node id="17377">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="17338" relation="include">
        </childnode>
        <childnode refid="17354" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
      </node>
      <node id="17359">
        <label>csignal</label>
      </node>
      <node id="17363">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="17348" relation="include">
        </childnode>
        <childnode refid="17338" relation="include">
        </childnode>
        <childnode refid="17350" relation="include">
        </childnode>
        <childnode refid="17357" relation="include">
        </childnode>
        <childnode refid="17362" relation="include">
        </childnode>
        <childnode refid="17364" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
      </node>
      <node id="17346">
        <label>lbann_config.hpp</label>
      </node>
      <node id="17371">
        <label>set</label>
      </node>
      <node id="17353">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="17338" relation="include">
        </childnode>
        <childnode refid="17350" relation="include">
        </childnode>
        <childnode refid="17354" relation="include">
        </childnode>
        <childnode refid="17347" relation="include">
        </childnode>
        <childnode refid="17370" relation="include">
        </childnode>
        <childnode refid="17372" relation="include">
        </childnode>
        <childnode refid="17365" relation="include">
        </childnode>
        <childnode refid="17376" relation="include">
        </childnode>
        <childnode refid="17378" relation="include">
        </childnode>
        <childnode refid="17363" relation="include">
        </childnode>
        <childnode refid="17355" relation="include">
        </childnode>
        <childnode refid="17366" relation="include">
        </childnode>
        <childnode refid="17349" relation="include">
        </childnode>
        <childnode refid="17348" relation="include">
        </childnode>
        <childnode refid="17379" relation="include">
        </childnode>
      </node>
      <node id="17356">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="17341">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="17342" relation="include">
        </childnode>
        <childnode refid="17343" relation="include">
        </childnode>
        <childnode refid="17344" relation="include">
        </childnode>
        <childnode refid="17345" relation="include">
        </childnode>
      </node>
      <node id="17340">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="17339" relation="include">
        </childnode>
      </node>
      <node id="17352">
        <label>typeindex</label>
      </node>
      <node id="17344">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lbann_callback_check_init<sp/>.hpp<sp/>.cpp<sp/>-<sp/>Check<sp/>multi-model<sp/>init</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callback__check__init_8hpp" kindref="compound">lbann/callbacks/callback_check_init.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">lbann/utils/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classlbann_1_1lbann__callback__check__init_1a037f1371c56c1b528f487517a58ce3fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__check__init_1a037f1371c56c1b528f487517a58ce3fb" kindref="member">lbann_callback_check_init::on_train_begin</ref>(<ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>after<sp/>the<sp/>first<sp/>epoch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="classlbann_1_1model_1a1cf70e098524cc5013bce56edd96dfe7" kindref="member">get_cur_epoch</ref>()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref><sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1model_1a9e1cfe449d2f4858a32994f6be0042fb" kindref="member">get_comm</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>all<sp/>model<sp/>initial<sp/>weights<sp/>match...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" kindref="member">get_num_models</ref>()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>w<sp/>:<sp/>m-&gt;<ref refid="classlbann_1_1model_1ac0a89794f1f51e7c502fff2745c973e6" kindref="member">get_weights</ref>())<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>w-&gt;get_name()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Model<sp/>0<sp/>holds<sp/>the<sp/>master<sp/>copy,<sp/>it<sp/>gathers<sp/>the<sp/>values<sp/>from<sp/>other<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>compares<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>local_matrix<sp/>=<sp/>w-&gt;get_values().LockedMatrix();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref><sp/>remote_matrix(local_matrix.Height(),<sp/>local_matrix.Width());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>=<sp/>1;<sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>&lt;<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1aeb8ef8f13bbb324e3e1f656998198f3f" kindref="member">get_num_models</ref>();<sp/>++<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1ae12af95f4826571efa03fb8520260daa" kindref="member">global_barrier</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" kindref="member">get_model_rank</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1af8842cd4cea390f76d9146e1c4578de4" kindref="member">recv</ref>(remote_matrix,<sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1lbann__callback__check__init_1a9a7a7cffe24967aae2b82d1668c2b87c" kindref="member">check_equal</ref>(local_matrix,<sp/>remote_matrix))<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;check_init:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;model<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;rank<sp/>in<sp/>model<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a789453454468a3b70de768537c50ca52" kindref="member">get_rank_in_model</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;does<sp/>not<sp/>match<sp/>model<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(ss.str());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a6422f70c92bed0b78179facc52b066f7" kindref="member">get_model_rank</ref>()<sp/>==<sp/><ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a20f35e630daf44dbfa4c3f68f5399d8c" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="classlbann_1_1lbann__comm_1a086078b881e7250df140ac116adb1939" kindref="member">send</ref>(local_matrix,<sp/>0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classlbann_1_1lbann__callback__check__init_1a9a7a7cffe24967aae2b82d1668c2b87c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__callback__check__init_1a9a7a7cffe24967aae2b82d1668c2b87c" kindref="member">lbann_callback_check_init::check_equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>y)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>height<sp/>=<sp/>x.Height();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>El::Int<sp/>width<sp/>=<sp/>x.Width();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height<sp/>!=<sp/>y.Height()<sp/>||<sp/>width<sp/>!=<sp/>y.Width()<sp/>||<sp/>x.LDim()<sp/>!=<sp/>y.LDim())<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>*x_buf<sp/>=<sp/>x.LockedBuffer();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>*y_buf<sp/>=<sp/>y.LockedBuffer();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(El::Int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>height<sp/>*<sp/>width;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_buf[i]<sp/>!=<sp/>y_buf[i])<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/callbacks/callback_check_init.cpp"/>
  </compounddef>
</doxygen>
