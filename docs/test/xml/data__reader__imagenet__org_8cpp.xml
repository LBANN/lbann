<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="data__reader__imagenet__org_8cpp" kind="file" language="C++">
    <compoundname>data_reader_imagenet_org.cpp</compoundname>
    <includes refid="data__reader__imagenet__org_8hpp" local="yes">lbann/data_readers/data_reader_imagenet_org.hpp</includes>
    <includes refid="image__utils_8hpp" local="yes">lbann/data_readers/image_utils.hpp</includes>
    <includes local="no">fstream</includes>
    <includes local="no">omp.h</includes>
    <incdepgraph>
      <node id="19282">
        <label>sys/stat.h</label>
      </node>
      <node id="19308">
        <label>lbann/data_readers/image_utils.hpp</label>
        <link refid="image__utils_8hpp"/>
        <childnode refid="19259" relation="include">
        </childnode>
        <childnode refid="19305" relation="include">
        </childnode>
        <childnode refid="19294" relation="include">
        </childnode>
      </node>
      <node id="19289">
        <label>cv_process.hpp</label>
        <link refid="cv__process_8hpp"/>
        <childnode refid="19290" relation="include">
        </childnode>
        <childnode refid="19293" relation="include">
        </childnode>
        <childnode refid="19296" relation="include">
        </childnode>
        <childnode refid="19297" relation="include">
        </childnode>
        <childnode refid="19300" relation="include">
        </childnode>
        <childnode refid="19301" relation="include">
        </childnode>
        <childnode refid="19302" relation="include">
        </childnode>
        <childnode refid="19304" relation="include">
        </childnode>
        <childnode refid="19306" relation="include">
        </childnode>
        <childnode refid="19307" relation="include">
        </childnode>
      </node>
      <node id="19304">
        <label>cv_mean_extractor.hpp</label>
        <link refid="cv__mean__extractor_8hpp"/>
        <childnode refid="19290" relation="include">
        </childnode>
        <childnode refid="19305" relation="include">
        </childnode>
      </node>
      <node id="19307">
        <label>limits</label>
      </node>
      <node id="19285">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="19267" relation="include">
        </childnode>
        <childnode refid="19259" relation="include">
        </childnode>
      </node>
      <node id="19273">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="19259" relation="include">
        </childnode>
        <childnode refid="19260" relation="include">
        </childnode>
      </node>
      <node id="19260">
        <label>El.hpp</label>
      </node>
      <node id="19295">
        <label>lbann/utils/mild_exception.hpp</label>
        <link refid="mild__exception_8hpp"/>
        <childnode refid="19279" relation="include">
        </childnode>
      </node>
      <node id="19259">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="19260" relation="include">
        </childnode>
        <childnode refid="19261" relation="include">
        </childnode>
        <childnode refid="19262" relation="include">
        </childnode>
        <childnode refid="19267" relation="include">
        </childnode>
      </node>
      <node id="19257">
        <label>data_reader_image.hpp</label>
        <link refid="data__reader__image_8hpp"/>
        <childnode refid="19258" relation="include">
        </childnode>
        <childnode refid="19285" relation="include">
        </childnode>
        <childnode refid="19289" relation="include">
        </childnode>
      </node>
      <node id="19286">
        <label>cassert</label>
      </node>
      <node id="19284">
        <label>fcntl.h</label>
      </node>
      <node id="19292">
        <label>opencv_extensions.hpp</label>
        <link refid="opencv__extensions_8hpp"/>
      </node>
      <node id="19300">
        <label>cv_colorizer.hpp</label>
        <link refid="cv__colorizer_8hpp"/>
        <childnode refid="19290" relation="include">
        </childnode>
      </node>
      <node id="19278">
        <label>string</label>
      </node>
      <node id="19271">
        <label>map</label>
      </node>
      <node id="19310">
        <label>omp.h</label>
      </node>
      <node id="19296">
        <label>cv_subtractor.hpp</label>
        <link refid="cv__subtractor_8hpp"/>
        <childnode refid="19290" relation="include">
        </childnode>
        <childnode refid="19259" relation="include">
        </childnode>
      </node>
      <node id="19280">
        <label>exception</label>
      </node>
      <node id="19309">
        <label>fstream</label>
      </node>
      <node id="19298">
        <label>ostream</label>
      </node>
      <node id="19255">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_imagenet_org.cpp</label>
        <link refid="data__reader__imagenet__org_8cpp"/>
        <childnode refid="19256" relation="include">
        </childnode>
        <childnode refid="19308" relation="include">
        </childnode>
        <childnode refid="19309" relation="include">
        </childnode>
        <childnode refid="19310" relation="include">
        </childnode>
      </node>
      <node id="19274">
        <label>random</label>
      </node>
      <node id="19283">
        <label>sys/types.h</label>
      </node>
      <node id="19294">
        <label>typeinfo</label>
      </node>
      <node id="19264">
        <label>cstdio</label>
      </node>
      <node id="19301">
        <label>cv_decolorizer.hpp</label>
        <link refid="cv__decolorizer_8hpp"/>
        <childnode refid="19267" relation="include">
        </childnode>
        <childnode refid="19290" relation="include">
        </childnode>
      </node>
      <node id="19276">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="19277" relation="include">
        </childnode>
        <childnode refid="19278" relation="include">
        </childnode>
      </node>
      <node id="19266">
        <label>cxxabi.h</label>
      </node>
      <node id="19275">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="19259" relation="include">
        </childnode>
        <childnode refid="19269" relation="include">
        </childnode>
        <childnode refid="19276" relation="include">
        </childnode>
        <childnode refid="19279" relation="include">
        </childnode>
        <childnode refid="19280" relation="include">
        </childnode>
      </node>
      <node id="19256">
        <label>lbann/data_readers/data_reader_imagenet_org.hpp</label>
        <link refid="data__reader__imagenet__org_8hpp"/>
        <childnode refid="19257" relation="include">
        </childnode>
        <childnode refid="19285" relation="include">
        </childnode>
      </node>
      <node id="19288">
        <label>unistd.h</label>
      </node>
      <node id="19270">
        <label>vector</label>
      </node>
      <node id="19269">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="19270" relation="include">
        </childnode>
        <childnode refid="19271" relation="include">
        </childnode>
        <childnode refid="19272" relation="include">
        </childnode>
        <childnode refid="19259" relation="include">
        </childnode>
      </node>
      <node id="19303">
        <label>utility</label>
      </node>
      <node id="19281">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="19282" relation="include">
        </childnode>
        <childnode refid="19283" relation="include">
        </childnode>
        <childnode refid="19284" relation="include">
        </childnode>
      </node>
      <node id="19263">
        <label>cstdlib</label>
      </node>
      <node id="19291">
        <label>opencv.hpp</label>
        <link refid="opencv_8hpp"/>
        <childnode refid="19267" relation="include">
        </childnode>
      </node>
      <node id="19279">
        <label>iostream</label>
      </node>
      <node id="19293">
        <label>cv_normalizer.hpp</label>
        <link refid="cv__normalizer_8hpp"/>
        <childnode refid="19294" relation="include">
        </childnode>
        <childnode refid="19290" relation="include">
        </childnode>
        <childnode refid="19259" relation="include">
        </childnode>
        <childnode refid="19295" relation="include">
        </childnode>
      </node>
      <node id="19268">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="19259" relation="include">
        </childnode>
        <childnode refid="19269" relation="include">
        </childnode>
        <childnode refid="19273" relation="include">
        </childnode>
        <childnode refid="19274" relation="include">
        </childnode>
      </node>
      <node id="19290">
        <label>cv_transform.hpp</label>
        <link refid="cv__transform_8hpp"/>
        <childnode refid="19291" relation="include">
        </childnode>
        <childnode refid="19292" relation="include">
        </childnode>
      </node>
      <node id="19297">
        <label>cv_augmenter.hpp</label>
        <link refid="cv__augmenter_8hpp"/>
        <childnode refid="19290" relation="include">
        </childnode>
        <childnode refid="19279" relation="include">
        </childnode>
        <childnode refid="19298" relation="include">
        </childnode>
        <childnode refid="19299" relation="include">
        </childnode>
        <childnode refid="19278" relation="include">
        </childnode>
      </node>
      <node id="19277">
        <label>csignal</label>
      </node>
      <node id="19302">
        <label>cv_cropper.hpp</label>
        <link refid="cv__cropper_8hpp"/>
        <childnode refid="19290" relation="include">
        </childnode>
        <childnode refid="19303" relation="include">
        </childnode>
        <childnode refid="19298" relation="include">
        </childnode>
      </node>
      <node id="19258">
        <label>data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="19259" relation="include">
        </childnode>
        <childnode refid="19268" relation="include">
        </childnode>
        <childnode refid="19275" relation="include">
        </childnode>
        <childnode refid="19269" relation="include">
        </childnode>
        <childnode refid="19281" relation="include">
        </childnode>
        <childnode refid="19273" relation="include">
        </childnode>
        <childnode refid="19285" relation="include">
        </childnode>
        <childnode refid="19286" relation="include">
        </childnode>
        <childnode refid="19287" relation="include">
        </childnode>
        <childnode refid="19278" relation="include">
        </childnode>
        <childnode refid="19270" relation="include">
        </childnode>
        <childnode refid="19288" relation="include">
        </childnode>
      </node>
      <node id="19267">
        <label>lbann_config.hpp</label>
      </node>
      <node id="19305">
        <label>type_traits</label>
      </node>
      <node id="19287">
        <label>algorithm</label>
      </node>
      <node id="19262">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="19263" relation="include">
        </childnode>
        <childnode refid="19264" relation="include">
        </childnode>
        <childnode refid="19265" relation="include">
        </childnode>
        <childnode refid="19266" relation="include">
        </childnode>
      </node>
      <node id="19299">
        <label>cstring</label>
      </node>
      <node id="19261">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="19260" relation="include">
        </childnode>
      </node>
      <node id="19306">
        <label>memory</label>
      </node>
      <node id="19272">
        <label>typeindex</label>
      </node>
      <node id="19265">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>data_reader_imagenet_org<sp/>.hpp<sp/>.cpp<sp/>-<sp/>generic_data_reader<sp/>class<sp/>for<sp/>ImageNet<sp/>dataset</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__reader__imagenet__org_8hpp" kindref="compound">lbann/data_readers/data_reader_imagenet_org.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="image__utils_8hpp" kindref="compound">lbann/data_readers/image_utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classlbann_1_1imagenet__reader__org_1a77d88b53b26f903855da22e5d77ef06a" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1imagenet__reader__org_1a77d88b53b26f903855da22e5d77ef06a" kindref="member">imagenet_reader_org::imagenet_reader_org</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffle)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlbann_1_1image__data__reader" kindref="compound">image_data_reader</ref>(shuffle)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1imagenet__reader__org_1af0d9fc9081013ef0ddd3222dfd9abb8b" kindref="member">set_defaults</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1imagenet__reader__org_1acbe8ed442b64a7391ffa63b0658641c0" kindref="member">allocate_pixel_bufs</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classlbann_1_1imagenet__reader__org_1af0d9fc9081013ef0ddd3222dfd9abb8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1imagenet__reader__org_1af0d9fc9081013ef0ddd3222dfd9abb8b" kindref="member">imagenet_reader_org::set_defaults</ref>()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1image__data__reader_1af001f3d1c0f1c580b66988233b3a64f0" kindref="member">m_image_width</ref><sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1image__data__reader_1a0632efa3deaa9d61e671f741909eb3fe" kindref="member">m_image_height</ref><sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1image__data__reader_1aab1a440f361521dc7bd583cefe1061f8" kindref="member">m_image_num_channels</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1image__data__reader_1a0164b0e3abbe92daef73b36fb925403e" kindref="member">set_linearized_image_size</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1image__data__reader_1af280e8758a6ec3acee7c62e6351d17e0" kindref="member">m_num_labels</ref><sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classlbann_1_1imagenet__reader__org_1afb843084789c6a12e01a5d4a687003cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1imagenet__reader__org_1afb843084789c6a12e01a5d4a687003cf" kindref="member">imagenet_reader_org::set_input_params</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_labels)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1image__data__reader_1a6ed9b8b12ad3ffa93ad458d872f8c044" kindref="member">image_data_reader::set_input_params</ref>(width,<sp/>height,<sp/>num_ch,<sp/>num_labels);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1imagenet__reader__org_1acbe8ed442b64a7391ffa63b0658641c0" kindref="member">allocate_pixel_bufs</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classlbann_1_1imagenet__reader__org_1acbe8ed442b64a7391ffa63b0658641c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1imagenet__reader__org_1acbe8ed442b64a7391ffa63b0658641c0" kindref="member">imagenet_reader_org::allocate_pixel_bufs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Preallocate<sp/>buffer<sp/>space<sp/>for<sp/>each<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1imagenet__reader__org_1ad594a338f0ef9614b63a1950254eb034" kindref="member">m_pixel_bufs</ref>.resize(omp_get_max_threads());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>omp_get_max_threads();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1imagenet__reader__org_1ad594a338f0ef9614b63a1950254eb034" kindref="member">m_pixel_bufs</ref>[i].resize(<ref refid="classlbann_1_1image__data__reader_1af512f1f866c0f654309b7f28886dca9a" kindref="member">m_image_linearized_size</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classlbann_1_1imagenet__reader__org_1ad4c47413e16c1c53000b7d7be757ff6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1imagenet__reader__org_1ad4c47413e16c1c53000b7d7be757ff6e" kindref="member">imagenet_reader_org::fetch_datum</ref>(<ref refid="base_8hpp_1a68f11fdc31b62516cb310831bbe54d73" kindref="member">Mat</ref>&amp;<sp/>X,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mb_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>imagepath<sp/>=<sp/><ref refid="classlbann_1_1generic__data__reader_1ab4c6c2d4ba40ece809ce896828c8ff03" kindref="member">get_file_dir</ref>()<sp/>+<sp/><ref refid="classlbann_1_1image__data__reader_1ae3fc949bd08c45ceafb1a03503261008" kindref="member">m_image_list</ref>[data_id].first;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pixels<sp/>=<sp/><ref refid="classlbann_1_1imagenet__reader__org_1ad594a338f0ef9614b63a1950254eb034" kindref="member">m_pixel_bufs</ref>[tid].data();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="classlbann_1_1image__utils_1a6043097a96cf246ac1b63053ed15962b" kindref="member">lbann::image_utils::loadIMG</ref>(imagepath,<sp/>width,<sp/>height,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>pixels);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ret)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="classlbann_1_1imagenet__reader__org_1ade6e7e9bc1a3f9562c0f274a3d665e0a" kindref="member">get_type</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>image_utils::loadIMG<sp/>failed<sp/>to<sp/>load<sp/>-<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>imagepath);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(width<sp/>!=<sp/><ref refid="classlbann_1_1image__data__reader_1af001f3d1c0f1c580b66988233b3a64f0" kindref="member">m_image_width</ref><sp/>||<sp/>height<sp/>!=<sp/><ref refid="classlbann_1_1image__data__reader_1a0632efa3deaa9d61e671f741909eb3fe" kindref="member">m_image_height</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(std::string{}<sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="classlbann_1_1imagenet__reader__org_1ade6e7e9bc1a3f9562c0f274a3d665e0a" kindref="member">get_type</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>mismatch<sp/>data<sp/>size<sp/>--<sp/>either<sp/>width<sp/>or<sp/>height<sp/>-<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>imagepath<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;[w,h]=[&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(width)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(height)<sp/>+</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="classlbann_1_1image__data__reader_1af512f1f866c0f654309b7f28886dca9a" kindref="member">m_image_linearized_size</ref>;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>X(p,<sp/>mb_idx)<sp/>=<sp/>pixels[p];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pixel_col<sp/>=<sp/>X(El::IR(0,<sp/>X.Height()),<sp/>El::IR(mb_idx,<sp/>mb_idx<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__image__preprocessor_1a27cb5182c4f764cbfa4edecbb78ef29d" kindref="member">augment</ref>(pixel_col,<sp/><ref refid="classlbann_1_1image__data__reader_1a0632efa3deaa9d61e671f741909eb3fe" kindref="member">m_image_height</ref>,<sp/><ref refid="classlbann_1_1image__data__reader_1af001f3d1c0f1c580b66988233b3a64f0" kindref="member">m_image_width</ref>,<sp/><ref refid="classlbann_1_1image__data__reader_1aab1a440f361521dc7bd583cefe1061f8" kindref="member">m_image_num_channels</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__image__preprocessor_1ae370cdc9f776ce8cce94a45cacf47425" kindref="member">normalize</ref>(pixel_col,<sp/><ref refid="classlbann_1_1image__data__reader_1aab1a440f361521dc7bd583cefe1061f8" kindref="member">m_image_num_channels</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1lbann__image__preprocessor_1aece5b572d0a2fe123cc66412d7a5c91e" kindref="member">pixel_noise</ref>(pixel_col);<sp/></highlight><highlight class="comment">//add<sp/>noise<sp/>to<sp/>image,<sp/>disable<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/data_readers/data_reader_imagenet_org.cpp"/>
  </compounddef>
</doxygen>
