<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="model_8cpp" kind="file" language="C++">
    <compoundname>model.cpp</compoundname>
    <includes refid="model_8hpp" local="yes">lbann/models/model.hpp</includes>
    <includes refid="callback_8hpp" local="yes">lbann/callbacks/callback.hpp</includes>
    <includes refid="persist_8hpp" local="yes">lbann/io/persist.hpp</includes>
    <includes refid="generic__input__layer_8hpp" local="yes">lbann/layers/io/input/generic_input_layer.hpp</includes>
    <includes refid="dummy_8hpp" local="yes">lbann/layers/transform/dummy.hpp</includes>
    <includes refid="split_8hpp" local="yes">lbann/layers/transform/split.hpp</includes>
    <includes refid="random_8hpp" local="yes">lbann/utils/random.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">queue</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">lbann.pb.h</includes>
    <includes local="yes">mpi.h</includes>
    <incdepgraph>
      <node id="21599">
        <label>sys/stat.h</label>
      </node>
      <node id="21628">
        <label>iomanip</label>
      </node>
      <node id="21629">
        <label>queue</label>
      </node>
      <node id="21579">
        <label>lbann/utils/summary.hpp</label>
        <link refid="summary_8hpp"/>
        <childnode refid="21580" relation="include">
        </childnode>
        <childnode refid="21575" relation="include">
        </childnode>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21574" relation="include">
        </childnode>
      </node>
      <node id="21621">
        <label>lbann/utils/quantizer.hpp</label>
        <link refid="quantizer_8hpp"/>
        <childnode refid="21605" relation="include">
        </childnode>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21574" relation="include">
        </childnode>
        <childnode refid="21594" relation="include">
        </childnode>
        <childnode refid="21583" relation="include">
        </childnode>
        <childnode refid="21622" relation="include">
        </childnode>
        <childnode refid="21623" relation="include">
        </childnode>
      </node>
      <node id="21612">
        <label>lbann/data_readers/image_preprocessor.hpp</label>
        <link refid="image__preprocessor_8hpp"/>
        <childnode refid="21573" relation="include">
        </childnode>
        <childnode refid="21565" relation="include">
        </childnode>
      </node>
      <node id="21591">
        <label>lbann/io/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21566" relation="include">
        </childnode>
      </node>
      <node id="21566">
        <label>El.hpp</label>
      </node>
      <node id="21565">
        <label>lbann/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="21566" relation="include">
        </childnode>
        <childnode refid="21567" relation="include">
        </childnode>
        <childnode refid="21568" relation="include">
        </childnode>
        <childnode refid="21573" relation="include">
        </childnode>
      </node>
      <node id="21619">
        <label>lbann/io/data_buffers/distributed_io_buffer.hpp</label>
        <link refid="distributed__io__buffer_8hpp"/>
        <childnode refid="21617" relation="include">
        </childnode>
      </node>
      <node id="21620">
        <label>lbann/callbacks/callback_imcomm.hpp</label>
        <link refid="callback__imcomm_8hpp"/>
        <childnode refid="21575" relation="include">
        </childnode>
        <childnode refid="21593" relation="include">
        </childnode>
        <childnode refid="21605" relation="include">
        </childnode>
        <childnode refid="21606" relation="include">
        </childnode>
        <childnode refid="21621" relation="include">
        </childnode>
      </node>
      <node id="21613">
        <label>cassert</label>
      </node>
      <node id="21601">
        <label>fcntl.h</label>
      </node>
      <node id="21604">
        <label>lbann/metrics/metric.hpp</label>
        <link refid="metric_8hpp"/>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21574" relation="include">
        </childnode>
        <childnode refid="21583" relation="include">
        </childnode>
        <childnode refid="21591" relation="include">
        </childnode>
      </node>
      <node id="21608">
        <label>lbann/layers/io/io_layer.hpp</label>
        <link refid="io__layer_8hpp"/>
        <childnode refid="21578" relation="include">
        </childnode>
        <childnode refid="21609" relation="include">
        </childnode>
        <childnode refid="21616" relation="include">
        </childnode>
        <childnode refid="21591" relation="include">
        </childnode>
        <childnode refid="21583" relation="include">
        </childnode>
        <childnode refid="21580" relation="include">
        </childnode>
        <childnode refid="21600" relation="include">
        </childnode>
        <childnode refid="21599" relation="include">
        </childnode>
        <childnode refid="21615" relation="include">
        </childnode>
        <childnode refid="21570" relation="include">
        </childnode>
      </node>
      <node id="21580">
        <label>string</label>
      </node>
      <node id="21617">
        <label>lbann/io/data_buffers/generic_io_buffer.hpp</label>
        <link refid="generic__io__buffer_8hpp"/>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21574" relation="include">
        </childnode>
        <childnode refid="21609" relation="include">
        </childnode>
      </node>
      <node id="21588">
        <label>lbann/utils/cudnn_wrapper.hpp</label>
        <link refid="cudnn__wrapper_8hpp"/>
        <childnode refid="21575" relation="include">
        </childnode>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21574" relation="include">
        </childnode>
        <childnode refid="21583" relation="include">
        </childnode>
      </node>
      <node id="21594">
        <label>lbann/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="21595" relation="include">
        </childnode>
      </node>
      <node id="21576">
        <label>map</label>
      </node>
      <node id="21627">
        <label>lbann/utils/cublas_wrapper.hpp</label>
        <link refid="cublas__wrapper_8hpp"/>
        <childnode refid="21565" relation="include">
        </childnode>
      </node>
      <node id="21593">
        <label>unordered_set</label>
      </node>
      <node id="21622">
        <label>omp.h</label>
      </node>
      <node id="21587">
        <label>exception</label>
      </node>
      <node id="21625">
        <label>lbann/layers/transform/transform.hpp</label>
        <link refid="transform_8hpp"/>
        <childnode refid="21578" relation="include">
        </childnode>
      </node>
      <node id="21611">
        <label>random</label>
      </node>
      <node id="21590">
        <label>lbann/weights/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21574" relation="include">
        </childnode>
        <childnode refid="21583" relation="include">
        </childnode>
        <childnode refid="21588" relation="include">
        </childnode>
      </node>
      <node id="21600">
        <label>sys/types.h</label>
      </node>
      <node id="21606">
        <label>lbann/callbacks/callback.hpp</label>
        <link refid="callback_8hpp"/>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21579" relation="include">
        </childnode>
        <childnode refid="21564" relation="include">
        </childnode>
        <childnode refid="21578" relation="include">
        </childnode>
      </node>
      <node id="21596">
        <label>lbann/utils/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="21586" relation="include">
        </childnode>
        <childnode refid="21575" relation="include">
        </childnode>
        <childnode refid="21597" relation="include">
        </childnode>
        <childnode refid="21576" relation="include">
        </childnode>
      </node>
      <node id="21570">
        <label>cstdio</label>
      </node>
      <node id="21618">
        <label>lbann/io/data_buffers/partitioned_io_buffer.hpp</label>
        <link refid="partitioned__io__buffer_8hpp"/>
        <childnode refid="21617" relation="include">
        </childnode>
      </node>
      <node id="21584">
        <label>lbann/utils/stack_trace.hpp</label>
        <link refid="stack__trace_8hpp"/>
        <childnode refid="21585" relation="include">
        </childnode>
        <childnode refid="21580" relation="include">
        </childnode>
      </node>
      <node id="21572">
        <label>cxxabi.h</label>
      </node>
      <node id="21583">
        <label>lbann/utils/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21574" relation="include">
        </childnode>
        <childnode refid="21584" relation="include">
        </childnode>
        <childnode refid="21586" relation="include">
        </childnode>
        <childnode refid="21587" relation="include">
        </childnode>
      </node>
      <node id="21615">
        <label>unistd.h</label>
      </node>
      <node id="21575">
        <label>vector</label>
      </node>
      <node id="21626">
        <label>lbann/layers/transform/split.hpp</label>
        <link refid="split_8hpp"/>
        <childnode refid="21575" relation="include">
        </childnode>
        <childnode refid="21625" relation="include">
        </childnode>
        <childnode refid="21583" relation="include">
        </childnode>
        <childnode refid="21627" relation="include">
        </childnode>
      </node>
      <node id="21574">
        <label>lbann/comm.hpp</label>
        <link refid="comm_8hpp"/>
        <childnode refid="21575" relation="include">
        </childnode>
        <childnode refid="21576" relation="include">
        </childnode>
        <childnode refid="21577" relation="include">
        </childnode>
        <childnode refid="21565" relation="include">
        </childnode>
      </node>
      <node id="21602">
        <label>lbann/objective_functions/objective_function.hpp</label>
        <link refid="objective__function_8hpp"/>
        <childnode refid="21603" relation="include">
        </childnode>
        <childnode refid="21604" relation="include">
        </childnode>
      </node>
      <node id="21598">
        <label>lbann/io/file_io.hpp</label>
        <link refid="file__io_8hpp"/>
        <childnode refid="21599" relation="include">
        </childnode>
        <childnode refid="21600" relation="include">
        </childnode>
        <childnode refid="21601" relation="include">
        </childnode>
      </node>
      <node id="21592">
        <label>lbann.pb.h</label>
      </node>
      <node id="21569">
        <label>cstdlib</label>
      </node>
      <node id="21607">
        <label>lbann/layers/io/input/generic_input_layer.hpp</label>
        <link refid="generic__input__layer_8hpp"/>
        <childnode refid="21608" relation="include">
        </childnode>
        <childnode refid="21617" relation="include">
        </childnode>
        <childnode refid="21618" relation="include">
        </childnode>
        <childnode refid="21619" relation="include">
        </childnode>
        <childnode refid="21564" relation="include">
        </childnode>
        <childnode refid="21620" relation="include">
        </childnode>
      </node>
      <node id="21586">
        <label>iostream</label>
      </node>
      <node id="21581">
        <label>lbann/optimizers/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="21582" relation="include">
        </childnode>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21574" relation="include">
        </childnode>
        <childnode refid="21583" relation="include">
        </childnode>
        <childnode refid="21588" relation="include">
        </childnode>
        <childnode refid="21589" relation="include">
        </childnode>
        <childnode refid="21580" relation="include">
        </childnode>
        <childnode refid="21593" relation="include">
        </childnode>
      </node>
      <node id="21605">
        <label>unordered_map</label>
      </node>
      <node id="21610">
        <label>lbann/utils/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21574" relation="include">
        </childnode>
        <childnode refid="21591" relation="include">
        </childnode>
        <childnode refid="21611" relation="include">
        </childnode>
      </node>
      <node id="21578">
        <label>lbann/layers/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21574" relation="include">
        </childnode>
        <childnode refid="21579" relation="include">
        </childnode>
        <childnode refid="21581" relation="include">
        </childnode>
        <childnode refid="21583" relation="include">
        </childnode>
        <childnode refid="21588" relation="include">
        </childnode>
        <childnode refid="21594" relation="include">
        </childnode>
        <childnode refid="21591" relation="include">
        </childnode>
        <childnode refid="21592" relation="include">
        </childnode>
        <childnode refid="21580" relation="include">
        </childnode>
        <childnode refid="21575" relation="include">
        </childnode>
      </node>
      <node id="21595">
        <label>chrono</label>
      </node>
      <node id="21624">
        <label>lbann/layers/transform/dummy.hpp</label>
        <link refid="dummy_8hpp"/>
        <childnode refid="21625" relation="include">
        </childnode>
      </node>
      <node id="21603">
        <label>lbann/objective_functions/objective_function_term.hpp</label>
        <link refid="objective__function__term_8hpp"/>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21578" relation="include">
        </childnode>
        <childnode refid="21589" relation="include">
        </childnode>
      </node>
      <node id="21585">
        <label>csignal</label>
      </node>
      <node id="21630">
        <label>mpi.h</label>
      </node>
      <node id="21616">
        <label>lbann/utils/dataset.hpp</label>
        <link refid="dataset_8hpp"/>
        <childnode refid="21609" relation="include">
        </childnode>
      </node>
      <node id="21589">
        <label>lbann/weights/weights.hpp</label>
        <link refid="weights_8hpp"/>
        <childnode refid="21580" relation="include">
        </childnode>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21574" relation="include">
        </childnode>
        <childnode refid="21583" relation="include">
        </childnode>
        <childnode refid="21588" relation="include">
        </childnode>
        <childnode refid="21590" relation="include">
        </childnode>
        <childnode refid="21591" relation="include">
        </childnode>
        <childnode refid="21592" relation="include">
        </childnode>
      </node>
      <node id="21563">
        <label>/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp</label>
        <link refid="model_8cpp"/>
        <childnode refid="21564" relation="include">
        </childnode>
        <childnode refid="21606" relation="include">
        </childnode>
        <childnode refid="21591" relation="include">
        </childnode>
        <childnode refid="21607" relation="include">
        </childnode>
        <childnode refid="21624" relation="include">
        </childnode>
        <childnode refid="21626" relation="include">
        </childnode>
        <childnode refid="21610" relation="include">
        </childnode>
        <childnode refid="21580" relation="include">
        </childnode>
        <childnode refid="21615" relation="include">
        </childnode>
        <childnode refid="21628" relation="include">
        </childnode>
        <childnode refid="21629" relation="include">
        </childnode>
        <childnode refid="21593" relation="include">
        </childnode>
        <childnode refid="21592" relation="include">
        </childnode>
        <childnode refid="21630" relation="include">
        </childnode>
      </node>
      <node id="21609">
        <label>lbann/data_readers/data_reader.hpp</label>
        <link refid="data__reader_8hpp"/>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21610" relation="include">
        </childnode>
        <childnode refid="21583" relation="include">
        </childnode>
        <childnode refid="21574" relation="include">
        </childnode>
        <childnode refid="21598" relation="include">
        </childnode>
        <childnode refid="21591" relation="include">
        </childnode>
        <childnode refid="21612" relation="include">
        </childnode>
        <childnode refid="21613" relation="include">
        </childnode>
        <childnode refid="21614" relation="include">
        </childnode>
        <childnode refid="21580" relation="include">
        </childnode>
        <childnode refid="21575" relation="include">
        </childnode>
        <childnode refid="21615" relation="include">
        </childnode>
      </node>
      <node id="21573">
        <label>lbann_config.hpp</label>
      </node>
      <node id="21597">
        <label>set</label>
      </node>
      <node id="21564">
        <label>lbann/models/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="21565" relation="include">
        </childnode>
        <childnode refid="21574" relation="include">
        </childnode>
        <childnode refid="21578" relation="include">
        </childnode>
        <childnode refid="21579" relation="include">
        </childnode>
        <childnode refid="21596" relation="include">
        </childnode>
        <childnode refid="21598" relation="include">
        </childnode>
        <childnode refid="21591" relation="include">
        </childnode>
        <childnode refid="21602" relation="include">
        </childnode>
        <childnode refid="21604" relation="include">
        </childnode>
        <childnode refid="21589" relation="include">
        </childnode>
        <childnode refid="21581" relation="include">
        </childnode>
        <childnode refid="21592" relation="include">
        </childnode>
        <childnode refid="21575" relation="include">
        </childnode>
        <childnode refid="21580" relation="include">
        </childnode>
        <childnode refid="21605" relation="include">
        </childnode>
      </node>
      <node id="21582">
        <label>lbann/utils/compiler_control.hpp</label>
        <link refid="compiler__control_8hpp"/>
      </node>
      <node id="21614">
        <label>algorithm</label>
      </node>
      <node id="21568">
        <label>lbann/utils/cyg_profile.hpp</label>
        <link refid="cyg__profile_8hpp"/>
        <childnode refid="21569" relation="include">
        </childnode>
        <childnode refid="21570" relation="include">
        </childnode>
        <childnode refid="21571" relation="include">
        </childnode>
        <childnode refid="21572" relation="include">
        </childnode>
      </node>
      <node id="21567">
        <label>lbann/Elemental_extensions.hpp</label>
        <link refid="Elemental__extensions_8hpp"/>
        <childnode refid="21566" relation="include">
        </childnode>
      </node>
      <node id="21623">
        <label>quantizer_impl.hpp</label>
        <link refid="quantizer__impl_8hpp"/>
        <childnode refid="21622" relation="include">
        </childnode>
      </node>
      <node id="21577">
        <label>typeindex</label>
      </node>
      <node id="21571">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structlbann_1_1lbann__model__header" prot="public">lbann::lbann_model_header</innerclass>
    <innernamespace refid="namespacelbann">lbann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Produced<sp/>at<sp/>the<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Laboratory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>the<sp/>LBANN<sp/>Research<sp/>Team<sp/>(B.<sp/>Van<sp/>Essen,<sp/>et<sp/>al.)<sp/>listed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>CONTRIBUTORS<sp/>file.<sp/>&lt;lbann-dev@llnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLNL-CODE-697807.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LBANN:<sp/>Livermore<sp/>Big<sp/>Artificial<sp/>Neural<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toolkit.<sp/>For<sp/>details,<sp/>see<sp/>http://software.llnl.gov/LBANN<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/LLNL/LBANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Licensee&quot;);<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lbann_model<sp/>.hpp<sp/>.cpp<sp/>-<sp/>Abstract<sp/>class<sp/>for<sp/>neural<sp/>network<sp/>models</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="model_8hpp" kindref="compound">lbann/models/model.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callback_8hpp" kindref="compound">lbann/callbacks/callback.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="persist_8hpp" kindref="compound">lbann/io/persist.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="generic__input__layer_8hpp" kindref="compound">lbann/layers/io/input/generic_input_layer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dummy_8hpp" kindref="compound">lbann/layers/transform/dummy.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="split_8hpp" kindref="compound">lbann/layers/transform/split.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="random_8hpp" kindref="compound">lbann/utils/random.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;lbann.pb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mpi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelbann" kindref="compound">lbann</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="comment">//<sp/>Constructors<sp/>and<sp/>destructor</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classlbann_1_1model_1a6feaee921c434bbfc32451ed874cc051" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1model_1a6feaee921c434bbfc32451ed874cc051" kindref="member">model::model</ref>(<ref refid="classlbann_1_1lbann__comm" kindref="compound">lbann_comm</ref><sp/>*<ref refid="file__io_8cpp_1ab048c6f9fcbcfaa57ce68b00263dbebe" kindref="member">comm</ref>,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mini_batch_size,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1objective__function" kindref="compound">objective_function</ref><sp/>*obj_fn,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref>*<sp/>default_optimizer)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>:<sp/>m_objective_function(obj_fn),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>m_execution_mode(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>::<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">training</ref>),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>m_terminate_training(false),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>m_current_epoch(0),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>m_current_step(0),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>m_current_validation_step(0),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>m_current_testing_step(0),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>m_max_mini_batch_size(mini_batch_size),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>m_current_mini_batch_size(mini_batch_size),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>m_effective_mini_batch_size(mini_batch_size),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>m_current_phase(0),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>m_comm(comm),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>m_default_optimizer(default_optimizer)<sp/>{}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classlbann_1_1model_1a03fd1dc3edddb414b040bc009cf73371" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1model_1a6feaee921c434bbfc32451ed874cc051" kindref="member">model::model</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref>&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" kindref="member">m_execution_mode</ref>(other.<ref refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" kindref="member">m_execution_mode</ref>),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" kindref="member">m_terminate_training</ref>(other.<ref refid="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" kindref="member">m_terminate_training</ref>),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" kindref="member">m_current_epoch</ref>(other.<ref refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" kindref="member">m_current_epoch</ref>),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" kindref="member">m_current_step</ref>(other.<ref refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" kindref="member">m_current_step</ref>),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" kindref="member">m_current_validation_step</ref>(other.<ref refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" kindref="member">m_current_validation_step</ref>),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" kindref="member">m_current_testing_step</ref>(other.<ref refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" kindref="member">m_current_testing_step</ref>),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" kindref="member">m_max_mini_batch_size</ref>(other.<ref refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" kindref="member">m_max_mini_batch_size</ref>),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" kindref="member">m_current_mini_batch_size</ref>(other.<ref refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" kindref="member">m_current_mini_batch_size</ref>),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a4887fd2816e7c51b24cb8bf8e4a80a1c" kindref="member">m_effective_mini_batch_size</ref>(other.<ref refid="classlbann_1_1model_1a4887fd2816e7c51b24cb8bf8e4a80a1c" kindref="member">m_effective_mini_batch_size</ref>),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a150ef033f81982936e007b10c421f488" kindref="member">m_current_phase</ref>(other.<ref refid="classlbann_1_1model_1a150ef033f81982936e007b10c421f488" kindref="member">m_current_phase</ref>),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" kindref="member">m_comm</ref>(other.<ref refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" kindref="member">m_comm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" kindref="member">m_metrics</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" kindref="member">m_metrics</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref><sp/>=<sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a8ab03f0dc1d2c067b895f5859bacd810" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m<sp/>:<sp/><ref refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" kindref="member">m_metrics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1objective__function_1a8ab03f0dc1d2c067b895f5859bacd810" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>cb-&gt;<ref refid="classlbann_1_1objective__function_1a8ab03f0dc1d2c067b895f5859bacd810" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;Layer<sp/>*,Layer<sp/>*&gt;<sp/>layer_map;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>l<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>l_copy<sp/>=<sp/>l-&gt;<ref refid="classlbann_1_1objective__function_1a8ab03f0dc1d2c067b895f5859bacd810" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>layer_map[l]<sp/>=<sp/>l_copy;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>l_copy-&gt;set_model(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>l_copy;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;weights<sp/>*,weights<sp/>*&gt;<sp/>weights_map;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>w_copy<sp/>=<sp/>w-&gt;<ref refid="classlbann_1_1objective__function_1a8ab03f0dc1d2c067b895f5859bacd810" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>weights_map[w]<sp/>=<sp/>w_copy;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>w_copy;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" kindref="member">remap_pointers</ref>(layer_map,<sp/>weights_map);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1model" kindref="compound">model</ref>&amp;<sp/><ref refid="classlbann_1_1model_1a05e8bd6c745ce4414be98462147ec52e" kindref="member">model::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model" kindref="compound">model</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>;<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m<sp/>:<sp/><ref refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" kindref="member">m_metrics</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m;<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cb;<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>l<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>l;<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>w;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shallow<sp/>copies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" kindref="member">m_execution_mode</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" kindref="member">m_execution_mode</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" kindref="member">m_terminate_training</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" kindref="member">m_terminate_training</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" kindref="member">m_current_epoch</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" kindref="member">m_current_epoch</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" kindref="member">m_current_step</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" kindref="member">m_current_step</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" kindref="member">m_current_validation_step</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" kindref="member">m_current_validation_step</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" kindref="member">m_current_testing_step</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" kindref="member">m_current_testing_step</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" kindref="member">m_max_mini_batch_size</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" kindref="member">m_max_mini_batch_size</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" kindref="member">m_current_mini_batch_size</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" kindref="member">m_current_mini_batch_size</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a4887fd2816e7c51b24cb8bf8e4a80a1c" kindref="member">m_effective_mini_batch_size</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a4887fd2816e7c51b24cb8bf8e4a80a1c" kindref="member">m_effective_mini_batch_size</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a150ef033f81982936e007b10c421f488" kindref="member">m_current_phase</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a150ef033f81982936e007b10c421f488" kindref="member">m_current_phase</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" kindref="member">m_comm</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" kindref="member">m_comm</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>m_metrics<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" kindref="member">m_metrics</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>m_callbacks<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>m_layers<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>m_weights<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref><sp/>=<sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a8ab03f0dc1d2c067b895f5859bacd810" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m<sp/>:<sp/>m_metrics)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>m-&gt;<ref refid="classlbann_1_1objective__function_1a8ab03f0dc1d2c067b895f5859bacd810" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/>m_callbacks)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>cb-&gt;<ref refid="classlbann_1_1objective__function_1a8ab03f0dc1d2c067b895f5859bacd810" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;Layer<sp/>*,Layer<sp/>*&gt;<sp/>layer_map;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>l<sp/>:<sp/>m_layers)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>layer_map[l]<sp/>=<sp/>l-&gt;<ref refid="classlbann_1_1objective__function_1a8ab03f0dc1d2c067b895f5859bacd810" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;set_model(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;weights<sp/>*,weights<sp/>*&gt;<sp/>weights_map;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/>m_weights)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>weights_map[w]<sp/>=<sp/>w-&gt;<ref refid="classlbann_1_1objective__function_1a8ab03f0dc1d2c067b895f5859bacd810" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" kindref="member">remap_pointers</ref>(layer_map,<sp/>weights_map);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classlbann_1_1model_1ae97a8048de182af3ed8a6fbd92212958" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1model_1ae97a8048de182af3ed8a6fbd92212958" kindref="member">model::~model</ref>()<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>;<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a68df9efe547f53f7bf2a03ac64527990" kindref="member">m_default_optimizer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a68df9efe547f53f7bf2a03ac64527990" kindref="member">m_default_optimizer</ref>;<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>l<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>l;<sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>)<sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>w;<sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m<sp/>:<sp/><ref refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" kindref="member">m_metrics</ref>)<sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m;<sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cb;<sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="comment">//<sp/>Model<sp/>specification</highlight></codeline>
<codeline lineno="177"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="classlbann_1_1model_1a5dfa9895024f07d273062b67d7a0dc01" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a5dfa9895024f07d273062b67d7a0dc01" kindref="member">model::add_layer</ref>(<ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;model:<sp/>Attempted<sp/>to<sp/>add<sp/>null<sp/>pointer<sp/>as<sp/>a<sp/>layer.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.push_back(l);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classlbann_1_1model_1af35fca77e75eb6dd570e4727aa3d5b6b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1af35fca77e75eb6dd570e4727aa3d5b6b" kindref="member">model::add_weights</ref>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;model:<sp/>Attempted<sp/>to<sp/>add<sp/>null<sp/>pointer<sp/>as<sp/>weights.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.push_back(w);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classlbann_1_1model_1a8f45cdca82dbc0cc1f519898474cc6ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a8f45cdca82dbc0cc1f519898474cc6ec" kindref="member">model::add_callback</ref>(<ref refid="classlbann_1_1lbann__callback" kindref="compound">lbann_callback</ref><sp/>*cb)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;model:<sp/>Attempted<sp/>to<sp/>add<sp/>null<sp/>pointer<sp/>as<sp/>a<sp/>callback.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>.push_back(cb);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classlbann_1_1model_1a2ad536c9aeb5a1dfaa5a96107d62c4a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a2ad536c9aeb5a1dfaa5a96107d62c4a4" kindref="member">model::add_metric</ref>(<ref refid="classlbann_1_1metric" kindref="compound">metric</ref><sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;model:<sp/>Attempted<sp/>to<sp/>add<sp/>null<sp/>pointer<sp/>as<sp/>a<sp/>metric.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" kindref="member">m_metrics</ref>.push_back(m);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classlbann_1_1model_1a95fb74f678f69b763d51b2ce987c8fde" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a95fb74f678f69b763d51b2ce987c8fde" kindref="member">model::set_layers</ref>(std::vector&lt;Layer*&gt;&amp;<sp/>layers)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>old<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>layer;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>m_layers.clear();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>new<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/>layers)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a5dfa9895024f07d273062b67d7a0dc01" kindref="member">add_layer</ref>(layer);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classlbann_1_1model_1aaed20219476dc1458bbd058be36de1ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1aaed20219476dc1458bbd058be36de1ec" kindref="member">model::replace_weights</ref>(std::vector&lt;weights*&gt;&amp;<sp/>new_weights)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>number<sp/>of<sp/>weights<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_weights.size()<sp/>&gt;<sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>replace<sp/>weights<sp/>with<sp/>an<sp/>invalid<sp/>number<sp/>of<sp/>weights<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(expected<sp/>at<sp/>most<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>found<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>new_weights.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Replace<sp/>weights<sp/>in<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>std::vector&lt;weights<sp/>*&gt;<sp/>old_weights(<ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.begin(),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.begin()<sp/>+<sp/>new_weights.size());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;weights<sp/>*,weights<sp/>*&gt;<sp/>weights_map;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;Layer<sp/>*,Layer<sp/>*&gt;<sp/>layer_map;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>new_weights.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>[i]<sp/>=<sp/>weights_map[old_weights[i]]<sp/>=<sp/>new_weights[i];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" kindref="member">remap_pointers</ref>(layer_map,<sp/>weights_map);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>old<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/>old_weights)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>w;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classlbann_1_1model_1a0d2d5a1eac592e5721a81a9b9ea4b7f2" refkind="member"><highlight class="normal"><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref>*<sp/><ref refid="classlbann_1_1model_1a0d2d5a1eac592e5721a81a9b9ea4b7f2" kindref="member">model::create_optimizer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a68df9efe547f53f7bf2a03ac64527990" kindref="member">m_default_optimizer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a68df9efe547f53f7bf2a03ac64527990" kindref="member">m_default_optimizer</ref>-&gt;<ref refid="classlbann_1_1optimizer_1adf19a1d19d832ebfe70072cc202cdf39" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="classlbann_1_1model_1a2c82c9def03b1c60e48f52fca7708833" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a2c82c9def03b1c60e48f52fca7708833" kindref="member">model::is_execution_mode_valid</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*input<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classlbann_1_1generic__input__layer" kindref="compound">generic_input_layer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(layer);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!input-&gt;is_execution_mode_valid(mode))<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="classlbann_1_1model_1aef7a4775c70f96610bfc5a4605b946a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1aef7a4775c70f96610bfc5a4605b946a5" kindref="member">model::construct_layer_graph</ref>(std::set&lt;int&gt;&amp;<sp/>nodes,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,std::set&lt;int&gt;&gt;&amp;<sp/>edges)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>nodes.clear();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>edges.clear();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_layers<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.size();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;const<sp/>Layer<sp/>*,int&gt;<sp/>layer_indices;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node<sp/>=<sp/>0;<sp/>node<sp/>&lt;<sp/>num_layers;<sp/>++node)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>nodes.insert(node);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>layer_indices[<ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[node]]<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>std::vector&lt;std::set&lt;int&gt;&gt;<sp/>layer_graph(num_layers);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node<sp/>=<sp/>0;<sp/>node<sp/>&lt;<sp/>num_layers;<sp/>++node)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>child<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[node]-&gt;get_child_layers())<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edges[node].insert(layer_indices[child]);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classlbann_1_1model_1a31c281b63593a0ec7110664f7309b01a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a31c281b63593a0ec7110664f7309b01a" kindref="member">model::permute_layers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>permutation)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>original_layers<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.clear();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>i<sp/>:<sp/>permutation)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.push_back(original_layers[i]);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" kindref="member">model::print_layer_description</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*<sp/>layer)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>os;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::string<sp/>description<sp/>=<sp/>layer-&gt;get_description();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/>std::setw(12)<sp/>&lt;&lt;<sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1a80027550202fa7dbb1dd55fa8a66c84b" kindref="member">get_name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setw(18)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1a0fa0ea9160b490c151c0a17fde4f7239" kindref="member">get_type</ref>()<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;]<sp/>Set<sp/>up<sp/>a<sp/>layer<sp/>with<sp/>input<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setw(7)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1a27112eb70bbfbd7f3c3e749960400dec" kindref="member">get_num_prev_neurons</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setw(7)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1aa4de686cc6c2dd38166f42faf874f227" kindref="member">get_num_neurons</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>neurons.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>std::string<sp/>s<sp/>=<sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1a147a7f7dcf0027a60f10109439e5dcea" kindref="member">get_topo_description</ref>();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer-&gt;<ref refid="classlbann_1_1Layer_1af3c0f9f32eb631f4fdf34ad040ef8637" kindref="member">is_frozen</ref>())<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>frozen&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.str();</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1ac6cc0f5d850cfb997bbbc70eefa0d68f" kindref="member">model::remap_pointers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;Layer<sp/>*,Layer<sp/>*&gt;&amp;<sp/>layer_map,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;weights<sp/>*,weights<sp/>*&gt;&amp;<sp/>weights_map)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>pointers<sp/>in<sp/>objective<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layer_pointers<sp/>=<sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a1055da2236a7faf79c5a2632f8dfc683" kindref="member">get_layer_pointers</ref>();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer_pointer<sp/>:<sp/>layer_pointers)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer_map.count(layer_pointer)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer_pointer<sp/>=<sp/>layer_map.at(layer_pointer);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a0f934e078b55528dd0ec1ec8ad34c73b" kindref="member">set_layer_pointers</ref>(layer_pointers);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>weights_pointers<sp/>=<sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a8e37f76e42f6f341ea3592001b3794e5" kindref="member">get_weights_pointers</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>weights_pointer<sp/>:<sp/>weights_pointers)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weights_map.count(weights_pointer)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights_pointer<sp/>=<sp/>weights_map.at(weights_pointer);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a9c3211354ca1cee8a7ba219f4e56e03c" kindref="member">set_weights_pointers</ref>(weights_pointers);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>pointers<sp/>in<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m<sp/>:<sp/><ref refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" kindref="member">m_metrics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layer_pointers<sp/>=<sp/>m-&gt;get_layer_pointers();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer_pointer<sp/>:<sp/>layer_pointers)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer_map.count(layer_pointer)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer_pointer<sp/>=<sp/>layer_map.at(layer_pointer);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;set_layer_pointers(layer_pointers);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>pointers<sp/>in<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>l<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layer_pointers<sp/>=<sp/>l-&gt;get_layer_pointers();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer_pointer<sp/>:<sp/>layer_pointers)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer_map.count(layer_pointer)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer_pointer<sp/>=<sp/>layer_map.at(layer_pointer);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;set_layer_pointers(layer_pointers);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>weights_pointers<sp/>=<sp/>l-&gt;get_weights();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>weights_pointer<sp/>:<sp/>weights_pointers)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weights_map.count(weights_pointer)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights_pointer<sp/>=<sp/>weights_map.at(weights_pointer);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;set_weights(weights_pointers);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="classlbann_1_1model_1ad0131e36e763470a7bbf67e83b42cd14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1ad0131e36e763470a7bbf67e83b42cd14" kindref="member">model::freeze_layers_under_frozen_surface</ref>()<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>freezing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.size();<sp/>i--<sp/>&gt;<sp/>0u;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>l<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[i];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dynamic_cast&lt;io_layer*&gt;(l)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l-&gt;is_frozen())<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;Frozen<sp/>io_layer!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!freezing)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>freezing<sp/>=<sp/>l-&gt;is_frozen();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;freeze();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="comment">//<sp/>Setup</highlight></codeline>
<codeline lineno="385"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="classlbann_1_1model_1afd9dbca79503a40b7aa5c78da4d6f391" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1afd9dbca79503a40b7aa5c78da4d6f391" kindref="member">model::setup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a7b3e2a643c658dcaa7478d2568f29784" kindref="member">setup_layer_topology</ref>();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1ab0e8af146d4121c1b8b04b4a3c2a455c" kindref="member">setup_layer_execution_order</ref>();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a989ab581e359f65c9238d627cce5b589" kindref="member">setup_layers</ref>();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a582edc0f930e1594381ecc7922e91b08" kindref="member">setup_weights</ref>();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>objective<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1ac14bb274978e0a5182122fd179579878" kindref="member">setup</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m<sp/>:<sp/><ref refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" kindref="member">m_metrics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;setup(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>cb-&gt;setup(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="classlbann_1_1model_1a7b3e2a643c658dcaa7478d2568f29784" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a7b3e2a643c658dcaa7478d2568f29784" kindref="member">model::setup_layer_topology</ref>()<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>layer<sp/>graph<sp/>and<sp/>add<sp/>all<sp/>connected<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a3fb0304e6426dd28a436f50559ef2bef" kindref="member">add_connected_layers</ref>();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>parent/child<sp/>relationships<sp/>are<sp/>reciprocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>parent<sp/>:<sp/>layer-&gt;get_parent_layers())<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(parent)-&gt;add_child_layer(layer);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>child<sp/>:<sp/>layer-&gt;get_child_layers())<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(child)-&gt;add_parent_layer(layer);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>utility<sp/>layers<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a6ba9a836e5ba52c999c5234cfa5e62c2" kindref="member">add_dummy_layers</ref>();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1ac56d43e457cd4dfc3b88122bd10d286e" kindref="member">add_split_layers</ref>();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="classlbann_1_1model_1ab0e8af146d4121c1b8b04b4a3c2a455c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1ab0e8af146d4121c1b8b04b4a3c2a455c" kindref="member">model::setup_layer_execution_order</ref>()<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>input<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>std::vector&lt;generic_input_layer*&gt;<sp/>input_layers;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>std::vector&lt;Layer*&gt;<sp/>other_layers;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>l<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>input<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1generic__input__layer" kindref="compound">generic_input_layer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(l);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>input_layers.push_back(input);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other_layers.push_back(l);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>input<sp/>layers<sp/>are<sp/>executed<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>m_layers.clear();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>m_layers.insert(m_layers.end(),</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_layers.begin(),</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_layers.end());</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>m_layers.insert(m_layers.end(),</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_layers.begin(),</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_layers.end());</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="classlbann_1_1model_1a989ab581e359f65c9238d627cce5b589" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a989ab581e359f65c9238d627cce5b589" kindref="member">model::setup_layers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;set_model(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;setup();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;check_setup();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classlbann_1_1model_1ab173fd93a80a2980059ff292c308cbf5" kindref="member">print_layer_description</ref>(layer)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="classlbann_1_1model_1a582edc0f930e1594381ecc7922e91b08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a582edc0f930e1594381ecc7922e91b08" kindref="member">model::setup_weights</ref>()<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>List<sp/>of<sp/>used<sp/>and<sp/>unused<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>std::unordered_set&lt;weights<sp/>*&gt;<sp/>weights_set(<ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.begin(),</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.end());</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>std::set&lt;weights<sp/>*&gt;<sp/>unused_weights(<ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.begin(),</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.end());</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>weights<sp/>used<sp/>by<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/>layer-&gt;get_weights())<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weights_set.count(w)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.push_back(w);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights_set.insert(w);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unused_weights.erase(w);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>weights<sp/>used<sp/>by<sp/>objective<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a8e37f76e42f6f341ea3592001b3794e5" kindref="member">get_weights_pointers</ref>())<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weights_set.count(w)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.push_back(w);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weights_set.insert(w);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>unused_weights.erase(w);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>unused<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/>unused_weights)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.erase(std::remove(<ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.begin(),<sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.end(),<sp/>w),</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>.end());</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="classlbann_1_1model_1a3fb0304e6426dd28a436f50559ef2bef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a3fb0304e6426dd28a436f50559ef2bef" kindref="member">model::add_connected_layers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>breadth-first<sp/>search<sp/>queue<sp/>with<sp/>layer<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>std::queue&lt;const<sp/>Layer<sp/>*&gt;<sp/>layer_queue;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>std::unordered_set&lt;const<sp/>Layer<sp/>*&gt;<sp/>layer_set;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>layer_queue.push(layer);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>layer_set.insert(layer);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Visit<sp/>nodes<sp/>in<sp/>search<sp/>queue<sp/>until<sp/>it<sp/>is<sp/>exhausted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!layer_queue.empty())<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*layer<sp/>=<sp/>layer_queue.front();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>layer_queue.pop();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>neighbors<sp/>of<sp/>current<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>Layer<sp/>*&gt;<sp/>relatives;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>parent<sp/>:<sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" kindref="member">get_parent_layers</ref>())<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>relatives.push_back(parent);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>child<sp/>:<sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1aa0058c8ec4913efc3e4de5d6f61eb8db" kindref="member">get_child_layers</ref>())<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>relatives.push_back(child);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>neighbors<sp/>to<sp/>search<sp/>queue<sp/>if<sp/>they<sp/>aren&apos;t<sp/>in<sp/>the<sp/>layer<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>relative<sp/>:<sp/>relatives)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer_set.count(relative)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_layers.push_back(const_cast&lt;Layer<sp/>*&gt;(relative));</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer_queue.push(relative);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer_set.insert(relative);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541" refid="classlbann_1_1model_1a6ba9a836e5ba52c999c5234cfa5e62c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a6ba9a836e5ba52c999c5234cfa5e62c2" kindref="member">model::add_dummy_layers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layer<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[i];</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>dummy<sp/>layers<sp/>until<sp/>current<sp/>layer<sp/>has<sp/>enough<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Layer*&gt;<sp/>dummy_layers;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(layer-&gt;get_num_children()<sp/>&lt;<sp/>layer-&gt;get_expected_num_child_layers())<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*dummy<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>cudnn<sp/>=<sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" kindref="member">get_cudnn_manager</ref>();</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(layer-&gt;get_data_layout())<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>:</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummy<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dummy__layer" kindref="compound">dummy_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>(<ref refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" kindref="member">m_comm</ref>,<sp/>cudnn);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0" kindref="member">data_layout::MODEL_PARALLEL</ref>:</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummy<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1dummy__layer" kindref="compound">dummy_layer&lt;data_layout::MODEL_PARALLEL&gt;</ref>(<ref refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" kindref="member">m_comm</ref>,<sp/>cudnn);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>data<sp/>layout&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dummy-&gt;<ref refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" kindref="member">set_name</ref>(layer-&gt;get_name()</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_dummy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::to_string(dummy_layers.size()));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;add_child_layer(dummy);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dummy-&gt;<ref refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" kindref="member">add_parent_layer</ref>(layer);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dummy_layers.push_back(dummy);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>dummy<sp/>layers<sp/>to<sp/>layer<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.insert(<ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.begin()<sp/>+<sp/>i<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummy_layers.begin(),</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummy_layers.end());</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="classlbann_1_1model_1ac56d43e457cd4dfc3b88122bd10d286e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1ac56d43e457cd4dfc3b88122bd10d286e" kindref="member">model::add_split_layers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layer<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[i];</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>split<sp/>layer<sp/>if<sp/>layer<sp/>expects<sp/>one<sp/>child<sp/>but<sp/>has<sp/>multiple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>children<sp/>=<sp/>layer-&gt;get_child_layers();</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer-&gt;get_expected_num_child_layers()<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>children.size()<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>split<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*split;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>cudnn<sp/>=<sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1a63c694744d9360208642a35412a4e8ee" kindref="member">get_cudnn_manager</ref>();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(layer-&gt;get_data_layout())<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dba37d2a3465f7cbf4ab60f4e79944d0638" kindref="member">data_layout::DATA_PARALLEL</ref>:</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1split__layer" kindref="compound">split_layer&lt;data_layout::DATA_PARALLEL&gt;</ref>(<ref refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" kindref="member">m_comm</ref>,<sp/>cudnn);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a786677cbfb3f5677b4d84f3056eb08dbac94d7b0e44ab8bdcdad694a673cdeae0" kindref="member">data_layout::MODEL_PARALLEL</ref>:</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1split__layer" kindref="compound">split_layer&lt;data_layout::MODEL_PARALLEL&gt;</ref>(<ref refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" kindref="member">m_comm</ref>,<sp/>cudnn);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>data<sp/>layout&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>split-&gt;<ref refid="classlbann_1_1Layer_1a82d8a038861b0af0d54fbf44ce715839" kindref="member">set_name</ref>(layer-&gt;get_name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_split&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>relationships<sp/>between<sp/>split<sp/>layer<sp/>and<sp/>child<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>const_child<sp/>:<sp/>children)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*child<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(const_child);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split-&gt;<ref refid="classlbann_1_1Layer_1ace0346ac56fd7ce7b6b44f27f224f35e" kindref="member">add_child_layer</ref>(child);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>child_parents<sp/>=<sp/>child-&gt;<ref refid="classlbann_1_1Layer_1a898e72b93752abf52d35b06459cd360e" kindref="member">get_parent_layers</ref>();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::replace(child_parents.begin(),<sp/>child_parents.end(),</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layer,<sp/>split);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>relationship<sp/>between<sp/>current<sp/>layer<sp/>and<sp/>split<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>children.clear();</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>layer-&gt;add_child_layer(split);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>split-&gt;<ref refid="classlbann_1_1Layer_1a326668ce624a9bcc719a463820b2e3a4" kindref="member">add_parent_layer</ref>(layer);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>split<sp/>layer<sp/>to<sp/>layer<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.insert(<ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.begin()<sp/>+<sp/>i<sp/>+<sp/>1,<sp/>split);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626" refid="classlbann_1_1model_1a32a189033b8ff92d233781b1039c70f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a32a189033b8ff92d233781b1039c70f1" kindref="member">model::get_num_iterations_per_epoch</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1generic__input__layer" kindref="compound">generic_input_layer</ref>*<sp/>input<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>l<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>input<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classlbann_1_1generic__input__layer" kindref="compound">generic_input_layer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(l);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>input-&gt;<ref refid="classlbann_1_1generic__input__layer_1aa0fa6597ffce537f7cfba29dcc754ee1" kindref="member">get_num_iterations_per_epoch</ref>(mode);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="comment">//<sp/>Evaluation<sp/>and<sp/>training</highlight></codeline>
<codeline lineno="642"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643" refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" kindref="member">model::evaluate</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>early<sp/>if<sp/>execution<sp/>mode<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1model_1a2c82c9def03b1c60e48f52fca7708833" kindref="member">is_execution_mode_valid</ref>(mode))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>!=<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>mode<sp/>!=<sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>execution<sp/>mode<sp/>for<sp/>evaluation&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluate<sp/>on<sp/>all<sp/>mini-batches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" kindref="member">reset_epoch_statistics</ref>(mode);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" kindref="member">reset_mode_and_model</ref>(mode);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1ab14bedea05bd5ef549d95ceb2b57b7a4" kindref="member">do_evaluate_begin_cbs</ref>(mode);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" kindref="member">evaluate_mini_batch</ref>(mode))<sp/>{}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1ab123ed691fb6e9f52d468914a1f4460c" kindref="member">do_evaluate_end_cbs</ref>(mode);</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment">//this<sp/>is<sp/>for<sp/>data<sp/>store<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="classlbann_1_1model_1aa819e0d7c8bb178155e40e33037cf054" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1aa819e0d7c8bb178155e40e33037cf054" kindref="member">model::collect_indices</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" kindref="member">reset_mode_and_model</ref>(mode);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[0]-&gt;forward_prop();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>finished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>finished<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[0]-&gt;update()<sp/>&amp;&amp;<sp/>finished;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(finished)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//this<sp/>may<sp/>not<sp/>be<sp/>necessary,<sp/>but<sp/>shouldn&apos;t<sp/>hurt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" kindref="member">reset_epoch_statistics</ref>(mode);</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679" refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a11c79dc3783d11b799bdc40ff9c92ddc" kindref="member">model::train</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_epochs)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a780395fa740102adda5537aa5d257698" kindref="member">do_train_begin_cbs</ref>();</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>epoch<sp/>=<sp/><ref refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" kindref="member">m_current_epoch</ref>;<sp/>epoch<sp/>&lt;<sp/>num_epochs;<sp/>++epoch)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>if<sp/>training<sp/>has<sp/>been<sp/>terminated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a90363b6a20269cf7197701e49f1f52a3" kindref="member">get_terminate_training</ref>())<sp/>{<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>epoch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" kindref="member">reset_mode_and_model</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Train<sp/>on<sp/>mini-batches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a6f975af3ff4921d78a9eb1aca12eaf5e" kindref="member">do_epoch_begin_cbs</ref>();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" kindref="member">train_mini_batch</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Once<sp/>the<sp/>epoch<sp/>is<sp/>complete,<sp/>Increase<sp/>the<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" kindref="member">m_current_epoch</ref>;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a93e43a6c5aaf8ad890ef50ff97dfa176" kindref="member">do_epoch_end_cbs</ref>();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" kindref="member">reset_epoch_statistics</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluate<sp/>on<sp/>validation<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a4191097fdbcd1686525e9cd150f958ef" kindref="member">evaluate</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a13bb6edae42c719b78454a8af9549122" kindref="member">do_train_end_cbs</ref>();</highlight></codeline>
<codeline lineno="701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="comment">//<sp/>At<sp/>the<sp/>start<sp/>of<sp/>the<sp/>epoch,<sp/>set<sp/>the<sp/>execution<sp/>mode<sp/>and<sp/>make<sp/>sure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>each<sp/>layer<sp/>points<sp/>to<sp/>this<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" kindref="member">model::reset_mode_and_model</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a375372b5b864ffbc4eaa0963f6939f65" kindref="member">set_execution_mode</ref>(mode);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>l<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;set_model(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="comment">//<sp/>At<sp/>the<sp/>end<sp/>of<sp/>the<sp/>epoch,<sp/>clean<sp/>up<sp/>the<sp/>objective<sp/>function<sp/>and<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a9c6e9c199ca0ae06b8cf7266971ab9c3" kindref="member">model::reset_epoch_statistics</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1acf7a6c67e7a45a1fd03684ca897d6324" kindref="member">reset_statistics</ref>(mode);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m<sp/>:<sp/><ref refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" kindref="member">m_metrics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;reset_statistics(mode);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a9716a956bdc7d20dbc8ce8bf08bbcea7" kindref="member">model::evaluate_mini_batch</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" kindref="member">reset_mode_and_model</ref>(mode);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a156acfa740b92322d44b6c477636eb26" kindref="member">do_batch_begin_cbs</ref>(mode);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" kindref="member">forward_prop</ref>(mode);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a3edb6708894d31ec2a014c6eb8a61df2" kindref="member">start_evaluation</ref>(mode,<sp/><ref refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" kindref="member">get_current_mini_batch_size</ref>());</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1ad35ce9b7daa87d197d00b1762b691a02" kindref="member">finish_evaluation</ref>(mode,<sp/><ref refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" kindref="member">get_current_mini_batch_size</ref>());</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m<sp/>:<sp/><ref refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" kindref="member">m_metrics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;evaluate(mode,<sp/><ref refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" kindref="member">get_current_mini_batch_size</ref>());</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>finished<sp/>=<sp/><ref refid="classlbann_1_1model_1a7518775e0fd29ed682319193e2d264cc" kindref="member">update_layers</ref>();</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" kindref="member">m_execution_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" kindref="member">m_current_validation_step</ref>;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" kindref="member">m_current_testing_step</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(</highlight><highlight class="stringliteral">&quot;Illegal<sp/>execution<sp/>mode<sp/>in<sp/>evaluate<sp/>mini-batch<sp/>function&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a3dc29e9751a53afda7e171aff335273e" kindref="member">do_batch_end_cbs</ref>(mode);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finished;</highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744" refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a462105993a63277a1ead39c30ebae1bb" kindref="member">model::train_mini_batch</ref>()<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a5d188d75f53e0a4c6161500181b27c03" kindref="member">reset_mode_and_model</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a156acfa740b92322d44b6c477636eb26" kindref="member">do_batch_begin_cbs</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>prop<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1ae4ca41f514498a37503ecc6ba1600bab" kindref="member">clear_gradients</ref>();</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" kindref="member">forward_prop</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Result<sp/>is<sp/>not<sp/>needed<sp/>until<sp/>the<sp/>end<sp/>of<sp/>the<sp/>mini-batch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a3edb6708894d31ec2a014c6eb8a61df2" kindref="member">start_evaluation</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" kindref="member">get_current_mini_batch_size</ref>());</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m<sp/>:<sp/><ref refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" kindref="member">m_metrics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;evaluate(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" kindref="member">get_current_mini_batch_size</ref>());</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Backward<sp/>prop<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a43b3ed176749e0aab6065f274ec2a717" kindref="member">clear_error_signals</ref>();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1ae8b7314bdc12ba52d270b46a35acd138" kindref="member">differentiate</ref>();</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" kindref="member">backward_prop</ref>();</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a7b7f8869bf110846e971fef995db51e1" kindref="member">compute_weight_regularization</ref>();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finish<sp/>evaluation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1ad35ce9b7daa87d197d00b1762b691a02" kindref="member">finish_evaluation</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a3eaad8fd538b99ecab9afca6dc3327fd" kindref="member">get_current_mini_batch_size</ref>());</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a38d8924938fa69857d3f9ed83ac98ee9" kindref="member">update_weights</ref>();</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>finished<sp/>=<sp/><ref refid="classlbann_1_1model_1a7518775e0fd29ed682319193e2d264cc" kindref="member">update_layers</ref>();</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>++<ref refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" kindref="member">m_current_step</ref>;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a3dc29e9751a53afda7e171aff335273e" kindref="member">do_batch_end_cbs</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finished;</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778" refid="classlbann_1_1model_1ae4ca41f514498a37503ecc6ba1600bab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1ae4ca41f514498a37503ecc6ba1600bab" kindref="member">model::clear_gradients</ref>()<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref>*<sp/>opt<sp/>=<sp/>w-&gt;get_optimizer();</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/>opt-&gt;<ref refid="classlbann_1_1optimizer_1a3f41360479fbd46c704342bb4ef36d09" kindref="member">clear_gradient</ref>();<sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785" refid="classlbann_1_1model_1a43b3ed176749e0aab6065f274ec2a717" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a43b3ed176749e0aab6065f274ec2a717" kindref="member">model::clear_error_signals</ref>()<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;clear_error_signals(<ref refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" kindref="member">m_current_mini_batch_size</ref>);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791" refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1adc4f845c8e292afe2d8686f459729484" kindref="member">model::forward_prop</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1af3c45642bbacf1bd07e8504d7e689ec0" kindref="member">do_model_forward_prop_begin_cbs</ref>(mode);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" kindref="member">do_layer_forward_prop_begin_cbs</ref>(mode,<sp/>layer);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;forward_prop();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" kindref="member">do_layer_forward_prop_end_cbs</ref>(mode,<sp/>layer);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a9d67f4f3a027327d2db8767759f9c2bf" kindref="member">do_model_forward_prop_end_cbs</ref>(mode);</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a2ce4444efaab4dd1236c837d6847e438" kindref="member">model::backward_prop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a8a60eee343381e657b2c042637e56751" kindref="member">do_model_backward_prop_begin_cbs</ref>();</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.size()<sp/>-<sp/>1;<sp/>l<sp/>&gt;=<sp/>0;<sp/>--l)<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>backward<sp/>prop<sp/>step<sp/>on<sp/>current<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*layer<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[l];</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a51dc59ea8dd4bc689854732269aaf001" kindref="member">do_layer_backward_prop_begin_cbs</ref>(layer);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;<ref refid="classlbann_1_1Layer_1a0a502d9218d7dbbfd10ebebb6f917033" kindref="member">back_prop</ref>();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1ab0939d2668cca7efc2cc52355d34df3b" kindref="member">do_layer_backward_prop_end_cbs</ref>(layer);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Terminate<sp/>early<sp/>if<sp/>all<sp/>gradients<sp/>have<sp/>been<sp/>computed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_gradients_computed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>w<sp/>:<sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>opt<sp/>=<sp/>w-&gt;get_optimizer();</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>opt-&gt;get_num_gradient_sources()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_gradients_computed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(all_gradients_computed)<sp/>{<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a737a0129eadf52be476034888b3eedc2" kindref="member">do_model_backward_prop_end_cbs</ref>();</highlight></codeline>
<codeline lineno="824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826" refid="classlbann_1_1model_1a38d8924938fa69857d3f9ed83ac98ee9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a38d8924938fa69857d3f9ed83ac98ee9" kindref="member">model::update_weights</ref>()<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a19c96544ccf733646f3454be887f3a08" kindref="member">do_model_optimize_begin_cbs</ref>();</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/><ref refid="classlbann_1_1model_1aaf9adefe4497d90bf5bc2567e71bfb00" kindref="member">m_weights</ref>)<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1optimizer" kindref="compound">optimizer</ref>*<sp/>opt<sp/>=<sp/>w-&gt;get_optimizer();</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a24b668fa62ce0215d3b1773636b7eced" kindref="member">do_weight_optimize_begin_cbs</ref>(w);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="classlbann_1_1optimizer_1aa9f43ca3f22edc0a25d0509b6514a411" kindref="member">step</ref>();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1af1e22d2b06d0ca90ae79fd5cf1d82066" kindref="member">do_weight_optimize_end_cbs</ref>(w);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1ac0b37e4f4881e274bd9c4889d4852fe8" kindref="member">do_model_optimize_end_cbs</ref>();</highlight></codeline>
<codeline lineno="837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839" refid="classlbann_1_1model_1a7518775e0fd29ed682319193e2d264cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a7518775e0fd29ed682319193e2d264cc" kindref="member">model::update_layers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>finished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>.size()<sp/>-<sp/>1;<sp/>l<sp/>&gt;=<sp/>0;<sp/>--l)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>finished<sp/>=<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>[l]-&gt;update()<sp/>&amp;&amp;<sp/>finished;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finished;</highlight></codeline>
<codeline lineno="845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="comment">//<sp/>Callbacks</highlight></codeline>
<codeline lineno="850"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851" refid="classlbann_1_1model_1a780395fa740102adda5537aa5d257698" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a780395fa740102adda5537aa5d257698" kindref="member">model::do_train_begin_cbs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>cb-&gt;on_train_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857" refid="classlbann_1_1model_1a13bb6edae42c719b78454a8af9549122" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a13bb6edae42c719b78454a8af9549122" kindref="member">model::do_train_end_cbs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>cb-&gt;on_train_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863" refid="classlbann_1_1model_1ab14bedea05bd5ef549d95ceb2b57b7a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1ab14bedea05bd5ef549d95ceb2b57b7a4" kindref="member">model::do_evaluate_begin_cbs</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_validation_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_test_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>execution<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879" refid="classlbann_1_1model_1ab123ed691fb6e9f52d468914a1f4460c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1ab123ed691fb6e9f52d468914a1f4460c" kindref="member">model::do_evaluate_end_cbs</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_validation_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_test_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>execution<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895" refid="classlbann_1_1model_1a6f975af3ff4921d78a9eb1aca12eaf5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a6f975af3ff4921d78a9eb1aca12eaf5e" kindref="member">model::do_epoch_begin_cbs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>cb-&gt;on_epoch_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901" refid="classlbann_1_1model_1a93e43a6c5aaf8ad890ef50ff97dfa176" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a93e43a6c5aaf8ad890ef50ff97dfa176" kindref="member">model::do_epoch_end_cbs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>cb-&gt;on_epoch_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907" refid="classlbann_1_1model_1a156acfa740b92322d44b6c477636eb26" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a156acfa740b92322d44b6c477636eb26" kindref="member">model::do_batch_begin_cbs</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>:</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_batch_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_batch_evaluate_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>execution<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928" refid="classlbann_1_1model_1a3dc29e9751a53afda7e171aff335273e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a3dc29e9751a53afda7e171aff335273e" kindref="member">model::do_batch_end_cbs</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>:</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_batch_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_batch_evaluate_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>execution<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949" refid="classlbann_1_1model_1af3c45642bbacf1bd07e8504d7e689ec0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1af3c45642bbacf1bd07e8504d7e689ec0" kindref="member">model::do_model_forward_prop_begin_cbs</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>:</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_forward_prop_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_evaluate_forward_prop_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>execution<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970" refid="classlbann_1_1model_1a9d67f4f3a027327d2db8767759f9c2bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a9d67f4f3a027327d2db8767759f9c2bf" kindref="member">model::do_model_forward_prop_end_cbs</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>:</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_forward_prop_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_evaluate_forward_prop_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>execution<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991" refid="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1ac19ce0dd060f9caddd6e14974a6e7713" kindref="member">model::do_layer_forward_prop_begin_cbs</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode,<sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>:</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_forward_prop_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>l);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_evaluate_forward_prop_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>l);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>execution<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012" refid="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a7d6b891f58a7df9726e4f2c48d1f957a" kindref="member">model::do_layer_forward_prop_end_cbs</ref>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref><sp/>mode,<sp/><ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8ac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">execution_mode::training</ref>:</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_forward_prop_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>l);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aa617908b172c473cb8e8cda059e55bf0" kindref="member">execution_mode::validation</ref>:</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8aae2b1fca515949e5d54fb22b8ed95575" kindref="member">execution_mode::testing</ref>:</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_evaluate_forward_prop_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>l);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>err;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>::<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>execution<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1lbann__exception" kindref="compound">lbann_exception</ref>(err.str());</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033" refid="classlbann_1_1model_1a8a60eee343381e657b2c042637e56751" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a8a60eee343381e657b2c042637e56751" kindref="member">model::do_model_backward_prop_begin_cbs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_backward_prop_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041" refid="classlbann_1_1model_1a737a0129eadf52be476034888b3eedc2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a737a0129eadf52be476034888b3eedc2" kindref="member">model::do_model_backward_prop_end_cbs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_backward_prop_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049" refid="classlbann_1_1model_1a51dc59ea8dd4bc689854732269aaf001" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a51dc59ea8dd4bc689854732269aaf001" kindref="member">model::do_layer_backward_prop_begin_cbs</ref>(<ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_backward_prop_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>l);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057" refid="classlbann_1_1model_1ab0939d2668cca7efc2cc52355d34df3b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1ab0939d2668cca7efc2cc52355d34df3b" kindref="member">model::do_layer_backward_prop_end_cbs</ref>(<ref refid="classlbann_1_1Layer" kindref="compound">Layer</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_backward_prop_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>l);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065" refid="classlbann_1_1model_1a19c96544ccf733646f3454be887f3a08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a19c96544ccf733646f3454be887f3a08" kindref="member">model::do_model_optimize_begin_cbs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_optimize_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073" refid="classlbann_1_1model_1ac0b37e4f4881e274bd9c4889d4852fe8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1ac0b37e4f4881e274bd9c4889d4852fe8" kindref="member">model::do_model_optimize_end_cbs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_optimize_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081" refid="classlbann_1_1model_1a24b668fa62ce0215d3b1773636b7eced" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a24b668fa62ce0215d3b1773636b7eced" kindref="member">model::do_weight_optimize_begin_cbs</ref>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w)<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_optimize_begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>w);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089" refid="classlbann_1_1model_1af1e22d2b06d0ca90ae79fd5cf1d82066" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1af1e22d2b06d0ca90ae79fd5cf1d82066" kindref="member">model::do_weight_optimize_end_cbs</ref>(<ref refid="classlbann_1_1weights" kindref="compound">weights</ref><sp/>*w)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/><ref refid="classlbann_1_1model_1a07b511fef30368494c2ad80922ffd0eb" kindref="member">m_callbacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>()<sp/>%<sp/>cb-&gt;get_batch_interval()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;on_optimize_end(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>w);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="comment">//<sp/>Summarizer</highlight></codeline>
<codeline lineno="1100"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101" refid="classlbann_1_1model_1a1eb5efcc8f73ba9478b2ce1efb9f2d8c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a1eb5efcc8f73ba9478b2ce1efb9f2d8c" kindref="member">model::summarize_stats</ref>(<ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref>&amp;<sp/>summarizer)<sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;summarize_stats(summarizer,<sp/><ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>summarizer.<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(</highlight><highlight class="stringliteral">&quot;objective&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a0aa271e497363e97ba3741292961d47d" kindref="member">get_mean_value</ref>(<ref refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" kindref="member">m_execution_mode</ref>),</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>summarizer.<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;objective_evaluation_time&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a4a23b4c51fe61584c97a471d28f7b8d7" kindref="member">get_evaluation_time</ref>(),</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>summarizer.<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;objective_differentiation_time&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1af968b6949c170721d04895f1268b03dd" kindref="member">get_differentiation_time</ref>(),</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a24c50e7108dd7698671aed7df5b22e8b" kindref="member">m_objective_function</ref>-&gt;<ref refid="classlbann_1_1objective__function_1a92b248be17049b1d7e82accbd913d6f1" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_metric_time<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>m<sp/>:<sp/><ref refid="classlbann_1_1model_1ae75c9aafe9e5a93980cc1bbae986bc79" kindref="member">m_metrics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>total_metric_time<sp/>+=<sp/>m-&gt;get_evaluate_time();</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;reset_counters();</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>summarizer.<ref refid="classlbann_1_1lbann__summary_1a3e0b9aae1f80403a195567fd25ea2525" kindref="member">reduce_scalar</ref>(</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;metric_evaluation_time&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>total_metric_time,</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128" refid="classlbann_1_1model_1a0824e757e4806fad77630d69926a8911" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a0824e757e4806fad77630d69926a8911" kindref="member">model::summarize_matrices</ref>(<ref refid="classlbann_1_1lbann__summary" kindref="compound">lbann_summary</ref>&amp;<sp/>summarizer)<sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>layer<sp/>:<sp/><ref refid="classlbann_1_1model_1a0229fc226ec163d1411548446104569d" kindref="member">m_layers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>layer-&gt;summarize_matrices(summarizer,<sp/><ref refid="classlbann_1_1model_1ad0cdcba177434b52dc9c4a97be183a92" kindref="member">get_cur_step</ref>());</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="comment">//<sp/>Checkpointing</highlight></codeline>
<codeline lineno="1137"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>struct<sp/>used<sp/>to<sp/>serialize<sp/>mode<sp/>fields<sp/>in<sp/>file<sp/>and<sp/>MPI<sp/>transfer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139" refid="structlbann_1_1lbann__model__header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlbann_1_1lbann__model__header" kindref="compound">lbann_model_header</ref><sp/>{</highlight></codeline>
<codeline lineno="1140" refid="structlbann_1_1lbann__model__header_1a70b35a6df7370854031470dfbd9bfc9f" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structlbann_1_1lbann__model__header_1a70b35a6df7370854031470dfbd9bfc9f" kindref="member">execution_mode</ref>;</highlight></codeline>
<codeline lineno="1141" refid="structlbann_1_1lbann__model__header_1af2f1bf6aa2757a032ae57e45f6ed1492" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structlbann_1_1lbann__model__header_1af2f1bf6aa2757a032ae57e45f6ed1492" kindref="member">terminate_training</ref>;</highlight></codeline>
<codeline lineno="1142" refid="structlbann_1_1lbann__model__header_1a72aeacf8c97595c1dffa7a15ed0dd050" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="structlbann_1_1lbann__model__header_1a72aeacf8c97595c1dffa7a15ed0dd050" kindref="member">current_epoch</ref>;</highlight></codeline>
<codeline lineno="1143" refid="structlbann_1_1lbann__model__header_1ab8771bd77cc16b6653a1104ab32dcc03" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="structlbann_1_1lbann__model__header_1ab8771bd77cc16b6653a1104ab32dcc03" kindref="member">current_step</ref>;</highlight></codeline>
<codeline lineno="1144" refid="structlbann_1_1lbann__model__header_1abab193479ad299b6e92989cb28e2c8f7" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="structlbann_1_1lbann__model__header_1abab193479ad299b6e92989cb28e2c8f7" kindref="member">current_validation_step</ref>;</highlight></codeline>
<codeline lineno="1145" refid="structlbann_1_1lbann__model__header_1aa5c0383d2e3992037fc622f632e56f04" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="structlbann_1_1lbann__model__header_1aa5c0383d2e3992037fc622f632e56f04" kindref="member">current_testing_step</ref>;</highlight></codeline>
<codeline lineno="1146" refid="structlbann_1_1lbann__model__header_1a3d2c22795b490f339ff1171db43399b2" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structlbann_1_1lbann__model__header_1a3d2c22795b490f339ff1171db43399b2" kindref="member">max_mini_batch_size</ref>;</highlight></codeline>
<codeline lineno="1147" refid="structlbann_1_1lbann__model__header_1abe843d9cecf1916028026cb1f0069245" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structlbann_1_1lbann__model__header_1abe843d9cecf1916028026cb1f0069245" kindref="member">current_mini_batch_size</ref>;</highlight></codeline>
<codeline lineno="1148" refid="structlbann_1_1lbann__model__header_1adadd68a882ba782a3899fdd6c83e2a59" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structlbann_1_1lbann__model__header_1adadd68a882ba782a3899fdd6c83e2a59" kindref="member">current_phase</ref>;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151" refid="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a3d589d2e46ad35d0a1221e25bef70fa4" kindref="member">model::save_to_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val_end)<sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>out<sp/>fields<sp/>we<sp/>need<sp/>to<sp/>save<sp/>for<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="classlbann_1_1persist_1a34eb918a890ab49dcbeedddf27ec1616" kindref="member">get_rank</ref>()<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>!val_end)<sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1a742334568de0aca958dbaf7bbabd3cba" kindref="member">write_uint32</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;execution_mode&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>(uint32_t)<sp/><ref refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" kindref="member">m_execution_mode</ref>);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1a742334568de0aca958dbaf7bbabd3cba" kindref="member">write_uint32</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;terminate_training&quot;</highlight><highlight class="normal">,<sp/>(uint32_t)<sp/><ref refid="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" kindref="member">m_terminate_training</ref>);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aced95e3bc711276b072af97b65ef9fc1" kindref="member">write_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;current_epoch&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)<sp/><ref refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" kindref="member">m_current_epoch</ref>);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aced95e3bc711276b072af97b65ef9fc1" kindref="member">write_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;current_step&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)<sp/><ref refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" kindref="member">m_current_step</ref>);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aced95e3bc711276b072af97b65ef9fc1" kindref="member">write_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;current_testing_step&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)<sp/><ref refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" kindref="member">m_current_testing_step</ref>);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1a742334568de0aca958dbaf7bbabd3cba" kindref="member">write_uint32</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;max_mini_batch_size&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)<sp/><ref refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" kindref="member">m_max_mini_batch_size</ref>);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1a742334568de0aca958dbaf7bbabd3cba" kindref="member">write_uint32</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;current_mini_batch_size&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)<sp/><ref refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" kindref="member">m_current_mini_batch_size</ref>);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1a742334568de0aca958dbaf7bbabd3cba" kindref="member">write_uint32</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;current_phase&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)<sp/><ref refid="classlbann_1_1model_1a150ef033f81982936e007b10c421f488" kindref="member">m_current_phase</ref>);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p.<ref refid="classlbann_1_1persist_1a34eb918a890ab49dcbeedddf27ec1616" kindref="member">get_rank</ref>()<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>val_end){</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aced95e3bc711276b072af97b65ef9fc1" kindref="member">write_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56af9ab05454998236921a6b0e281fae632" kindref="member">persist_type::validate</ref>,<sp/></highlight><highlight class="stringliteral">&quot;current_validataion_step&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)<sp/><ref refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" kindref="member">m_current_validation_step</ref>);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelbann_1af68acf5b249e5360289d4c6a7bfa8985" kindref="member">save_rng_to_checkpoint_shared</ref>(p);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(const<sp/>auto&amp;<sp/>m<sp/>:<sp/>m_metrics)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>m-&gt;save_to_checkpoint_shared(p);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173" refid="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a2e02dda11636e015ea0c892ffa541881" kindref="member">model::load_from_checkpoint_shared</ref>(<ref refid="classlbann_1_1persist" kindref="compound">persist</ref>&amp;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>rank<sp/>0<sp/>read<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>state<sp/>from<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlbann_1_1lbann__model__header" kindref="compound">lbann_model_header</ref><sp/>header;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="classlbann_1_1persist_1a34eb918a890ab49dcbeedddf27ec1616" kindref="member">get_rank</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1ace1ebb58e2570693cdce0ebd2817113b" kindref="member">read_uint32</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;execution_mode&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>&amp;header.<ref refid="structlbann_1_1lbann__model__header_1a70b35a6df7370854031470dfbd9bfc9f" kindref="member">execution_mode</ref>);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1ace1ebb58e2570693cdce0ebd2817113b" kindref="member">read_uint32</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;terminate_training&quot;</highlight><highlight class="normal">,<sp/>&amp;header.<ref refid="structlbann_1_1lbann__model__header_1af2f1bf6aa2757a032ae57e45f6ed1492" kindref="member">terminate_training</ref>);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aa6d996db3714a7ae055adac0d8e8ac63" kindref="member">read_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;current_epoch&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>&amp;header.<ref refid="structlbann_1_1lbann__model__header_1a72aeacf8c97595c1dffa7a15ed0dd050" kindref="member">current_epoch</ref>);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aa6d996db3714a7ae055adac0d8e8ac63" kindref="member">read_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;current_step&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;header.<ref refid="structlbann_1_1lbann__model__header_1ab8771bd77cc16b6653a1104ab32dcc03" kindref="member">current_step</ref>);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aa6d996db3714a7ae055adac0d8e8ac63" kindref="member">read_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56af9ab05454998236921a6b0e281fae632" kindref="member">persist_type::validate</ref>,<sp/></highlight><highlight class="stringliteral">&quot;current_validation_step&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;header.<ref refid="structlbann_1_1lbann__model__header_1abab193479ad299b6e92989cb28e2c8f7" kindref="member">current_validation_step</ref>);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1aa6d996db3714a7ae055adac0d8e8ac63" kindref="member">read_uint64</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;current_testing_step&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;header.<ref refid="structlbann_1_1lbann__model__header_1aa5c0383d2e3992037fc622f632e56f04" kindref="member">current_testing_step</ref>);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1ace1ebb58e2570693cdce0ebd2817113b" kindref="member">read_uint32</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;max_mini_batch_size&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>&amp;header.<ref refid="structlbann_1_1lbann__model__header_1a3d2c22795b490f339ff1171db43399b2" kindref="member">max_mini_batch_size</ref>);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1ace1ebb58e2570693cdce0ebd2817113b" kindref="member">read_uint32</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;current_mini_batch_size&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>&amp;header.<ref refid="structlbann_1_1lbann__model__header_1abe843d9cecf1916028026cb1f0069245" kindref="member">current_mini_batch_size</ref>);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="classlbann_1_1persist_1ace1ebb58e2570693cdce0ebd2817113b" kindref="member">read_uint32</ref>(<ref refid="namespacelbann_1adee41f31f15f3906cbdcce4a1417eb56a61b3a8faa9c1091806675c230a9abe64" kindref="member">persist_type::train</ref>,<sp/></highlight><highlight class="stringliteral">&quot;current_phase&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>&amp;header.<ref refid="structlbann_1_1lbann__model__header_1adadd68a882ba782a3899fdd6c83e2a59" kindref="member">current_phase</ref>);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelbann_1ab76114a0e8cc90c28bcb9e7d01eec89a" kindref="member">load_rng_from_checkpoint_shared</ref>(p);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>this<sp/>assumes<sp/>homogeneous<sp/>processors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>broadcast<sp/>state<sp/>from<sp/>rank<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>MPI_Bcast(&amp;header,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(header),<sp/>MPI_BYTE,<sp/>0,<sp/>MPI_COMM_WORLD);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>our<sp/>member<sp/>params<sp/>from<sp/>values<sp/>read<sp/>from<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a2166e2aad256a335ace3bdcae5da2614" kindref="member">m_execution_mode</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="base_8hpp_1a2781a159088df64ed7d47cc91c4dc0a8" kindref="member">execution_mode</ref>)<sp/>header.<ref refid="structlbann_1_1lbann__model__header_1a70b35a6df7370854031470dfbd9bfc9f" kindref="member">execution_mode</ref>;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a639f9c3fcb81b905085f8b1932f8920f" kindref="member">m_terminate_training</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structlbann_1_1lbann__model__header_1af2f1bf6aa2757a032ae57e45f6ed1492" kindref="member">terminate_training</ref>;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a305fac94b9063e59198c7f936923221a" kindref="member">m_current_epoch</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(int)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structlbann_1_1lbann__model__header_1a72aeacf8c97595c1dffa7a15ed0dd050" kindref="member">current_epoch</ref>;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1af31a76afc53061747d2170a65e98f692" kindref="member">m_current_step</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structlbann_1_1lbann__model__header_1ab8771bd77cc16b6653a1104ab32dcc03" kindref="member">current_step</ref>;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1af69e5f6bf49a4990fd4c18984705ab87" kindref="member">m_current_validation_step</ref><sp/>=<sp/>(int)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structlbann_1_1lbann__model__header_1abab193479ad299b6e92989cb28e2c8f7" kindref="member">current_validation_step</ref>;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a2acf043862ba878cb7a91cb0d26c3791" kindref="member">m_current_testing_step</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structlbann_1_1lbann__model__header_1aa5c0383d2e3992037fc622f632e56f04" kindref="member">current_testing_step</ref>;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" kindref="member">m_max_mini_batch_size</ref><sp/>=<sp/>(int)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structlbann_1_1lbann__model__header_1a3d2c22795b490f339ff1171db43399b2" kindref="member">max_mini_batch_size</ref>;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a982cea92d230bab5a47df504f02daf98" kindref="member">m_current_mini_batch_size</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structlbann_1_1lbann__model__header_1abe843d9cecf1916028026cb1f0069245" kindref="member">current_mini_batch_size</ref>;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><ref refid="classlbann_1_1model_1a150ef033f81982936e007b10c421f488" kindref="member">m_current_phase</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structlbann_1_1lbann__model__header_1adadd68a882ba782a3899fdd6c83e2a59" kindref="member">current_phase</ref>;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//for<sp/>(const<sp/>auto&amp;<sp/>m<sp/>:<sp/>m_metrics)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>m-&gt;load_from_checkpoint_shared(p);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211" refid="classlbann_1_1model_1a488da86420421a4890c8fd7a95849acc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlbann_1_1model_1a488da86420421a4890c8fd7a95849acc" kindref="member">model::write_proto</ref>(lbann_data::Model*<sp/>proto)<sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/>proto-&gt;Clear();</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlbann_1_1model_1a0eabaf2b2f829fd5db3dfd26df420df0" kindref="member">m_comm</ref>-&gt;<ref refid="classlbann_1_1lbann__comm_1a1ef526486183a29feadca9bef096a534" kindref="member">am_world_master</ref>())<sp/></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>proto-&gt;set_mini_batch_size(<ref refid="classlbann_1_1model_1acc496503e7cf8d635e5a31ba09b3c81a" kindref="member">m_max_mini_batch_size</ref>);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lbann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/mckinney27/doxy-testbed/lbann/src/models/model.cpp"/>
  </compounddef>
</doxygen>
