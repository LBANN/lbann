[Graph]

# Edge-list file
file =
# If not provided, the graph is parsed to find max vertex ID
num_vertices = 0

[Motifs]

# Output file containing motifs
# Default: File called 'motifs' inside work directory
file =
# Input to PruneJuice
pattern_dir =
# For now, we assume all motifs are the same size
motif_size = 0

# Program to ingest graph file
graph_ingest_exec =
# Directory to store ingested graph
distributed_graph_dir = /dev/shm/graph_motifs

# Program to find motifs
prunejuice_exec =
# Directory to store PruneJuice output
# Note: Should be in parallel filesystem
prunejuice_output_dir =

[Walks]

# Output file containing random walks
# Default: File called 'walks' inside work directory
file =

# Walk length, including start vertex
walk_length = 80
# Number of walks per graph vertex
num_walkers = 40
# node2vec return parameter
p = 1.0
# node2vec in-out parameter
q = 1.0

# Program to ingest graph file
graph_ingest_exec =
# Directory to store ingested graph
distributed_graph_dir = /dev/shm/graph_walks

# Program to perform walks
walk_exec =
# Directory to store distributed walk files
# Default: Directory called 'distributed_walks' inside work directory
# Note: Should be in parallel filesystem
distributed_walks_dir =

[Embeddings]

# Directory to store embedding vectors
# Default: Directory called 'embeddings' inside work directory
embeddings_dir =
# Size of embedding vectors
embed_dim = 128

# SGD learning rate
learn_rate = 1e-2
# SGD mini-batch size
mini_batch_size = 512
# Total number of SGD steps
sgd_steps = 10000
# SGD steps per "epoch"
# Note: We bypass LBANN's data tracking infrastructure, so this
# doesn't correspond to actual data epochs. It mostly affects how
# often metrics are reported.
sgd_steps_per_epoch = 100
