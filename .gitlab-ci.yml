################################################################################
## Copyright (c) 2014-2022, Lawrence Livermore National Security, LLC.
## Produced at the Lawrence Livermore National Laboratory.
## Written by the LBANN Research Team (B. Van Essen, et al.) listed in
## the CONTRIBUTORS file. <lbann-dev@llnl.gov>
##
## LLNL-CODE-697807.
## All rights reserved.
##
## This file is part of LBANN: Livermore Big Artificial Neural Network
## Toolkit. For details, see http://software.llnl.gov/LBANN or
## https://github.com/LLNL/LBANN.
##
## Licensed under the Apache License, Version 2.0 (the "Licensee"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at:
##
## http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
## implied. See the License for the specific language governing
## permissions and limitations under the license.
################################################################################

# Note: This configuration is specifically for LLNL compute
# clusters. To run testing locally, consult the README in the ci_test
# directory.

stages:
  - run-all-clusters

corona testing:
  stage: run-all-clusters
  variables:
    WITH_WEEKLY: "${LBANN_CI_RUN_WEEKLY}"
    WITH_CLEAN_BUILD: "${LBANN_CI_CLEAN_BUILD}"
  trigger:
    strategy: depend
    include: .gitlab/corona/pipeline.yml

corona distconv testing:
  stage: run-all-clusters
  variables:
    JOB_NAME_SUFFIX: _distconv
    SPACK_ENV_BASE_NAME_MODIFIER: "-distconv"
    SPACK_SPECS: "+rocm +distconv"
    WITH_WEEKLY: "${LBANN_CI_RUN_WEEKLY}"
    WITH_CLEAN_BUILD: "${LBANN_CI_CLEAN_BUILD}"
    TEST_FLAG: "test_*_distconv.py"
  trigger:
    strategy: depend
    include: .gitlab/corona/pipeline.yml

lassen testing:
  stage: run-all-clusters
  variables:
    WITH_WEEKLY: "${LBANN_CI_RUN_WEEKLY}"
    WITH_CLEAN_BUILD: "${LBANN_CI_CLEAN_BUILD}"
  trigger:
    strategy: depend
    include: .gitlab/lassen/pipeline.yml

lassen distconv testing:
  stage: run-all-clusters
  variables:
    JOB_NAME_SUFFIX: _distconv
    SPACK_ENV_BASE_NAME_MODIFIER: "-multi-stage-distconv"
    SPACK_SPECS: "+cuda +distconv +nvshmem +fft"
    WITH_WEEKLY: "${LBANN_CI_RUN_WEEKLY}"
    WITH_CLEAN_BUILD: "${LBANN_CI_CLEAN_BUILD}"
    TEST_FLAG: "test_*_distconv.py"
  trigger:
    strategy: depend
    include: .gitlab/lassen/multi_stage_pipeline.yml

pascal testing:
  stage: run-all-clusters
  variables:
    WITH_WEEKLY: "${LBANN_CI_RUN_WEEKLY}"
    WITH_CLEAN_BUILD: "${LBANN_CI_CLEAN_BUILD}"
  trigger:
    strategy: depend
    include: .gitlab/pascal/pipeline.yml

pascal compiler testing:
  stage: run-all-clusters
  variables:
    SPACK_SPECS: "%gcc@10.3.1 +cuda +half +fft"
    BUILD_SCRIPT_OPTIONS: "--no-default-mirrors"
    WITH_CLEAN_BUILD: "${LBANN_CI_CLEAN_BUILD}"
  trigger:
    strategy: depend
    include: .gitlab/pascal/pipeline_compiler_tests.yml

pascal distconv testing:
  stage: run-all-clusters
  variables:
    JOB_NAME_SUFFIX: _distconv
    SPACK_SPECS: "%gcc@10.3.1 +cuda +distconv +fft"
    BUILD_SCRIPT_OPTIONS: "--no-default-mirrors"
    WITH_WEEKLY: "${LBANN_CI_RUN_WEEKLY}"
    WITH_CLEAN_BUILD: "${LBANN_CI_CLEAN_BUILD}"
    TEST_FLAG: "test_*_distconv.py"
  trigger:
    strategy: depend
    include: .gitlab/pascal/pipeline.yml

tioga testing:
  stage: run-all-clusters
  variables:
    WITH_WEEKLY: "${LBANN_CI_RUN_WEEKLY}"
    WITH_CLEAN_BUILD: "${LBANN_CI_CLEAN_BUILD}"
  trigger:
    strategy: depend
    include: .gitlab/tioga/pipeline.yml

tioga distconv testing:
  stage: run-all-clusters
  variables:
    JOB_NAME_SUFFIX: _distconv
    SPACK_ENV_BASE_NAME_MODIFIER: "-distconv"
    SPACK_SPECS: "+rocm +distconv"
    WITH_WEEKLY: "${LBANN_CI_RUN_WEEKLY}"
    WITH_CLEAN_BUILD: "${LBANN_CI_CLEAN_BUILD}"
    TEST_FLAG: "test_*_distconv.py"
  trigger:
    strategy: depend
    include: .gitlab/tioga/pipeline.yml
