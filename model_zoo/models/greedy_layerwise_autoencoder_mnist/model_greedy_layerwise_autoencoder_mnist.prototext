model {
  name: "greedy_layerwise_autoencoder"
  data_layout: "model_parallel"
  mini_batch_size: 192
  block_size: 256
  num_epochs: 10
  num_parallel_readers: 0
  procs_per_model: 0

  ###################################################
  # Objective function
  ###################################################

  objective_function {
    mean_squared_error {}
  }

  ###################################################
  # Metrics
  ###################################################

  metric { mean_squared_error {} }

  ###################################################
  # Callbacks
  ###################################################
  callback {
    print {
      interval: 1
    }
  }
#  callback {
#    timer {
#    }
#  }
#  callback {
#    save_images {
#      image_prefix: "images_"
#      image_format: "pgm"
#    }
#  }

  ###################################################
  # start of layers
  ###################################################

  # data
  layer {
    name: "data"
    children: "fc1 reconstruction"
    data_layout: "model_parallel"
    input {
      io_buffer: "distributed"
      target_mode: "reconstruction"
    }
  }

  # encode1
  layer {
    name: "fc1:
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 100
      has_bias: true
    }
  }
  layer {
    data_layout: "model_parallel"
    sigmoid {}
  }

  # encode2
  layer {
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 50
      has_bias: true
    }
  }
  layer {
    data_layout: "model_parallel"
    sigmoid {}
  }

  # decode2
  layer {
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 100
      has_bias: true
    }
  }
  layer {
    data_layout: "model_parallel"
    sigmoid {}
  }

  # decode1
  layer {
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 784
      has_bias: true
    }
  }
  layer {
    name: "sigmoid"
    data_layout: "model_parallel"
    sigmoid {}
  }

  # reconstruction
  layer {
    name: "reconstruction"
    parents: "sigmoid data"
    data_layout: "model_parallel"
    reconstruction {
      original_layer: "data"
    }
  }

  ###################################################
  # end of layers
  ###################################################
}
