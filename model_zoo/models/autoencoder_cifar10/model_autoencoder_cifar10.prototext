model {
  name: "sequential_model"
  data_layout: "model_parallel"
  mini_batch_size: 32
  block_size: 256
  num_epochs: 100
  num_parallel_readers: 0
  procs_per_model: 0

  ###################################################
  # Objective function
  ###################################################

  objective_function {
    mean_squared_error {}
  }

  ###################################################
  # Metrics
  ###################################################

  metric {
    mean_squared_error {}
  }

  ###################################################
  # Callbacks
  ###################################################
  callback {
    print {
      interval: 1
    }
  }
  #callback {
  #  save_images {
  #    image_prefix: "images_"
  #    image_format: "pgm"
  #  }
  #}

  ###################################################
  # start of layers
  ###################################################

  #######
  # INPUT
  #######
  layer {
    name: "data"
    children: "encode1 reconstruction"
    data_layout: "model_parallel"
    input {
      io_buffer: "distributed"
      target_mode: "reconstruction"
    }
  }

  #################
  # FULLY_CONNECTED encode1
  #################
  layer {
    name: "encode1"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 1000
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  # RELU
  ######
  layer {
    name: "relu1"
    data_layout: "model_parallel"
    relu {
    }
  }

  # DROPOUT
  #########
  layer {
    name: "dropout1"
    data_layout: "model_parallel"
    dropout {
      keep_prob: 0.8
    }
  }


  #################
  # FULLY_CONNECTED decode1
  #################
  layer {
    name: "decode1"
    data_layout: "model_parallel"
    num_neurons_from_data_reader: true
    fully_connected {
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  # SIGMOID
  #########
  layer {
    name: "sigmoid1"
    data_layout: "model_parallel"
    sigmoid {
    }
  }

  # DROPOUT
  #########
  layer {
    name: "dropout2"
    data_layout: "model_parallel"
    dropout {
      keep_prob: 0.8
    }
  }

  #################
  # RECONSTRUCTION
  #################
  layer {
    name: "reconstruction"
    parents: "dropout2 data"
    data_layout: "model_parallel"
    reconstruction {}
  }

  ###################################################
  # end of layers
  ###################################################
}
